/*
   This file has been generated by IDA Pro.
   It contains local type definitions from
     C:\Nova pasta\Server\server\RylLoginServer.idb
*/

/*    1 */
enum std::float_denorm_style
{
  denorm_indeterminate = 0xFFFFFFFF,
  denorm_absent = 0x0,
  denorm_present = 0x1,
};

/*    2 */
enum std::float_round_style
{
  round_indeterminate = 0xFFFFFFFF,
  round_toward_zero = 0x0,
  round_to_nearest = 0x1,
  round_toward_infinity = 0x2,
  round_toward_neg_infinity = 0x3,
};

/*    3 */
enum std::_Uninitialized
{
  _Noinit = 0x0,
};

/*    4 */
enum std::codecvt_base::__unnamed
{
  ok = 0x0,
  partial = 0x1,
  error = 0x2,
  noconv = 0x3,
};

/*    5 */
enum std::_Iosb<int>::_Dummy_enum
{
  _Dummy_enum_val = 0x1,
};

/*    6 */
enum std::_Iosb<int>::_Fmtflags
{
  _Fmtmask = 0xFFFF,
  _Fmtzero = 0x0,
};

/*    7 */
enum std::_Iosb<int>::_Iostate
{
  _Statmask = 0x17,
};

/*    8 */
enum std::_Iosb<int>::_Openmode
{
  _Openmask = 0xFF,
};

/*    9 */
enum std::_Iosb<int>::_Seekdir
{
  _Seekmask = 0x3,
};

/*   10 */
enum std::_Iosb<int>::__unnamed
{
  _Openprot = 0x1B6,
};

/*   11 */
enum std::basic_string<char,std::char_traits<char>,std::allocator<char> >::__unnamed
{
  _BUF_SIZE = 0x10,
};

/*   12 */
enum std::ctype_base::__unnamed
{
  alnum = 0x107,
  alpha = 0x103,
  cntrl = 0x20,
  digit = 0x4,
  graph = 0x117,
  lower = 0x2,
  print = 0x1D7,
  punct = 0x10,
  space = 0x48,
  upper = 0x1,
  xdigit = 0x80,
};

/*   13 */
enum std::ios_base::event
{
  erase_event = 0x0,
  imbue_event = 0x1,
  copyfmt_event = 0x2,
};

/*   14 */
enum LOG_TYPE
{
  LOG_NORMAL = 0x0,
  LOG_RULE = 0x1,
  LOG_INFO = 0x2,
  LOG_DETAIL = 0x3,
  LOG_SYSERR = 0x4,
  LOG_ERROR = 0x5,
  LOG_DEBUG = 0x6,
  LOG_WARN = 0x7,
  MAX_LOG_TYPE = 0x8,
};

/*   15 */
enum std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Redbl
{
  _Red = 0x0,
  _Black = 0x1,
};

/*   16 */
enum std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0>::__unnamed
{
  _Multi = 0x0,
};

/*   17 */
enum CConsoleWindow::Const
{
  MAX_MESSAGE_SIZE = 0x2000,
  MAX_WINDOW_NAME = 0x80,
};

/*   18 */
enum CConsoleCMDFactory::__unnamed
{
  MAX_CMD_BUFFER = 0x200,
};

/*   19 */
enum CExceptionReport::Features
{
  CATCH_EXCEPTION = 0x1,
  USE_MINIDUMP = 0x2,
  USE_REPORT = 0x4,
};

/*   20 */
enum BasicType
{
  btNoType = 0x0,
  btVoid = 0x1,
  btChar = 0x2,
  btWChar = 0x3,
  btInt = 0x6,
  btUInt = 0x7,
  btFloat = 0x8,
  btBCD = 0x9,
  btBool = 0xA,
  btLong = 0xD,
  btULong = 0xE,
  btCurrency = 0x19,
  btDate = 0x1A,
  btVariant = 0x1B,
  btComplex = 0x1C,
  btBit = 0x1D,
  btBSTR = 0x1E,
  btHresult = 0x1F,
};

/*   21 */
enum CExceptionReport::__unnamed
{
  SHIFT_NUM = 0x4,
  BYTES_PER_LINE = 0x10,
  MAX_TEMP_VALUE = 0x5,
  MAX_LOG_BUFFER = 0xFFFF,
};

/*   22 */
typedef $8C57D1DDA788D6050A7C554DBD1EB1AC ADDRESS_MODE;

/*   23 */
enum SERVER_GROUP::__unnamed
{
  CHANNEL_NUM = 0x2,
  SERVER_NAME = 0xF,
};

/*   24 */
enum CLoginAgentServerTable::OperateMode
{
  SERVER_CLOSED = 0x0,
  SERVER_PATCH_ONLY = 0x1,
  SERVER_OPEN = 0x2,
};

/*   25 */
enum CLoginAgentServerTable::IPMode
{
  ALLOW_SOME = 0x0,
  ALLOW_ALL = 0x1,
  DENY_ALL_BUT_ALLOW_ADMIN = 0x2,
  MAX_IP_MODE = 0x3,
};

/*   26 */
enum SERVER_LIST::__unnamed
{
  SERVER_NUM = 0xA,
};

/*   27 */
typedef CLoginAgentServerTable::IPMode CLimitUserByIP::AllowMode_t;

/*   28 */
enum RylServerInfo::__unnamed
{
  GROUP_NAME_LENGTH = 0x78,
  PATCH_ADDRESS_LENGTH = 0x64,
};

/*   29 */
enum SERVER_ID::Group
{
  GROUP_TEST = 0x0,
  GROUP_SOLPHISTIA = 0x1,
  GROUP_KARTERANT = 0x2,
  GROUP_IRANSA = 0x3,
  GROUP_HIGHLAND = 0x4,
  GROUP_ALDIA = 0x5,
  GROUP_UNITE = 0x6,
  GROUP_BATTLE_SERVER = 0x7,
  GROUP_US_TOURNAMENT = 0x8,
  MAX_GROUP_NUM = 0xA,
};

/*   30 */
enum SERVER_ID::Zone
{
  NONE = 0x0,
  ZONE1 = 0x1,
  ZONE2 = 0x2,
  BATTLE_GROUND = 0x3,
  ZONE4 = 0x4,
  ZONE5 = 0x5,
  BATTLE_ZONE = 0x6,
  ADMIN_TOOL_ZONE = 0x7,
  CAPITAL = 0x8,
  FRAG_ZONE = 0xA,
  BATTLE_SERVER = 0xB,
  ZONE12 = 0xC,
  STATUE_ZONE = 0xD,
  PRISON = 0xE,
  CHAR_SELECT = 0xF,
  CAPITAL_MIRROR = 0x10,
  MAX_ZONE_NUM = 0x11,
};

/*   31 */
enum SERVER_ID::Channel
{
  MAX_CHANNEL_NUM = 0x5,
};

/*   32 */
enum GameRYL::GameContents
{
  LEVEL_LIMIT_80 = 0x1,
  LEVEL_LIMIT_95 = 0x3,
  LEVEL_LIMIT_100 = 0x7,
  CAMP = 0x8,
  CAMP_UPGRADE = 0x18,
  SIEGE = 0x38,
  JUDGE_PROTOTYPE = 0x40,
  ACCESSORY = 0x100,
  RUNE = 0x200,
  RIDE = 0x400,
  BATTLE_LOHAN = 0x800,
  DARK_CAERNARVON = 0x1000,
};

/*   33 */
enum SKILL::Const
{
  MAX_SKILL_LEVEL = 0x6,
  MAX_SLOT_NUM = 0x14,
};

/*   34 */
typedef std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0>::__unnamed std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0>::__unnamed;

/*   35 */
typedef std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Redbl;

/*   36 */
enum CRylServerDispatch::CreationResult
{
  S_CREATE_SUCCESS = 0x0,
  E_INVALID_STARTBIT = 0x1,
  E_ALLOCATE_BUFFER_FAILED = 0x2,
  E_DECOMPRESS_FAILED = 0x3,
};

/*   37 */
enum CSocketFactory::__unnamed
{
  MAX_BACKLOG = 0x3F,
};

/*   38 */
enum PktBase::PktBaseErr
{
  NO_SERVER_ERR = 0x0,
  SERVER_ERROR = 0x1,
};

/*   39 */
enum OleDB::ConnType
{
  ConnType_ODBC = 0x0,
  ConnType_MSSQL = 0x1,
  ConnType_ORACLE = 0x2,
};

/*   40 */
enum OleDB::Rowset
{
  Rowset_Get = 0x0,
  Rowset_Update = 0x1,
};

/*   41 */
enum CServerSetup::DefaultPorts
{
  LoginServerLauncherListen = 0x2775,
  AuthServerClientListen = 0x277E,
  P1ChatServerClientListen = 0x277F,
  GameServerClientBaseListen = 0x27D8,
  MAX_ZONE = 0x14,
  MAX_CHANNEL = 0x5,
  P1GameServerClientUDPListen = 0x2904,
  P1AdminToolServerClientListen = 0x2B5D,
  P2AdminToolServerClientListen = 0x2B5E,
  LogServerLogClientListen = 0x2B5F,
  ManageServerManageToolListen = 0x2B60,
  ChatServerMonitoringToolListen = 0x2B61,
  StatServerManageServerListen = 0x2B62,
  UIDServerDBAgentServerListen = 0x2EE1,
  LoginServerDBAgentServerListen = 0x2EE2,
  DBAgentServerGameServerListen = 0x2EE3,
  DBAgentServerAuthServerListen = 0x2EE4,
  DBAgentServerChatServerListen = 0x2EE5,
  DBAgentAdminToolServerListen = 0x2EE6,
  ChatServerGameServerListen = 0x2EE7,
  ManageServerManageClientListen = 0x2EE8,
  LogServerOtherServerListen = 0x2EE9,
};

/*   42 */
enum CServerSetup::ServerType
{
  LoginServer = 0x0,
  AuthServer = 0x1,
  GameServer = 0x2,
  AgentServer = 0x3,
  UIDServer = 0x4,
  AdminToolServer = 0x5,
  LogServer = 0x6,
  ChatServer = 0x7,
  MaxType = 0x8,
};

/*   43 */
enum CServerSetup::BillingType
{
  GamaBilling = 0x0,
  GamaUnitedBilling = 0x1,
  YouxiLandBilling = 0x2,
  JapanBilling = 0x3,
  MaxBillingType = 0x4,
};

/*   44 */
enum CServerSetup::AuthType
{
  HangameAuth = 0x0,
  GamaAuth = 0x1,
  YouxiLandAuth = 0x2,
  JapanAuth = 0x3,
  MaxAuthType = 0x4,
};

/*   45 */
enum GameRYL::ServiceNation
{
  KOREA = 0x0,
  TAIWAN = 0x1,
  JAPAN = 0x2,
  CHINA = 0x3,
  THAILAND = 0x4,
  MALAYSIA = 0x5,
  USA = 0x6,
  INDONESIA = 0x7,
  VIETNAM = 0x8,
  MAX_NATION_TYPE = 0x9,
};

/*   46 */
enum UnifiedConst::AgentServerType
{
  Part1 = 0x14,
  Part1Unified = 0x15,
  Part2 = 0x16,
  Part2Unified = 0x17,
  Part2Selectable = 0x18,
};

/*   47 */
enum CServerSetup::DBInfo::Const
{
  MAX_BUFFER = 0x80,
};

/*   48 */
enum CPulse::PulseConst
{
  DEFAULT_TICKS_PER_PULSE = 0x64,
};

/*   49 */
enum CCheckPing::__unnamed
{
  PING_INTERVAL = 0x2710,
};

/*   50 */
typedef SERVER_ID::Zone QUICKSLOT::Type;

/*   51 */
enum CThreadMgr::__unnamed
{
  MAX_THREAD_NUM = 0x3F,
};

/*   52 */
typedef SKILL::Const SKILLSLOT::__unnamed;

/*   53 */
enum ServerInfo::ServerState
{
  SS_SMOOTH = 0x0,
  SS_LOADED = 0x1,
  SS_BUSY = 0x2,
  SS_VERYBUSY = 0x3,
};

/*   54 */
enum QUICK::__unnamed
{
  MAX_QUICK_NUM = 0x14,
};

/*   55 */
enum USER_INFO::__unnamed
{
  MAX_CHAR_NUM = 0x5,
};

/*   56 */
enum PARTY::__unnamed
{
  MAX_MEM = 0xA,
};

/*   57 */
enum LoginClientDispatchConstant
{
  DEFAULT_PROCESS_NUM = 0x5,
};

/*   58 */
enum CXORCrypt::__unnamed
{
  PAGE_VERSION = 0x1,
  BIT_COUNT = 0x28,
  CODE_PAGE = 0xA,
};

/*   59 */
typedef RylServerInfo::__unnamed PktSPIAck::__unnamed;

/*   60 */
enum CSession::SendResult
{
  SEND_SUCCEEDED = 0x0,
  SEND_FAILED = 0x1,
  SEND_NEXT_TURN = 0x2,
};

/*   61 */
typedef RylServerInfo::__unnamed PktSvLAck::__unnamed;

/*   62 */
enum PktDD::SubCommands
{
  SCmdUserLogin = 0x1,
  SCmdUserLogout = 0x2,
  SCmdUserMove = 0x3,
  SCmdSelectNation = 0x4,
  SCmdNationChangeResult = 0x5,
  SCmdCharCreate = 0x21,
  SCmdCharDelete = 0x22,
  SCmdCharCreateItem = 0x23,
  SCmdCharSelect = 0x24,
  SCmdCreateParty = 0x31,
  SCmdDeleteParty = 0x32,
  SCmdGetPartyInfo = 0x33,
  SCmdInsertPartyMem = 0x34,
  SCmdDeletePartyMem = 0x35,
  SCmdLoginPartyMem = 0x36,
  SCmdLogoutPartyMem = 0x37,
  SCmdTransferLeader = 0x38,
  SCmdAutoRoutingOn = 0x39,
  SCmdAutoRoutingOff = 0x3A,
  SCmdDeadPartyMem = 0x3C,
  SCmdMoveZonePartyMem = 0x3D,
  SCmdLevelUpPartyMem = 0x3E,
  SCmdChangeClassPartyMem = 0x3F,
  SCmdChangeGuildPartyMem = 0x40,
  SCmdStartSession = 0x50,
  SCmdServerZone = 0x51,
  SCmdCharMoveZone = 0x52,
  SCmdServerZoneEnd = 0x53,
};

/*   63 */
typedef LoginClientDispatchConstant LoginAgentDispatchConstant;

/*   64 */
typedef SERVER_ID::Channel PktSCInfo::__unnamed;

/*   65 */
typedef RylServerInfo::__unnamed PktSVU::__unnamed;

/*   66 */
enum ServerWindowFrameworkConst::Const
{
  INITIALIZE_SUCCESS = 0x1,
  DESTROY_CALLED = 0x2,
  DEFAULT_PROCESS_TICK = 0x64,
};

/*   67 */
typedef std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Redbl;

/*   68 */
typedef std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Redbl;

/*   69 */
typedef std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0>::__unnamed std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0>::__unnamed;

/*   70 */
typedef std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0>::__unnamed std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0>::__unnamed;

/*   71 */
typedef $C9C41CE7F7AB140BE1C872069B92FC11 LATENCY_TIME;

/*   72 */
typedef $0FC989869F227A36D749990E523E5F04 POWER_ACTION;

/*   73 */
enum ServerManage::ManageCommand::AutoPatchFlag
{
  AUTOPATCH_OPENFILE = 0x1,
  AUTOPATCH_DATA = 0x2,
};

/*   74 */
typedef _VDS_MAINTENANCE_OPERATION ServerManage::CMD::CMDType;

/*   75 */
typedef $091388B5486C38E232712F2AD090397D POWER_INFORMATION_LEVEL;

/*   76 */
typedef $C76430121188DB029AABDFCFE322BAEC WELL_KNOWN_SID_TYPE;

/*   77 */
typedef std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0>::__unnamed std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1>::__unnamed;

/*   78 */
typedef std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Redbl;

/*   79 */
enum RylServerDispatchFlags
{
  PROCESS_PACKET_NOW = 0x1,
  SUSPEND_RECV = 0x2,
};

/*   80 */
enum SendStreamConst
{
  DEFAULT_BUFFER_SIZE = 0x4000,
};

/*   81 */
enum std::basic_filebuf<char,std::char_traits<char> >::_Initfl
{
  _Newfl = 0x0,
  _Openfl = 0x1,
  _Closefl = 0x2,
};

/*   82 */
enum SymTagEnum
{
  SymTagNull = 0x0,
  SymTagExe = 0x1,
  SymTagCompiland = 0x2,
  SymTagCompilandDetails = 0x3,
  SymTagCompilandEnv = 0x4,
  SymTagFunction = 0x5,
  SymTagBlock = 0x6,
  SymTagData = 0x7,
  SymTagAnnotation = 0x8,
  SymTagLabel = 0x9,
  SymTagPublicSymbol = 0xA,
  SymTagUDT = 0xB,
  SymTagEnum = 0xC,
  SymTagFunctionType = 0xD,
  SymTagPointerType = 0xE,
  SymTagArrayType = 0xF,
  SymTagBaseType = 0x10,
  SymTagTypedef = 0x11,
  SymTagBaseClass = 0x12,
  SymTagFriend = 0x13,
  SymTagFunctionArgType = 0x14,
  SymTagFuncDebugStart = 0x15,
  SymTagFuncDebugEnd = 0x16,
  SymTagUsingNamespace = 0x17,
  SymTagVTableShape = 0x18,
  SymTagVTable = 0x19,
  SymTagCustom = 0x1A,
  SymTagThunk = 0x1B,
  SymTagCustomType = 0x1C,
  SymTagManagedType = 0x1D,
  SymTagDimension = 0x1E,
  SymTagMax = 0x1F,
};

/*   83 */
typedef CExceptionReport::__unnamed LOG_CONSTANT;

/*   84 */
typedef $2A6324B8E10DEE2666A6A5498DFC667B XLAT_SIDE;

/*   85 */
typedef $0AEECC1A63E1B2F73D11FBA74082B60B PROXY_PHASE;

/*   86 */
typedef __MIDL_IInternetSecurityManager_0003 __MIDL_IInternetSecurityManager_0002;

/*   87 */
typedef $B2CD58BB5E151C37D855099D3E2FDD5A STUB_PHASE;

/*   88 */
enum _NLA_BLOB_DATA_TYPE
{
  NLA_RAW_DATA = 0x0,
  NLA_INTERFACE = 0x1,
  NLA_802_1X_LOCATION = 0x2,
  NLA_CONNECTIVITY = 0x3,
  NLA_ICS = 0x4,
};

/*   89 */
typedef $13CC20D9AD0BBA5D63681FE6203B0C08 BIDI_TYPE;

/*   90 */
enum boost::STATIC_ASSERTION_FAILURE<1>::__unnamed
{
  value = 0x1,
};

/*   91 */
enum _NLA_CONNECTIVITY_TYPE
{
  NLA_NETWORK_AD_HOC = 0x0,
  NLA_NETWORK_MANAGED = 0x1,
  NLA_NETWORK_UNMANAGED = 0x2,
  NLA_NETWORK_UNKNOWN = 0x3,
};

/*   92 */
enum _NLA_INTERNET
{
  NLA_INTERNET_UNKNOWN = 0x0,
  NLA_INTERNET_NO = 0x1,
  NLA_INTERNET_YES = 0x2,
};

/*   93 */
enum SessionState::Type
{
  CONNECTED = 0x0,
  DISCONNECTED = 0x1,
  MAX_SESSION_STATE = 0x2,
};

/*   94 */
typedef RylServerDispatchFlags SessionFlag::Type;

/*   95 */
enum SessionConst::Data
{
  MAX_RECV_BUFFER = 0x8000,
};

/*   96 */
enum LISTENER_CONSTANT
{
  DEFAULT_PENDING_NUM = 0xA,
};

/*   97 */
enum IOCPInternalFlag
{
  INITIALIZED_IOCP = 0x1,
  DESTROYED_IOCP = 0x2,
};

/*   98 */
enum RequestConst
{
  CANNOT_ADD_REQUEST = 0x1,
};

/*   99 */
typedef std::ctype_base::__unnamed std::money_base::__unnamed;

/*  100 */
enum std::time_base::dateorder
{
  no_order = 0x0,
  dmy = 0x1,
  mdy = 0x2,
  ymd = 0x3,
  ydm = 0x4,
};

/*  101 */
enum INTRNCVT_STATUS
{
  INTRNCVT_OK = 0x0,
  INTRNCVT_OVERFLOW = 0x1,
  INTRNCVT_UNDERFLOW = 0x2,
};

/*  102 */
enum state_t
{
  S_INIT = 0x0,
  S_EAT0L = 0x1,
  S_SIGNM = 0x2,
  S_GETL = 0x3,
  S_GETR = 0x4,
  S_POINT = 0x5,
  S_E = 0x6,
  S_SIGNE = 0x7,
  S_EAT0E = 0x8,
  S_GETE = 0x9,
  S_END = 0xA,
  S_E_IMPLICIT = 0xB,
};

/*  103 */
enum STATE
{
  ST_NORMAL = 0x0,
  ST_PERCENT = 0x1,
  ST_FLAG = 0x2,
  ST_WIDTH = 0x3,
  ST_DOT = 0x4,
  ST_PRECIS = 0x5,
  ST_SIZE = 0x6,
  ST_TYPE = 0x7,
};

/*  104 */
enum CHARTYPE
{
  CH_OTHER = 0x0,
  CH_PERCENT = 0x1,
  CH_DOT = 0x2,
  CH_STAR = 0x3,
  CH_ZERO = 0x4,
  CH_DIGIT = 0x5,
  CH_FLAG = 0x6,
  CH_SIZE = 0x7,
  CH_TYPE = 0x8,
};

/*  105 */
enum $1DD7A03358E0D01DD359262876E6A0F0
{
  lkNormal = 0x0,
  lkPrealloc = 0x1,
  lkDeleted = 0x2,
};

/*  106 */
enum _RTC_ErrorNumber
{
  _RTC_CHKSTK = 0x0,
  _RTC_CVRT_LOSS_INFO = 0x1,
  _RTC_CORRUPT_STACK = 0x2,
  _RTC_UNINIT_LOCAL_USE = 0x3,
  _RTC_ILLEGAL = 0x4,
};

/*  107 */
struct $983F061E0B702DD8AE0B4B955735A6A3
{
  unsigned int Lo;
  int Hi;
};

/*  108 */
union tagCY
{
  $983F061E0B702DD8AE0B4B955735A6A3 _s0;
  __int64 int64;
};

/*  109 */
const struct _GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  char Data4[8];
};

/*  110 */
struct IUnknown
{
  IUnknownVtbl *vfptr;
};

/*  111 */
struct IUnknownVtbl
{
  HRESULT (__stdcall *QueryInterface)(IUnknown *this, _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
};

/*  112 */
struct IDispatch
{
  IUnknown baseclass_0;
};

/*  113 */
struct tagSAFEARRAYBOUND
{
  unsigned int cElements;
  int lLbound;
};

/*  114 */
struct tagSAFEARRAY
{
  unsigned __int16 cDims;
  unsigned __int16 fFeatures;
  unsigned int cbElements;
  unsigned int cLocks;
  void *pvData;
  tagSAFEARRAYBOUND rgsabound[1];
};

/*  115 */
struct tagVARIANT
{
  $4F5094086B80CE300315BE68FD9B45BB ___u0;
};

/*  116 */
struct $5CC4D6FD2BF4E5B80FE1FD714DCA0CFA
{
  char scale;
  char sign;
};

/*  117 */
union $3633A1E590CE737B41A6E35EF0F71052
{
  $5CC4D6FD2BF4E5B80FE1FD714DCA0CFA _s0;
  unsigned __int16 signscale;
};

/*  118 */
struct $A04CD8C0331024E133CCEC4B0AB36956
{
  unsigned int Lo32;
  unsigned int Mid32;
};

/*  119 */
union $7D0A38B44A443EE9F75A20C713396F78
{
  $A04CD8C0331024E133CCEC4B0AB36956 _s0;
  unsigned __int64 Lo64;
};

/*  120 */
struct tagDEC
{
  unsigned __int16 wReserved;
  $3633A1E590CE737B41A6E35EF0F71052 ___u1;
  unsigned int Hi32;
  $7D0A38B44A443EE9F75A20C713396F78 ___u3;
};

/*  121 */
struct IRecordInfo
{
  IUnknown baseclass_0;
};

/*  122 */
struct $E2F13C0D8C7A5E44CBEA2DDC2BADB614
{
  unsigned __int16 vt;
  unsigned __int16 wReserved1;
  unsigned __int16 wReserved2;
  unsigned __int16 wReserved3;
  __int64 llVal;
};

/*  123 */
struct $E66ACAD83F62CBC772DF3FF888846655
{
  _BYTE gap0[8];
  int lVal;
  IRecordInfo *pRecInfo;
};

/*  124 */
struct $F28A51B4B40B0D33C72915D739D42B4B
{
  _BYTE gap0[8];
  char bVal;
};

/*  125 */
struct $31126B8528A05AF3606C6D495FD178E8
{
  _BYTE gap0[8];
  __int16 iVal;
};

/*  126 */
struct $50230A970D9734D4E9774CFC619DF0F6
{
  _BYTE gap0[8];
  float fltVal;
};

/*  127 */
struct $4C0EC2258454B893CE739DAE89D8DB7B
{
  _BYTE gap0[8];
  long double dblVal;
};

/*  128 */
struct $6DB36323059316E675433BB10D285009
{
  _BYTE gap0[8];
  __int16 boolVal;
};

/*  129 */
struct $8E3C8731874D1B3BC66617C4DD3163A6
{
  _BYTE gap0[8];
  int scode;
};

/*  130 */
struct $9C2ED140AD09214BAF715884C0F1C5B9
{
  _BYTE gap0[8];
  tagCY cyVal;
};

/*  131 */
struct $E94952165EEA9EEA990FEB33603E1B19
{
  _BYTE gap0[8];
  long double date;
};

/*  132 */
struct $C854646156F6772BF5D6F8470C9CCFAF
{
  _BYTE gap0[8];
  unsigned __int16 *bstrVal;
};

/*  133 */
struct $726DCB118888537024FF9880209F6858
{
  _BYTE gap0[8];
  IUnknown *punkVal;
};

/*  134 */
struct $0ACD02662CD5D6F05FBF6C995D45E42C
{
  _BYTE gap0[8];
  IDispatch *pdispVal;
};

/*  135 */
struct $B478879F292332CD9950CD06D9EE4254
{
  _BYTE gap0[8];
  tagSAFEARRAY *parray;
};

/*  136 */
struct $166B1F81F6EA96F97683A65F38FB1A59
{
  _BYTE gap0[8];
  char *pbVal;
};

/*  137 */
struct $76732A64405C0E287FCB302687644550
{
  _BYTE gap0[8];
  __int16 *piVal;
};

/*  138 */
struct $E5FC128E66C26C95254032BA69D36E74
{
  _BYTE gap0[8];
  int *plVal;
};

/*  139 */
struct $E9CDCC48CD0BB58E8F361AA17BFDA76E
{
  _BYTE gap0[8];
  __int64 *pllVal;
};

/*  140 */
struct $BF8CC88CDF129BD6E4FA4ABA13F521AD
{
  _BYTE gap0[8];
  float *pfltVal;
};

/*  141 */
struct $2CABE618CF1C2625A4479554E4967E0A
{
  _BYTE gap0[8];
  long double *pdblVal;
};

/*  142 */
struct $AAA92DA1D6E1B0E8462F69216B62027C
{
  _BYTE gap0[8];
  __int16 *pboolVal;
};

/*  143 */
struct $F7167AE7A8ABA03C094C204FB1564A28
{
  _BYTE gap0[8];
  int *pscode;
};

/*  144 */
struct $C5D0C3F4360A139BFB25469B10FEE79D
{
  _BYTE gap0[8];
  tagCY *pcyVal;
};

/*  145 */
struct $6857AE69DB7C952EEFD665431A7B503A
{
  _BYTE gap0[8];
  long double *pdate;
};

/*  146 */
struct $0878F16B0390542D20060EB711608720
{
  _BYTE gap0[8];
  unsigned __int16 **pbstrVal;
};

/*  147 */
struct $79CC915A6D1203FBB6DA344D632DB2BB
{
  _BYTE gap0[8];
  IUnknown **ppunkVal;
};

/*  148 */
struct $B35EA7ACFAA25A10035B0463BA63D149
{
  _BYTE gap0[8];
  IDispatch **ppdispVal;
};

/*  149 */
struct $26B963C06C0C3545178D291704F7A8A5
{
  _BYTE gap0[8];
  tagSAFEARRAY **pparray;
};

/*  150 */
struct $6E97E02E76E0B56FE63BCC413CACE9D8
{
  _BYTE gap0[8];
  tagVARIANT *pvarVal;
};

/*  151 */
struct $6C39A09D97B880131B2C5BB4943CBB45
{
  _BYTE gap0[8];
  void *byref;
};

/*  152 */
struct $E898A5260D8380431CCAA47FCC291563
{
  _BYTE gap0[8];
  char cVal;
};

/*  153 */
struct $48802A31D3D0701BC13CEF9CEA041E7B
{
  _BYTE gap0[8];
  unsigned __int16 uiVal;
};

/*  154 */
struct $B644145F46FF1F932B106BFA6CC3F6D9
{
  _BYTE gap0[8];
  unsigned int ulVal;
};

/*  155 */
struct $EA00B0D50EAA1933F67C45009B664198
{
  _BYTE gap0[8];
  unsigned __int64 ullVal;
};

/*  156 */
struct $5CA90CF57237397281FB12BFD52C1905
{
  _BYTE gap0[8];
  int intVal;
};

/*  157 */
struct $E7F48E2F4EAA3149E57D87E5D1B2C6B8
{
  _BYTE gap0[8];
  unsigned int uintVal;
};

/*  158 */
struct $955D93903436905F48899F8B2E67030A
{
  _BYTE gap0[8];
  tagDEC *pdecVal;
};

/*  159 */
struct $E1D71D20C3D01115E20D79FAE9629CE8
{
  _BYTE gap0[8];
  char *pcVal;
};

/*  160 */
struct $5669F5A4AD19EF2CB42A5602080CB0A6
{
  _BYTE gap0[8];
  unsigned __int16 *puiVal;
};

/*  161 */
struct $886F8AE9D7C8B1B861B6CA58D67B682A
{
  _BYTE gap0[8];
  unsigned int *pulVal;
};

/*  162 */
struct $ADBB94A21537A8461C6168A5B871A740
{
  _BYTE gap0[8];
  unsigned __int64 *pullVal;
};

/*  163 */
struct $CDA73A427DD2A30CDA26CA3394C33CF0
{
  _BYTE gap0[8];
  int *pintVal;
};

/*  164 */
struct $2516E53E690D8CC5659AAB7EDC49E664
{
  _BYTE gap0[8];
  unsigned int *puintVal;
};

/*  165 */
struct $17B4421FDC73B39569D8A12F584CB67F
{
  _BYTE gap0[8];
  void *pvRecord;
};

/*  166 */
union $4F5094086B80CE300315BE68FD9B45BB
{
  $E2F13C0D8C7A5E44CBEA2DDC2BADB614 _s0;
  tagDEC decVal;
  $E66ACAD83F62CBC772DF3FF888846655 _s2;
  $F28A51B4B40B0D33C72915D739D42B4B _s3;
  $31126B8528A05AF3606C6D495FD178E8 _s4;
  $50230A970D9734D4E9774CFC619DF0F6 _s5;
  $4C0EC2258454B893CE739DAE89D8DB7B _s6;
  $6DB36323059316E675433BB10D285009 _s7;
  $8E3C8731874D1B3BC66617C4DD3163A6 _s8;
  $9C2ED140AD09214BAF715884C0F1C5B9 _s9;
  $E94952165EEA9EEA990FEB33603E1B19 _s10;
  $C854646156F6772BF5D6F8470C9CCFAF _s11;
  $726DCB118888537024FF9880209F6858 _s12;
  $0ACD02662CD5D6F05FBF6C995D45E42C _s13;
  $B478879F292332CD9950CD06D9EE4254 _s14;
  $166B1F81F6EA96F97683A65F38FB1A59 _s15;
  $76732A64405C0E287FCB302687644550 _s16;
  $E5FC128E66C26C95254032BA69D36E74 _s17;
  $E9CDCC48CD0BB58E8F361AA17BFDA76E _s18;
  $BF8CC88CDF129BD6E4FA4ABA13F521AD _s19;
  $2CABE618CF1C2625A4479554E4967E0A _s20;
  $AAA92DA1D6E1B0E8462F69216B62027C _s21;
  $F7167AE7A8ABA03C094C204FB1564A28 _s22;
  $C5D0C3F4360A139BFB25469B10FEE79D _s23;
  $6857AE69DB7C952EEFD665431A7B503A _s24;
  $0878F16B0390542D20060EB711608720 _s25;
  $79CC915A6D1203FBB6DA344D632DB2BB _s26;
  $B35EA7ACFAA25A10035B0463BA63D149 _s27;
  $26B963C06C0C3545178D291704F7A8A5 _s28;
  $6E97E02E76E0B56FE63BCC413CACE9D8 _s29;
  $6C39A09D97B880131B2C5BB4943CBB45 _s30;
  $E898A5260D8380431CCAA47FCC291563 _s31;
  $48802A31D3D0701BC13CEF9CEA041E7B _s32;
  $B644145F46FF1F932B106BFA6CC3F6D9 _s33;
  $EA00B0D50EAA1933F67C45009B664198 _s34;
  $5CA90CF57237397281FB12BFD52C1905 _s35;
  $E7F48E2F4EAA3149E57D87E5D1B2C6B8 _s36;
  $955D93903436905F48899F8B2E67030A _s37;
  $E1D71D20C3D01115E20D79FAE9629CE8 _s38;
  $5669F5A4AD19EF2CB42A5602080CB0A6 _s39;
  $886F8AE9D7C8B1B861B6CA58D67B682A _s40;
  $ADBB94A21537A8461C6168A5B871A740 _s41;
  $CDA73A427DD2A30CDA26CA3394C33CF0 _s42;
  $2516E53E690D8CC5659AAB7EDC49E664 _s43;
  $17B4421FDC73B39569D8A12F584CB67F _s44;
};

/*  167 */
struct tagPARAMDESCEX
{
  unsigned int cBytes;
  tagVARIANT varDefaultValue;
};

/*  168 */
struct tagPARAMDESC
{
  tagPARAMDESCEX *pparamdescex;
  unsigned __int16 wParamFlags;
};

/*  169 */
struct tagTYPEDESC
{
  $F02DBAD9AC83AC939114FD7A527F6ABB ___u0;
  unsigned __int16 vt;
};

/*  170 */
#pragma pack(push, 4)
struct tagARRAYDESC
{
  tagTYPEDESC tdescElem;
  unsigned __int16 cDims;
  tagSAFEARRAYBOUND rgbounds[1];
};
#pragma pack(pop)

/*  171 */
union $F02DBAD9AC83AC939114FD7A527F6ABB
{
  tagTYPEDESC *lptdesc;
  tagARRAYDESC *lpadesc;
  unsigned int hreftype;
};

/*  172 */
struct tagIDLDESC
{
  unsigned int dwReserved;
  unsigned __int16 wIDLFlags;
};

/*  173 */
union $24F3344921C698A9C58524FA1A5989DD
{
  tagIDLDESC idldesc;
  tagPARAMDESC paramdesc;
};

/*  174 */
struct tagELEMDESC
{
  tagTYPEDESC tdesc;
  $24F3344921C698A9C58524FA1A5989DD ___u1;
};

/*  175 */
struct tagFUNCDESC
{
  int memid;
  int *lprgscode;
  tagELEMDESC *lprgelemdescParam;
  tagFUNCKIND funckind;
  tagINVOKEKIND invkind;
  tagCALLCONV callconv;
  __int16 cParams;
  __int16 cParamsOpt;
  __int16 oVft;
  __int16 cScodes;
  tagELEMDESC elemdescFunc;
  unsigned __int16 wFuncFlags;
};

/*  176 */
union $99B92D2FBCBE0A1897336E29C58EED82
{
  unsigned int oInst;
  tagVARIANT *lpvarValue;
};

/*  177 */
struct tagVARDESC
{
  int memid;
  unsigned __int16 *lpstrSchema;
  $99B92D2FBCBE0A1897336E29C58EED82 ___u2;
  tagELEMDESC elemdescVar;
  unsigned __int16 wVarFlags;
  tagVARKIND varkind;
};

/*  178 */
struct ITypeComp
{
  IUnknown baseclass_0;
};

/*  179 */
union tagBINDPTR
{
  tagFUNCDESC *lpfuncdesc;
  tagVARDESC *lpvardesc;
  ITypeComp *lptcomp;
};

/*  180 */
struct HINSTANCE__
{
  int unused;
};

/*  181 */
struct tagTLIBATTR
{
  _GUID guid;
  unsigned int lcid;
  tagSYSKIND syskind;
  unsigned __int16 wMajorVerNum;
  unsigned __int16 wMinorVerNum;
  unsigned __int16 wLibFlags;
};

/*  182 */
struct tagEXCEPINFO
{
  unsigned __int16 wCode;
  unsigned __int16 wReserved;
  unsigned __int16 *bstrSource;
  unsigned __int16 *bstrDescription;
  unsigned __int16 *bstrHelpFile;
  unsigned int dwHelpContext;
  void *pvReserved;
  HRESULT (__stdcall *pfnDeferredFillIn)(tagEXCEPINFO *);
  int scode;
};

/*  183 */
struct _ULARGE_INTEGER::__unnamed
{
  unsigned int LowPart;
  unsigned int HighPart;
};

/*  184 */
struct $B950AFB169DC87688B328897744C612F
{
  unsigned int LowPart;
  unsigned int HighPart;
};

/*  185 */
union _ULARGE_INTEGER
{
  $B950AFB169DC87688B328897744C612F _s0;
  _ULARGE_INTEGER::__unnamed u;
  unsigned __int64 QuadPart;
};

/*  186 */
struct _FILETIME
{
  unsigned int dwLowDateTime;
  unsigned int dwHighDateTime;
};

/*  187 */
struct tagSTATSTG
{
  unsigned __int16 *pwcsName;
  unsigned int type;
  _ULARGE_INTEGER cbSize;
  _FILETIME mtime;
  _FILETIME ctime;
  _FILETIME atime;
  unsigned int grfMode;
  unsigned int grfLocksSupported;
  _GUID clsid;
  unsigned int grfStateBits;
  unsigned int reserved;
};

/*  188 */
struct tagCABSTR
{
  unsigned int cElems;
  unsigned __int16 **pElems;
};

/*  189 */
struct tagCACLSID
{
  unsigned int cElems;
  _GUID *pElems;
};

/*  190 */
struct tagCADBL
{
  unsigned int cElems;
  long double *pElems;
};

/*  191 */
struct sockaddr
{
  unsigned __int16 sa_family;
  char sa_data[14];
};

/*  192 */
struct tagCAUB
{
  unsigned int cElems;
  char *pElems;
};

/*  193 */
struct tagCACY
{
  unsigned int cElems;
  tagCY *pElems;
};

/*  194 */
struct std::input_iterator_tag
{
  char dummy[1];
};

/*  195 */
struct std::forward_iterator_tag
{
  std::input_iterator_tag baseclass_0;
};

/*  196 */
struct std::_Num_base
{
  char dummy[1];
};

/*  197 */
struct std::_Num_float_base
{
  std::_Num_base baseclass_0;
};

/*  198 */
struct std::bidirectional_iterator_tag
{
  std::forward_iterator_tag baseclass_0;
};

/*  199 */
struct _C_float_complex
{
  float _Val[2];
};

/*  200 */
struct exception
{
  exceptionVtbl *vfptr;
  const char *_m_what;
  int _m_doFree;
};

/*  201 */
struct exceptionVtbl
{
  void *(__thiscall *__vecDelDtor)(exception *this, unsigned int);
  const char *(__thiscall *what)(exception *this);
};

/*  202 */
struct std::_String_base
{
  char dummy[1];
};

/*  203 */
struct std::_Allocator_base<char>
{
  char dummy[1];
};

/*  204 */
struct std::allocator<char>
{
  std::_Allocator_base<char> baseclass_0;
};

/*  205 */
union $F599AF6482F27363BA4AB6FB37D08D12
{
  std::_String_base baseclass_0;
  std::allocator<char> _Alval;
};

/*  206 */
struct std::_String_val<char,std::allocator<char> >
{
  $F599AF6482F27363BA4AB6FB37D08D12 ___u0;
};

/*  207 */
union std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Bxty
{
  char _Buf[16];
  char *_Ptr;
};

/*  208 */
struct std::basic_string<char,std::char_traits<char>,std::allocator<char> >
{
  std::_String_val<char,std::allocator<char> > baseclass_0;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Bxty _Bx;
  unsigned int _Mysize;
  unsigned int _Myres;
};

/*  209 */
struct std::logic_error
{
  exception baseclass_0;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Str;
};

/*  210 */
struct std::length_error
{
  std::logic_error baseclass_0;
};

/*  211 */
struct std::runtime_error
{
  exception baseclass_0;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Str;
};

/*  212 */
struct std::locale::facet
{
  std::locale::facetVtbl *vfptr;
  unsigned int _Refs;
};

/*  213 */
struct std::locale::facetVtbl
{
  void *(__thiscall *__vecDelDtor)(std::locale::facet *this, unsigned int);
};

/*  214 */
struct std::ctype_base
{
  std::locale::facet baseclass_0;
};

/*  215 */
struct _Ctypevec
{
  unsigned int _Hand;
  unsigned int _Page;
  const __int16 *_Table;
  int _Delfl;
};

/*  216 */
struct std::ctype<char>
{
  std::ctype_base baseclass_0;
  _Ctypevec _Ctype;
};

/*  217 */
struct std::locale::id
{
  unsigned int _Id;
};

/*  218 */
struct std::_Lockit
{
  int _Locktype;
};

/*  219 */
struct std::_Locinfo
{
  std::_Lockit _Lock;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Days;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Months;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Oldlocname;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Newlocname;
};

/*  220 */
struct std::allocator<void>
{
  char dummy[1];
};

/*  221 */
struct std::_Num_int_base
{
  std::_Num_base baseclass_0;
};

/*  222 */
struct std::numeric_limits<unsigned int>
{
  std::_Num_int_base baseclass_0;
};

/*  223 */
struct std::_Iosb<int>
{
  char dummy[1];
};

/*  224 */
struct std::ios_base
{
  std::ios_baseVtbl *vfptr;
  $54F42B6B262E6D36639C12293EC57D58 ___u1;
  int _Mystate;
  int _Except;
  int _Fmtfl;
  int _Prec;
  int _Wide;
  std::ios_base::_Iosarray *_Arr;
  std::ios_base::_Fnarray *_Calls;
  std::locale *_Ploc;
};

/*  225 */
struct std::ios_baseVtbl
{
  void *(__thiscall *__vecDelDtor)(std::ios_base *this, unsigned int);
};

/*  226 */
struct std::ios_base::_Iosarray
{
  std::ios_base::_Iosarray *_Next;
  int _Index;
  int _Lo;
  void *_Vp;
};

/*  227 */
struct std::ios_base::_Fnarray
{
  std::ios_base::_Fnarray *_Next;
  int _Index;
  void (__cdecl *_Pfn)(std::ios_base::event, std::ios_base *, int);
};

/*  228 */
struct std::_Locbase<int>
{
  char dummy[1];
};

/*  229 */
struct std::locale::_Locimp
{
  std::locale::facet baseclass_0;
  std::locale::facet **_Facetvec;
  unsigned int _Facetcount;
  int _Catmask;
  bool _Xparent;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Name;
};

/*  230 */
union $6ACF8A68DD8CCFEA82224198A59D2106
{
  std::_Locbase<int> baseclass_0;
  std::locale::_Locimp *_Ptr;
};

/*  231 */
struct std::locale
{
  $6ACF8A68DD8CCFEA82224198A59D2106 ___u0;
};

/*  232 */
union $54F42B6B262E6D36639C12293EC57D58
{
  std::_Iosb<int> baseclass_4;
  unsigned int _Stdstr;
};

/*  233 */
struct std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >
{
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >Vtbl *vfptr;
  std::_Mutex _Mylock;
  unsigned __int16 *_Gfirst;
  unsigned __int16 *_Pfirst;
  unsigned __int16 **_IGfirst;
  unsigned __int16 **_IPfirst;
  unsigned __int16 *_Gnext;
  unsigned __int16 *_Pnext;
  unsigned __int16 **_IGnext;
  unsigned __int16 **_IPnext;
  int _Gcount;
  int _Pcount;
  int *_IGcount;
  int *_IPcount;
  std::locale *_Plocale;
};

/*  234 */
struct std::fpos<int>
{
  int _Myoff;
  __int64 _Fpos;
  int _Mystate;
};

/*  235 */
struct std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >Vtbl
{
  void *(__thiscall *__vecDelDtor)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned int);
  unsigned __int16 (__thiscall *overflow)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16);
  unsigned __int16 (__thiscall *pbackfail)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16);
  int (__thiscall *showmanyc)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  unsigned __int16 (__thiscall *underflow)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  unsigned __int16 (__thiscall *uflow)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  int (__thiscall *xsgetn)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16 *, int);
  int (__thiscall *xsputn)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, const unsigned __int16 *, int);
  std::fpos<int> *(__thiscall *seekoff)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, std::fpos<int> *result, int, int, int);
  std::fpos<int> *(__thiscall *seekpos)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, std::fpos<int> *result, std::fpos<int>, int);
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *(__thiscall *setbuf)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16 *, int);
  int (__thiscall *sync)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  void (__thiscall *imbue)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, std::locale *);
};

/*  236 */
struct std::_Mutex
{
  void *_Mtx;
};

/*  237 */
struct std::basic_ostream<unsigned short,std::char_traits<unsigned short> >
{
  char dummy[56];
};

/*  238 */
struct std::basic_ios<unsigned short,std::char_traits<unsigned short> >
{
  std::ios_base baseclass_0;
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *_Mystrbuf;
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> > *_Tiestr;
  unsigned __int16 _Fillch;
};

/*  239 */
struct std::basic_istream<unsigned short,std::char_traits<unsigned short> >
{
  _BYTE gap0[4];
  int _Chcount;
  _BYTE gap8[52];
};

/*  240 */
struct _Cvtvec
{
  unsigned int _Hand;
  unsigned int _Page;
};

/*  241 */
struct std::ctype<unsigned short>
{
  std::ctype_base baseclass_0;
  _Ctypevec _Ctype;
  _Cvtvec _Cvt;
};

/*  242 */
struct std::basic_istream<unsigned short,std::char_traits<unsigned short> >::_Sentry_base
{
  std::basic_istream<unsigned short,std::char_traits<unsigned short> > *_Myistr;
};

/*  243 */
struct std::basic_istream<unsigned short,std::char_traits<unsigned short> >::sentry
{
  std::basic_istream<unsigned short,std::char_traits<unsigned short> >::_Sentry_base baseclass_0;
  bool _Ok;
};

/*  244 */
struct std::_Ctraits<long double>
{
  char dummy[1];
};

/*  245 */
struct std::allocator<char>::rebind<char>
{
  char dummy[1];
};

/*  246 */
struct std::basic_streambuf<char,std::char_traits<char> >
{
  std::basic_streambuf<char,std::char_traits<char> >Vtbl *vfptr;
  std::_Mutex _Mylock;
  char *_Gfirst;
  char *_Pfirst;
  char **_IGfirst;
  char **_IPfirst;
  char *_Gnext;
  char *_Pnext;
  char **_IGnext;
  char **_IPnext;
  int _Gcount;
  int _Pcount;
  int *_IGcount;
  int *_IPcount;
  std::locale *_Plocale;
};

/*  247 */
struct std::basic_streambuf<char,std::char_traits<char> >Vtbl
{
  void *(__thiscall *__vecDelDtor)(std::basic_streambuf<char,std::char_traits<char> > *this, unsigned int);
  int (__thiscall *overflow)(std::basic_streambuf<char,std::char_traits<char> > *this, int);
  int (__thiscall *pbackfail)(std::basic_streambuf<char,std::char_traits<char> > *this, int);
  int (__thiscall *showmanyc)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *underflow)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *uflow)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *xsgetn)(std::basic_streambuf<char,std::char_traits<char> > *this, char *, int);
  int (__thiscall *xsputn)(std::basic_streambuf<char,std::char_traits<char> > *this, const char *, int);
  std::fpos<int> *(__thiscall *seekoff)(std::basic_streambuf<char,std::char_traits<char> > *this, std::fpos<int> *result, int, int, int);
  std::fpos<int> *(__thiscall *seekpos)(std::basic_streambuf<char,std::char_traits<char> > *this, std::fpos<int> *result, std::fpos<int>, int);
  std::basic_streambuf<char,std::char_traits<char> > *(__thiscall *setbuf)(std::basic_streambuf<char,std::char_traits<char> > *this, char *, int);
  int (__thiscall *sync)(std::basic_streambuf<char,std::char_traits<char> > *this);
  void (__thiscall *imbue)(std::basic_streambuf<char,std::char_traits<char> > *this, std::locale *);
};

/*  248 */
struct std::basic_ostream<char,std::char_traits<char> >
{
  char dummy[56];
};

/*  249 */
struct std::basic_ios<char,std::char_traits<char> >
{
  std::ios_base baseclass_0;
  std::basic_streambuf<char,std::char_traits<char> > *_Mystrbuf;
  std::basic_ostream<char,std::char_traits<char> > *_Tiestr;
  char _Fillch;
};

/*  250 */
struct std::basic_ostream<char,std::char_traits<char> >::_Sentry_base
{
  std::basic_ostream<char,std::char_traits<char> > *_Myostr;
};

/*  251 */
struct std::basic_ostream<char,std::char_traits<char> >::sentry
{
  std::basic_ostream<char,std::char_traits<char> >::_Sentry_base baseclass_0;
  bool _Ok;
};

/*  252 */
struct std::char_traits<char>
{
  char dummy[1];
};

/*  253 */
struct std::_Ctraits<double>
{
  char dummy[1];
};

/*  254 */
struct std::numeric_limits<float>
{
  std::_Num_float_base baseclass_0;
};

/*  255 */
struct std::numeric_limits<__int64>
{
  std::_Num_int_base baseclass_0;
};

/*  256 */
struct std::invalid_argument
{
  std::logic_error baseclass_0;
};

/*  257 */
struct std::codecvt_base
{
  std::locale::facet baseclass_0;
};

/*  258 */
struct std::underflow_error
{
  std::runtime_error baseclass_0;
};

/*  259 */
struct std::bad_exception
{
  exception baseclass_0;
};

/*  260 */
struct std::numeric_limits<bool>
{
  std::_Num_int_base baseclass_0;
};

/*  261 */
struct std::numeric_limits<unsigned short>
{
  std::_Num_int_base baseclass_0;
};

/*  262 */
struct std::basic_istream<char,std::char_traits<char> >
{
  _BYTE gap0[4];
  int _Chcount;
  _BYTE gap8[52];
};

/*  263 */
struct std::basic_istream<char,std::char_traits<char> >::_Sentry_base
{
  std::basic_istream<char,std::char_traits<char> > *_Myistr;
};

/*  264 */
struct std::basic_istream<char,std::char_traits<char> >::sentry
{
  std::basic_istream<char,std::char_traits<char> >::_Sentry_base baseclass_0;
  bool _Ok;
};

/*  265 */
struct std::numeric_limits<unsigned long>
{
  std::_Num_int_base baseclass_0;
};

/*  266 */
struct std::random_access_iterator_tag
{
  std::bidirectional_iterator_tag baseclass_0;
};

/*  267 */
struct std::iterator<std::random_access_iterator_tag,char,int,char const *,char const &>
{
  char dummy[1];
};

/*  268 */
struct std::codecvt<unsigned short,char,int>
{
  std::codecvt_base baseclass_0;
  _Cvtvec _Cvt;
};

/*  269 */
struct _C_double_complex
{
  long double _Val[2];
};

/*  270 */
struct std::numeric_limits<int>
{
  std::_Num_int_base baseclass_0;
};

/*  271 */
struct std::char_traits<unsigned short>
{
  char dummy[1];
};

/*  272 */
struct std::numeric_limits<char>
{
  std::_Num_int_base baseclass_0;
};

/*  273 */
struct std::domain_error
{
  std::logic_error baseclass_0;
};

/*  274 */
struct std::numeric_limits<double>
{
  std::_Num_float_base baseclass_0;
};

/*  275 */
struct std::numeric_limits<long double>
{
  std::_Num_float_base baseclass_0;
};

/*  276 */
struct std::_Complex_base<double,_C_double_complex>
{
  _C_double_complex baseclass_0;
};

/*  277 */
struct std::complex<double>
{
  std::_Complex_base<double,_C_double_complex> baseclass_0;
};

/*  278 */
struct std::overflow_error
{
  std::runtime_error baseclass_0;
};

/*  279 */
struct std::range_error
{
  std::runtime_error baseclass_0;
};

/*  280 */
struct _Collvec
{
  unsigned int _Hand;
  unsigned int _Page;
};

/*  281 */
struct std::_Timevec
{
  void *_Timeptr;
};

/*  282 */
struct lconv
{
  char *decimal_point;
  char *thousands_sep;
  char *grouping;
  char *int_curr_symbol;
  char *currency_symbol;
  char *mon_decimal_point;
  char *mon_thousands_sep;
  char *mon_grouping;
  char *positive_sign;
  char *negative_sign;
  char int_frac_digits;
  char frac_digits;
  char p_cs_precedes;
  char p_sep_by_space;
  char n_cs_precedes;
  char n_sep_by_space;
  char p_sign_posn;
  char n_sign_posn;
};

/*  283 */
struct std::numeric_limits<long>
{
  std::_Num_int_base baseclass_0;
};

/*  284 */
struct std::out_of_range
{
  std::logic_error baseclass_0;
};

/*  285 */
struct std::_Complex_base<float,_C_float_complex>
{
  _C_float_complex baseclass_0;
};

/*  286 */
struct std::complex<float>
{
  std::_Complex_base<float,_C_float_complex> baseclass_0;
};

/*  287 */
struct _C_ldouble_complex
{
  long double _Val[2];
};

/*  288 */
struct std::_Complex_base<long double,_C_ldouble_complex>
{
  _C_ldouble_complex baseclass_0;
};

/*  289 */
struct std::complex<long double>
{
  std::_Complex_base<long double,_C_ldouble_complex> baseclass_0;
};

/*  290 */
struct std::numeric_limits<unsigned char>
{
  std::_Num_int_base baseclass_0;
};

/*  291 */
struct std::numeric_limits<unsigned __int64>
{
  std::_Num_int_base baseclass_0;
};

/*  292 */
struct std::_Ranit<char,int,char const *,char const &>
{
  std::iterator<std::random_access_iterator_tag,char,int,char const *,char const &> baseclass_0;
};

/*  293 */
struct std::numeric_limits<short>
{
  std::_Num_int_base baseclass_0;
};

/*  294 */
union $B81003B2C0B623778EDB90769BC89DD3
{
  std::_Ranit<char,int,char const *,char const &> baseclass_0;
  const char *_Myptr;
};

/*  295 */
struct std::basic_string<char,std::char_traits<char>,std::allocator<char> >::const_iterator
{
  $B81003B2C0B623778EDB90769BC89DD3 ___u0;
};

/*  296 */
struct std::basic_string<char,std::char_traits<char>,std::allocator<char> >::iterator
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> >::const_iterator baseclass_0;
};

/*  297 */
struct std::_Ctraits<float>
{
  char dummy[1];
};

/*  298 */
struct std::bad_alloc
{
  exception baseclass_0;
};

/*  299 */
struct std::numeric_limits<signed char>
{
  std::_Num_int_base baseclass_0;
};

/*  300 */
struct std::ios_base::failure
{
  std::runtime_error baseclass_0;
};

/*  301 */
struct std::ios_base::Init
{
  char dummy[1];
};

/*  302 */
struct std::iterator<std::output_iterator_tag,void,void,void,void>
{
  char dummy[1];
};

/*  303 */
struct std::_Outit
{
  std::iterator<std::output_iterator_tag,void,void,void,void> baseclass_0;
};

/*  304 */
union $69EC02F5BE2A975404E7F1C80F1B24EA
{
  std::_Outit baseclass_0;
  bool _Failed;
};

/*  305 */
struct std::ostreambuf_iterator<unsigned short,std::char_traits<unsigned short> >
{
  $69EC02F5BE2A975404E7F1C80F1B24EA ___u0;
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *_Strbuf;
};

/*  306 */
struct std::basic_ostream<unsigned short,std::char_traits<unsigned short> >::_Sentry_base
{
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> > *_Myostr;
};

/*  307 */
struct std::basic_ostream<unsigned short,std::char_traits<unsigned short> >::sentry
{
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> >::_Sentry_base baseclass_0;
  bool _Ok;
};

/*  308 */
struct std::_Scalar_ptr_iterator_tag
{
  char dummy[1];
};

/*  309 */
struct _BLOB
{
  unsigned int cbSize;
  char *pBlobData;
};

/*  310 */
struct tagCAUL
{
  unsigned int cElems;
  unsigned int *pElems;
};

/*  311 */
struct tagBSTRBLOB
{
  unsigned int cbSize;
  char *pData;
};

/*  312 */
struct $FAF74743FBE1C8632047CFB668F7028A
{
  unsigned int LowPart;
  int HighPart;
};

/*  313 */
union _LARGE_INTEGER
{
  $FAF74743FBE1C8632047CFB668F7028A _s0;
  $FAF74743FBE1C8632047CFB668F7028A u;
  __int64 QuadPart;
};

/*  314 */
struct tagCAH
{
  unsigned int cElems;
  _LARGE_INTEGER *pElems;
};

/*  315 */
struct ITypeInfo
{
  IUnknown baseclass_0;
};

/*  316 */
struct in_addr::__unnamed::__unnamed
{
  char s_b1;
  char s_b2;
  char s_b3;
  char s_b4;
};

/*  317 */
union in_addr::__unnamed
{
  in_addr::__unnamed::__unnamed S_un_b;
  in_addr::__unnamed::__unnamed S_un_w;
  unsigned int S_addr;
};

/*  318 */
struct in_addr
{
  in_addr::__unnamed S_un;
};

/*  319 */
struct sockaddr_in
{
  __int16 sin_family;
  unsigned __int16 sin_port;
  in_addr sin_addr;
  char sin_zero[8];
};

/*  320 */
struct tagCAUI
{
  unsigned int cElems;
  unsigned __int16 *pElems;
};

/*  321 */
struct tagCAFILETIME
{
  unsigned int cElems;
  _FILETIME *pElems;
};

/*  322 */
struct tagDISPPARAMS
{
  tagVARIANT *rgvarg;
  int *rgdispidNamedArgs;
  unsigned int cArgs;
  unsigned int cNamedArgs;
};

/*  323 */
struct tagCLIPDATA
{
  unsigned int cbSize;
  int ulClipFmt;
  char *pClipData;
};

/*  324 */
struct ISequentialStream
{
  IUnknown baseclass_0;
};

/*  325 */
struct IStream
{
  ISequentialStream baseclass_0;
};

/*  326 */
struct IStorage
{
  IUnknown baseclass_0;
};

/*  327 */
struct tagVersionedStream
{
  _GUID guidVersion;
  IStream *pStream;
};

/*  328 */
struct tagCAC
{
  unsigned int cElems;
  char *pElems;
};

/*  329 */
struct tagCAI
{
  unsigned int cElems;
  __int16 *pElems;
};

/*  330 */
struct tagCAL
{
  unsigned int cElems;
  int *pElems;
};

/*  331 */
struct tagCAUH
{
  unsigned int cElems;
  _ULARGE_INTEGER *pElems;
};

/*  332 */
struct tagCAFLT
{
  unsigned int cElems;
  float *pElems;
};

/*  333 */
struct tagCABOOL
{
  unsigned int cElems;
  __int16 *pElems;
};

/*  334 */
struct tagCASCODE
{
  unsigned int cElems;
  int *pElems;
};

/*  335 */
struct tagCADATE
{
  unsigned int cElems;
  long double *pElems;
};

/*  336 */
struct tagCACLIPDATA
{
  unsigned int cElems;
  tagCLIPDATA *pElems;
};

/*  337 */
struct tagCABSTRBLOB
{
  unsigned int cElems;
  tagBSTRBLOB *pElems;
};

/*  338 */
struct tagCALPSTR
{
  unsigned int cElems;
  char **pElems;
};

/*  339 */
struct tagCALPWSTR
{
  unsigned int cElems;
  unsigned __int16 **pElems;
};

/*  340 */
struct tagBLOB
{
  unsigned int cbSize;
  char *pBlobData;
};

/*  341 */
struct tagCAPROPVARIANT
{
  unsigned int cElems;
  tagPROPVARIANT *pElems;
};

/*  342 */
struct tagPROPVARIANT
{
  $FC5207D724E9B678D8B9290D439149A8 ___u0;
  _BYTE gapffffffff[17];
};

/*  343 */
struct $22B9CCDF2105F7147677E0F90F2D292B
{
  unsigned __int16 vt;
  unsigned __int16 wReserved1;
  unsigned __int16 wReserved2;
  unsigned __int16 wReserved3;
  char cVal;
};

/*  344 */
struct $6D336DA143C556260FF80C12817B08DB
{
  _BYTE gap0[8];
  int lVal;
};

/*  345 */
struct $253A15DDC5EC310E4506FCC7531D6C94
{
  _BYTE gap0[8];
  _LARGE_INTEGER hVal;
};

/*  346 */
struct $B661194B16BEE5F74A83E74E0122344C
{
  _BYTE gap0[8];
  _ULARGE_INTEGER uhVal;
};

/*  347 */
struct $91AF49EBAEBC944DBC728BB384EB6593
{
  _BYTE gap0[8];
  _FILETIME filetime;
};

/*  348 */
struct $BBD00CC08A628D16A3514D97114BC385
{
  _BYTE gap0[8];
  _GUID *puuid;
};

/*  349 */
struct $F8E5CC3A74DF6B1DCB38EE6CF8A7D5E7
{
  _BYTE gap0[8];
  tagCLIPDATA *pclipdata;
};

/*  350 */
struct $16AF6C880ACABED6BB7B18074B9DBE0B
{
  _BYTE gap0[8];
  tagBSTRBLOB bstrblobVal;
};

/*  351 */
struct $117DDF8021834A984C330CD79510584A
{
  _BYTE gap0[8];
  tagBLOB blob;
};

/*  352 */
struct $17BA733FE6B8BEB3CC80B954432F0727
{
  _BYTE gap0[8];
  char *pszVal;
};

/*  353 */
struct $EBA1CD9B4FB6C45FF9EDB12F2AB230DE
{
  _BYTE gap0[8];
  unsigned __int16 *pwszVal;
};

/*  354 */
struct $356F5A7C44F707B6EBCCB96EDD5EA60E
{
  _BYTE gap0[8];
  IStream *pStream;
};

/*  355 */
struct $4C1517EAC2BD972D49C8522E0C90FCFF
{
  _BYTE gap0[8];
  IStorage *pStorage;
};

/*  356 */
struct $67BE747E27340267DEE309F23E27AD86
{
  _BYTE gap0[8];
  tagVersionedStream *pVersionedStream;
};

/*  357 */
struct $C3CB972C4A52BC054F0DFEE736F4B7EB
{
  _BYTE gap0[8];
  tagCAC cac;
};

/*  358 */
struct $592C083BFB8BB18CAE31E92D689188EE
{
  _BYTE gap0[8];
  tagCAUB caub;
};

/*  359 */
struct $9788C59BA63DE668DD4DD395B5FF6B39
{
  _BYTE gap0[8];
  tagCAI cai;
};

/*  360 */
struct $45356DF2610D80E8253DA79C2327821D
{
  _BYTE gap0[8];
  tagCAUI caui;
};

/*  361 */
struct $8AE0D0F0C72B87A077EBD788D84069A1
{
  _BYTE gap0[8];
  tagCAL cal;
};

/*  362 */
struct $0DD3807666C34890678D7DC38A49A94E
{
  _BYTE gap0[8];
  tagCAUL caul;
};

/*  363 */
struct $D283042C813B037E02F83095EFA9349C
{
  _BYTE gap0[8];
  tagCAH cah;
};

/*  364 */
struct $C5142A90A096E348C01862B58874F1BB
{
  _BYTE gap0[8];
  tagCAUH cauh;
};

/*  365 */
struct $1B939A75831B27778D3EB3FD5AD47C1D
{
  _BYTE gap0[8];
  tagCAFLT caflt;
};

/*  366 */
struct $1AE92AEACA33294C21E713276BBAE61E
{
  _BYTE gap0[8];
  tagCADBL cadbl;
};

/*  367 */
struct $1BA6D94B77F507C37822098FE2AFE138
{
  _BYTE gap0[8];
  tagCABOOL cabool;
};

/*  368 */
struct $B9A6CB1AE15B5FC0EB86AC7F8CBFEBA8
{
  _BYTE gap0[8];
  tagCASCODE cascode;
};

/*  369 */
struct $C4CC3913A7D1DD357383FEFBB9E072B1
{
  _BYTE gap0[8];
  tagCACY cacy;
};

/*  370 */
struct $DC5695EBAEF32366BF168330553FA05E
{
  _BYTE gap0[8];
  tagCADATE cadate;
};

/*  371 */
struct $D9BA073B823B7F7CBFF89F4DF5896ABB
{
  _BYTE gap0[8];
  tagCAFILETIME cafiletime;
};

/*  372 */
struct $6F797497B934767E441520F8A2F3E2F9
{
  _BYTE gap0[8];
  tagCACLSID cauuid;
};

/*  373 */
struct $25CF572A7756068713DA64B9BF35AB15
{
  _BYTE gap0[8];
  tagCACLIPDATA caclipdata;
};

/*  374 */
struct $71D2D859191D804BDFFBB9DF0C33D38E
{
  _BYTE gap0[8];
  tagCABSTR cabstr;
};

/*  375 */
struct $A48E148BD6B15CB7760ABF1474478548
{
  _BYTE gap0[8];
  tagCABSTRBLOB cabstrblob;
};

/*  376 */
struct $0AAC356D95C87AC4E89701DC7C8B4AAC
{
  _BYTE gap0[8];
  tagCALPSTR calpstr;
};

/*  377 */
struct $D9F40355972E59155CA5412BF23C1DC1
{
  _BYTE gap0[8];
  tagCALPWSTR calpwstr;
};

/*  378 */
struct $B37C3FF504D2E190A519D804AE11D172
{
  _BYTE gap0[8];
  tagCAPROPVARIANT capropvar;
};

/*  379 */
struct $479E0AB1B12CEF1DC40D57F0A078698B
{
  _BYTE gap0[8];
  tagPROPVARIANT *pvarVal;
};

/*  380 */
union $FC5207D724E9B678D8B9290D439149A8
{
  $22B9CCDF2105F7147677E0F90F2D292B _s0;
  tagDEC decVal;
  $F28A51B4B40B0D33C72915D739D42B4B _s2;
  $31126B8528A05AF3606C6D495FD178E8 _s3;
  $48802A31D3D0701BC13CEF9CEA041E7B _s4;
  $6D336DA143C556260FF80C12817B08DB _s5;
  $B644145F46FF1F932B106BFA6CC3F6D9 _s6;
  $5CA90CF57237397281FB12BFD52C1905 _s7;
  $E7F48E2F4EAA3149E57D87E5D1B2C6B8 _s8;
  $253A15DDC5EC310E4506FCC7531D6C94 _s9;
  $B661194B16BEE5F74A83E74E0122344C _s10;
  $50230A970D9734D4E9774CFC619DF0F6 _s11;
  $4C0EC2258454B893CE739DAE89D8DB7B _s12;
  $6DB36323059316E675433BB10D285009 _s13;
  $8E3C8731874D1B3BC66617C4DD3163A6 _s14;
  $9C2ED140AD09214BAF715884C0F1C5B9 _s15;
  $E94952165EEA9EEA990FEB33603E1B19 _s16;
  $91AF49EBAEBC944DBC728BB384EB6593 _s17;
  $BBD00CC08A628D16A3514D97114BC385 _s18;
  $F8E5CC3A74DF6B1DCB38EE6CF8A7D5E7 _s19;
  $C854646156F6772BF5D6F8470C9CCFAF _s20;
  $16AF6C880ACABED6BB7B18074B9DBE0B _s21;
  $117DDF8021834A984C330CD79510584A _s22;
  $17BA733FE6B8BEB3CC80B954432F0727 _s23;
  $EBA1CD9B4FB6C45FF9EDB12F2AB230DE _s24;
  $726DCB118888537024FF9880209F6858 _s25;
  $0ACD02662CD5D6F05FBF6C995D45E42C _s26;
  $356F5A7C44F707B6EBCCB96EDD5EA60E _s27;
  $4C1517EAC2BD972D49C8522E0C90FCFF _s28;
  $67BE747E27340267DEE309F23E27AD86 _s29;
  $B478879F292332CD9950CD06D9EE4254 _s30;
  $C3CB972C4A52BC054F0DFEE736F4B7EB _s31;
  $592C083BFB8BB18CAE31E92D689188EE _s32;
  $9788C59BA63DE668DD4DD395B5FF6B39 _s33;
  $45356DF2610D80E8253DA79C2327821D _s34;
  $8AE0D0F0C72B87A077EBD788D84069A1 _s35;
  $0DD3807666C34890678D7DC38A49A94E _s36;
  $D283042C813B037E02F83095EFA9349C _s37;
  $C5142A90A096E348C01862B58874F1BB _s38;
  $1B939A75831B27778D3EB3FD5AD47C1D _s39;
  $1AE92AEACA33294C21E713276BBAE61E _s40;
  $1BA6D94B77F507C37822098FE2AFE138 _s41;
  $B9A6CB1AE15B5FC0EB86AC7F8CBFEBA8 _s42;
  $C4CC3913A7D1DD357383FEFBB9E072B1 _s43;
  $DC5695EBAEF32366BF168330553FA05E _s44;
  $D9BA073B823B7F7CBFF89F4DF5896ABB _s45;
  $6F797497B934767E441520F8A2F3E2F9 _s46;
  $25CF572A7756068713DA64B9BF35AB15 _s47;
  $71D2D859191D804BDFFBB9DF0C33D38E _s48;
  $A48E148BD6B15CB7760ABF1474478548 _s49;
  $0AAC356D95C87AC4E89701DC7C8B4AAC _s50;
  $D9F40355972E59155CA5412BF23C1DC1 _s51;
  $B37C3FF504D2E190A519D804AE11D172 _s52;
  $E1D71D20C3D01115E20D79FAE9629CE8 _s53;
  $166B1F81F6EA96F97683A65F38FB1A59 _s54;
  $76732A64405C0E287FCB302687644550 _s55;
  $5669F5A4AD19EF2CB42A5602080CB0A6 _s56;
  $E5FC128E66C26C95254032BA69D36E74 _s57;
  $886F8AE9D7C8B1B861B6CA58D67B682A _s58;
  $CDA73A427DD2A30CDA26CA3394C33CF0 _s59;
  $2516E53E690D8CC5659AAB7EDC49E664 _s60;
  $BF8CC88CDF129BD6E4FA4ABA13F521AD _s61;
  $2CABE618CF1C2625A4479554E4967E0A _s62;
  $AAA92DA1D6E1B0E8462F69216B62027C _s63;
  $955D93903436905F48899F8B2E67030A _s64;
  $F7167AE7A8ABA03C094C204FB1564A28 _s65;
  $C5D0C3F4360A139BFB25469B10FEE79D _s66;
  $6857AE69DB7C952EEFD665431A7B503A _s67;
  $0878F16B0390542D20060EB711608720 _s68;
  $79CC915A6D1203FBB6DA344D632DB2BB _s69;
  $B35EA7ACFAA25A10035B0463BA63D149 _s70;
  $26B963C06C0C3545178D291704F7A8A5 _s71;
  $479E0AB1B12CEF1DC40D57F0A078698B _s72;
};

/*  381 */
struct tagTYPEATTR
{
  _GUID guid;
  unsigned int lcid;
  unsigned int dwReserved;
  int memidConstructor;
  int memidDestructor;
  unsigned __int16 *lpstrSchema;
  unsigned int cbSizeInstance;
  tagTYPEKIND typekind;
  unsigned __int16 cFuncs;
  unsigned __int16 cVars;
  unsigned __int16 cImplTypes;
  unsigned __int16 cbSizeVft;
  unsigned __int16 cbAlignment;
  unsigned __int16 wTypeFlags;
  unsigned __int16 wMajorVerNum;
  unsigned __int16 wMinorVerNum;
  tagTYPEDESC tdescAlias;
  tagIDLDESC idldescType;
};

/*  382 */
union _Dconst
{
  unsigned __int16 _Word[8];
  float _Float;
  long double _Double;
  long double _Long_double;
};

/*  383 */
struct _LARGE_INTEGER::__unnamed
{
  unsigned int LowPart;
  int HighPart;
};

/*  384 */
struct addrinfo
{
  int ai_flags;
  int ai_family;
  int ai_socktype;
  int ai_protocol;
  unsigned int ai_addrlen;
  char *ai_canonname;
  sockaddr *ai_addr;
  addrinfo *ai_next;
};

/*  385 */
struct IEnumSTATSTG
{
  IUnknown baseclass_0;
};

/*  386 */
struct ITypeLib
{
  IUnknown baseclass_0;
};

/*  387 */
union in6_addr::__unnamed
{
  char Byte[16];
  unsigned __int16 Word[8];
};

/*  388 */
struct in6_addr
{
  in6_addr::__unnamed u;
};

/*  389 */
struct _iobuf
{
  char *_ptr;
  int _cnt;
  char *_base;
  int _flag;
  int _file;
  int _charbuf;
  int _bufsiz;
  char *_tmpfname;
};

/*  390 */
struct bad_cast
{
  exception baseclass_0;
};

/*  391 */
struct hostent
{
  char *h_name;
  char **h_aliases;
  __int16 h_addrtype;
  __int16 h_length;
  char **h_addr_list;
};

/*  392 */
struct WSPIAPI_FUNCTION
{
  const char *pszName;
  int (__stdcall *pfAddress)();
};

/*  393 */
struct sockaddr_in6
{
  __int16 sin6_family;
  unsigned __int16 sin6_port;
  unsigned int sin6_flowinfo;
  in6_addr sin6_addr;
  unsigned int sin6_scope_id;
};

/*  394 */
struct servent
{
  char *s_name;
  char **s_aliases;
  __int16 s_port;
  char *s_proto;
};

/*  395 */
struct CServerLog
{
  CServerLogVtbl *vfptr;
  __declspec(align(8)) CCSLock m_ServerLogLock;
  unsigned __int64 m_dwTotalFileWriteSize;
  unsigned __int64 m_dwTotalLoggedSize;
  unsigned int m_dwCurrentFileWriteSize;
  void *m_hFile;
  unsigned int m_dwBufferUsed;
  unsigned int m_dwLogEnabled;
  char m_szProgramName[260];
  char m_szLogPath[260];
  char *m_lpBuffer;
};

/*  396 */
struct CServerLogVtbl
{
  void *(__thiscall *__vecDelDtor)(CServerLog *this, unsigned int);
};

/*  397 */
struct CLock<CCSLock>
{
  char dummy[1];
};

/*  398 */
struct _RTL_CRITICAL_SECTION
{
  _RTL_CRITICAL_SECTION_DEBUG *DebugInfo;
  int LockCount;
  int RecursionCount;
  void *OwningThread;
  void *LockSemaphore;
  unsigned int SpinCount;
};

/*  399 */
struct _LIST_ENTRY
{
  _LIST_ENTRY *Flink;
  _LIST_ENTRY *Blink;
};

/*  400 */
struct _RTL_CRITICAL_SECTION_DEBUG
{
  unsigned __int16 Type;
  unsigned __int16 CreatorBackTraceIndex;
  _RTL_CRITICAL_SECTION *CriticalSection;
  _LIST_ENTRY ProcessLocksList;
  unsigned int EntryCount;
  unsigned int ContentionCount;
  unsigned int Spare[2];
};

/*  401 */
union $61A1F00D9370D453CD497711EB3E47C5
{
  CLock<CCSLock> baseclass_0;
  _RTL_CRITICAL_SECTION m_CSLock;
};

/*  402 */
struct CCSLock
{
  $61A1F00D9370D453CD497711EB3E47C5 ___u0;
};

/*  403 */
struct HWND__
{
  int unused;
};

/*  404 */
struct HICON__
{
  int unused;
};

/*  405 */
struct HBRUSH__
{
  int unused;
};

/*  406 */
struct tagWNDCLASSA
{
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const char *lpszMenuName;
  const char *lpszClassName;
};

/*  407 */
struct CCommand
{
  CCommandVtbl *vfptr;
};

/*  408 */
struct CCommandVtbl
{
  bool (__thiscall *DoProcess)(CCommand *this);
  bool (__thiscall *Destroy)(CCommand *this);
};

/*  409 */
struct CConsoleCommand
{
  CCommand baseclass_0;
};

/*  410 */
struct std::binary_function<unsigned int,unsigned int,bool>
{
  char dummy[1];
};

/*  411 */
struct std::_Allocator_base<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node>
{
  char dummy[1];
};

/*  412 */
struct std::allocator<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node>
{
  std::_Allocator_base<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node> baseclass_0;
};

/*  413 */
struct std::_List_nod<CThread *,std::allocator<CThread *> >
{
  std::allocator<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node> _Alnod;
};

/*  414 */
struct std::_List_nod<CThread *,std::allocator<CThread *> >::_Node
{
  std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *_Next;
  std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *_Prev;
  CThread *_Myval;
};

/*  415 */
struct CThread
{
  CThreadVtbl *vfptr;
  void *m_hThreadHandle;
};

/*  416 */
struct CThreadVtbl
{
  void *(__thiscall *__vecDelDtor)(CThread *this, unsigned int);
  unsigned int (__thiscall *Run)(CThread *this);
  int (__thiscall *End)(CThread *this);
};

/*  417 */
struct std::_Allocator_base<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *>
{
  char dummy[1];
};

/*  418 */
struct std::allocator<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *> baseclass_0;
};

/*  419 */
struct std::_List_ptr<CThread *,std::allocator<CThread *> >
{
  std::_List_nod<CThread *,std::allocator<CThread *> > baseclass_0;
  std::allocator<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *> _Alptr;
};

/*  420 */
struct std::_Allocator_base<CThread *>
{
  char dummy[1];
};

/*  421 */
struct std::allocator<CThread *>
{
  std::_Allocator_base<CThread *> baseclass_0;
};

/*  422 */
struct CConsoleCMDFactory::StringCMD
{
  unsigned int m_dwHashValue;
  const char *m_szCommand;
  CConsoleCommand *m_lpCMD;
};

/*  423 */
struct std::_Allocator_base<CConsoleCMDFactory::StringCMD>
{
  char dummy[1];
};

/*  424 */
struct std::less<unsigned int>
{
  std::binary_function<unsigned int,unsigned int,bool> baseclass_0;
};

/*  425 */
struct std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0>
{
  std::less<unsigned int> comp;
};

/*  426 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node>
{
  char dummy[1];
};

/*  427 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node> baseclass_0;
};

/*  428 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >
{
  std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node> _Alnod;
};

/*  429 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *_Right;
  std::pair<unsigned int const ,CMsgProc *> _Myval;
  char _Color;
  char _Isnil;
};

/*  430 */
struct CMsgProc
{
  CMsgProcVtbl *vfptr;
};

/*  431 */
struct CMsgProcVtbl
{
  void *(__thiscall *__vecDelDtor)(CMsgProc *this, unsigned int);
  int (__thiscall *operator())(CMsgProc *this, HWND__ *, unsigned int, unsigned int, int);
};

/*  432 */
struct std::pair<unsigned int const ,CMsgProc *>
{
  const unsigned int first;
  CMsgProc *second;
};

/*  433 */
struct std::_Allocator_base<std::pair<unsigned int const ,CMsgProc *> >
{
  char dummy[1];
};

/*  434 */
struct std::allocator<std::pair<unsigned int const ,CMsgProc *> >
{
  std::_Allocator_base<std::pair<unsigned int const ,CMsgProc *> > baseclass_0;
};

/*  435 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *>
{
  char dummy[1];
};

/*  436 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *> baseclass_0;
};

/*  437 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *> _Alptr;
};

/*  438 */
struct std::_Allocator_base<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node>
{
  char dummy[1];
};

/*  439 */
struct std::allocator<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node>
{
  std::_Allocator_base<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node> baseclass_0;
};

/*  440 */
struct std::_List_nod<CCommand *,std::allocator<CCommand *> >
{
  std::allocator<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node> _Alnod;
};

/*  441 */
struct std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node
{
  std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *_Next;
  std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *_Prev;
  CCommand *_Myval;
};

/*  442 */
struct std::_Allocator_base<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *>
{
  char dummy[1];
};

/*  443 */
struct std::allocator<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *> baseclass_0;
};

/*  444 */
struct std::_List_ptr<CCommand *,std::allocator<CCommand *> >
{
  std::_List_nod<CCommand *,std::allocator<CCommand *> > baseclass_0;
  std::allocator<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *> _Alptr;
};

/*  445 */
struct std::_Allocator_base<CCommand *>
{
  char dummy[1];
};

/*  446 */
struct std::allocator<CCommand *>
{
  std::_Allocator_base<CCommand *> baseclass_0;
};

/*  447 */
struct std::allocator<CConsoleCMDFactory::StringCMD>
{
  std::_Allocator_base<CConsoleCMDFactory::StringCMD> baseclass_0;
};

/*  448 */
struct std::allocator<CConsoleCMDFactory::StringCMD>::rebind<CConsoleCMDFactory::StringCMD>
{
  char dummy[1];
};

/*  449 */
struct std::_Vector_val<CConsoleCMDFactory::StringCMD,std::allocator<CConsoleCMDFactory::StringCMD> >
{
  std::allocator<CConsoleCMDFactory::StringCMD> _Alval;
};

/*  450 */
struct std::_Tree_val<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned int const ,CMsgProc *> > _Alval;
};

/*  451 */
struct std::_Allocator_base<unsigned int>
{
  char dummy[1];
};

/*  452 */
struct std::_List_val<CThread *,std::allocator<CThread *> >
{
  std::_List_ptr<CThread *,std::allocator<CThread *> > baseclass_0;
  std::allocator<CThread *> _Alval;
};

/*  453 */
struct std::allocator<unsigned int>
{
  std::_Allocator_base<unsigned int> baseclass_0;
};

/*  454 */
struct std::iterator<std::bidirectional_iterator_tag,CCommand *,int,CCommand * const *,CCommand * const &>
{
  char dummy[1];
};

/*  455 */
struct std::vector<CConsoleCMDFactory::StringCMD,std::allocator<CConsoleCMDFactory::StringCMD> >
{
  std::_Vector_val<CConsoleCMDFactory::StringCMD,std::allocator<CConsoleCMDFactory::StringCMD> > baseclass_0;
  CConsoleCMDFactory::StringCMD *_Myfirst;
  CConsoleCMDFactory::StringCMD *_Mylast;
  CConsoleCMDFactory::StringCMD *_Myend;
};

/*  456 */
struct std::iterator<std::random_access_iterator_tag,CConsoleCMDFactory::StringCMD,int,CConsoleCMDFactory::StringCMD const *,CConsoleCMDFactory::StringCMD const &>
{
  char dummy[1];
};

/*  457 */
struct std::_Ranit<CConsoleCMDFactory::StringCMD,int,CConsoleCMDFactory::StringCMD const *,CConsoleCMDFactory::StringCMD const &>
{
  std::iterator<std::random_access_iterator_tag,CConsoleCMDFactory::StringCMD,int,CConsoleCMDFactory::StringCMD const *,CConsoleCMDFactory::StringCMD const &> baseclass_0;
};

/*  458 */
union $F34712A839E866B3C2EF4466479E5B96
{
  std::_Ranit<CConsoleCMDFactory::StringCMD,int,CConsoleCMDFactory::StringCMD const *,CConsoleCMDFactory::StringCMD const &> baseclass_0;
  CConsoleCMDFactory::StringCMD *_Myptr;
};

/*  459 */
struct std::vector<CConsoleCMDFactory::StringCMD,std::allocator<CConsoleCMDFactory::StringCMD> >::const_iterator
{
  $F34712A839E866B3C2EF4466479E5B96 ___u0;
};

/*  460 */
struct std::vector<CConsoleCMDFactory::StringCMD,std::allocator<CConsoleCMDFactory::StringCMD> >::iterator
{
  std::vector<CConsoleCMDFactory::StringCMD,std::allocator<CConsoleCMDFactory::StringCMD> >::const_iterator baseclass_0;
};

/*  461 */
struct std::allocator<CThread *>::rebind<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node>
{
  char dummy[1];
};

/*  462 */
struct std::allocator<CThread *>::rebind<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *>
{
  char dummy[1];
};

/*  463 */
struct std::allocator<CThread *>::rebind<CThread *>
{
  char dummy[1];
};

/*  464 */
struct std::_Bidit<CCommand *,int,CCommand * const *,CCommand * const &>
{
  std::iterator<std::bidirectional_iterator_tag,CCommand *,int,CCommand * const *,CCommand * const &> baseclass_0;
};

/*  465 */
struct std::_List_val<CCommand *,std::allocator<CCommand *> >
{
  std::_List_ptr<CCommand *,std::allocator<CCommand *> > baseclass_0;
  std::allocator<CCommand *> _Alval;
};

/*  466 */
struct std::list<CThread *,std::allocator<CThread *> >
{
  std::_List_val<CThread *,std::allocator<CThread *> > baseclass_0;
  std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/*  467 */
struct std::iterator<std::bidirectional_iterator_tag,CThread *,int,CThread * const *,CThread * const &>
{
  char dummy[1];
};

/*  468 */
struct std::_Bidit<CThread *,int,CThread * const *,CThread * const &>
{
  std::iterator<std::bidirectional_iterator_tag,CThread *,int,CThread * const *,CThread * const &> baseclass_0;
};

/*  469 */
union $B673F93AA985BAD245CA6F499F2F8361
{
  std::_Bidit<CThread *,int,CThread * const *,CThread * const &> baseclass_0;
  std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *_Ptr;
};

/*  470 */
struct std::list<CThread *,std::allocator<CThread *> >::const_iterator
{
  $B673F93AA985BAD245CA6F499F2F8361 ___u0;
};

/*  471 */
struct std::list<CThread *,std::allocator<CThread *> >::iterator
{
  std::list<CThread *,std::allocator<CThread *> >::const_iterator baseclass_0;
};

/*  472 */
struct std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/*  473 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned int const ,CMsgProc *>,int,std::pair<unsigned int const ,CMsgProc *> const *,std::pair<unsigned int const ,CMsgProc *> const &>
{
  char dummy[1];
};

/*  474 */
struct std::_Bidit<std::pair<unsigned int const ,CMsgProc *>,int,std::pair<unsigned int const ,CMsgProc *> const *,std::pair<unsigned int const ,CMsgProc *> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned int const ,CMsgProc *>,int,std::pair<unsigned int const ,CMsgProc *> const *,std::pair<unsigned int const ,CMsgProc *> const &> baseclass_0;
};

/*  475 */
union $A025292C3988323877E286D90A5AD056
{
  std::_Bidit<std::pair<unsigned int const ,CMsgProc *>,int,std::pair<unsigned int const ,CMsgProc *> const *,std::pair<unsigned int const ,CMsgProc *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *_Ptr;
};

/*  476 */
struct std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::const_iterator
{
  $A025292C3988323877E286D90A5AD056 ___u0;
};

/*  477 */
struct std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::const_iterator baseclass_0;
};

/*  478 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::iterator first;
  bool second;
};

/*  479 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std
{
  std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::iterator first;
  std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::iterator second;
};

/*  480 */
struct std::list<CCommand *,std::allocator<CCommand *> >
{
  std::_List_val<CCommand *,std::allocator<CCommand *> > baseclass_0;
  std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/*  481 */
union $F6072736AB9097B69CD76406A4D29F0F
{
  std::_Bidit<CCommand *,int,CCommand * const *,CCommand * const &> baseclass_0;
  std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *_Ptr;
};

/*  482 */
struct std::list<CCommand *,std::allocator<CCommand *> >::const_iterator
{
  $F6072736AB9097B69CD76406A4D29F0F ___u0;
};

/*  483 */
struct std::list<CCommand *,std::allocator<CCommand *> >::iterator
{
  std::list<CCommand *,std::allocator<CCommand *> >::const_iterator baseclass_0;
};

/*  484 */
struct std::allocator<std::pair<unsigned int const ,CMsgProc *> >::rebind<std::pair<unsigned int const ,CMsgProc *> >
{
  char dummy[1];
};

/*  485 */
struct std::allocator<std::pair<unsigned int const ,CMsgProc *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node>
{
  char dummy[1];
};

/*  486 */
struct std::allocator<std::pair<unsigned int const ,CMsgProc *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *>
{
  char dummy[1];
};

/*  487 */
struct std::allocator<std::pair<unsigned int const ,CMsgProc *> >::rebind<unsigned int>
{
  char dummy[1];
};

/*  488 */
struct std::allocator<std::pair<unsigned int const ,CMsgProc *> >::rebind<char>
{
  char dummy[1];
};

/*  489 */
struct std::allocator<CCommand *>::rebind<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node>
{
  char dummy[1];
};

/*  490 */
struct std::allocator<CCommand *>::rebind<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *>
{
  char dummy[1];
};

/*  491 */
struct std::allocator<CCommand *>::rebind<CCommand *>
{
  char dummy[1];
};

/*  492 */
struct std::nothrow_t
{
  char dummy[1];
};

/*  493 */
struct std::map<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> > >
{
  std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> > baseclass_0;
};

/*  494 */
struct CConsoleWindow
{
  CConsoleWindowVtbl *vfptr;
  CCSLock m_ConsoleWindowLock;
  char Padding[8];
  HWND__ *m_hParentWnd;
  HWND__ *m_hWnd;
  HWND__ *m_hWndInfo;
  HWND__ *m_hWndInput;
  HWND__ *m_hWndOutput;
  HFONT__ *m_hFont;
  HINSTANCE__ *m_hInstance;
  int m_fOldProc;
  char m_szWindowName[128];
  CCommandProcess *m_CMDProcess;
  CConsoleCMDFactory *m_CMDFactory;
  boost::pool<boost::default_user_allocator_new_delete> m_MsgPool;
};

/*  495 */
struct CConsoleWindowVtbl
{
  void *(__thiscall *__vecDelDtor)(CConsoleWindow *this, unsigned int);
};

/*  496 */
struct HFONT__
{
  int unused;
};

/*  497 */
struct CCommandProcess
{
  CCSLock m_CMDLock;
  std::list<CCommand *,std::allocator<CCommand *> > m_CMDList;
};

/*  498 */
struct CConsoleCMDFactory
{
  CConsoleCMDFactoryVtbl *vfptr;
  std::vector<CConsoleCMDFactory::StringCMD,std::allocator<CConsoleCMDFactory::StringCMD> > m_CMDVector;
};

/*  499 */
struct CConsoleCMDFactoryVtbl
{
  void *(__thiscall *__vecDelDtor)(CConsoleCMDFactory *this, unsigned int);
};

/*  500 */
struct boost::simple_segregated_storage<unsigned int>
{
  void *first;
};

/*  501 */
struct boost::details::PODptr<unsigned int>
{
  char *ptr;
  unsigned int sz;
};

/*  502 */
struct boost::pool<boost::default_user_allocator_new_delete>
{
  boost::simple_segregated_storage<unsigned int> baseclass_0;
  boost::details::PODptr<unsigned int> list;
  const unsigned int requested_size;
  unsigned int next_size;
};

/*  503 */
struct CServerWindowFramework
{
  CServerWindowFrameworkVtbl *vfptr;
  HINSTANCE__ *m_hInstance;
  HWND__ *m_hWnd;
  int m_nMenuID;
  unsigned int m_dwInternalFlags;
  unsigned int m_dwServerStatus;
  CSysTray *m_lpSysTray;
  CConsoleWindow *m_lpConsoleWindow;
  CCommandProcess *m_lpCommandProcess;
  CConsoleCMDFactory *m_lpCommandFactory;
  CIOCPNet *m_lpIOCPNet;
  CMsgProcessMgr *m_lpMsgProcessMgr;
  CTimerProcMgr *m_lpTimerProcessMgr;
  CBufferFactory *m_lpBufferFactory;
  std::list<CThread *,std::allocator<CThread *> > m_ProcessThreadList;
  char m_szAppName[260];
};

/*  504 */
struct CServerWindowFrameworkVtbl
{
  void *(__thiscall *__vecDelDtor)(CServerWindowFramework *this, unsigned int);
  bool (__thiscall *ApplicationSpecificInit)(CServerWindowFramework *this, const char *);
};

/*  505 */
struct _NOTIFYICONDATAA
{
  unsigned int cbSize;
  HWND__ *hWnd;
  unsigned int uID;
  unsigned int uFlags;
  unsigned int uCallbackMessage;
  HICON__ *hIcon;
  char szTip[64];
};

/*  506 */
struct CSysTray
{
  _NOTIFYICONDATAA m_IconData;
  HWND__ *m_hWnd;
  HINSTANCE__ *m_hInstance;
  unsigned int m_uIconCount;
};

/*  507 */
struct CCompletionHandler
{
  CCompletionHandlerVtbl *vfptr;
  void *m_hIOCP;
  unsigned int m_nThread;
  unsigned int m_nTimeOutMS;
};

/*  508 */
struct CCompletionHandlerVtbl
{
  void *(__thiscall *__vecDelDtor)(CCompletionHandler *this, unsigned int);
};

/*  509 */
struct CThreadMgr
{
  CThreadMgrVtbl *vfptr;
  CThread *m_lpThreads[63];
  void *m_hThreads[63];
  CCSLock m_ThreadLock;
  unsigned int m_nThreadNum;
  unsigned int m_bJoinStarted;
};

/*  510 */
struct CThreadMgrVtbl
{
  void *(__thiscall *__vecDelDtor)(CThreadMgr *this, unsigned int);
};

/*  511 */
struct std::_Allocator_base<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node>
{
  char dummy[1];
};

/*  512 */
struct std::allocator<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node>
{
  std::_Allocator_base<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node> baseclass_0;
};

/*  513 */
struct std::_List_nod<CSession *,std::allocator<CSession *> >
{
  std::allocator<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node> _Alnod;
};

/*  514 */
struct std::_Allocator_base<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *>
{
  char dummy[1];
};

/*  515 */
struct std::allocator<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *> baseclass_0;
};

/*  516 */
struct std::_List_ptr<CSession *,std::allocator<CSession *> >
{
  std::_List_nod<CSession *,std::allocator<CSession *> > baseclass_0;
  std::allocator<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *> _Alptr;
};

/*  517 */
struct std::_Allocator_base<CSession *>
{
  char dummy[1];
};

/*  518 */
struct std::allocator<CSession *>
{
  std::_Allocator_base<CSession *> baseclass_0;
};

/*  519 */
struct std::_List_val<CSession *,std::allocator<CSession *> >
{
  std::_List_ptr<CSession *,std::allocator<CSession *> > baseclass_0;
  std::allocator<CSession *> _Alval;
};

/*  520 */
struct std::_List_nod<CSession *,std::allocator<CSession *> >::_Node
{
  std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *_Next;
  std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *_Prev;
  CSession *_Myval;
};

/*  521 */
struct CSocketFactory
{
  CSocketFactoryVtbl *vfptr;
  int m_nSockFamily;
  int m_nSockType;
  int m_nSockProtocol;
  int m_nAddressLen;
};

/*  522 */
struct CSocketFactoryVtbl
{
  void *(__thiscall *__vecDelDtor)(CSocketFactory *this, unsigned int);
  unsigned int (__thiscall *CreateSocket)(CSocketFactory *this);
  bool (__thiscall *GetNetworkInfo)(CSocketFactory *this, char *, int);
  bool (__thiscall *SetAddr)(CSocketFactory *this, sockaddr *, const char *, unsigned __int16);
};

/*  523 */
struct CBufferFactory
{
  CBufferFactoryVtbl *vfptr;
};

/*  524 */
struct CBuffer
{
  char *internal_buffer_;
  char *rd_ptr_;
  char *wr_ptr_;
  unsigned int buffer_size_;
  CBuffer *next_;
  CBuffer *prev_;
  INET_Addr address_;
  CBufferFactory *bufferfactory_;
};

/*  525 */
struct INET_Addr
{
  sockaddr m_SockAddr;
  int m_iAddrLen;
};

/*  526 */
struct CBufferFactoryVtbl
{
  void *(__thiscall *__vecDelDtor)(CBufferFactory *this, unsigned int);
  CBuffer *(__thiscall *Create)(CBufferFactory *this, unsigned int);
  void (__thiscall *Release)(CBufferFactory *this, CBuffer *);
};

/*  527 */
struct CDispatchFactory
{
  CDispatchFactoryVtbl *vfptr;
};

/*  528 */
struct CPacketDispatch
{
  CPacketDispatchVtbl *vfptr;
  CSession *m_Session;
};

/*  529 */
struct CPacketDispatchVtbl
{
  void *(__thiscall *__vecDelDtor)(CPacketDispatch *this, unsigned int);
  bool (__thiscall *ParsePacket)(CPacketDispatch *this, char *const , unsigned int *);
  bool (__thiscall *Dispatch)(CPacketDispatch *this);
  void (__thiscall *Connected)(CPacketDispatch *this);
  void (__thiscall *Disconnected)(CPacketDispatch *this);
};

/*  530 */
struct CSession
{
  CCSLock m_SessionLock;
  char LockPadding[8];
  CSessionPolicy *m_SessionPolicy;
  CPacketDispatch *m_lpDispatch;
  unsigned int m_hSocket;
  INET_Addr m_RemoteAddr;
  INET_Addr m_LocalAddr;
  CBuffer *m_lpRecvBuffer;
  CBufferQueue m_SendQueue;
  unsigned int m_dwRecvPending;
  unsigned int m_dwSendPending;
  int m_nRefCount;
  SessionStatistics m_Statistics;
  char m_cCurrentStatus;
  char m_cFlags;
  unsigned __int16 m_usPadding;
};

/*  531 */
struct CDispatchFactoryVtbl
{
  void *(__thiscall *__vecDelDtor)(CDispatchFactory *this, unsigned int);
  CPacketDispatch *(__thiscall *CreateDispatch)(CDispatchFactory *this, CSession *);
  void (__thiscall *DeleteDispatch)(CDispatchFactory *this, CPacketDispatch *);
};

/*  532 */
struct COverlappedFactory
{
  COverlappedFactoryVtbl *vfptr;
};

/*  533 */
union $A5A483E05FC9B52B872A8DCFA58CFF52
{
  unsigned int Offset;
  void *Pointer;
};

/*  534 */
struct _OVERLAPPED
{
  unsigned int Internal;
  unsigned int InternalHigh;
  $A5A483E05FC9B52B872A8DCFA58CFF52 ___u2;
  unsigned int OffsetHigh;
  void *hEvent;
};

/*  535 */
struct COverlapped
{
  COverlappedVtbl *vfptr;
  _OVERLAPPED baseclass_4;
  COverlappedFactory *m_ovlFactory;
  CBuffer *m_lpBuffer;
};

/*  536 */
struct COverlappedVtbl
{
  void *(__thiscall *__vecDelDtor)(COverlapped *this, unsigned int);
  void (__thiscall *Dispatch)(COverlapped *this, int, unsigned int, unsigned int);
};

/*  537 */
struct CListener
{
  CListenerVtbl *vfptr;
  CCSLock m_ListenerLock;
  char ListenerLockPad[8];
  unsigned int m_hListen;
  INET_Addr m_ListenAddr;
  CCompletionHandler *m_SocketHandler;
  CSessionPolicy *m_SessionPolicy;
  CSessionMgr *m_SessionMgr;
  unsigned int m_dwMaxPending;
  unsigned int m_dwCurrentPending;
  unsigned int m_dwTotalPendingCount;
  unsigned int m_dwTotalAcceptCompleteCount;
  CValidateConnection *m_lpValidateConnection;
};

/*  538 */
struct CListenerVtbl
{
  void *(__thiscall *__vecDelDtor)(CListener *this, unsigned int);
};

/*  539 */
struct CSessionPolicy
{
  CSocketFactory *m_lpSocketFactory;
  CBufferFactory *m_lpBufferFactory;
  CDispatchFactory *m_lpDispatchFactory;
  COverlappedFactory *m_lpOverlappedFactory;
  int m_nRefCount;
};

/*  540 */
struct CSessionMgr
{
  CCSLock m_AddLock;
  std::list<CSession *,std::allocator<CSession *> > m_to_be_added;
  char AddLockPad[20];
  CCSLock m_ProcessLock;
  std::list<CSession *,std::allocator<CSession *> > m_current;
  char ProcessLockPad[20];
  CCSLock m_CreationLock;
  boost::pool<boost::default_user_allocator_new_delete> *m_lpSessionPool;
};

/*  541 */
struct CValidateConnection
{
  CValidateConnectionVtbl *vfptr;
  int m_nRefCount;
};

/*  542 */
struct CValidateConnectionVtbl
{
  bool (__thiscall *operator())(CValidateConnection *this, INET_Addr *, INET_Addr *);
  void *(__thiscall *__vecDelDtor)(CValidateConnection *this, unsigned int);
};

/*  543 */
struct COverlappedFactoryVtbl
{
  void *(__thiscall *__vecDelDtor)(COverlappedFactory *this, unsigned int);
  COverlapped *(__thiscall *CreateSend)(COverlappedFactory *this, CSession *, CBuffer *);
  COverlapped *(__thiscall *CreateRecv)(COverlappedFactory *this, CSession *, CBuffer *);
  COverlapped *(__thiscall *CreateAccept)(COverlappedFactory *this, CListener *, unsigned int, CBuffer *);
  void (__thiscall *DeleteOverlapped)(COverlappedFactory *this, COverlapped *);
};

/*  544 */
struct CBufferQueue
{
  CBufferQueueVtbl *vfptr;
  CBuffer *m_lpHead;
  CBuffer *m_lpTail;
  unsigned int m_bufferNum;
  unsigned int m_queueSize;
  unsigned int m_maxQueueSize;
};

/*  545 */
struct CBufferQueueVtbl
{
  void *(__thiscall *__vecDelDtor)(CBufferQueue *this, unsigned int);
};

/*  546 */
struct SessionStatistics
{
  unsigned int m_dwTotalReceived;
  unsigned int m_dwTotalSendPending;
  unsigned int m_dwTotalSendCompleted;
  int m_ConnectedTime;
  int m_DisconnectedTime;
};

/*  547 */
struct std::list<CSession *,std::allocator<CSession *> >
{
  std::_List_val<CSession *,std::allocator<CSession *> > baseclass_0;
  std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/*  548 */
struct std::_Allocator_base<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node>
{
  char dummy[1];
};

/*  549 */
struct std::allocator<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node>
{
  std::_Allocator_base<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node> baseclass_0;
};

/*  550 */
struct std::_List_nod<CListener *,std::allocator<CListener *> >
{
  std::allocator<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node> _Alnod;
};

/*  551 */
struct std::_Allocator_base<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *>
{
  char dummy[1];
};

/*  552 */
struct std::allocator<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *> baseclass_0;
};

/*  553 */
struct std::_List_ptr<CListener *,std::allocator<CListener *> >
{
  std::_List_nod<CListener *,std::allocator<CListener *> > baseclass_0;
  std::allocator<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *> _Alptr;
};

/*  554 */
struct std::_Allocator_base<CListener *>
{
  char dummy[1];
};

/*  555 */
struct std::allocator<CListener *>
{
  std::_Allocator_base<CListener *> baseclass_0;
};

/*  556 */
struct std::_List_val<CListener *,std::allocator<CListener *> >
{
  std::_List_ptr<CListener *,std::allocator<CListener *> > baseclass_0;
  std::allocator<CListener *> _Alval;
};

/*  557 */
struct std::_List_nod<CListener *,std::allocator<CListener *> >::_Node
{
  std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *_Next;
  std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *_Prev;
  CListener *_Myval;
};

/*  558 */
struct std::list<CListener *,std::allocator<CListener *> >
{
  std::_List_val<CListener *,std::allocator<CListener *> > baseclass_0;
  std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/*  559 */
struct std::binary_function<CSessionPolicy *,CSessionPolicy *,bool>
{
  char dummy[1];
};

/*  560 */
struct std::less<CSessionPolicy *>
{
  std::binary_function<CSessionPolicy *,CSessionPolicy *,bool> baseclass_0;
};

/*  561 */
struct std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0>
{
  std::less<CSessionPolicy *> comp;
};

/*  562 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node>
{
  char dummy[1];
};

/*  563 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node> baseclass_0;
};

/*  564 */
struct std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >
{
  std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node> _Alnod;
};

/*  565 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *>
{
  char dummy[1];
};

/*  566 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *> baseclass_0;
};

/*  567 */
struct std::_Tree_ptr<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *> _Alptr;
};

/*  568 */
struct std::_Allocator_base<std::pair<CSessionPolicy * const,unsigned int> >
{
  char dummy[1];
};

/*  569 */
struct std::allocator<std::pair<CSessionPolicy * const,unsigned int> >
{
  std::_Allocator_base<std::pair<CSessionPolicy * const,unsigned int> > baseclass_0;
};

/*  570 */
struct std::_Tree_val<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> > baseclass_0;
  std::allocator<std::pair<CSessionPolicy * const,unsigned int> > _Alval;
};

/*  571 */
struct std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *_Right;
  std::pair<CSessionPolicy * const,unsigned int> _Myval;
  char _Color;
  char _Isnil;
};

/*  572 */
struct std::pair<CSessionPolicy * const,unsigned int>
{
  CSessionPolicy *const first;
  unsigned int second;
};

/*  573 */
struct std::_Tree<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/*  574 */
struct std::map<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> > >
{
  std::_Tree<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> > baseclass_0;
};

/*  575 */
struct CIOCPNet
{
  CCSLock m_IOCPLock;
  char SessionLockPad[8];
  CCompletionHandler *m_lpSocketHandler;
  CThreadMgr *m_lpThreadMgr;
  CSessionMgr *m_lpSessionMgr;
  std::list<CListener *,std::allocator<CListener *> > m_ListenerList;
  std::map<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> > > m_SessionPolicyMap;
  unsigned int m_dwFlags;
};

/*  576 */
struct CMsgProcessMgr
{
  std::map<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> > > m_MessageProcessMap;
};

/*  577 */
struct std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0>
{
  std::less<unsigned int> comp;
};

/*  578 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node>
{
  char dummy[1];
};

/*  579 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node> baseclass_0;
};

/*  580 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >
{
  std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node> _Alnod;
};

/*  581 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *>
{
  char dummy[1];
};

/*  582 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *> baseclass_0;
};

/*  583 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *> _Alptr;
};

/*  584 */
struct std::_Allocator_base<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >
{
  char dummy[1];
};

/*  585 */
struct std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >
{
  std::_Allocator_base<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> > baseclass_0;
};

/*  586 */
struct std::_Tree_val<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> > _Alval;
};

/*  587 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *_Right;
  std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> _Myval;
  char _Color;
  char _Isnil;
};

/*  588 */
struct std::_Allocator_base<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node>
{
  char dummy[1];
};

/*  589 */
struct std::allocator<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node>
{
  std::_Allocator_base<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node> baseclass_0;
};

/*  590 */
struct std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >
{
  std::allocator<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node> _Alnod;
};

/*  591 */
struct std::_Allocator_base<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *>
{
  char dummy[1];
};

/*  592 */
struct std::allocator<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *> baseclass_0;
};

/*  593 */
struct std::_List_ptr<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >
{
  std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> > baseclass_0;
  std::allocator<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *> _Alptr;
};

/*  594 */
struct std::_Allocator_base<CTimerProcMgr::InternalProcessData>
{
  char dummy[1];
};

/*  595 */
struct std::allocator<CTimerProcMgr::InternalProcessData>
{
  std::_Allocator_base<CTimerProcMgr::InternalProcessData> baseclass_0;
};

/*  596 */
struct std::_List_val<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >
{
  std::_List_ptr<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> > baseclass_0;
  std::allocator<CTimerProcMgr::InternalProcessData> _Alval;
};

/*  597 */
struct std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node
{
  std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *_Next;
  std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *_Prev;
  CTimerProcMgr::InternalProcessData _Myval;
};

/*  598 */
struct CTimerProc
{
  CTimerProcVtbl *vfptr;
};

/*  599 */
struct CTimerProcVtbl
{
  void *(__thiscall *__vecDelDtor)(CTimerProc *this, unsigned int);
  void (__thiscall *operator())(CTimerProc *this, HWND__ *, unsigned int, unsigned int, unsigned int);
};

/*  600 */
struct CTimerProcMgr::InternalProcessData
{
  unsigned int m_nProcessID;
  CTimerProc *m_lpTimerProc;
};

/*  601 */
struct std::list<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >
{
  std::_List_val<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> > baseclass_0;
  std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/*  602 */
struct CTimerProcMgr::InternalTimerData
{
  HWND__ *m_hOwnerWnd;
  unsigned int m_dwInterval;
  std::list<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> > m_timerProcessList;
};

/*  603 */
struct std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData>
{
  const unsigned int first;
  CTimerProcMgr::InternalTimerData second;
};

/*  604 */
struct std::_Tree<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/*  605 */
struct std::map<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> > >
{
  std::_Tree<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> > baseclass_0;
};

/*  606 */
struct CTimerProcMgr
{
  std::map<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> > > m_TimerMap;
  unsigned int m_nProcIDCounter;
  unsigned int m_nTimerIDCounter;
};

/*  607 */
struct CProcessThread
{
  CThread baseclass_0;
  volatile int m_bExit;
  int m_nProcessTick;
  CServerWindowFramework *m_ServerWindowFramework;
};

/*  608 */
struct CPulse
{
  unsigned int m_dwPulse;
  unsigned int m_dwLastTick;
  unsigned int m_dwHeavyTrafficCount;
  int m_nTicksPerPulse;
  int m_nTicksPerSec;
  int m_bTPPOverTwoTime;
};

/*  609 */
struct CNullLog
{
  CNullLogVtbl *vfptr;
};

/*  610 */
struct CNullLogVtbl
{
  void *(__thiscall *__vecDelDtor)(CNullLog *this, unsigned int);
};

/*  611 */
struct CProcessCOMMAND
{
  CMsgProc baseclass_0;
  CConsoleWindow *m_ConsoleWindow;
};

/*  612 */
struct boost::default_user_allocator_malloc_free
{
  char dummy[1];
};

/*  613 */
struct boost::default_user_allocator_new_delete
{
  char dummy[1];
};

/*  614 */
struct boost::details::pool::win32_mutex
{
  _RTL_CRITICAL_SECTION mtx;
};

/*  615 */
struct boost::details::pool::null_mutex
{
  char dummy[1];
};

/*  616 */
struct CLock<CSpinLock>
{
  char dummy[1];
};

/*  617 */
union $569361732A9EB5265856B3C03DC4E665
{
  CLock<CSpinLock> baseclass_0;
  volatile int m_bLocked;
};

/*  618 */
struct CSpinLock
{
  $569361732A9EB5265856B3C03DC4E665 ___u0;
};

/*  619 */
struct CLock<CNamedMutex>
{
  char dummy[1];
};

/*  620 */
union $5F6F23E7209DC4491045EBFB01C37025
{
  CLock<CNamedMutex> baseclass_0;
  void *m_hMutex;
};

/*  621 */
struct CNamedMutex
{
  $5F6F23E7209DC4491045EBFB01C37025 ___u0;
};

/*  622 */
struct CLock<CMutex>
{
  char dummy[1];
};

/*  623 */
union $75A97A72060F8DD9B0164C0C0C776761
{
  CLock<CMutex> baseclass_0;
  void *m_hMutex;
};

/*  624 */
struct CMutex
{
  $75A97A72060F8DD9B0164C0C0C776761 ___u0;
};

/*  625 */
struct CLock<CDummyLock>
{
  char dummy[1];
};

/*  626 */
struct CDummyLock
{
  CLock<CDummyLock> baseclass_0;
};

/*  627 */
struct CRylLoginServer
{
  CServerWindowFramework baseclass_0;
  CSessionPolicy *m_lpUserSessionPolicy;
  CSessionPolicy *m_lpAgentServerPolicy;
};

/*  628 */
struct CLock<CCSLock>::Syncronize
{
  CCSLock *m_Lock;
};

/*  629 */
struct tagVS_FIXEDFILEINFO
{
  unsigned int dwSignature;
  unsigned int dwStrucVersion;
  unsigned int dwFileVersionMS;
  unsigned int dwFileVersionLS;
  unsigned int dwProductVersionMS;
  unsigned int dwProductVersionLS;
  unsigned int dwFileFlagsMask;
  unsigned int dwFileFlags;
  unsigned int dwFileOS;
  unsigned int dwFileType;
  unsigned int dwFileSubtype;
  unsigned int dwFileDateMS;
  unsigned int dwFileDateLS;
};

/*  630 */
struct _MINIDUMP_INCLUDE_THREAD_CALLBACK
{
  unsigned int ThreadId;
};

/*  631 */
union $DD82D2F84ECA88824B89F98F568C2145
{
  unsigned int ModuleWriteFlags;
  unsigned int ThreadWriteFlags;
};

/*  632 */
struct _MINIDUMP_CALLBACK_OUTPUT
{
  $DD82D2F84ECA88824B89F98F568C2145 ___u0;
};

/*  633 */
struct _FLOATING_SAVE_AREA
{
  unsigned int ControlWord;
  unsigned int StatusWord;
  unsigned int TagWord;
  unsigned int ErrorOffset;
  unsigned int ErrorSelector;
  unsigned int DataOffset;
  unsigned int DataSelector;
  char RegisterArea[80];
  unsigned int Cr0NpxState;
};

/*  634 */
struct _CONTEXT
{
  unsigned int ContextFlags;
  unsigned int Dr0;
  unsigned int Dr1;
  unsigned int Dr2;
  unsigned int Dr3;
  unsigned int Dr6;
  unsigned int Dr7;
  _FLOATING_SAVE_AREA FloatSave;
  unsigned int SegGs;
  unsigned int SegFs;
  unsigned int SegEs;
  unsigned int SegDs;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Ebx;
  unsigned int Edx;
  unsigned int Ecx;
  unsigned int Eax;
  unsigned int Ebp;
  unsigned int Eip;
  unsigned int SegCs;
  unsigned int EFlags;
  unsigned int Esp;
  unsigned int SegSs;
  char ExtendedRegisters[512];
};

/*  635 */
struct _MINIDUMP_THREAD_EX_CALLBACK
{
  unsigned int ThreadId;
  void *ThreadHandle;
  _CONTEXT Context;
  unsigned int SizeOfContext;
  unsigned __int64 StackBase;
  unsigned __int64 StackEnd;
  unsigned __int64 BackingStoreBase;
  unsigned __int64 BackingStoreEnd;
};

/*  636 */
struct _MINIDUMP_THREAD_CALLBACK
{
  unsigned int ThreadId;
  void *ThreadHandle;
  _CONTEXT Context;
  unsigned int SizeOfContext;
  unsigned __int64 StackBase;
  unsigned __int64 StackEnd;
};

/*  637 */
struct _MINIDUMP_INCLUDE_MODULE_CALLBACK
{
  unsigned __int64 BaseOfImage;
};

/*  638 */
#pragma pack(push, 1)
struct _MINIDUMP_MODULE_CALLBACK
{
  unsigned __int16 *FullPath;
  unsigned __int64 BaseOfImage;
  unsigned int SizeOfImage;
  unsigned int CheckSum;
  unsigned int TimeDateStamp;
  tagVS_FIXEDFILEINFO VersionInfo;
  void *CvRecord;
  unsigned int SizeOfCvRecord;
  void *MiscRecord;
  unsigned int SizeOfMiscRecord;
};
#pragma pack(pop)

/*  639 */
union $4AAC1EBCDB725F443A0956B4D6E2746D
{
  _MINIDUMP_THREAD_CALLBACK Thread;
  _MINIDUMP_THREAD_EX_CALLBACK ThreadEx;
  _MINIDUMP_MODULE_CALLBACK Module;
  _MINIDUMP_INCLUDE_THREAD_CALLBACK IncludeThread;
  _MINIDUMP_INCLUDE_MODULE_CALLBACK IncludeModule;
};

/*  640 */
#pragma pack(push, 1)
struct _MINIDUMP_CALLBACK_INPUT
{
  unsigned int ProcessId;
  void *ProcessHandle;
  unsigned int CallbackType;
  $4AAC1EBCDB725F443A0956B4D6E2746D ___u3;
};
#pragma pack(pop)

/*  641 */
struct _KDHELP
{
  unsigned int Thread;
  unsigned int ThCallbackStack;
  unsigned int NextCallback;
  unsigned int FramePointer;
  unsigned int KiCallUserMode;
  unsigned int KeUserCallbackDispatcher;
  unsigned int SystemRangeStart;
  unsigned int ThCallbackBStore;
  unsigned int Reserved[8];
};

/*  642 */
struct _tagADDRESS64
{
  unsigned __int64 Offset;
  unsigned __int16 Segment;
  ADDRESS_MODE Mode;
};

/*  643 */
struct _EXCEPTION_RECORD
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  void *ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int ExceptionInformation[15];
};

/*  644 */
struct _SYMBOL_INFO
{
  unsigned int SizeOfStruct;
  unsigned int TypeIndex;
  unsigned __int64 Reserved[2];
  unsigned int info;
  unsigned int Size;
  unsigned __int64 ModBase;
  unsigned int Flags;
  unsigned __int64 Value;
  unsigned __int64 Address;
  unsigned int Register;
  unsigned int Scope;
  unsigned int Tag;
  unsigned int NameLen;
  unsigned int MaxNameLen;
  char Name[1];
};

/*  645 */
struct _tagADDRESS
{
  unsigned int Offset;
  unsigned __int16 Segment;
  ADDRESS_MODE Mode;
};

/*  646 */
struct _tagSTACKFRAME
{
  _tagADDRESS AddrPC;
  _tagADDRESS AddrReturn;
  _tagADDRESS AddrFrame;
  _tagADDRESS AddrStack;
  void *FuncTableEntry;
  unsigned int Params[4];
  int Far;
  int Virtual;
  unsigned int Reserved[3];
  _KDHELP KdHelp;
  _tagADDRESS AddrBStore;
};

/*  647 */
struct _EXCEPTION_POINTERS
{
  _EXCEPTION_RECORD *ExceptionRecord;
  _CONTEXT *ContextRecord;
};

/*  648 */
struct _MINIDUMP_EXCEPTION_INFORMATION
{
  unsigned int ThreadId;
  _EXCEPTION_POINTERS *ExceptionPointers;
  int ClientPointers;
};

/*  649 */
struct CDLLModule
{
  CDLLModuleVtbl *vfptr;
  HINSTANCE__ *m_hDLL;
};

/*  650 */
struct CDLLModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(CDLLModule *this, unsigned int);
  int (__thiscall *Init)(CDLLModule *this, const char *);
};

/*  651 */
struct _MINIDUMP_USER_STREAM
{
  unsigned int Type;
  unsigned int BufferSize;
  void *Buffer;
};

/*  652 */
struct _MINIDUMP_USER_STREAM_INFORMATION
{
  unsigned int UserStreamCount;
  _MINIDUMP_USER_STREAM *UserStreamArray;
};

/*  653 */
struct _MINIDUMP_CALLBACK_INFORMATION
{
  int (__stdcall *CallbackRoutine)(void *, _MINIDUMP_CALLBACK_INPUT *const , _MINIDUMP_CALLBACK_OUTPUT *);
  void *CallbackParam;
};

/*  654 */
struct _IMAGEHLP_STACK_FRAME
{
  unsigned __int64 InstructionOffset;
  unsigned __int64 ReturnOffset;
  unsigned __int64 FrameOffset;
  unsigned __int64 StackOffset;
  unsigned __int64 BackingStoreOffset;
  unsigned __int64 FuncTableEntry;
  unsigned __int64 Params[4];
  unsigned __int64 Reserved[5];
  int Virtual;
  unsigned int Reserved2;
};

/*  655 */
struct _IMAGEHLP_LINE
{
  unsigned int SizeOfStruct;
  void *Key;
  unsigned int LineNumber;
  char *FileName;
  unsigned int Address;
};

/*  656 */
struct _IMAGEHLP_LINE64
{
  unsigned int SizeOfStruct;
  void *Key;
  unsigned int LineNumber;
  char *FileName;
  unsigned __int64 Address;
};

/*  657 */
struct CDBGFuncClass
{
  CDLLModule baseclass_0;
  int (__stdcall *MiniDumpWriteDump)(void *, unsigned int, void *, _MINIDUMP_TYPE, _MINIDUMP_EXCEPTION_INFORMATION *const , _MINIDUMP_USER_STREAM_INFORMATION *const , _MINIDUMP_CALLBACK_INFORMATION *const );
  int (__stdcall *SymEnumSymbols)(void *, unsigned __int64, const char *, int (__stdcall *)(_SYMBOL_INFO *, unsigned int, void *), void *);
  unsigned int (__stdcall *SymSetContext)(void *, _IMAGEHLP_STACK_FRAME *, void *);
  int (__stdcall *SymFromAddr)(void *, unsigned __int64, unsigned __int64 *, _SYMBOL_INFO *);
  int (__stdcall *StackWalk)(unsigned int, void *, void *, _tagSTACKFRAME *, void *, int (__stdcall *)(void *, unsigned int, void *, unsigned int, unsigned int *), void *(__stdcall *)(void *, unsigned int), unsigned int (__stdcall *)(void *, unsigned int), unsigned int (__stdcall *)(void *, void *, _tagADDRESS *));
  int (__stdcall *SymGetLineFromAddr)(void *, unsigned int, unsigned int *, _IMAGEHLP_LINE *);
  int (__stdcall *SymGetLineFromAddr64)(void *, unsigned __int64, unsigned int *, _IMAGEHLP_LINE64 *);
  void *(__stdcall *SymFunctionTableAccess)(void *, unsigned int);
  unsigned __int64 (__stdcall *SymGetModuleBase64)(void *, unsigned __int64);
  int (__stdcall *SymInitialize)(void *, char *, int);
  unsigned int (__stdcall *SymSetOptions)(unsigned int);
  int (__stdcall *SymCleanup)(void *);
  unsigned int (__stdcall *SymGetModuleBase)(void *, unsigned int);
  int (__stdcall *SymGetTypeInfo)(void *, unsigned __int64, unsigned int, _IMAGEHLP_SYMBOL_TYPE_INFO, void *);
};

/*  658 */
struct _SYSTEMTIME
{
  unsigned __int16 wYear;
  unsigned __int16 wMonth;
  unsigned __int16 wDayOfWeek;
  unsigned __int16 wDay;
  unsigned __int16 wHour;
  unsigned __int16 wMinute;
  unsigned __int16 wSecond;
  unsigned __int16 wMilliseconds;
};

/*  659 */
struct CExceptionReport
{
  CDBGFuncClass m_DBGHELP;
  int (__stdcall *m_lpUserFunc)(char *, const int);
  int (__stdcall *m_OldFilter)(_EXCEPTION_POINTERS *);
  char m_szLogPrefixName[260];
  char m_szModuleName[260];
  char m_szTempBuffer[260];
  char m_szLogBuffer[65535];
  _CONTEXT m_tempContext;
  _SYSTEMTIME m_tempSystemTime;
  _MINIDUMP_EXCEPTION_INFORMATION m_miniDumpInfo;
  _iobuf *m_logFile;
  int m_bHasSymbol;
  unsigned int m_dwFeaturesFlag;
  _MINIDUMP_TYPE m_eMiniDumpType;
};

/*  660 */
struct _KDHELP64
{
  unsigned __int64 Thread;
  unsigned int ThCallbackStack;
  unsigned int ThCallbackBStore;
  unsigned int NextCallback;
  unsigned int FramePointer;
  unsigned __int64 KiCallUserMode;
  unsigned __int64 KeUserCallbackDispatcher;
  unsigned __int64 SystemRangeStart;
  unsigned __int64 Reserved[8];
};

/*  661 */
struct SERVER_GROUP
{
  char m_Group;
  char m_Name[15];
  int m_ClientNum[2];
  in_addr m_Address;
};

/*  662 */
struct CConsoleCMDSingleton<CCmdServerOpen>
{
  CConsoleCommand baseclass_0;
};

/*  663 */
struct std::_Allocator_base<std::pair<unsigned long,int> >
{
  char dummy[1];
};

/*  664 */
struct std::allocator<std::pair<unsigned long,int> >
{
  std::_Allocator_base<std::pair<unsigned long,int> > baseclass_0;
};

/*  665 */
struct std::_Vector_val<std::pair<unsigned long,int>,std::allocator<std::pair<unsigned long,int> > >
{
  std::allocator<std::pair<unsigned long,int> > _Alval;
};

/*  666 */
struct std::iterator<std::random_access_iterator_tag,unsigned long,int,unsigned long const *,unsigned long const &>
{
  char dummy[1];
};

/*  667 */
struct std::pair<unsigned long,int>
{
  unsigned int first;
  int second;
};

/*  668 */
struct std::allocator<std::pair<unsigned long,int> >::rebind<std::pair<unsigned long,int> >
{
  char dummy[1];
};

/*  669 */
struct std::vector<std::pair<unsigned long,int>,std::allocator<std::pair<unsigned long,int> > >
{
  std::_Vector_val<std::pair<unsigned long,int>,std::allocator<std::pair<unsigned long,int> > > baseclass_0;
  std::pair<unsigned long,int> *_Myfirst;
  std::pair<unsigned long,int> *_Mylast;
  std::pair<unsigned long,int> *_Myend;
};

/*  670 */
struct std::iterator<std::random_access_iterator_tag,std::pair<unsigned long,int>,int,std::pair<unsigned long,int> const *,std::pair<unsigned long,int> const &>
{
  char dummy[1];
};

/*  671 */
struct std::_Ranit<std::pair<unsigned long,int>,int,std::pair<unsigned long,int> const *,std::pair<unsigned long,int> const &>
{
  std::iterator<std::random_access_iterator_tag,std::pair<unsigned long,int>,int,std::pair<unsigned long,int> const *,std::pair<unsigned long,int> const &> baseclass_0;
};

/*  672 */
union $D3B857F46D80FDC7BC96332CF3D415AD
{
  std::_Ranit<std::pair<unsigned long,int>,int,std::pair<unsigned long,int> const *,std::pair<unsigned long,int> const &> baseclass_0;
  std::pair<unsigned long,int> *_Myptr;
};

/*  673 */
struct std::vector<std::pair<unsigned long,int>,std::allocator<std::pair<unsigned long,int> > >::const_iterator
{
  $D3B857F46D80FDC7BC96332CF3D415AD ___u0;
};

/*  674 */
struct std::vector<std::pair<unsigned long,int>,std::allocator<std::pair<unsigned long,int> > >::iterator
{
  std::vector<std::pair<unsigned long,int>,std::allocator<std::pair<unsigned long,int> > >::const_iterator baseclass_0;
};

/*  675 */
struct std::_Allocator_base<unsigned long>
{
  char dummy[1];
};

/*  676 */
struct std::allocator<unsigned long>
{
  std::_Allocator_base<unsigned long> baseclass_0;
};

/*  677 */
struct std::_Vector_val<unsigned long,std::allocator<unsigned long> >
{
  std::allocator<unsigned long> _Alval;
};

/*  678 */
struct std::_Ranit<unsigned long,int,unsigned long const *,unsigned long const &>
{
  std::iterator<std::random_access_iterator_tag,unsigned long,int,unsigned long const *,unsigned long const &> baseclass_0;
};

/*  679 */
struct std::allocator<unsigned long>::rebind<unsigned long>
{
  char dummy[1];
};

/*  680 */
struct std::vector<unsigned long,std::allocator<unsigned long> >
{
  std::_Vector_val<unsigned long,std::allocator<unsigned long> > baseclass_0;
  unsigned int *_Myfirst;
  unsigned int *_Mylast;
  unsigned int *_Myend;
};

/*  681 */
union $6D63BEABADF344C264091179437AD531
{
  std::_Ranit<unsigned long,int,unsigned long const *,unsigned long const &> baseclass_0;
  unsigned int *_Myptr;
};

/*  682 */
struct std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator
{
  $6D63BEABADF344C264091179437AD531 ___u0;
};

/*  683 */
struct std::vector<unsigned long,std::allocator<unsigned long> >::iterator
{
  std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator baseclass_0;
};

/*  684 */
struct std::_Nonscalar_ptr_iterator_tag
{
  char dummy[1];
};

/*  685 */
struct CConsoleCMDSingleton<CCmdServerClose>
{
  CConsoleCommand baseclass_0;
};

/*  686 */
struct CConsoleCMDSingleton<CCMDReloadScript>
{
  CConsoleCommand baseclass_0;
};

/*  687 */
struct CConsoleCMDSingleton<CCMDPrintLog>
{
  CConsoleCommand baseclass_0;
};

/*  688 */
struct SERVER_ID::SID
{
  char Type;
  char Group;
  char Channel;
  char ID;
};

/*  689 */
union SERVER_ID
{
  SERVER_ID::SID sID;
  unsigned int dwID;
};

/*  690 */
struct RylServerInfo
{
  SERVER_ID m_ServerUID;
  in_addr m_ServerAddress;
  unsigned int m_dwClientVer;
  unsigned int m_dwChecksum;
  unsigned int m_nGroupNameLen;
  unsigned int m_nPatchAddressLen;
  char m_szGroupName[120];
  char m_szPatchAddress[100];
  unsigned __int16 m_usChannelClientNum[2];
  unsigned __int16 m_usChannelNum;
};

/*  691 */
struct CSendStream
{
  CBuffer *m_lpBuffer;
  CSession *m_Session;
};

/*  692 */
struct CRylServerDispatch
{
  CPacketDispatch baseclass_0;
  CCSLock m_BufferQueueLock;
  char m_BufferQueueLockPadding[8];
  CBufferQueue m_ProcessQueue;
  CSendStream m_SendStream;
  unsigned int m_dwMaxProcessPacketPerPulse;
  unsigned int m_dwFlags;
};

/*  693 */
struct CLoginAgentDispatch
{
  CRylServerDispatch baseclass_0;
  unsigned int m_dwServerID;
};

/*  694 */
struct CLoginAgentServerTable
{
  RylServerInfo m_AgentServerInfo[10];
  CLoginAgentDispatch *m_lpLoginAgentDispatch[10];
  CLoginAgentServerTable::IPMode m_ipMode[10];
  unsigned int m_nAgentNum;
  CLoginAgentServerTable::OperateMode m_eOperateMode;
  std::vector<std::pair<unsigned long,int>,std::allocator<std::pair<unsigned long,int> > > m_ipList;
};

/*  695 */
#pragma pack(push, 1)
struct SERVER_LIST
{
  unsigned __int16 m_ServerNum;
  SERVER_GROUP m_ServerGroup[10];
};
#pragma pack(pop)

/*  696 */
struct CCmdServerClose
{
  CConsoleCMDSingleton<CCmdServerClose> baseclass_0;
};

/*  697 */
struct CCMDPrintLog
{
  CConsoleCMDSingleton<CCMDPrintLog> baseclass_0;
};

/*  698 */
struct CLimitUserByIP
{
  CValidateConnection baseclass_0;
  CCSLock m_LimitLock;
  std::vector<unsigned long,std::allocator<unsigned long> > m_AllowIPList;
  CLimitUserByIP::AllowMode_t m_eAllowMode;
};

/*  699 */
struct CCmdIPOpenMode
{
  CConsoleCommand baseclass_0;
  int m_nServerGroup;
  CLoginAgentServerTable::IPMode m_eIPMode;
};

/*  700 */
struct CCmdServerOpen
{
  CConsoleCMDSingleton<CCmdServerOpen> baseclass_0;
};

/*  701 */
struct CConsoleCMDSingleton<CCMDReloadSetup>
{
  CConsoleCommand baseclass_0;
};

/*  702 */
struct CCMDReloadSetup
{
  CConsoleCMDSingleton<CCMDReloadSetup> baseclass_0;
};

/*  703 */
struct CConsoleCMDSingleton<CCmdServerReadyPatch>
{
  CConsoleCommand baseclass_0;
};

/*  704 */
struct CCMDReloadScript
{
  CConsoleCMDSingleton<CCMDReloadScript> baseclass_0;
};

/*  705 */
struct CCmdServerReadyPatch
{
  CConsoleCMDSingleton<CCmdServerReadyPatch> baseclass_0;
};

/*  706 */
union tagDBID::__unnamed
{
  _GUID guid;
  _GUID *pguid;
};

/*  707 */
union SKILLSLOT
{
  SKILLSLOT::__unnamed SKILLINFO;
  unsigned int dwSkillSlot;
};

/*  708 */
struct SKILL
{
  unsigned __int16 wSkillNum;
  unsigned __int16 wSlotNum;
  SKILLSLOT SSlot[20];
};

/*  709 */
struct ServerInfo::sSrvState
{
  unsigned __int16 wError;
  unsigned __int16 wSrvState;
};

/*  710 */
union ServerInfo
{
  ServerInfo::sSrvState SrvState;
  unsigned int dwServerInfo;
};

/*  711 */
struct PktBase
{
  char m_StartBit;
  char m_Cmd;
  unsigned __int16 m_Len;
  unsigned int m_CodePage;
  ServerInfo m_SrvInfo;
};

/*  712 */
struct PktSL
{
  PktBase baseclass_0;
  unsigned int m_dwServerID;
  in_addr m_Address;
};

/*  713 */
struct PktSVU
{
  PktBase baseclass_0;
  unsigned int m_dwServerID;
  in_addr m_ServerAddr;
  unsigned int m_dwClientVer;
  unsigned int m_dwCheckSum;
  char m_PatchAddress[100];
};

/*  714 */
#pragma pack(push, 1)
struct PktSCInfo
{
  PktBase baseclass_0;
  unsigned int m_dwServerID;
  char m_cChannelNum;
  unsigned __int16 m_usChannelClientNum[5];
};
#pragma pack(pop)

/*  715 */
struct std::_Allocator_base<CSessionPolicy *>
{
  char dummy[1];
};

/*  716 */
struct std::_Allocator_base<boost::pool<boost::default_user_allocator_new_delete> *>
{
  char dummy[1];
};

/*  717 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<CSessionPolicy * const,unsigned int>,int,std::pair<CSessionPolicy * const,unsigned int> const *,std::pair<CSessionPolicy * const,unsigned int> const &>
{
  char dummy[1];
};

/*  718 */
struct std::_Bidit<std::pair<CSessionPolicy * const,unsigned int>,int,std::pair<CSessionPolicy * const,unsigned int> const *,std::pair<CSessionPolicy * const,unsigned int> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<CSessionPolicy * const,unsigned int>,int,std::pair<CSessionPolicy * const,unsigned int> const *,std::pair<CSessionPolicy * const,unsigned int> const &> baseclass_0;
};

/*  719 */
union $ADC78A955805DB1FDD06F8CFD0D03A1E
{
  std::_Bidit<std::pair<CSessionPolicy * const,unsigned int>,int,std::pair<CSessionPolicy * const,unsigned int> const *,std::pair<CSessionPolicy * const,unsigned int> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *_Ptr;
};

/*  720 */
struct std::_Tree<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::const_iterator
{
  $ADC78A955805DB1FDD06F8CFD0D03A1E ___u0;
};

/*  721 */
struct std::_Tree<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::const_iterator baseclass_0;
};

/*  722 */
struct std::pair<std::_Tree<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::iterator first;
  bool second;
};

/*  723 */
struct std::allocator<CSessionPolicy *>
{
  std::_Allocator_base<CSessionPolicy *> baseclass_0;
};

/*  724 */
struct std::allocator<boost::pool<boost::default_user_allocator_new_delete> *>
{
  std::_Allocator_base<boost::pool<boost::default_user_allocator_new_delete> *> baseclass_0;
};

/*  725 */
struct std::allocator<boost::pool<boost::default_user_allocator_new_delete> *>::rebind<boost::pool<boost::default_user_allocator_new_delete> *>
{
  char dummy[1];
};

/*  726 */
struct std::allocator<std::pair<CSessionPolicy * const,unsigned int> >::rebind<std::pair<CSessionPolicy * const,unsigned int> >
{
  char dummy[1];
};

/*  727 */
struct std::allocator<std::pair<CSessionPolicy * const,unsigned int> >::rebind<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node>
{
  char dummy[1];
};

/*  728 */
struct std::allocator<std::pair<CSessionPolicy * const,unsigned int> >::rebind<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *>
{
  char dummy[1];
};

/*  729 */
struct std::allocator<std::pair<CSessionPolicy * const,unsigned int> >::rebind<CSessionPolicy *>
{
  char dummy[1];
};

/*  730 */
struct std::allocator<std::pair<CSessionPolicy * const,unsigned int> >::rebind<char>
{
  char dummy[1];
};

/*  731 */
struct std::_Vector_val<boost::pool<boost::default_user_allocator_new_delete> *,std::allocator<boost::pool<boost::default_user_allocator_new_delete> *> >
{
  std::allocator<boost::pool<boost::default_user_allocator_new_delete> *> _Alval;
};

/*  732 */
struct std::vector<boost::pool<boost::default_user_allocator_new_delete> *,std::allocator<boost::pool<boost::default_user_allocator_new_delete> *> >
{
  std::_Vector_val<boost::pool<boost::default_user_allocator_new_delete> *,std::allocator<boost::pool<boost::default_user_allocator_new_delete> *> > baseclass_0;
  boost::pool<boost::default_user_allocator_new_delete> **_Myfirst;
  boost::pool<boost::default_user_allocator_new_delete> **_Mylast;
  boost::pool<boost::default_user_allocator_new_delete> **_Myend;
};

/*  733 */
struct std::iterator<std::random_access_iterator_tag,boost::pool<boost::default_user_allocator_new_delete> *,int,boost::pool<boost::default_user_allocator_new_delete> * const *,boost::pool<boost::default_user_allocator_new_delete> * const &>
{
  char dummy[1];
};

/*  734 */
struct std::_Ranit<boost::pool<boost::default_user_allocator_new_delete> *,int,boost::pool<boost::default_user_allocator_new_delete> * const *,boost::pool<boost::default_user_allocator_new_delete> * const &>
{
  std::iterator<std::random_access_iterator_tag,boost::pool<boost::default_user_allocator_new_delete> *,int,boost::pool<boost::default_user_allocator_new_delete> * const *,boost::pool<boost::default_user_allocator_new_delete> * const &> baseclass_0;
};

/*  735 */
union $9A2AF5B46C8E4AFF37EC15ED534902F2
{
  std::_Ranit<boost::pool<boost::default_user_allocator_new_delete> *,int,boost::pool<boost::default_user_allocator_new_delete> * const *,boost::pool<boost::default_user_allocator_new_delete> * const &> baseclass_0;
  boost::pool<boost::default_user_allocator_new_delete> **_Myptr;
};

/*  736 */
struct std::vector<boost::pool<boost::default_user_allocator_new_delete> *,std::allocator<boost::pool<boost::default_user_allocator_new_delete> *> >::const_iterator
{
  $9A2AF5B46C8E4AFF37EC15ED534902F2 ___u0;
};

/*  737 */
struct std::vector<boost::pool<boost::default_user_allocator_new_delete> *,std::allocator<boost::pool<boost::default_user_allocator_new_delete> *> >::iterator
{
  std::vector<boost::pool<boost::default_user_allocator_new_delete> *,std::allocator<boost::pool<boost::default_user_allocator_new_delete> *> >::const_iterator baseclass_0;
};

/*  738 */
struct std::allocator<CListener *>::rebind<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node>
{
  char dummy[1];
};

/*  739 */
struct std::allocator<CListener *>::rebind<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *>
{
  char dummy[1];
};

/*  740 */
struct std::allocator<CListener *>::rebind<CListener *>
{
  char dummy[1];
};

/*  741 */
struct std::iterator<std::bidirectional_iterator_tag,CListener *,int,CListener * const *,CListener * const &>
{
  char dummy[1];
};

/*  742 */
struct std::_Bidit<CListener *,int,CListener * const *,CListener * const &>
{
  std::iterator<std::bidirectional_iterator_tag,CListener *,int,CListener * const *,CListener * const &> baseclass_0;
};

/*  743 */
union $EA311B27C49973B6F3B86577A7C18FE9
{
  std::_Bidit<CListener *,int,CListener * const *,CListener * const &> baseclass_0;
  std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *_Ptr;
};

/*  744 */
struct std::list<CListener *,std::allocator<CListener *> >::const_iterator
{
  $EA311B27C49973B6F3B86577A7C18FE9 ___u0;
};

/*  745 */
struct std::list<CListener *,std::allocator<CListener *> >::iterator
{
  std::list<CListener *,std::allocator<CListener *> >::const_iterator baseclass_0;
};

/*  746 */
struct CCheckPing
{
  CCSLock m_PingLock;
  char CheckPingLockPad[8];
  unsigned int m_dwPingCount;
  unsigned int m_dwLastPingRecvTime;
  unsigned int m_dwFirstCheckTime;
};

/*  747 */
struct CLoginClientDispatch
{
  CRylServerDispatch baseclass_0;
  CCheckPing m_CheckPing;
};

/*  748 */
struct PktSvL
{
  PktBase baseclass_0;
  unsigned int m_dwClientVer;
};

/*  749 */
struct PktSPI
{
  PktBase baseclass_0;
  unsigned int m_dwServerID;
};

/*  750 */
struct CStreamOverlappedFactory
{
  COverlappedFactory baseclass_0;
  CCSLock m_Lock;
  char FactoryLockPad[8];
  boost::pool<boost::default_user_allocator_new_delete> *m_lpOverlappedPool;
};

/*  751 */
struct CPoolBufferFactory
{
  CBufferFactory baseclass_0;
  CCSLock m_BufferLock;
  boost::pool<boost::default_user_allocator_new_delete> *m_lpBufferPool;
  std::vector<boost::pool<boost::default_user_allocator_new_delete> *,std::allocator<boost::pool<boost::default_user_allocator_new_delete> *> > m_PoolArray;
};

/*  752 */
struct IRowset
{
  IUnknown baseclass_0;
};

/*  753 */
struct CRylLoginServerProcess
{
  CProcessThread baseclass_0;
  unsigned int m_dwLastPrintInfoTime;
  CRylLoginServer *m_RylLoginServer;
};

/*  754 */
struct CDatagramOverlappedFactory
{
  COverlappedFactory baseclass_0;
  CCSLock m_Lock;
  char FactoryLockPad[8];
  boost::pool<boost::default_user_allocator_new_delete> *m_lpOverlappedPool;
};

/*  755 */
struct POS
{
  float fPointX;
  float fPointY;
  float fPointZ;
};

/*  756 */
struct tagDBOBJECT
{
  unsigned int dwFlags;
  _GUID iid;
};

/*  757 */
struct tagDBBINDEXT
{
  char *pExtension;
  unsigned int ulExtension;
};

/*  758 */
struct tagDBBINDING
{
  unsigned int iOrdinal;
  unsigned int obValue;
  unsigned int obLength;
  unsigned int obStatus;
  ITypeInfo *pTypeInfo;
  tagDBOBJECT *pObject;
  tagDBBINDEXT *pBindExt;
  unsigned int dwPart;
  unsigned int dwMemOwner;
  unsigned int eParamIO;
  unsigned int cbMaxLen;
  unsigned int dwFlags;
  unsigned __int16 wType;
  char bPrecision;
  char bScale;
};

/*  759 */
struct tagDBCOLUMNINFO
{
  unsigned __int16 *pwszName;
  ITypeInfo *pTypeInfo;
  unsigned int iOrdinal;
  unsigned int dwFlags;
  unsigned int ulColumnSize;
  unsigned __int16 wType;
  char bPrecision;
  char bScale;
  _BYTE gap18[24];
};

/*  760 */
struct CPoolDispatchFactory<CLoginAgentDispatch>
{
  CDispatchFactory baseclass_0;
  boost::pool<boost::default_user_allocator_new_delete> m_DispatchPool;
};

/*  761 */
struct OleDB::_COL_INFO
{
  char ColName[100];
  unsigned int ColSize;
};

/*  762 */
struct OleDB::_RESULT_COLS
{
  unsigned int ColNum;
  tagDBCOLUMNINFO *lpDBColumnInfo;
  unsigned __int16 *lpStringsBuffer;
};

/*  763 */
struct OleDB::_PARAM_INFO
{
  unsigned int ColNum;
  unsigned int eParamIO[30];
  unsigned int ColSize[30];
  unsigned __int16 ColType[30];
};

/*  764 */
struct OleDB::_SET_BINARY
{
  unsigned int Size;
};

/*  765 */
struct IDBInitialize
{
  IUnknown baseclass_0;
};

/*  766 */
struct IDBCreateSession
{
  IUnknown baseclass_0;
};

/*  767 */
struct IDBCreateCommand
{
  IUnknown baseclass_0;
};

/*  768 */
struct IRowsetChange
{
  IUnknown baseclass_0;
};

/*  769 */
struct OleDB
{
  OleDBVtbl *vfptr;
  unsigned __int16 m_QueryText[8192];
  OleDB::_COL_INFO m_ColInfo;
  IDBInitialize *m_pIDBInit;
  IDBCreateSession *m_pIDBCreateSession;
  IDBCreateCommand *m_pIDBCreateCommand;
  IRowset *m_pIRowset;
  IRowsetChange *m_pIRowsetChange;
  HRESULT m_dwLastError;
  char m_ErrorString[512];
};

/*  770 */
struct OleDBVtbl
{
  void *(__thiscall *__vecDelDtor)(OleDB *this, unsigned int);
};

/*  771 */
struct CINETFamilyFactory
{
  CSocketFactory baseclass_0;
};

/*  772 */
struct CUDPFactory
{
  CINETFamilyFactory baseclass_0;
};

/*  773 */
struct CServerSetup
{
  CServerSetupVtbl *vfptr;
  unsigned int m_ServerID;
  unsigned int m_dwLimitVer;
  unsigned int m_dwClientVer;
  char m_chPatchAddr[260];
  unsigned int m_dwBillingType;
  unsigned int m_dwAuthType;
  bool m_bPingCheck;
  bool m_bAlone;
  bool m_bHanCheck;
  bool m_bHackCheck;
  bool m_bAdminIPCheck;
  bool m_bDuelModeCheck;
  bool m_bLotteryEvent;
  bool m_bLevelUpEvent;
  bool m_bDeathPenaltyEvent;
  bool m_bFreeCheck;
  bool m_bIgnoreFlag;
  bool m_bBattleAuth;
  bool m_bBattleGame;
  bool m_bBattleAgent;
  bool m_bSupressCharCreate;
  bool m_bSupressCharDelete;
  bool m_bTestGroupAuth;
  bool m_bChatToolIPCheck;
  char m_cRestrictedPart1ToPart2Level;
  char m_cMaxTransferPart1ToPart2Count;
  unsigned int m_dwUserLimit;
  unsigned int m_dwCheckSum;
  unsigned int m_dwExp;
  unsigned int m_dwDrop;
  unsigned int m_dwMinFame;
  unsigned int m_dwMaxFame;
  unsigned __int16 m_wBattleLimit;
  INET_Addr m_ServerAddress[8];
  INET_Addr m_GameServerUDPAddr;
  INET_Addr m_HanUnitedBillingAddr;
  INET_Addr m_Part1UnifiedAgentAddr;
  INET_Addr m_P1GameServerUDPAddr;
  CServerSetup::DBInfo m_stPart1UnifiedDBInfo;
  CServerSetup::DBInfo m_stAdminToolDBInfo;
  CServerSetup::DBInfo m_stKeeperDBInfo;
  CServerSetup::DBInfo m_stAuthDBInfo;
  CServerSetup::DBInfo m_stGameDBInfo;
  CServerSetup::DBInfo m_stLogDBInfo;
  unsigned int m_dwGameContentsFlag;
  GameRYL::ServiceNation m_eNationType;
  std::vector<unsigned long,std::allocator<unsigned long> > m_vecAdminUID;
  UnifiedConst::AgentServerType m_eAgentServerType;
  unsigned int m_dwSelectableUnifiedServerNum;
};

/*  774 */
struct CServerSetupVtbl
{
  void *(__thiscall *__vecDelDtor)(CServerSetup *this, unsigned int);
};

/*  775 */
struct CServerSetup::DBInfo
{
  OleDB::ConnType m_ConnType;
  char m_szDBAddr[128];
  char m_szDBName[128];
  char m_szDBUser[128];
  char m_szDBPass[128];
};

/*  776 */
#pragma pack(push, 1)
struct PARTY
{
  unsigned int m_dwPartyID;
  unsigned int m_dwLeaderID;
  char m_cMemberNum;
  char Name[10][16];
  unsigned int MemberCID[10];
  unsigned int ServerID[10];
  unsigned __int16 m_wClass[10];
  char m_cLevel[10];
  unsigned int m_dwGID[10];
};
#pragma pack(pop)

/*  777 */
#pragma pack(push, 1)
struct PARTY_EX
{
  PARTY baseclass_0;
  bool m_bAutoRouting[10];
  POS m_Position[10];
};
#pragma pack(pop)

/*  778 */
#pragma pack(push, 1)
struct QUICKSLOT
{
  char nType;
  char nSkillLockCount;
  char nSkillLevel;
  unsigned __int16 wID;
};
#pragma pack(pop)

/*  779 */
struct CTCPFactory
{
  CINETFamilyFactory baseclass_0;
};

/*  780 */
struct PktBlockCompressedBase
{
  unsigned __int16 m_usLength;
  char m_cCommand;
  char m_cExtra;
};

/*  781 */
struct QUICK
{
  QUICKSLOT Slots[20];
};

/*  782 */
#pragma pack(push, 1)
struct USER_INFO
{
  unsigned int CharID[5];
  char Nation;
  char OldServerGroupID;
  char FirstLogin;
};
#pragma pack(pop)

/*  783 */
struct CEchoDispatch
{
  CPacketDispatch baseclass_0;
};

/*  784 */
struct CNullDispatch
{
  CPacketDispatch baseclass_0;
};

/*  785 */
struct CPoolDispatchFactory<CLoginClientDispatch>
{
  CDispatchFactory baseclass_0;
  boost::pool<boost::default_user_allocator_new_delete> m_DispatchPool;
};

/*  786 */
struct CSingleton<CXORCrypt>
{
  char dummy[1];
};

/*  787 */
union $627A69DAB1A3EA922C2D5C29933410E2
{
  CSingleton<CXORCrypt> baseclass_0;
  char m_CodePage[100];
};

/*  788 */
struct CXORCrypt
{
  $627A69DAB1A3EA922C2D5C29933410E2 ___u0;
  unsigned int m_CodePageCount;
};

/*  789 */
struct PktSPIAck
{
  PktBase baseclass_0;
  unsigned int m_dwClientVer;
  char m_PatchAddress[100];
};

/*  790 */
#pragma pack(push, 1)
struct PktSvLAck
{
  PktBase baseclass_0;
  unsigned int m_dwClientVer;
  char m_PatchAddress[100];
  SERVER_LIST m_ServerList;
};
#pragma pack(pop)

/*  791 */
#pragma pack(push, 1)
struct PktDD
{
  PktBase baseclass_0;
  unsigned int m_dwRequestKey;
  unsigned __int16 m_wCmd;
};
#pragma pack(pop)

/*  792 */
struct std::pair<std::vector<std::pair<unsigned long,int>,std::allocator<std::pair<unsigned long,int> > >::iterator,std::vector<std::pair<unsigned long,int>,std::allocator<std::pair<unsigned long,int> > >::iterator>
{
  std::vector<std::pair<unsigned long,int>,std::allocator<std::pair<unsigned long,int> > >::iterator first;
  std::vector<std::pair<unsigned long,int>,std::allocator<std::pair<unsigned long,int> > >::iterator second;
};

/*  793 */
struct FindByIP
{
  char dummy[1];
};

/*  794 */
struct tagEMR
{
  unsigned int iType;
  unsigned int nSize;
};

/*  795 */
struct _RECTL
{
  int left;
  int top;
  int right;
  int bottom;
};

/*  796 */
struct _POINTL
{
  int x;
  int y;
};

/*  797 */
struct tagEMRPOLYLINE
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cptl;
  _POINTL aptl[1];
};

/*  798 */
struct tagXFORM
{
  float eM11;
  float eM12;
  float eM21;
  float eM22;
  float eDx;
  float eDy;
};

/*  799 */
struct tagEMRTRANSPARENTBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int cxSrc;
  int cySrc;
};

/*  800 */
struct _TAPE_SET_DRIVE_PARAMETERS
{
  char ECC;
  char Compression;
  char DataPadding;
  char ReportSetmarks;
  unsigned int EOTWarningZoneSize;
};

/*  801 */
struct tagCBTACTIVATESTRUCT
{
  int fMouse;
  HWND__ *hWndActive;
};

/*  802 */
struct _NETRESOURCEW
{
  unsigned int dwScope;
  unsigned int dwType;
  unsigned int dwDisplayType;
  unsigned int dwUsage;
  unsigned __int16 *lpLocalName;
  unsigned __int16 *lpRemoteName;
  unsigned __int16 *lpComment;
  unsigned __int16 *lpProvider;
};

/*  803 */
struct _WSAVersion
{
  unsigned int dwVersion;
  _WSAEcomparator ecHow;
};

/*  804 */
struct _AFPROTOCOLS
{
  int iAddressFamily;
  int iProtocol;
};

/*  805 */
struct _SOCKET_ADDRESS
{
  sockaddr *lpSockaddr;
  int iSockaddrLength;
};

/*  806 */
struct _CSADDR_INFO
{
  _SOCKET_ADDRESS LocalAddr;
  _SOCKET_ADDRESS RemoteAddr;
  int iSocketType;
  int iProtocol;
};

/*  807 */
struct _WSAQuerySetA
{
  unsigned int dwSize;
  char *lpszServiceInstanceName;
  _GUID *lpServiceClassId;
  _WSAVersion *lpVersion;
  char *lpszComment;
  unsigned int dwNameSpace;
  _GUID *lpNSProviderId;
  char *lpszContext;
  unsigned int dwNumberOfProtocols;
  _AFPROTOCOLS *lpafpProtocols;
  char *lpszQueryString;
  unsigned int dwNumberOfCsAddrs;
  _CSADDR_INFO *lpcsaBuffer;
  unsigned int dwOutputFlags;
  _BLOB *lpBlob;
};

/*  808 */
struct CSendDataToManageClient
{
  CMsgProc baseclass_0;
};

/*  809 */
struct _QUERY_SERVICE_CONFIGA
{
  unsigned int dwServiceType;
  unsigned int dwStartType;
  unsigned int dwErrorControl;
  char *lpBinaryPathName;
  char *lpLoadOrderGroup;
  unsigned int dwTagId;
  char *lpDependencies;
  char *lpServiceStartName;
  char *lpDisplayName;
};

/*  810 */
struct _TOKEN_PRIMARY_GROUP
{
  void *PrimaryGroup;
};

/*  811 */
struct _PROCESS_HEAP_ENTRY::__unnamed::__unnamed
{
  void *hMem;
  unsigned int dwReserved[3];
};

/*  812 */
union $699F13AA4A6073241BF14082D9ABE0A3
{
  _PROCESS_HEAP_ENTRY::__unnamed::__unnamed Block;
  _PROCESS_HEAP_ENTRY::__unnamed::__unnamed Region;
};

/*  813 */
struct _PROCESS_HEAP_ENTRY
{
  void *lpData;
  unsigned int cbData;
  char cbOverhead;
  char iRegionIndex;
  unsigned __int16 wFlags;
  $699F13AA4A6073241BF14082D9ABE0A3 ___u5;
};

/*  814 */
struct tagEMREOF
{
  tagEMR emr;
  unsigned int nPalEntries;
  unsigned int offPalEntries;
  unsigned int nSizeLast;
};

/*  815 */
struct _SID_AND_ATTRIBUTES
{
  void *Sid;
  unsigned int Attributes;
};

/*  816 */
struct _MEMORY_BASIC_INFORMATION64
{
  unsigned __int64 BaseAddress;
  unsigned __int64 AllocationBase;
  unsigned int AllocationProtect;
  unsigned int __alignment1;
  unsigned __int64 RegionSize;
  unsigned int State;
  unsigned int Protect;
  unsigned int Type;
  unsigned int __alignment2;
};

/*  817 */
struct _PROCESSOR_POWER_POLICY_INFO
{
  unsigned int TimeCheck;
  unsigned int DemoteLimit;
  unsigned int PromoteLimit;
  char DemotePercent;
  char PromotePercent;
  char Spare[2];
  int _bf16;
};

/*  818 */
struct _PROCESSOR_POWER_POLICY
{
  unsigned int Revision;
  char DynamicThrottle;
  char Spare[3];
  int _bf8;
  unsigned int PolicyCount;
  _PROCESSOR_POWER_POLICY_INFO Policy[3];
};

/*  819 */
struct tagTOGGLEKEYS
{
  unsigned int cbSize;
  unsigned int dwFlags;
};

/*  820 */
#pragma pack(push, 1)
struct tagBITMAPFILEHEADER
{
  unsigned __int16 bfType;
  unsigned int bfSize;
  unsigned __int16 bfReserved1;
  unsigned __int16 bfReserved2;
  unsigned int bfOffBits;
};
#pragma pack(pop)

/*  821 */
struct tagEMRARC
{
  tagEMR emr;
  _RECTL rclBox;
  _POINTL ptlStart;
  _POINTL ptlEnd;
};

/*  822 */
struct tagNMHDR
{
  HWND__ *hwndFrom;
  unsigned int idFrom;
  unsigned int code;
};

/*  823 */
struct tagLOGFONTW
{
  int lfHeight;
  int lfWidth;
  int lfEscapement;
  int lfOrientation;
  int lfWeight;
  char lfItalic;
  char lfUnderline;
  char lfStrikeOut;
  char lfCharSet;
  char lfOutPrecision;
  char lfClipPrecision;
  char lfQuality;
  char lfPitchAndFamily;
  unsigned __int16 lfFaceName[32];
};

/*  824 */
struct tagICONMETRICSW
{
  unsigned int cbSize;
  int iHorzSpacing;
  int iVertSpacing;
  int iTitleWrap;
  tagLOGFONTW lfFont;
};

/*  825 */
struct _currencyfmtA
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  char *lpDecimalSep;
  char *lpThousandSep;
  unsigned int NegativeOrder;
  unsigned int PositiveOrder;
  char *lpCurrencySymbol;
};

/*  826 */
struct val_context
{
  int valuelen;
  void *value_context;
  void *val_buff_ptr;
};

/*  827 */
struct _ACTIVATION_CONTEXT_QUERY_INDEX
{
  unsigned int ulAssemblyIndex;
  unsigned int ulFileIndexInAssembly;
};

/*  828 */
struct _SECURITY_ATTRIBUTES
{
  unsigned int nLength;
  void *lpSecurityDescriptor;
  int bInheritHandle;
};

/*  829 */
struct _STARTUPINFOW
{
  unsigned int cb;
  unsigned __int16 *lpReserved;
  unsigned __int16 *lpDesktop;
  unsigned __int16 *lpTitle;
  unsigned int dwX;
  unsigned int dwY;
  unsigned int dwXSize;
  unsigned int dwYSize;
  unsigned int dwXCountChars;
  unsigned int dwYCountChars;
  unsigned int dwFillAttribute;
  unsigned int dwFlags;
  unsigned __int16 wShowWindow;
  unsigned __int16 cbReserved2;
  char *lpReserved2;
  void *hStdInput;
  void *hStdOutput;
  void *hStdError;
};

/*  830 */
struct _PROCESS_INFORMATION
{
  void *hProcess;
  void *hThread;
  unsigned int dwProcessId;
  unsigned int dwThreadId;
};

/*  831 */
struct _SHCREATEPROCESSINFOW
{
  unsigned int cbSize;
  unsigned int fMask;
  HWND__ *hwnd;
  const unsigned __int16 *pszFile;
  const unsigned __int16 *pszParameters;
  const unsigned __int16 *pszCurrentDirectory;
  void *hUserToken;
  _SECURITY_ATTRIBUTES *lpProcessAttributes;
  _SECURITY_ATTRIBUTES *lpThreadAttributes;
  int bInheritHandles;
  unsigned int dwCreationFlags;
  _STARTUPINFOW *lpStartupInfo;
  _PROCESS_INFORMATION *lpProcessInformation;
};

/*  832 */
struct _OSVERSIONINFOEXW
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  unsigned __int16 szCSDVersion[128];
  unsigned __int16 wServicePackMajor;
  unsigned __int16 wServicePackMinor;
  unsigned __int16 wSuiteMask;
  char wProductType;
  char wReserved;
};

/*  833 */
struct _DCB
{
  unsigned int DCBlength;
  unsigned int BaudRate;
  int _bf8;
  unsigned __int16 wReserved;
  unsigned __int16 XonLim;
  unsigned __int16 XoffLim;
  char ByteSize;
  char Parity;
  char StopBits;
  char XonChar;
  char XoffChar;
  char ErrorChar;
  char EofChar;
  char EvtChar;
  unsigned __int16 wReserved1;
};

/*  834 */
struct _COMMCONFIG
{
  unsigned int dwSize;
  unsigned __int16 wVersion;
  unsigned __int16 wReserved;
  _DCB dcb;
  unsigned int dwProviderSubType;
  unsigned int dwProviderOffset;
  unsigned int dwProviderSize;
  unsigned __int16 wcProviderData[1];
};

/*  835 */
struct tagPALETTEENTRY
{
  char peRed;
  char peGreen;
  char peBlue;
  char peFlags;
};

/*  836 */
struct tagPANOSE
{
  char bFamilyType;
  char bSerifStyle;
  char bWeight;
  char bProportion;
  char bContrast;
  char bStrokeVariation;
  char bArmStyle;
  char bLetterform;
  char bMidline;
  char bXHeight;
};

/*  837 */
struct tagEXTLOGFONTW
{
  tagLOGFONTW elfLogFont;
  unsigned __int16 elfFullName[64];
  unsigned __int16 elfStyle[32];
  unsigned int elfVersion;
  unsigned int elfStyleSize;
  unsigned int elfMatch;
  unsigned int elfReserved;
  char elfVendorId[4];
  unsigned int elfCulture;
  tagPANOSE elfPanose;
};

/*  838 */
struct tagEMREXTCREATEFONTINDIRECTW
{
  tagEMR emr;
  unsigned int ihFont;
  tagEXTLOGFONTW elfw;
};

/*  839 */
struct _SID_IDENTIFIER_AUTHORITY
{
  char Value[6];
};

/*  840 */
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR
{
  unsigned int TimeDateStamp;
  unsigned __int16 OffsetModuleName;
  unsigned __int16 NumberOfModuleForwarderRefs;
};

/*  841 */
struct tagEMROFFSETCLIPRGN
{
  tagEMR emr;
  _POINTL ptlOffset;
};

/*  842 */
struct tagSCROLLINFO
{
  unsigned int cbSize;
  unsigned int fMask;
  int nMin;
  int nMax;
  unsigned int nPage;
  int nPos;
  int nTrackPos;
};

/*  843 */
struct tagREGISTERWORDW
{
  unsigned __int16 *lpReading;
  unsigned __int16 *lpWord;
};

/*  844 */
struct _LUID
{
  unsigned int LowPart;
  int HighPart;
};

/*  845 */
struct _LUID_AND_ATTRIBUTES
{
  _LUID Luid;
  unsigned int Attributes;
};

/*  846 */
struct tagRECT
{
  int left;
  int top;
  int right;
  int bottom;
};

/*  847 */
struct tagPOLYTEXTA
{
  int x;
  int y;
  unsigned int n;
  const char *lpstr;
  unsigned int uiFlags;
  tagRECT rcl;
  int *pdx;
};

/*  848 */
struct tagEMRSELECTOBJECT
{
  tagEMR emr;
  unsigned int ihObject;
};

/*  849 */
struct tagEMRPOLYDRAW
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cptl;
  _POINTL aptl[1];
  char abTypes[1];
};

/*  850 */
struct tagCOPYDATASTRUCT
{
  unsigned int dwData;
  unsigned int cbData;
  void *lpData;
};

/*  851 */
struct tagREGISTERWORDA
{
  char *lpReading;
  char *lpWord;
};

/*  852 */
struct _IMAGE_BOUND_FORWARDER_REF
{
  unsigned int TimeDateStamp;
  unsigned __int16 OffsetModuleName;
  unsigned __int16 Reserved;
};

/*  853 */
struct tagPOINT
{
  int x;
  int y;
};

/*  854 */
struct tagMINMAXINFO
{
  tagPOINT ptReserved;
  tagPOINT ptMaxSize;
  tagPOINT ptMaxPosition;
  tagPOINT ptMinTrackSize;
  tagPOINT ptMaxTrackSize;
};

/*  855 */
struct _SERVICE_TABLE_ENTRYW
{
  unsigned __int16 *lpServiceName;
  void (__stdcall *lpServiceProc)(unsigned int, unsigned __int16 **);
};

/*  856 */
struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION
{
  unsigned int EndOfJobTimeAction;
};

/*  857 */
struct tagDEBUGHOOKINFO
{
  unsigned int idThread;
  unsigned int idThreadInstaller;
  int lParam;
  unsigned int wParam;
  int code;
};

/*  858 */
struct tagWINDOWINFO
{
  unsigned int cbSize;
  tagRECT rcWindow;
  tagRECT rcClient;
  unsigned int dwStyle;
  unsigned int dwExStyle;
  unsigned int dwWindowStatus;
  unsigned int cxWindowBorders;
  unsigned int cyWindowBorders;
  unsigned __int16 atomWindowType;
  unsigned __int16 wCreatorVersion;
};

/*  859 */
struct tagRGBTRIPLE
{
  char rgbtBlue;
  char rgbtGreen;
  char rgbtRed;
};

/*  860 */
struct tagEMRSELECTCLIPPATH
{
  tagEMR emr;
  unsigned int iMode;
};

/*  861 */
struct _COMSTAT
{
  int _bf0;
  unsigned int cbInQue;
  unsigned int cbOutQue;
};

/*  862 */
#pragma pack(push, 1)
struct DLGITEMTEMPLATE
{
  unsigned int style;
  unsigned int dwExtendedStyle;
  __int16 x;
  __int16 y;
  __int16 cx;
  __int16 cy;
  unsigned __int16 id;
};
#pragma pack(pop)

/*  863 */
struct _TOKEN_SOURCE
{
  char SourceName[8];
  _LUID SourceIdentifier;
};

/*  864 */
struct _TOKEN_CONTROL
{
  _LUID TokenId;
  _LUID AuthenticationId;
  _LUID ModifiedId;
  _TOKEN_SOURCE TokenSource;
};

/*  865 */
struct _DISPLAY_DEVICEW
{
  unsigned int cb;
  unsigned __int16 DeviceName[32];
  unsigned __int16 DeviceString[128];
  unsigned int StateFlags;
  unsigned __int16 DeviceID[128];
  unsigned __int16 DeviceKey[128];
};

/*  866 */
struct tagABORTPATH
{
  tagEMR emr;
};

/*  867 */
struct _COORD
{
  __int16 X;
  __int16 Y;
};

/*  868 */
struct _SMALL_RECT
{
  __int16 Left;
  __int16 Top;
  __int16 Right;
  __int16 Bottom;
};

/*  869 */
struct _CONSOLE_SCREEN_BUFFER_INFO
{
  _COORD dwSize;
  _COORD dwCursorPosition;
  unsigned __int16 wAttributes;
  _SMALL_RECT srWindow;
  _COORD dwMaximumWindowSize;
};

/*  870 */
struct tagCOLORCORRECTPALETTE
{
  tagEMR emr;
  unsigned int ihPalette;
  unsigned int nFirstEntry;
  unsigned int nPalEntries;
  unsigned int nReserved;
};

/*  871 */
struct HMENU__
{
  int unused;
};

/*  872 */
struct tagCREATESTRUCTA
{
  void *lpCreateParams;
  HINSTANCE__ *hInstance;
  HMENU__ *hMenu;
  HWND__ *hwndParent;
  int cy;
  int cx;
  int y;
  int x;
  int style;
  const char *lpszName;
  const char *lpszClass;
  unsigned int dwExStyle;
};

/*  873 */
struct tagMINIMIZEDMETRICS
{
  unsigned int cbSize;
  int iWidth;
  int iHorzGap;
  int iVertGap;
  int iArrange;
};

/*  874 */
struct tagCIEXYZ
{
  int ciexyzX;
  int ciexyzY;
  int ciexyzZ;
};

/*  875 */
struct tagICEXYZTRIPLE
{
  tagCIEXYZ ciexyzRed;
  tagCIEXYZ ciexyzGreen;
  tagCIEXYZ ciexyzBlue;
};

/*  876 */
struct tagLOGCOLORSPACEW
{
  unsigned int lcsSignature;
  unsigned int lcsVersion;
  unsigned int lcsSize;
  int lcsCSType;
  int lcsIntent;
  tagICEXYZTRIPLE lcsEndpoints;
  unsigned int lcsGammaRed;
  unsigned int lcsGammaGreen;
  unsigned int lcsGammaBlue;
  unsigned __int16 lcsFilename[260];
};

/*  877 */
struct tagEMRCREATECOLORSPACEW
{
  tagEMR emr;
  unsigned int ihCS;
  tagLOGCOLORSPACEW lcs;
  unsigned int dwFlags;
  unsigned int cbData;
  char Data[1];
};

/*  878 */
struct tagEMRFILLRGN
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cbRgnData;
  unsigned int ihBrush;
  char RgnData[1];
};

/*  879 */
struct tagMULTIKEYHELPW
{
  unsigned int mkSize;
  unsigned __int16 mkKeylist;
  unsigned __int16 szKeyphrase[1];
};

/*  880 */
struct tagHELPWININFOA
{
  int wStructSize;
  int x;
  int y;
  int dx;
  int dy;
  int wMax;
  char rgchMember[2];
};

/*  881 */
struct tagSIZE
{
  int cx;
  int cy;
};

/*  882 */
struct tagEMRFRAMERGN
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cbRgnData;
  unsigned int ihBrush;
  tagSIZE szlStroke;
  char RgnData[1];
};

/*  883 */
struct tagMEASUREITEMSTRUCT
{
  unsigned int CtlType;
  unsigned int CtlID;
  unsigned int itemID;
  unsigned int itemWidth;
  unsigned int itemHeight;
  unsigned int itemData;
};

/*  884 */
struct _CREATE_PROCESS_DEBUG_INFO
{
  void *hFile;
  void *hProcess;
  void *hThread;
  void *lpBaseOfImage;
  unsigned int dwDebugInfoFileOffset;
  unsigned int nDebugInfoSize;
  void *lpThreadLocalBase;
  unsigned int (__stdcall *lpStartAddress)(void *);
  void *lpImageName;
  unsigned __int16 fUnicode;
};

/*  885 */
struct _ACE_HEADER
{
  char AceType;
  char AceFlags;
  unsigned __int16 AceSize;
};

/*  886 */
struct HGLRC__
{
  int unused;
};

/*  887 */
struct tagEMREXCLUDECLIPRECT
{
  tagEMR emr;
  _RECTL rclClip;
};

/*  888 */
struct tagEMRPOLYPOLYLINE
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int nPolys;
  unsigned int cptl;
  unsigned int aPolyCounts[1];
  _POINTL aptl[1];
};

/*  889 */
struct tagUSEROBJECTFLAGS
{
  int fInherit;
  int fReserved;
  unsigned int dwFlags;
};

/*  890 */
struct fd_set
{
  unsigned int fd_count;
  unsigned int fd_array[64];
};

/*  891 */
struct _NON_PAGED_DEBUG_INFO
{
  unsigned __int16 Signature;
  unsigned __int16 Flags;
  unsigned int Size;
  unsigned __int16 Machine;
  unsigned __int16 Characteristics;
  unsigned int TimeDateStamp;
  unsigned int CheckSum;
  unsigned int SizeOfImage;
  unsigned __int64 ImageBase;
};

/*  892 */
struct HRGN__
{
  int unused;
};

/*  893 */
struct _JOBOBJECT_JOBSET_INFORMATION
{
  unsigned int MemberLevel;
};

/*  894 */
struct CM_Power_Data_s
{
  unsigned int PD_Size;
  _DEVICE_POWER_STATE PD_MostRecentPowerState;
  unsigned int PD_Capabilities;
  unsigned int PD_D1Latency;
  unsigned int PD_D2Latency;
  unsigned int PD_D3Latency;
  _DEVICE_POWER_STATE PD_PowerStateMapping[7];
  _SYSTEM_POWER_STATE PD_DeepestSystemWake;
};

/*  895 */
struct BITMAPV5HEADER
{
  unsigned int bV5Size;
  int bV5Width;
  int bV5Height;
  unsigned __int16 bV5Planes;
  unsigned __int16 bV5BitCount;
  unsigned int bV5Compression;
  unsigned int bV5SizeImage;
  int bV5XPelsPerMeter;
  int bV5YPelsPerMeter;
  unsigned int bV5ClrUsed;
  unsigned int bV5ClrImportant;
  unsigned int bV5RedMask;
  unsigned int bV5GreenMask;
  unsigned int bV5BlueMask;
  unsigned int bV5AlphaMask;
  unsigned int bV5CSType;
  tagICEXYZTRIPLE bV5Endpoints;
  unsigned int bV5GammaRed;
  unsigned int bV5GammaGreen;
  unsigned int bV5GammaBlue;
  unsigned int bV5Intent;
  unsigned int bV5ProfileData;
  unsigned int bV5ProfileSize;
  unsigned int bV5Reserved;
};

/*  896 */
struct tagANIMATIONINFO
{
  unsigned int cbSize;
  int iMinAnimate;
};

/*  897 */
struct _VIDEOPARAMETERS
{
  _GUID Guid;
  unsigned int dwOffset;
  unsigned int dwCommand;
  unsigned int dwFlags;
  unsigned int dwMode;
  unsigned int dwTVStandard;
  unsigned int dwAvailableModes;
  unsigned int dwAvailableTVStandard;
  unsigned int dwFlickerFilter;
  unsigned int dwOverScanX;
  unsigned int dwOverScanY;
  unsigned int dwMaxUnscaledX;
  unsigned int dwMaxUnscaledY;
  unsigned int dwPositionX;
  unsigned int dwPositionY;
  unsigned int dwBrightness;
  unsigned int dwContrast;
  unsigned int dwCPType;
  unsigned int dwCPCommand;
  unsigned int dwCPStandard;
  unsigned int dwCPKey;
  unsigned int bCP_APSTriggerBits;
  char bOEMCopyProtection[256];
};

/*  898 */
struct tagBITMAPCOREHEADER
{
  unsigned int bcSize;
  unsigned __int16 bcWidth;
  unsigned __int16 bcHeight;
  unsigned __int16 bcPlanes;
  unsigned __int16 bcBitCount;
};

/*  899 */
struct tagBITMAPCOREINFO
{
  tagBITMAPCOREHEADER bmciHeader;
  tagRGBTRIPLE bmciColors[1];
};

/*  900 */
struct tagPIXELFORMATDESCRIPTOR
{
  unsigned __int16 nSize;
  unsigned __int16 nVersion;
  unsigned int dwFlags;
  char iPixelType;
  char cColorBits;
  char cRedBits;
  char cRedShift;
  char cGreenBits;
  char cGreenShift;
  char cBlueBits;
  char cBlueShift;
  char cAlphaBits;
  char cAlphaShift;
  char cAccumBits;
  char cAccumRedBits;
  char cAccumGreenBits;
  char cAccumBlueBits;
  char cAccumAlphaBits;
  char cDepthBits;
  char cStencilBits;
  char cAuxBuffers;
  char iLayerType;
  char bReserved;
  unsigned int dwLayerMask;
  unsigned int dwVisibleMask;
  unsigned int dwDamageMask;
};

/*  901 */
struct tagEMRFILLPATH
{
  tagEMR emr;
  _RECTL rclBounds;
};

/*  902 */
struct _WSAPROTOCOLCHAIN
{
  int ChainLen;
  unsigned int ChainEntries[7];
};

/*  903 */
struct _WSAPROTOCOL_INFOA
{
  unsigned int dwServiceFlags1;
  unsigned int dwServiceFlags2;
  unsigned int dwServiceFlags3;
  unsigned int dwServiceFlags4;
  unsigned int dwProviderFlags;
  _GUID ProviderId;
  unsigned int dwCatalogEntryId;
  _WSAPROTOCOLCHAIN ProtocolChain;
  int iVersion;
  int iAddressFamily;
  int iMaxSockAddr;
  int iMinSockAddr;
  int iSocketType;
  int iProtocol;
  int iProtocolMaxOffset;
  int iNetworkByteOrder;
  int iSecurityScheme;
  unsigned int dwMessageSize;
  unsigned int dwProviderReserved;
  char szProtocol[256];
};

/*  904 */
struct _FLOAT128
{
  __int64 LowPart;
  __int64 HighPart;
};

/*  905 */
struct _LDT_ENTRY::__unnamed::__unnamed
{
  char BaseMid;
  char Flags1;
  char Flags2;
  char BaseHi;
};

/*  906 */
union _LDT_ENTRY::__unnamed
{
  _LDT_ENTRY::__unnamed::__unnamed Bytes;
  _LDT_ENTRY::__unnamed::__unnamed Bits;
};

/*  907 */
struct _LDT_ENTRY
{
  unsigned __int16 LimitLow;
  unsigned __int16 BaseLow;
  _LDT_ENTRY::__unnamed HighWord;
};

/*  908 */
struct _JOBOBJECT_BASIC_LIMIT_INFORMATION
{
  _LARGE_INTEGER PerProcessUserTimeLimit;
  _LARGE_INTEGER PerJobUserTimeLimit;
  unsigned int LimitFlags;
  unsigned int MinimumWorkingSetSize;
  unsigned int MaximumWorkingSetSize;
  unsigned int ActiveProcessLimit;
  unsigned int Affinity;
  unsigned int PriorityClass;
  unsigned int SchedulingClass;
};

/*  909 */
#pragma pack(push, 1)
struct tagMETAHEADER
{
  unsigned __int16 mtType;
  unsigned __int16 mtHeaderSize;
  unsigned __int16 mtVersion;
  unsigned int mtSize;
  unsigned __int16 mtNoObjects;
  unsigned int mtMaxRecord;
  unsigned __int16 mtNoParameters;
};
#pragma pack(pop)

/*  910 */
struct tagWNDCLASSEXA
{
  unsigned int cbSize;
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const char *lpszMenuName;
  const char *lpszClassName;
  HICON__ *hIconSm;
};

/*  911 */
struct HKL__
{
  int unused;
};

/*  912 */
struct tagLOGFONTA
{
  int lfHeight;
  int lfWidth;
  int lfEscapement;
  int lfOrientation;
  int lfWeight;
  char lfItalic;
  char lfUnderline;
  char lfStrikeOut;
  char lfCharSet;
  char lfOutPrecision;
  char lfClipPrecision;
  char lfQuality;
  char lfPitchAndFamily;
  char lfFaceName[32];
};

/*  913 */
struct tagCWPRETSTRUCT
{
  int lResult;
  int lParam;
  unsigned int wParam;
  unsigned int message;
  HWND__ *hwnd;
};

/*  914 */
struct HIMCC__
{
  int unused;
};

/*  915 */
struct _MEMORY_BASIC_INFORMATION32
{
  unsigned int BaseAddress;
  unsigned int AllocationBase;
  unsigned int AllocationProtect;
  unsigned int RegionSize;
  unsigned int State;
  unsigned int Protect;
  unsigned int Type;
};

/*  916 */
struct tagENHMETARECORD
{
  unsigned int iType;
  unsigned int nSize;
  unsigned int dParm[1];
};

/*  917 */
struct tagTEXTMETRICA
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  char tmFirstChar;
  char tmLastChar;
  char tmDefaultChar;
  char tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
};

/*  918 */
struct HWINSTA__
{
  int unused;
};

/*  919 */
struct _OFSTRUCT
{
  char cBytes;
  char fFixedDisk;
  unsigned __int16 nErrCode;
  unsigned __int16 Reserved1;
  unsigned __int16 Reserved2;
  char szPathName[128];
};

/*  920 */
struct _FIXED
{
  unsigned __int16 fract;
  __int16 value;
};

/*  921 */
struct _MAT2
{
  _FIXED eM11;
  _FIXED eM12;
  _FIXED eM21;
  _FIXED eM22;
};

/*  922 */
struct tagEMRNAMEDESCAPE
{
  tagEMR emr;
  int iEscape;
  int cbDriver;
  int cbEscData;
  char EscData[1];
};

/*  923 */
struct tagHELPINFO
{
  unsigned int cbSize;
  int iContextType;
  int iCtrlId;
  void *hItemHandle;
  unsigned int dwContextId;
  tagPOINT MousePos;
};

/*  924 */
struct tagMSGBOXPARAMSA
{
  unsigned int cbSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const char *lpszText;
  const char *lpszCaption;
  unsigned int dwStyle;
  const char *lpszIcon;
  unsigned int dwContextHelpId;
  void (__stdcall *lpfnMsgBoxCallback)(tagHELPINFO *);
  unsigned int dwLanguageId;
};

/*  925 */
struct tagCLIENTCREATESTRUCT
{
  void *hWindowMenu;
  unsigned int idFirstChild;
};

/*  926 */
struct _OUTPUT_DEBUG_STRING_INFO
{
  char *lpDebugStringData;
  unsigned __int16 fUnicode;
  unsigned __int16 nDebugStringLength;
};

/*  927 */
struct tagEVENTMSG
{
  unsigned int message;
  unsigned int paramL;
  unsigned int paramH;
  unsigned int time;
  HWND__ *hwnd;
};

/*  928 */
struct _UNIVERSAL_NAME_INFOA
{
  char *lpUniversalName;
};

/*  929 */
struct _IMAGE_DATA_DIRECTORY
{
  unsigned int VirtualAddress;
  unsigned int Size;
};

/*  930 */
struct _IMAGE_OPTIONAL_HEADER64
{
  unsigned __int16 Magic;
  char MajorLinkerVersion;
  char MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned __int64 ImageBase;
  unsigned int SectionAlignment;
  unsigned int FileAlignment;
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
  unsigned __int16 MajorImageVersion;
  unsigned __int16 MinorImageVersion;
  unsigned __int16 MajorSubsystemVersion;
  unsigned __int16 MinorSubsystemVersion;
  unsigned int Win32VersionValue;
  unsigned int SizeOfImage;
  unsigned int SizeOfHeaders;
  unsigned int CheckSum;
  unsigned __int16 Subsystem;
  unsigned __int16 DllCharacteristics;
  unsigned __int64 SizeOfStackReserve;
  unsigned __int64 SizeOfStackCommit;
  unsigned __int64 SizeOfHeapReserve;
  unsigned __int64 SizeOfHeapCommit;
  unsigned int LoaderFlags;
  unsigned int NumberOfRvaAndSizes;
  _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/*  931 */
struct tagEMRSETVIEWPORTEXTEX
{
  tagEMR emr;
  tagSIZE szlExtent;
};

/*  932 */
struct tagCOMBOBOXINFO
{
  unsigned int cbSize;
  tagRECT rcItem;
  tagRECT rcButton;
  unsigned int stateButton;
  HWND__ *hwndCombo;
  HWND__ *hwndItem;
  HWND__ *hwndList;
};

/*  933 */
struct _IMAGE_AUX_SYMBOL::__unnamed::__unnamed::__unnamed
{
  unsigned __int16 Linenumber;
  unsigned __int16 Size;
};

/*  934 */
union _IMAGE_AUX_SYMBOL::__unnamed::__unnamed
{
  _IMAGE_AUX_SYMBOL::__unnamed::__unnamed::__unnamed LnSz;
  unsigned int TotalSize;
};

/*  935 */
#pragma pack(push, 1)
struct _IMAGE_AUX_SYMBOL::__unnamed
{
  unsigned int TagIndex;
  _IMAGE_AUX_SYMBOL::__unnamed::__unnamed Misc;
  _IMAGE_AUX_SYMBOL::__unnamed::__unnamed FcnAry;
  __declspec(align(8)) unsigned __int16 TvIndex;
};
#pragma pack(pop)

/*  936 */
union _IMAGE_AUX_SYMBOL
{
  _IMAGE_AUX_SYMBOL::__unnamed Sym;
  _IMAGE_AUX_SYMBOL::__unnamed File;
  _IMAGE_AUX_SYMBOL::__unnamed Section;
};

/*  937 */
struct _BY_HANDLE_FILE_INFORMATION
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int dwVolumeSerialNumber;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
  unsigned int nNumberOfLinks;
  unsigned int nFileIndexHigh;
  unsigned int nFileIndexLow;
};

/*  938 */
struct _STARTUPINFOA
{
  unsigned int cb;
  char *lpReserved;
  char *lpDesktop;
  char *lpTitle;
  unsigned int dwX;
  unsigned int dwY;
  unsigned int dwXSize;
  unsigned int dwYSize;
  unsigned int dwXCountChars;
  unsigned int dwYCountChars;
  unsigned int dwFillAttribute;
  unsigned int dwFlags;
  unsigned __int16 wShowWindow;
  unsigned __int16 cbReserved2;
  char *lpReserved2;
  void *hStdInput;
  void *hStdOutput;
  void *hStdError;
};

/*  939 */
struct _EVENTLOGRECORD
{
  unsigned int Length;
  unsigned int Reserved;
  unsigned int RecordNumber;
  unsigned int TimeGenerated;
  unsigned int TimeWritten;
  unsigned int EventID;
  unsigned __int16 EventType;
  unsigned __int16 NumStrings;
  unsigned __int16 EventCategory;
  unsigned __int16 ReservedFlags;
  unsigned int ClosingRecordNumber;
  unsigned int StringOffset;
  unsigned int UserSidLength;
  unsigned int UserSidOffset;
  unsigned int DataLength;
  unsigned int DataOffset;
};

/*  940 */
struct tagSTYLESTRUCT
{
  unsigned int styleOld;
  unsigned int styleNew;
};

/*  941 */
struct _cpinfoexA
{
  unsigned int MaxCharSize;
  char DefaultChar[2];
  char LeadByte[12];
  unsigned __int16 UnicodeDefaultChar;
  unsigned int CodePage;
  char CodePageName[260];
};

/*  942 */
struct HMONITOR__
{
  int unused;
};

/*  943 */
struct tagEMRMODIFYWORLDTRANSFORM
{
  tagEMR emr;
  tagXFORM xform;
  unsigned int iMode;
};

/*  944 */
struct tagEXTLOGFONTA
{
  tagLOGFONTA elfLogFont;
  char elfFullName[64];
  char elfStyle[32];
  unsigned int elfVersion;
  unsigned int elfStyleSize;
  unsigned int elfMatch;
  unsigned int elfReserved;
  char elfVendorId[4];
  unsigned int elfCulture;
  tagPANOSE elfPanose;
};

/*  945 */
struct HBITMAP__
{
  int unused;
};

/*  946 */
struct tagMENUITEMINFOA
{
  unsigned int cbSize;
  unsigned int fMask;
  unsigned int fType;
  unsigned int fState;
  unsigned int wID;
  HMENU__ *hSubMenu;
  HBITMAP__ *hbmpChecked;
  HBITMAP__ *hbmpUnchecked;
  unsigned int dwItemData;
  char *dwTypeData;
  unsigned int cch;
  HBITMAP__ *hbmpItem;
};

/*  947 */
struct _currencyfmtW
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  unsigned __int16 *lpDecimalSep;
  unsigned __int16 *lpThousandSep;
  unsigned int NegativeOrder;
  unsigned int PositiveOrder;
  unsigned __int16 *lpCurrencySymbol;
};

/*  948 */
struct _ACL
{
  char AclRevision;
  char Sbz1;
  unsigned __int16 AclSize;
  unsigned __int16 AceCount;
  unsigned __int16 Sbz2;
};

/*  949 */
struct _TOKEN_DEFAULT_DACL
{
  _ACL *DefaultDacl;
};

/*  950 */
struct $5ACE225D4D14CE0550A9F5A217E306C5
{
  __int16 dmOrientation;
  __int16 dmPaperSize;
  __int16 dmPaperLength;
  __int16 dmPaperWidth;
};

/*  951 */
union $73348F7BB622E19FFE5D22EF7E7B5305
{
  $5ACE225D4D14CE0550A9F5A217E306C5 _s0;
  _POINTL dmPosition;
};

/*  952 */
struct $84BDF2D0EF3E6D92B6C33770B276E406
{
  __int16 dmScale;
  __int16 dmCopies;
};

/*  953 */
union $804BC8651243059E164863ECBFFD290D
{
  $84BDF2D0EF3E6D92B6C33770B276E406 _s0;
  unsigned int dmDisplayOrientation;
};

/*  954 */
struct $319163E49F0A6F35652FDFBFBA0FF503
{
  __int16 dmDefaultSource;
  __int16 dmPrintQuality;
};

/*  955 */
union $F807327FFABDD86B2C8B423DE40F9415
{
  $319163E49F0A6F35652FDFBFBA0FF503 _s0;
  unsigned int dmDisplayFixedOutput;
};

/*  956 */
union $309666D137CBB19809FA597AD348B415
{
  unsigned int dmDisplayFlags;
  unsigned int dmNup;
};

/*  957 */
struct _devicemodeA
{
  char dmDeviceName[32];
  unsigned __int16 dmSpecVersion;
  unsigned __int16 dmDriverVersion;
  unsigned __int16 dmSize;
  unsigned __int16 dmDriverExtra;
  unsigned int dmFields;
  $73348F7BB622E19FFE5D22EF7E7B5305 ___u6;
  $804BC8651243059E164863ECBFFD290D ___u7;
  $F807327FFABDD86B2C8B423DE40F9415 ___u8;
  __int16 dmColor;
  __int16 dmDuplex;
  __int16 dmYResolution;
  __int16 dmTTOption;
  __int16 dmCollate;
  char dmFormName[32];
  unsigned __int16 dmLogPixels;
  unsigned int dmBitsPerPel;
  unsigned int dmPelsWidth;
  unsigned int dmPelsHeight;
  $309666D137CBB19809FA597AD348B415 ___u19;
  unsigned int dmDisplayFrequency;
  unsigned int dmICMMethod;
  unsigned int dmICMIntent;
  unsigned int dmMediaType;
  unsigned int dmDitherType;
  unsigned int dmReserved1;
  unsigned int dmReserved2;
  unsigned int dmPanningWidth;
  unsigned int dmPanningHeight;
};

/*  958 */
struct tagEMRLINETO
{
  tagEMR emr;
  _POINTL ptl;
};

/*  959 */
struct QOS_OBJECT_HDR
{
  unsigned int ObjectType;
  unsigned int ObjectLength;
};

/*  960 */
union $18D88968084CBEE834030F63CA1057E2
{
  unsigned int Name;
  unsigned __int16 Id;
};

/*  961 */
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY
{
  $18D88968084CBEE834030F63CA1057E2 ___u0;
  unsigned int OffsetToData;
};

/*  962 */
struct _GRADIENT_TRIANGLE
{
  unsigned int Vertex1;
  unsigned int Vertex2;
  unsigned int Vertex3;
};

/*  963 */
struct tagEMRROUNDRECT
{
  tagEMR emr;
  _RECTL rclBox;
  tagSIZE szlCorner;
};

/*  964 */
struct _ADMINISTRATOR_POWER_POLICY
{
  _SYSTEM_POWER_STATE MinSleep;
  _SYSTEM_POWER_STATE MaxSleep;
  unsigned int MinVideoTimeout;
  unsigned int MaxVideoTimeout;
  unsigned int MinSpindownTimeout;
  unsigned int MaxSpindownTimeout;
};

/*  965 */
struct _IMAGE_FILE_HEADER
{
  unsigned __int16 Machine;
  unsigned __int16 NumberOfSections;
  unsigned int TimeDateStamp;
  unsigned int PointerToSymbolTable;
  unsigned int NumberOfSymbols;
  unsigned __int16 SizeOfOptionalHeader;
  unsigned __int16 Characteristics;
};

/*  966 */
struct _IMAGE_OPTIONAL_HEADER
{
  unsigned __int16 Magic;
  char MajorLinkerVersion;
  char MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned int BaseOfData;
  unsigned int ImageBase;
  unsigned int SectionAlignment;
  unsigned int FileAlignment;
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
  unsigned __int16 MajorImageVersion;
  unsigned __int16 MinorImageVersion;
  unsigned __int16 MajorSubsystemVersion;
  unsigned __int16 MinorSubsystemVersion;
  unsigned int Win32VersionValue;
  unsigned int SizeOfImage;
  unsigned int SizeOfHeaders;
  unsigned int CheckSum;
  unsigned __int16 Subsystem;
  unsigned __int16 DllCharacteristics;
  unsigned int SizeOfStackReserve;
  unsigned int SizeOfStackCommit;
  unsigned int SizeOfHeapReserve;
  unsigned int SizeOfHeapCommit;
  unsigned int LoaderFlags;
  unsigned int NumberOfRvaAndSizes;
  _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/*  967 */
struct _IMAGE_NT_HEADERS
{
  unsigned int Signature;
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_OPTIONAL_HEADER OptionalHeader;
};

/*  968 */
struct _ASSEMBLY_FILE_DETAILED_INFORMATION
{
  unsigned int ulFlags;
  unsigned int ulFilenameLength;
  unsigned int ulPathLength;
  const unsigned __int16 *lpFileName;
  const unsigned __int16 *lpFilePath;
};

/*  969 */
struct _UNLOAD_DLL_DEBUG_INFO
{
  void *lpBaseOfDll;
};

/*  970 */
struct tagLOGPEN
{
  unsigned int lopnStyle;
  tagPOINT lopnWidth;
  unsigned int lopnColor;
};

/*  971 */
struct _REMOTE_NAME_INFOW
{
  unsigned __int16 *lpUniversalName;
  unsigned __int16 *lpConnectionName;
  unsigned __int16 *lpRemainingPath;
};

/*  972 */
struct _RIP_INFO
{
  unsigned int dwError;
  unsigned int dwType;
};

/*  973 */
struct tagLOGBRUSH32
{
  unsigned int lbStyle;
  unsigned int lbColor;
  unsigned int lbHatch;
};

/*  974 */
struct tagLOGBRUSH
{
  unsigned int lbStyle;
  unsigned int lbColor;
  unsigned int lbHatch;
};

/*  975 */
struct tagCOLORMATCHTOTARGET
{
  tagEMR emr;
  unsigned int dwAction;
  unsigned int dwFlags;
  unsigned int cbName;
  unsigned int cbData;
  char Data[1];
};

/*  976 */
struct _ABC
{
  int abcA;
  unsigned int abcB;
  int abcC;
};

/*  977 */
struct _NETINFOSTRUCT
{
  unsigned int cbStructure;
  unsigned int dwProviderVersion;
  unsigned int dwStatus;
  unsigned int dwCharacteristics;
  unsigned int dwHandle;
  unsigned __int16 wNetType;
  unsigned int dwPrinters;
  unsigned int dwDrives;
};

/*  978 */
struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/*  979 */
struct HKEY__
{
  int unused;
};

/*  980 */
struct tagEMRSELECTPALETTE
{
  tagEMR emr;
  unsigned int ihPal;
};

/*  981 */
struct tagDRAWTEXTPARAMS
{
  unsigned int cbSize;
  int iTabLength;
  int iLeftMargin;
  int iRightMargin;
  unsigned int uiLengthDrawn;
};

/*  982 */
struct _WSAQuerySetW
{
  unsigned int dwSize;
  unsigned __int16 *lpszServiceInstanceName;
  _GUID *lpServiceClassId;
  _WSAVersion *lpVersion;
  unsigned __int16 *lpszComment;
  unsigned int dwNameSpace;
  _GUID *lpNSProviderId;
  unsigned __int16 *lpszContext;
  unsigned int dwNumberOfProtocols;
  _AFPROTOCOLS *lpafpProtocols;
  unsigned __int16 *lpszQueryString;
  unsigned int dwNumberOfCsAddrs;
  _CSADDR_INFO *lpcsaBuffer;
  unsigned int dwOutputFlags;
  _BLOB *lpBlob;
};

/*  983 */
struct tagPELARRAY
{
  int paXCount;
  int paYCount;
  int paXExt;
  int paYExt;
  char paRGBs;
};

/*  984 */
struct tagMDICREATESTRUCTA
{
  const char *szClass;
  const char *szTitle;
  void *hOwner;
  int x;
  int y;
  int cx;
  int cy;
  unsigned int style;
  int lParam;
};

/*  985 */
struct tagSTYLEBUFW
{
  unsigned int dwStyle;
  unsigned __int16 szDescription[32];
};

/*  986 */
struct _WSANSClassInfoA
{
  char *lpszName;
  unsigned int dwNameSpace;
  unsigned int dwValueType;
  unsigned int dwValueSize;
  void *lpValue;
};

/*  987 */
struct _POINTFLOAT
{
  float x;
  float y;
};

/*  988 */
struct _GLYPHMETRICSFLOAT
{
  float gmfBlackBoxX;
  float gmfBlackBoxY;
  _POINTFLOAT gmfptGlyphOrigin;
  float gmfCellIncX;
  float gmfCellIncY;
};

/*  989 */
struct _SYSTEM_ALARM_CALLBACK_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/*  990 */
struct _IMAGE_FUNCTION_ENTRY
{
  unsigned int StartingAddress;
  unsigned int EndingAddress;
  unsigned int EndOfPrologue;
};

/*  991 */
struct tagFONTSIGNATURE
{
  unsigned int fsUsb[4];
  unsigned int fsCsb[2];
};

/*  992 */
struct POWER_ACTION_POLICY
{
  POWER_ACTION Action;
  unsigned int Flags;
  unsigned int EventCode;
};

/*  993 */
struct SYSTEM_POWER_LEVEL
{
  char Enable;
  char Spare[3];
  unsigned int BatteryLevel;
  POWER_ACTION_POLICY PowerPolicy;
  _SYSTEM_POWER_STATE MinSystemState;
};

/*  994 */
struct _IMAGE_OS2_HEADER
{
  unsigned __int16 ne_magic;
  char ne_ver;
  char ne_rev;
  unsigned __int16 ne_enttab;
  unsigned __int16 ne_cbenttab;
  int ne_crc;
  unsigned __int16 ne_flags;
  unsigned __int16 ne_autodata;
  unsigned __int16 ne_heap;
  unsigned __int16 ne_stack;
  int ne_csip;
  int ne_sssp;
  unsigned __int16 ne_cseg;
  unsigned __int16 ne_cmod;
  unsigned __int16 ne_cbnrestab;
  unsigned __int16 ne_segtab;
  unsigned __int16 ne_rsrctab;
  unsigned __int16 ne_restab;
  unsigned __int16 ne_modtab;
  unsigned __int16 ne_imptab;
  int ne_nrestab;
  unsigned __int16 ne_cmovent;
  unsigned __int16 ne_align;
  unsigned __int16 ne_cres;
  char ne_exetyp;
  char ne_flagsothers;
  unsigned __int16 ne_pretthunks;
  unsigned __int16 ne_psegrefbytes;
  unsigned __int16 ne_swaparea;
  unsigned __int16 ne_expver;
};

/*  995 */
struct _MESSAGE_RESOURCE_BLOCK
{
  unsigned int LowId;
  unsigned int HighId;
  unsigned int OffsetToEntries;
};

/*  996 */
struct _WSANAMESPACE_INFOA
{
  _GUID NSProviderId;
  unsigned int dwNameSpace;
  int fActive;
  unsigned int dwVersion;
  char *lpszIdentifier;
};

/*  997 */
struct tagEMRSETDIBITSTODEVICE
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int xSrc;
  int ySrc;
  int cxSrc;
  int cySrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  unsigned int iUsageSrc;
  unsigned int iStartScan;
  unsigned int cScans;
};

/*  998 */
struct $409DFF2A380C4FFE2B587D0390AC124E
{
  unsigned __int16 wProcessorArchitecture;
  unsigned __int16 wReserved;
};

/*  999 */
union $7428AFE8AAE78077ED86D4BCB3D13151
{
  unsigned int dwOemId;
  $409DFF2A380C4FFE2B587D0390AC124E _s1;
};

/* 1000 */
struct _SYSTEM_INFO
{
  $7428AFE8AAE78077ED86D4BCB3D13151 ___u0;
  unsigned int dwPageSize;
  void *lpMinimumApplicationAddress;
  void *lpMaximumApplicationAddress;
  unsigned int dwActiveProcessorMask;
  unsigned int dwNumberOfProcessors;
  unsigned int dwProcessorType;
  unsigned int dwAllocationGranularity;
  unsigned __int16 wProcessorLevel;
  unsigned __int16 wProcessorRevision;
};

/* 1001 */
struct _ACCESS_ALLOWED_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 1002 */
struct std::binary_function<unsigned long,unsigned long,bool>
{
  char dummy[1];
};

/* 1003 */
struct std::less<unsigned long>
{
  std::binary_function<unsigned long,unsigned long,bool> baseclass_0;
};

/* 1004 */
struct std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0>
{
  std::less<unsigned long> comp;
};

/* 1005 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node>
{
  char dummy[1];
};

/* 1006 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node> baseclass_0;
};

/* 1007 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >
{
  std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node> _Alnod;
};

/* 1008 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CServerRequest::RequestInfo> _Myval;
  char _Color;
  char _Isnil;
};

/* 1009 */
struct CServerRequest::RequestInfo
{
  CPacketDispatch *m_lpSrcDispatch;
  CPacketDispatch *m_lpDstDispatch;
  unsigned int m_dwDurationSec;
  void (__cdecl *m_lpTimeoutRequest)(CPacketDispatch *);
};

/* 1010 */
struct std::pair<unsigned long const ,CServerRequest::RequestInfo>
{
  const unsigned int first;
  CServerRequest::RequestInfo second;
};

/* 1011 */
struct std::_Allocator_base<std::pair<unsigned long const ,CServerRequest::RequestInfo> >
{
  char dummy[1];
};

/* 1012 */
struct std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >
{
  std::_Allocator_base<std::pair<unsigned long const ,CServerRequest::RequestInfo> > baseclass_0;
};

/* 1013 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *>
{
  char dummy[1];
};

/* 1014 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *> baseclass_0;
};

/* 1015 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *> _Alptr;
};

/* 1016 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> > _Alval;
};

/* 1017 */
struct std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >::rebind<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >
{
  char dummy[1];
};

/* 1018 */
struct std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::Inte
{
  char dummy[1];
};

/* 1019 */
struct std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >::rebind<unsigned int>
{
  char dummy[1];
};

/* 1020 */
struct std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >::rebind<char>
{
  char dummy[1];
};

/* 1021 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1022 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CServerRequest::RequestInfo>,int,std::pair<unsigned long const ,CServerRequest::RequestInfo> const *,std::pair<unsigned long const ,CServerRequest::RequestInfo> const &>
{
  char dummy[1];
};

/* 1023 */
struct std::_Bidit<std::pair<unsigned long const ,CServerRequest::RequestInfo>,int,std::pair<unsigned long const ,CServerRequest::RequestInfo> const *,std::pair<unsigned long const ,CServerRequest::RequestInfo> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CServerRequest::RequestInfo>,int,std::pair<unsigned long const ,CServerRequest::RequestInfo> const *,std::pair<unsigned long const ,CServerRequest::RequestInfo> const &> baseclass_0;
};

/* 1024 */
union $BA639397A46325D1F30669AE38E020A0
{
  std::_Bidit<std::pair<unsigned long const ,CServerRequest::RequestInfo>,int,std::pair<unsigned long const ,CServerRequest::RequestInfo> const *,std::pair<unsigned long const ,CServerRequest::RequestInfo> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *_Ptr;
};

/* 1025 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::const_iterator
{
  $BA639397A46325D1F30669AE38E020A0 ___u0;
};

/* 1026 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::const_iterator baseclass_0;
};

/* 1027 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::iterator first;
  bool second;
};

/* 1028 */
struct std::iterator<std::bidirectional_iterator_tag,CTimerProcMgr::InternalProcessData,int,CTimerProcMgr::InternalProcessData const *,CTimerProcMgr::InternalProcessData const &>
{
  char dummy[1];
};

/* 1029 */
struct std::_Bidit<CTimerProcMgr::InternalProcessData,int,CTimerProcMgr::InternalProcessData const *,CTimerProcMgr::InternalProcessData const &>
{
  std::iterator<std::bidirectional_iterator_tag,CTimerProcMgr::InternalProcessData,int,CTimerProcMgr::InternalProcessData const *,CTimerProcMgr::InternalProcessData const &> baseclass_0;
};

/* 1030 */
union $B5F74455C2C1A4A7AE71BF838FE53E72
{
  std::_Bidit<CTimerProcMgr::InternalProcessData,int,CTimerProcMgr::InternalProcessData const *,CTimerProcMgr::InternalProcessData const &> baseclass_0;
  std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *_Ptr;
};

/* 1031 */
struct std::list<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::const_iterator
{
  $B5F74455C2C1A4A7AE71BF838FE53E72 ___u0;
};

/* 1032 */
struct std::list<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::iterator
{
  std::list<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::const_iterator baseclass_0;
};

/* 1033 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData>,int,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> const *,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> const
{
  char dummy[1];
};

/* 1034 */
struct std::_Bidit<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData>,int,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> const *,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData>,int,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> const *,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> const baseclass_0;
};

/* 1035 */
union $11FC80C7BEADCBD64BE33953713CC9C4
{
  std::_Bidit<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData>,int,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> const *,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *_Ptr;
};

/* 1036 */
struct std::_Tree<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::const_iterator
{
  $11FC80C7BEADCBD64BE33953713CC9C4 ___u0;
};

/* 1037 */
struct std::_Tree<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::const_iterator baseclass_0;
};

/* 1038 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::iterator first;
  bool second;
};

/* 1039 */
struct std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >::rebind<std::pair<unsigned long const ,CServerRequest::RequestInfo> >
{
  char dummy[1];
};

/* 1040 */
struct std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestIn
{
  char dummy[1];
};

/* 1041 */
struct std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 1042 */
struct std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >::rebind<char>
{
  char dummy[1];
};

/* 1043 */
struct std::allocator<CTimerProcMgr::InternalProcessData>::rebind<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node>
{
  char dummy[1];
};

/* 1044 */
struct std::allocator<CTimerProcMgr::InternalProcessData>::rebind<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *>
{
  char dummy[1];
};

/* 1045 */
struct std::allocator<CTimerProcMgr::InternalProcessData>::rebind<CTimerProcMgr::InternalProcessData>
{
  char dummy[1];
};

/* 1046 */
struct std::map<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> > baseclass_0;
};

/* 1047 */
struct sockaddr_storage
{
  __int16 ss_family;
  char __ss_pad1[6];
  __int64 __ss_align;
  char __ss_pad2[112];
};

/* 1048 */
struct LIST_ENTRY32
{
  unsigned int Flink;
  unsigned int Blink;
};

/* 1049 */
union $E0927F6BE2F1645595F211B37EFD8766
{
  unsigned __int64 EndOfPrologue;
  unsigned __int64 UnwindInfoAddress;
};

/* 1050 */
struct _IMAGE_FUNCTION_ENTRY64
{
  unsigned __int64 StartingAddress;
  unsigned __int64 EndingAddress;
  $E0927F6BE2F1645595F211B37EFD8766 ___u2;
};

/* 1051 */
struct _EXIT_THREAD_DEBUG_INFO
{
  unsigned int dwExitCode;
};

/* 1052 */
struct _SERVICE_STATUS_PROCESS
{
  unsigned int dwServiceType;
  unsigned int dwCurrentState;
  unsigned int dwControlsAccepted;
  unsigned int dwWin32ExitCode;
  unsigned int dwServiceSpecificExitCode;
  unsigned int dwCheckPoint;
  unsigned int dwWaitHint;
  unsigned int dwProcessId;
  unsigned int dwServiceFlags;
};

/* 1053 */
struct _ENUM_SERVICE_STATUS_PROCESSA
{
  char *lpServiceName;
  char *lpDisplayName;
  _SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

/* 1054 */
struct tagACCEL
{
  char fVirt;
  unsigned __int16 key;
  unsigned __int16 cmd;
};

/* 1055 */
struct _QUOTA_LIMITS
{
  unsigned int PagedPoolLimit;
  unsigned int NonPagedPoolLimit;
  unsigned int MinimumWorkingSetSize;
  unsigned int MaximumWorkingSetSize;
  unsigned int PagefileLimit;
  _LARGE_INTEGER TimeLimit;
};

/* 1056 */
struct tagSERIALKEYSW
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned __int16 *lpszActivePort;
  unsigned __int16 *lpszPort;
  unsigned int iBaudRate;
  unsigned int iPortState;
  unsigned int iActive;
};

/* 1057 */
struct _NETCONNECTINFOSTRUCT
{
  unsigned int cbStructure;
  unsigned int dwFlags;
  unsigned int dwSpeed;
  unsigned int dwDelay;
  unsigned int dwOptDataSize;
};

/* 1058 */
struct _IMAGE_SYMBOL::__unnamed::__unnamed
{
  unsigned int Short;
  unsigned int Long;
};

/* 1059 */
union _IMAGE_SYMBOL::__unnamed
{
  char ShortName[8];
  _IMAGE_SYMBOL::__unnamed::__unnamed Name;
  unsigned int LongName[2];
};

/* 1060 */
#pragma pack(push, 1)
struct _IMAGE_SYMBOL
{
  _IMAGE_SYMBOL::__unnamed N;
  unsigned int Value;
  __int16 SectionNumber;
  unsigned __int16 Type;
  char StorageClass;
  char NumberOfAuxSymbols;
};
#pragma pack(pop)

/* 1061 */
struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION
{
  unsigned int ulFlags;
  unsigned int ulEncodedAssemblyIdentityLength;
  unsigned int ulManifestPathType;
  unsigned int ulManifestPathLength;
  _LARGE_INTEGER liManifestLastWriteTime;
  unsigned int ulPolicyPathType;
  unsigned int ulPolicyPathLength;
  _LARGE_INTEGER liPolicyLastWriteTime;
  unsigned int ulMetadataSatelliteRosterIndex;
  unsigned int ulManifestVersionMajor;
  unsigned int ulManifestVersionMinor;
  unsigned int ulPolicyVersionMajor;
  unsigned int ulPolicyVersionMinor;
  unsigned int ulAssemblyDirectoryNameLength;
  const unsigned __int16 *lpAssemblyEncodedAssemblyIdentity;
  const unsigned __int16 *lpAssemblyManifestPath;
  const unsigned __int16 *lpAssemblyPolicyPath;
  const unsigned __int16 *lpAssemblyDirectoryName;
  unsigned int ulFileCount;
};

/* 1062 */
struct tagDROPSTRUCT
{
  HWND__ *hwndSource;
  HWND__ *hwndSink;
  unsigned int wFmt;
  unsigned int dwData;
  tagPOINT ptDrop;
  unsigned int dwControlData;
};

/* 1063 */
struct _TOKEN_GROUPS_AND_PRIVILEGES
{
  unsigned int SidCount;
  unsigned int SidLength;
  _SID_AND_ATTRIBUTES *Sids;
  unsigned int RestrictedSidCount;
  unsigned int RestrictedSidLength;
  _SID_AND_ATTRIBUTES *RestrictedSids;
  unsigned int PrivilegeCount;
  unsigned int PrivilegeLength;
  _LUID_AND_ATTRIBUTES *Privileges;
  _LUID AuthenticationId;
};

/* 1064 */
struct tagIMEMENUITEMINFOA
{
  unsigned int cbSize;
  unsigned int fType;
  unsigned int fState;
  unsigned int wID;
  HBITMAP__ *hbmpChecked;
  HBITMAP__ *hbmpUnchecked;
  unsigned int dwItemData;
  char szString[80];
  HBITMAP__ *hbmpItem;
};

/* 1065 */
struct tagEXTLOGPEN
{
  unsigned int elpPenStyle;
  unsigned int elpWidth;
  unsigned int elpBrushStyle;
  unsigned int elpColor;
  unsigned int elpHatch;
  unsigned int elpNumEntries;
  unsigned int elpStyleEntry[1];
};

/* 1066 */
struct _OUTLINETEXTMETRICA
{
  unsigned int otmSize;
  tagTEXTMETRICA otmTextMetrics;
  char otmFiller;
  tagPANOSE otmPanoseNumber;
  unsigned int otmfsSelection;
  unsigned int otmfsType;
  int otmsCharSlopeRise;
  int otmsCharSlopeRun;
  int otmItalicAngle;
  unsigned int otmEMSquare;
  int otmAscent;
  int otmDescent;
  unsigned int otmLineGap;
  unsigned int otmsCapEmHeight;
  unsigned int otmsXHeight;
  tagRECT otmrcFontBox;
  int otmMacAscent;
  int otmMacDescent;
  unsigned int otmMacLineGap;
  unsigned int otmusMinimumPPEM;
  tagPOINT otmptSubscriptSize;
  tagPOINT otmptSubscriptOffset;
  tagPOINT otmptSuperscriptSize;
  tagPOINT otmptSuperscriptOffset;
  unsigned int otmsStrikeoutSize;
  int otmsStrikeoutPosition;
  int otmsUnderscoreSize;
  int otmsUnderscorePosition;
  char *otmpFamilyName;
  char *otmpFaceName;
  char *otmpStyleName;
  char *otmpFullName;
};

/* 1067 */
struct _RASTERIZER_STATUS
{
  __int16 nSize;
  __int16 wFlags;
  __int16 nLanguageID;
};

/* 1068 */
struct _WIN32_FIND_DATAW
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
  unsigned int dwReserved0;
  unsigned int dwReserved1;
  unsigned __int16 cFileName[260];
  unsigned __int16 cAlternateFileName[14];
};

/* 1069 */
struct _TOKEN_AUDIT_POLICY_ELEMENT
{
  unsigned int Category;
  unsigned int PolicyMask;
};

/* 1070 */
struct tagEMRTEXT
{
  _POINTL ptlReference;
  unsigned int nChars;
  unsigned int offString;
  unsigned int fOptions;
  _RECTL rcl;
  unsigned int offDx;
};

/* 1071 */
struct tagEMRPOLYTEXTOUTA
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int iGraphicsMode;
  float exScale;
  float eyScale;
  int cStrings;
  tagEMRTEXT aemrtext[1];
};

/* 1072 */
struct _WIN32_FIND_DATAA
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
  unsigned int dwReserved0;
  unsigned int dwReserved1;
  char cFileName[260];
  char cAlternateFileName[14];
};

/* 1073 */
struct tagBITMAPINFOHEADER
{
  unsigned int biSize;
  int biWidth;
  int biHeight;
  unsigned __int16 biPlanes;
  unsigned __int16 biBitCount;
  unsigned int biCompression;
  unsigned int biSizeImage;
  int biXPelsPerMeter;
  int biYPelsPerMeter;
  unsigned int biClrUsed;
  unsigned int biClrImportant;
};

/* 1074 */
struct tagEMRSTRETCHDIBITS
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int xSrc;
  int ySrc;
  int cxSrc;
  int cySrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  unsigned int iUsageSrc;
  unsigned int dwRop;
  int cxDest;
  int cyDest;
};

/* 1075 */
struct IMAGE_LOAD_CONFIG_DIRECTORY32
{
  unsigned int Size;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int GlobalFlagsClear;
  unsigned int GlobalFlagsSet;
  unsigned int CriticalSectionDefaultTimeout;
  unsigned int DeCommitFreeBlockThreshold;
  unsigned int DeCommitTotalFreeThreshold;
  unsigned int LockPrefixTable;
  unsigned int MaximumAllocationSize;
  unsigned int VirtualMemoryThreshold;
  unsigned int ProcessHeapFlags;
  unsigned int ProcessAffinityMask;
  unsigned __int16 CSDVersion;
  unsigned __int16 Reserved1;
  unsigned int EditList;
  unsigned int SecurityCookie;
  unsigned int SEHandlerTable;
  unsigned int SEHandlerCount;
};

/* 1076 */
struct _TRIVERTEX
{
  int x;
  int y;
  unsigned __int16 Red;
  unsigned __int16 Green;
  unsigned __int16 Blue;
  unsigned __int16 Alpha;
};

/* 1077 */
struct _ACCESS_DENIED_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 1078 */
struct _MEMORY_BASIC_INFORMATION
{
  void *BaseAddress;
  void *AllocationBase;
  unsigned int AllocationProtect;
  unsigned int RegionSize;
  unsigned int State;
  unsigned int Protect;
  unsigned int Type;
};

/* 1079 */
struct tagTEXTMETRICW
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  unsigned __int16 tmFirstChar;
  unsigned __int16 tmLastChar;
  unsigned __int16 tmDefaultChar;
  unsigned __int16 tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
};

/* 1080 */
struct _OUTLINETEXTMETRICW
{
  unsigned int otmSize;
  tagTEXTMETRICW otmTextMetrics;
  char otmFiller;
  tagPANOSE otmPanoseNumber;
  unsigned int otmfsSelection;
  unsigned int otmfsType;
  int otmsCharSlopeRise;
  int otmsCharSlopeRun;
  int otmItalicAngle;
  unsigned int otmEMSquare;
  int otmAscent;
  int otmDescent;
  unsigned int otmLineGap;
  unsigned int otmsCapEmHeight;
  unsigned int otmsXHeight;
  tagRECT otmrcFontBox;
  int otmMacAscent;
  int otmMacDescent;
  unsigned int otmMacLineGap;
  unsigned int otmusMinimumPPEM;
  tagPOINT otmptSubscriptSize;
  tagPOINT otmptSubscriptOffset;
  tagPOINT otmptSuperscriptSize;
  tagPOINT otmptSuperscriptOffset;
  unsigned int otmsStrikeoutSize;
  int otmsStrikeoutPosition;
  int otmsUnderscoreSize;
  int otmsUnderscorePosition;
  char *otmpFamilyName;
  char *otmpFaceName;
  char *otmpStyleName;
  char *otmpFullName;
};

/* 1081 */
struct _DOCINFOA
{
  int cbSize;
  const char *lpszDocName;
  const char *lpszOutput;
  const char *lpszDatatype;
  unsigned int fwType;
};

/* 1082 */
struct MENUITEMTEMPLATEHEADER
{
  unsigned __int16 versionNumber;
  unsigned __int16 offset;
};

/* 1083 */
struct _SYSTEM_AUDIT_CALLBACK_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 1084 */
struct BITMAPV4HEADER
{
  unsigned int bV4Size;
  int bV4Width;
  int bV4Height;
  unsigned __int16 bV4Planes;
  unsigned __int16 bV4BitCount;
  unsigned int bV4V4Compression;
  unsigned int bV4SizeImage;
  int bV4XPelsPerMeter;
  int bV4YPelsPerMeter;
  unsigned int bV4ClrUsed;
  unsigned int bV4ClrImportant;
  unsigned int bV4RedMask;
  unsigned int bV4GreenMask;
  unsigned int bV4BlueMask;
  unsigned int bV4AlphaMask;
  unsigned int bV4CSType;
  tagICEXYZTRIPLE bV4Endpoints;
  unsigned int bV4GammaRed;
  unsigned int bV4GammaGreen;
  unsigned int bV4GammaBlue;
};

/* 1085 */
struct _BLENDFUNCTION
{
  char BlendOp;
  char BlendFlags;
  char SourceConstantAlpha;
  char AlphaFormat;
};

/* 1086 */
#pragma pack(push, 1)
struct _SHFILEOPSTRUCTW
{
  HWND__ *hwnd;
  unsigned int wFunc;
  const unsigned __int16 *pFrom;
  const unsigned __int16 *pTo;
  unsigned __int16 fFlags;
  int fAnyOperationsAborted;
  void *hNameMappings;
  const unsigned __int16 *lpszProgressTitle;
};
#pragma pack(pop)

/* 1087 */
struct HUMPD__
{
  int unused;
};

/* 1088 */
struct _NETRESOURCEA
{
  unsigned int dwScope;
  unsigned int dwType;
  unsigned int dwDisplayType;
  unsigned int dwUsage;
  char *lpLocalName;
  char *lpRemoteName;
  char *lpComment;
  char *lpProvider;
};

/* 1089 */
struct tagEMRCREATEDIBPATTERNBRUSHPT
{
  tagEMR emr;
  unsigned int ihBrush;
  unsigned int iUsage;
  unsigned int offBmi;
  unsigned int cbBmi;
  unsigned int offBits;
  unsigned int cbBits;
};

/* 1090 */
struct SC_HANDLE__
{
  int unused;
};

/* 1091 */
struct tagPOINTS
{
  __int16 x;
  __int16 y;
};

/* 1092 */
struct tagPOINTFX
{
  _FIXED x;
  _FIXED y;
};

/* 1093 */
struct _COMMPROP
{
  unsigned __int16 wPacketLength;
  unsigned __int16 wPacketVersion;
  unsigned int dwServiceMask;
  unsigned int dwReserved1;
  unsigned int dwMaxTxQueue;
  unsigned int dwMaxRxQueue;
  unsigned int dwMaxBaud;
  unsigned int dwProvSubType;
  unsigned int dwProvCapabilities;
  unsigned int dwSettableParams;
  unsigned int dwSettableBaud;
  unsigned __int16 wSettableData;
  unsigned __int16 wSettableStopParity;
  unsigned int dwCurrentTxQueue;
  unsigned int dwCurrentRxQueue;
  unsigned int dwProvSpec1;
  unsigned int dwProvSpec2;
  unsigned __int16 wcProvChar[1];
};

/* 1094 */
struct tagGUITHREADINFO
{
  unsigned int cbSize;
  unsigned int flags;
  HWND__ *hwndActive;
  HWND__ *hwndFocus;
  HWND__ *hwndCapture;
  HWND__ *hwndMenuOwner;
  HWND__ *hwndMoveSize;
  HWND__ *hwndCaret;
  tagRECT rcCaret;
};

/* 1095 */
struct HDC__
{
  int unused;
};

/* 1096 */
struct tagPAINTSTRUCT
{
  HDC__ *hdc;
  int fErase;
  tagRECT rcPaint;
  int fRestore;
  int fIncUpdate;
  char rgbReserved[32];
};

/* 1097 */
struct _DISCDLGSTRUCTA
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  char *lpLocalName;
  char *lpRemoteName;
  unsigned int dwFlags;
};

/* 1098 */
struct _QUERY_SERVICE_CONFIGW
{
  unsigned int dwServiceType;
  unsigned int dwStartType;
  unsigned int dwErrorControl;
  unsigned __int16 *lpBinaryPathName;
  unsigned __int16 *lpLoadOrderGroup;
  unsigned int dwTagId;
  unsigned __int16 *lpDependencies;
  unsigned __int16 *lpServiceStartName;
  unsigned __int16 *lpDisplayName;
};

/* 1099 */
struct HPALETTE__
{
  int unused;
};

/* 1100 */
struct _SINGLE_LIST_ENTRY
{
  _SINGLE_LIST_ENTRY *Next;
};

/* 1101 */
struct _SYSTEM_ALARM_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 1102 */
struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 1103 */
struct tagWNDCLASSEXW
{
  unsigned int cbSize;
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const unsigned __int16 *lpszMenuName;
  const unsigned __int16 *lpszClassName;
  HICON__ *hIconSm;
};

/* 1104 */
struct tagMONITORINFO
{
  unsigned int cbSize;
  tagRECT rcMonitor;
  tagRECT rcWork;
  unsigned int dwFlags;
};

/* 1105 */
struct tagMONITORINFOEXA
{
  tagMONITORINFO baseclass_0;
  char szDevice[32];
};

/* 1106 */
struct tagEMRINVERTRGN
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cbRgnData;
  char RgnData[1];
};

/* 1107 */
struct _RTL_VERIFIER_THUNK_DESCRIPTOR
{
  char *ThunkName;
  void *ThunkOldAddress;
  void *ThunkNewAddress;
};

/* 1108 */
struct _RTL_VERIFIER_DLL_DESCRIPTOR
{
  unsigned __int16 *DllName;
  unsigned int DllFlags;
  void *DllAddress;
  _RTL_VERIFIER_THUNK_DESCRIPTOR *DllThunks;
};

/* 1109 */
struct _MODEMSETTINGS
{
  unsigned int dwActualSize;
  unsigned int dwRequiredSize;
  unsigned int dwDevSpecificOffset;
  unsigned int dwDevSpecificSize;
  unsigned int dwCallSetupFailTimer;
  unsigned int dwInactivityTimeout;
  unsigned int dwSpeakerVolume;
  unsigned int dwSpeakerMode;
  unsigned int dwPreferredModemOptions;
  unsigned int dwNegotiatedModemOptions;
  unsigned int dwNegotiatedDCERate;
  char abVariablePortion[1];
};

/* 1110 */
struct tagRGBQUAD
{
  char rgbBlue;
  char rgbGreen;
  char rgbRed;
  char rgbReserved;
};

/* 1111 */
struct tagBITMAPINFO
{
  tagBITMAPINFOHEADER bmiHeader;
  tagRGBQUAD bmiColors[1];
};

/* 1112 */
struct _IMAGE_ROM_OPTIONAL_HEADER
{
  unsigned __int16 Magic;
  char MajorLinkerVersion;
  char MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned int BaseOfData;
  unsigned int BaseOfBss;
  unsigned int GprMask;
  unsigned int CprMask[4];
  unsigned int GpValue;
};

/* 1113 */
struct _IMAGE_ROM_HEADERS
{
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
};

/* 1114 */
struct tagSCROLLBARINFO
{
  unsigned int cbSize;
  tagRECT rcScrollBar;
  int dxyLineButton;
  int xyThumbTop;
  int xyThumbBottom;
  int reserved;
  unsigned int rgstate[6];
};

/* 1115 */
struct _IMAGE_DEBUG_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int Type;
  unsigned int SizeOfData;
  unsigned int AddressOfRawData;
  unsigned int PointerToRawData;
};

/* 1116 */
struct pvalueA
{
  char *pv_valuename;
  int pv_valuelen;
  void *pv_value_context;
  unsigned int pv_type;
};

/* 1117 */
struct _TOKEN_USER
{
  _SID_AND_ATTRIBUTES User;
};

/* 1118 */
struct tagEMREXTTEXTOUTA
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int iGraphicsMode;
  float exScale;
  float eyScale;
  tagEMRTEXT emrtext;
};

/* 1119 */
struct tagEMRANGLEARC
{
  tagEMR emr;
  _POINTL ptlCenter;
  unsigned int nRadius;
  float eStartAngle;
  float eSweepAngle;
};

/* 1120 */
struct tagCANDIDATEFORM
{
  unsigned int dwIndex;
  unsigned int dwStyle;
  tagPOINT ptCurrentPos;
  tagRECT rcArea;
};

/* 1121 */
struct tagEMRSETARCDIRECTION
{
  tagEMR emr;
  unsigned int iArcDirection;
};

/* 1122 */
#pragma pack(push, 1)
struct IMAGE_AUX_SYMBOL_TOKEN_DEF
{
  char bAuxType;
  char bReserved;
  unsigned int SymbolTableIndex;
  char rgbReserved[12];
};
#pragma pack(pop)

/* 1123 */
struct tagLAYERPLANEDESCRIPTOR
{
  unsigned __int16 nSize;
  unsigned __int16 nVersion;
  unsigned int dwFlags;
  char iPixelType;
  char cColorBits;
  char cRedBits;
  char cRedShift;
  char cGreenBits;
  char cGreenShift;
  char cBlueBits;
  char cBlueShift;
  char cAlphaBits;
  char cAlphaShift;
  char cAccumBits;
  char cAccumRedBits;
  char cAccumGreenBits;
  char cAccumBlueBits;
  char cAccumAlphaBits;
  char cDepthBits;
  char cStencilBits;
  char cAuxBuffers;
  char iLayerPlane;
  char bReserved;
  unsigned int crTransparent;
};

/* 1124 */
struct _TAPE_SET_POSITION
{
  unsigned int Method;
  unsigned int Partition;
  _LARGE_INTEGER Offset;
  char Immediate;
};

/* 1125 */
struct _numberfmtW
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  unsigned __int16 *lpDecimalSep;
  unsigned __int16 *lpThousandSep;
  unsigned int NegativeOrder;
};

/* 1126 */
struct _CONNECTDLGSTRUCTA
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  _NETRESOURCEA *lpConnRes;
  unsigned int dwFlags;
  unsigned int dwDevNum;
};

/* 1127 */
union _IMAGE_LINENUMBER::__unnamed
{
  unsigned int SymbolTableIndex;
  unsigned int VirtualAddress;
};

/* 1128 */
#pragma pack(push, 1)
struct _IMAGE_LINENUMBER
{
  _IMAGE_LINENUMBER::__unnamed Type;
  unsigned __int16 Linenumber;
};
#pragma pack(pop)

/* 1129 */
struct _EXCEPTION_DEBUG_INFO
{
  _EXCEPTION_RECORD ExceptionRecord;
  unsigned int dwFirstChance;
};

/* 1130 */
struct tagNEWTEXTMETRICA
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  char tmFirstChar;
  char tmLastChar;
  char tmDefaultChar;
  char tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
  unsigned int ntmFlags;
  unsigned int ntmSizeEM;
  unsigned int ntmCellHeight;
  unsigned int ntmAvgWidth;
};

/* 1131 */
struct tagNEWTEXTMETRICEXA
{
  tagNEWTEXTMETRICA ntmTm;
  tagFONTSIGNATURE ntmFontSig;
};

/* 1132 */
struct _DISPLAY_DEVICEA
{
  unsigned int cb;
  char DeviceName[32];
  char DeviceString[128];
  unsigned int StateFlags;
  char DeviceID[128];
  char DeviceKey[128];
};

/* 1133 */
struct _IMAGE_DEBUG_MISC
{
  unsigned int DataType;
  unsigned int Length;
  char Unicode;
  char Reserved[3];
  char Data[1];
};

/* 1134 */
struct HENHMETAFILE__
{
  int unused;
};

/* 1135 */
struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
{
  unsigned int BeginAddress;
  unsigned int EndAddress;
  unsigned int ExceptionHandler;
  unsigned int HandlerData;
  unsigned int PrologEndAddress;
};

/* 1136 */
struct _SOCKET_ADDRESS_LIST
{
  int iAddressCount;
  _SOCKET_ADDRESS Address[1];
};

/* 1137 */
struct _SHFILEINFOW
{
  HICON__ *hIcon;
  int iIcon;
  unsigned int dwAttributes;
  unsigned __int16 szDisplayName[260];
  unsigned __int16 szTypeName[80];
};

/* 1138 */
struct _OSVERSIONINFOW
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  unsigned __int16 szCSDVersion[128];
};

/* 1139 */
struct tagRECONVERTSTRING
{
  unsigned int dwSize;
  unsigned int dwVersion;
  unsigned int dwStrLen;
  unsigned int dwStrOffset;
  unsigned int dwCompStrLen;
  unsigned int dwCompStrOffset;
  unsigned int dwTargetStrLen;
  unsigned int dwTargetStrOffset;
};

/* 1140 */
struct _EXCEPTION_RECORD32
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  unsigned int ExceptionRecord;
  unsigned int ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int ExceptionInformation[15];
};

/* 1141 */
struct tagEMREXTSELECTCLIPRGN
{
  tagEMR emr;
  unsigned int cbRgnData;
  unsigned int iMode;
  char RgnData[1];
};

/* 1142 */
struct tagSTICKYKEYS
{
  unsigned int cbSize;
  unsigned int dwFlags;
};

/* 1143 */
struct tagTITLEBARINFO
{
  unsigned int cbSize;
  tagRECT rcTitleBar;
  unsigned int rgstate[6];
};

/* 1144 */
struct tagENUMLOGFONTA
{
  tagLOGFONTA elfLogFont;
  char elfFullName[64];
  char elfStyle[32];
};

/* 1145 */
struct tagEMRALPHABLEND
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int cxSrc;
  int cySrc;
};

/* 1146 */
struct tagMOUSEHOOKSTRUCT
{
  tagPOINT pt;
  HWND__ *hwnd;
  unsigned int wHitTestCode;
  unsigned int dwExtraInfo;
};

/* 1147 */
struct tagEMRGLSRECORD
{
  tagEMR emr;
  unsigned int cbData;
  char Data[1];
};

/* 1148 */
struct tagMOUSEKEYS
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iMaxSpeed;
  unsigned int iTimeToMaxSpeed;
  unsigned int iCtrlSpeed;
  unsigned int dwReserved1;
  unsigned int dwReserved2;
};

/* 1149 */
struct HACCEL__
{
  int unused;
};

/* 1150 */
struct tagEMRSTRETCHBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int cxSrc;
  int cySrc;
};

/* 1151 */
struct _ACCESS_DENIED_CALLBACK_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 1152 */
struct _TOKEN_GROUPS
{
  unsigned int GroupCount;
  _SID_AND_ATTRIBUTES Groups[1];
};

/* 1153 */
struct _TOKEN_PRIVILEGES
{
  unsigned int PrivilegeCount;
  _LUID_AND_ATTRIBUTES Privileges[1];
};

/* 1154 */
struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION
{
  unsigned int SecurityLimitFlags;
  void *JobToken;
  _TOKEN_GROUPS *SidsToDisable;
  _TOKEN_PRIVILEGES *PrivilegesToDelete;
  _TOKEN_GROUPS *RestrictedSids;
};

/* 1155 */
union _IMAGE_THUNK_DATA32::__unnamed
{
  unsigned int ForwarderString;
  unsigned int Function;
  unsigned int Ordinal;
  unsigned int AddressOfData;
};

/* 1156 */
struct _IMAGE_THUNK_DATA32
{
  _IMAGE_THUNK_DATA32::__unnamed u1;
};

/* 1157 */
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY
{
  unsigned int FuncStart;
  int _bf4;
};

/* 1158 */
struct tagSERIALKEYSA
{
  unsigned int cbSize;
  unsigned int dwFlags;
  char *lpszActivePort;
  char *lpszPort;
  unsigned int iBaudRate;
  unsigned int iPortState;
  unsigned int iActive;
};

/* 1159 */
struct ANON_OBJECT_HEADER
{
  unsigned __int16 Sig1;
  unsigned __int16 Sig2;
  unsigned __int16 Version;
  unsigned __int16 Machine;
  unsigned int TimeDateStamp;
  _GUID ClassID;
  unsigned int SizeOfData;
};

/* 1160 */
struct tagEMREXTESCAPE
{
  tagEMR emr;
  int iEscape;
  int cbEscData;
  char EscData[1];
};

/* 1161 */
struct tagLOGCOLORSPACEA
{
  unsigned int lcsSignature;
  unsigned int lcsVersion;
  unsigned int lcsSize;
  int lcsCSType;
  int lcsIntent;
  tagICEXYZTRIPLE lcsEndpoints;
  unsigned int lcsGammaRed;
  unsigned int lcsGammaGreen;
  unsigned int lcsGammaBlue;
  char lcsFilename[260];
};

/* 1162 */
struct tagEMRCREATECOLORSPACE
{
  tagEMR emr;
  unsigned int ihCS;
  tagLOGCOLORSPACEA lcs;
};

/* 1163 */
struct _WSAPROTOCOL_INFOW
{
  unsigned int dwServiceFlags1;
  unsigned int dwServiceFlags2;
  unsigned int dwServiceFlags3;
  unsigned int dwServiceFlags4;
  unsigned int dwProviderFlags;
  _GUID ProviderId;
  unsigned int dwCatalogEntryId;
  _WSAPROTOCOLCHAIN ProtocolChain;
  int iVersion;
  int iAddressFamily;
  int iMaxSockAddr;
  int iMinSockAddr;
  int iSocketType;
  int iProtocol;
  int iProtocolMaxOffset;
  int iNetworkByteOrder;
  int iSecurityScheme;
  unsigned int dwMessageSize;
  unsigned int dwProviderReserved;
  unsigned __int16 szProtocol[256];
};

/* 1164 */
struct _IMAGE_VXD_HEADER
{
  unsigned __int16 e32_magic;
  char e32_border;
  char e32_worder;
  unsigned int e32_level;
  unsigned __int16 e32_cpu;
  unsigned __int16 e32_os;
  unsigned int e32_ver;
  unsigned int e32_mflags;
  unsigned int e32_mpages;
  unsigned int e32_startobj;
  unsigned int e32_eip;
  unsigned int e32_stackobj;
  unsigned int e32_esp;
  unsigned int e32_pagesize;
  unsigned int e32_lastpagesize;
  unsigned int e32_fixupsize;
  unsigned int e32_fixupsum;
  unsigned int e32_ldrsize;
  unsigned int e32_ldrsum;
  unsigned int e32_objtab;
  unsigned int e32_objcnt;
  unsigned int e32_objmap;
  unsigned int e32_itermap;
  unsigned int e32_rsrctab;
  unsigned int e32_rsrccnt;
  unsigned int e32_restab;
  unsigned int e32_enttab;
  unsigned int e32_dirtab;
  unsigned int e32_dircnt;
  unsigned int e32_fpagetab;
  unsigned int e32_frectab;
  unsigned int e32_impmod;
  unsigned int e32_impmodcnt;
  unsigned int e32_impproc;
  unsigned int e32_pagesum;
  unsigned int e32_datapage;
  unsigned int e32_preload;
  unsigned int e32_nrestab;
  unsigned int e32_cbnrestab;
  unsigned int e32_nressum;
  unsigned int e32_autodata;
  unsigned int e32_debuginfo;
  unsigned int e32_debuglen;
  unsigned int e32_instpreload;
  unsigned int e32_instdemand;
  unsigned int e32_heapsize;
  char e32_res3[12];
  unsigned int e32_winresoff;
  unsigned int e32_winreslen;
  unsigned __int16 e32_devid;
  unsigned __int16 e32_ddkver;
};

/* 1165 */
struct tagEMRSETWORLDTRANSFORM
{
  tagEMR emr;
  tagXFORM xform;
};

/* 1166 */
struct tagMULTIKEYHELPA
{
  unsigned int mkSize;
  char mkKeylist;
  char szKeyphrase[1];
};

/* 1167 */
struct _WIN32_FILE_ATTRIBUTE_DATA
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
};

/* 1168 */
struct _OSVERSIONINFOEXA
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  char szCSDVersion[128];
  unsigned __int16 wServicePackMajor;
  unsigned __int16 wServicePackMinor;
  unsigned __int16 wSuiteMask;
  char wProductType;
  char wReserved;
};

/* 1169 */
struct _IMAGE_COFF_SYMBOLS_HEADER
{
  unsigned int NumberOfSymbols;
  unsigned int LvaToFirstSymbol;
  unsigned int NumberOfLinenumbers;
  unsigned int LvaToFirstLinenumber;
  unsigned int RvaToFirstByteOfCode;
  unsigned int RvaToLastByteOfCode;
  unsigned int RvaToFirstByteOfData;
  unsigned int RvaToLastByteOfData;
};

/* 1170 */
struct _ImageArchitectureHeader
{
  int _bf0;
  unsigned int FirstEntryRVA;
};

/* 1171 */
struct _SYSTEM_POWER_STATUS
{
  char ACLineStatus;
  char BatteryFlag;
  char BatteryLifePercent;
  char Reserved1;
  unsigned int BatteryLifeTime;
  unsigned int BatteryFullLifeTime;
};

/* 1172 */
struct tagEMRPOLYLINE16
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cpts;
  tagPOINTS apts[1];
};

/* 1173 */
struct tagMENUBARINFO
{
  unsigned int cbSize;
  tagRECT rcBar;
  HMENU__ *hMenu;
  HWND__ *hwndMenu;
  int _bf28;
};

/* 1174 */
struct _WSABUF
{
  unsigned int len;
  char *buf;
};

/* 1175 */
struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 1176 */
struct _DRAGINFOA
{
  unsigned int uSize;
  tagPOINT pt;
  int fNC;
  char *lpFileList;
  unsigned int grfKeyState;
};

/* 1177 */
struct tagEMRSCALEVIEWPORTEXTEX
{
  tagEMR emr;
  int xNum;
  int xDenom;
  int yNum;
  int yDenom;
};

/* 1178 */
#pragma pack(push, 1)
struct DLGTEMPLATE
{
  unsigned int style;
  unsigned int dwExtendedStyle;
  unsigned __int16 cdit;
  __int16 x;
  __int16 y;
  __int16 cx;
  __int16 cy;
};
#pragma pack(pop)

/* 1179 */
struct tagEMRELLIPSE
{
  tagEMR emr;
  _RECTL rclBox;
};

/* 1180 */
struct _ACCESS_ALLOWED_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 1181 */
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::__unnamed::__unnamed
{
  char Flags;
};

/* 1182 */
union $2A4FC63938583CDDB76D8EFE8B039036
{
  _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::__unnamed::__unnamed ProcessorCore;
  _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::__unnamed::__unnamed NumaNode;
  unsigned __int64 Reserved[2];
};

/* 1183 */
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION
{
  unsigned int ProcessorMask;
  _LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
  $2A4FC63938583CDDB76D8EFE8B039036 ___u2;
};

/* 1184 */
struct tagENHMETAHEADER
{
  unsigned int iType;
  unsigned int nSize;
  _RECTL rclBounds;
  _RECTL rclFrame;
  unsigned int dSignature;
  unsigned int nVersion;
  unsigned int nBytes;
  unsigned int nRecords;
  unsigned __int16 nHandles;
  unsigned __int16 sReserved;
  unsigned int nDescription;
  unsigned int offDescription;
  unsigned int nPalEntries;
  tagSIZE szlDevice;
  tagSIZE szlMillimeters;
  unsigned int cbPixelFormat;
  unsigned int offPixelFormat;
  unsigned int bOpenGL;
  tagSIZE szlMicrometers;
};

/* 1185 */
struct _TAPE_WMI_OPERATIONS
{
  unsigned int Method;
  unsigned int DataBufferSize;
  void *DataBuffer;
};

/* 1186 */
struct _devicemodeW
{
  unsigned __int16 dmDeviceName[32];
  unsigned __int16 dmSpecVersion;
  unsigned __int16 dmDriverVersion;
  unsigned __int16 dmSize;
  unsigned __int16 dmDriverExtra;
  unsigned int dmFields;
  $73348F7BB622E19FFE5D22EF7E7B5305 ___u6;
  $804BC8651243059E164863ECBFFD290D ___u7;
  $F807327FFABDD86B2C8B423DE40F9415 ___u8;
  __int16 dmColor;
  __int16 dmDuplex;
  __int16 dmYResolution;
  __int16 dmTTOption;
  __int16 dmCollate;
  unsigned __int16 dmFormName[32];
  unsigned __int16 dmLogPixels;
  unsigned int dmBitsPerPel;
  unsigned int dmPelsWidth;
  unsigned int dmPelsHeight;
  $309666D137CBB19809FA597AD348B415 ___u19;
  unsigned int dmDisplayFrequency;
  unsigned int dmICMMethod;
  unsigned int dmICMIntent;
  unsigned int dmMediaType;
  unsigned int dmDitherType;
  unsigned int dmReserved1;
  unsigned int dmReserved2;
  unsigned int dmPanningWidth;
  unsigned int dmPanningHeight;
};

/* 1187 */
struct _WSANAMESPACE_INFOW
{
  _GUID NSProviderId;
  unsigned int dwNameSpace;
  int fActive;
  unsigned int dwVersion;
  unsigned __int16 *lpszIdentifier;
};

/* 1188 */
struct tagMOUSEMOVEPOINT
{
  int x;
  int y;
  unsigned int time;
  unsigned int dwExtraInfo;
};

/* 1189 */
struct tagHIGHCONTRASTA
{
  unsigned int cbSize;
  unsigned int dwFlags;
  char *lpszDefaultScheme;
};

/* 1190 */
struct _WSANSClassInfoW
{
  unsigned __int16 *lpszName;
  unsigned int dwNameSpace;
  unsigned int dwValueType;
  unsigned int dwValueSize;
  void *lpValue;
};

/* 1191 */
struct _OSVERSIONINFOA
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  char szCSDVersion[128];
};

/* 1192 */
struct tagEMRSETICMPROFILE
{
  tagEMR emr;
  unsigned int dwFlags;
  unsigned int cbName;
  unsigned int cbData;
  char Data[1];
};

/* 1193 */
struct _IMAGE_BASE_RELOCATION
{
  unsigned int VirtualAddress;
  unsigned int SizeOfBlock;
};

/* 1194 */
struct WSAData
{
  unsigned __int16 wVersion;
  unsigned __int16 wHighVersion;
  char szDescription[257];
  char szSystemStatus[129];
  unsigned __int16 iMaxSockets;
  unsigned __int16 iMaxUdpDg;
  char *lpVendorInfo;
};

/* 1195 */
struct tagCANDIDATELIST
{
  unsigned int dwSize;
  unsigned int dwStyle;
  unsigned int dwCount;
  unsigned int dwSelection;
  unsigned int dwPageStart;
  unsigned int dwPageSize;
  unsigned int dwOffset[1];
};

/* 1196 */
struct tagACCESSTIMEOUT
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iTimeOutMSec;
};

/* 1197 */
struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT
{
  void *CompletionKey;
  void *CompletionPort;
};

/* 1198 */
struct HWINEVENTHOOK__
{
  int unused;
};

/* 1199 */
struct tagMENUGETOBJECTINFO
{
  unsigned int dwFlags;
  unsigned int uPos;
  HMENU__ *hmenu;
  void *riid;
  void *pvObj;
};

/* 1200 */
struct _MESSAGE_RESOURCE_ENTRY
{
  unsigned __int16 Length;
  unsigned __int16 Flags;
  char Text[1];
};

/* 1201 */
struct tagHIGHCONTRASTW
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned __int16 *lpszDefaultScheme;
};

/* 1202 */
union $22971E98F1DCAE471B592EC18ECB1551
{
  unsigned int PhysicalAddress;
  unsigned int VirtualSize;
};

/* 1203 */
struct _IMAGE_SECTION_HEADER
{
  char Name[8];
  $22971E98F1DCAE471B592EC18ECB1551 Misc;
  unsigned int VirtualAddress;
  unsigned int SizeOfRawData;
  unsigned int PointerToRawData;
  unsigned int PointerToRelocations;
  unsigned int PointerToLinenumbers;
  unsigned __int16 NumberOfRelocations;
  unsigned __int16 NumberOfLinenumbers;
  unsigned int Characteristics;
};

/* 1204 */
struct tagPOLYTEXTW
{
  int x;
  int y;
  unsigned int n;
  const unsigned __int16 *lpstr;
  unsigned int uiFlags;
  tagRECT rcl;
  int *pdx;
};

/* 1205 */
struct _flowspec
{
  unsigned int TokenRate;
  unsigned int TokenBucketSize;
  unsigned int PeakBandwidth;
  unsigned int Latency;
  unsigned int DelayVariation;
  unsigned int ServiceType;
  unsigned int MaxSduSize;
  unsigned int MinimumPolicedSize;
};

/* 1206 */
struct _QualityOfService
{
  _flowspec SendingFlowspec;
  _flowspec ReceivingFlowspec;
  _WSABUF ProviderSpecific;
};

/* 1207 */
struct SYSTEM_BATTERY_STATE
{
  char AcOnLine;
  char BatteryPresent;
  char Charging;
  char Discharging;
  char Spare1[4];
  unsigned int MaxCapacity;
  unsigned int RemainingCapacity;
  unsigned int Rate;
  unsigned int EstimatedTime;
  unsigned int DefaultAlert1;
  unsigned int DefaultAlert2;
};

/* 1208 */
struct tagICONMETRICSA
{
  unsigned int cbSize;
  int iHorzSpacing;
  int iVertSpacing;
  int iTitleWrap;
  tagLOGFONTA lfFont;
};

/* 1209 */
struct _nlsversioninfo
{
  unsigned int dwNLSVersionInfoSize;
  unsigned int dwNLSVersion;
  unsigned int dwDefinedVersion;
};

/* 1210 */
struct HMETAFILE__
{
  int unused;
};

/* 1211 */
struct tagMETAFILEPICT
{
  int mm;
  int xExt;
  int yExt;
  HMETAFILE__ *hMF;
};

/* 1212 */
struct _FOCUS_EVENT_RECORD
{
  int bSetFocus;
};

/* 1213 */
union $E5EC784184F61E2D1DB730C15D65FB8F
{
  void *hIcon;
  void *hMonitor;
};

/* 1214 */
struct _SHELLEXECUTEINFOA
{
  unsigned int cbSize;
  unsigned int fMask;
  HWND__ *hwnd;
  const char *lpVerb;
  const char *lpFile;
  const char *lpParameters;
  const char *lpDirectory;
  int nShow;
  HINSTANCE__ *hInstApp;
  void *lpIDList;
  const char *lpClass;
  HKEY__ *hkeyClass;
  unsigned int dwHotKey;
  $E5EC784184F61E2D1DB730C15D65FB8F ___u13;
  void *hProcess;
};

/* 1215 */
struct tagHELPWININFOW
{
  int wStructSize;
  int x;
  int y;
  int dx;
  int dy;
  int wMax;
  unsigned __int16 rgchMember[2];
};

/* 1216 */
struct _numberfmtA
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  char *lpDecimalSep;
  char *lpThousandSep;
  unsigned int NegativeOrder;
};

/* 1217 */
struct _WSAServiceClassInfoW
{
  _GUID *lpServiceClassId;
  unsigned __int16 *lpszServiceClassName;
  unsigned int dwCount;
  _WSANSClassInfoW *lpClassInfos;
};

/* 1218 */
struct tagHANDLETABLE
{
  void *objectHandle[1];
};

/* 1219 */
struct tagSOUNDSENTRYA
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iFSTextEffect;
  unsigned int iFSTextEffectMSec;
  unsigned int iFSTextEffectColorBits;
  unsigned int iFSGrafEffect;
  unsigned int iFSGrafEffectMSec;
  unsigned int iFSGrafEffectColor;
  unsigned int iWindowsEffect;
  unsigned int iWindowsEffectMSec;
  char *lpszWindowsEffectDLL;
  unsigned int iWindowsEffectOrdinal;
};

/* 1220 */
struct _IMAGE_RESOURCE_DATA_ENTRY
{
  unsigned int OffsetToData;
  unsigned int Size;
  unsigned int CodePage;
  unsigned int Reserved;
};

/* 1221 */
struct _COMMTIMEOUTS
{
  unsigned int ReadIntervalTimeout;
  unsigned int ReadTotalTimeoutMultiplier;
  unsigned int ReadTotalTimeoutConstant;
  unsigned int WriteTotalTimeoutMultiplier;
  unsigned int WriteTotalTimeoutConstant;
};

/* 1222 */
struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 1223 */
struct _EXIT_PROCESS_DEBUG_INFO
{
  unsigned int dwExitCode;
};

/* 1224 */
struct _SHNAMEMAPPINGA
{
  char *pszOldPath;
  char *pszNewPath;
  int cchOldPath;
  int cchNewPath;
};

/* 1225 */
struct _ImageArchitectureEntry
{
  unsigned int FixupInstRVA;
  unsigned int NewInst;
};

/* 1226 */
union $4CFA15F5CE489CDF0BD78DFB308FEF36
{
  unsigned __int16 Ordinal;
  unsigned __int16 Hint;
};

/* 1227 */
struct IMPORT_OBJECT_HEADER
{
  unsigned __int16 Sig1;
  unsigned __int16 Sig2;
  unsigned __int16 Version;
  unsigned __int16 Machine;
  unsigned int TimeDateStamp;
  unsigned int SizeOfData;
  $4CFA15F5CE489CDF0BD78DFB308FEF36 ___u6;
  __int16 _bf18;
};

/* 1228 */
struct tagMSGBOXPARAMSW
{
  unsigned int cbSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpszText;
  const unsigned __int16 *lpszCaption;
  unsigned int dwStyle;
  const unsigned __int16 *lpszIcon;
  unsigned int dwContextHelpId;
  void (__stdcall *lpfnMsgBoxCallback)(tagHELPINFO *);
  unsigned int dwLanguageId;
};

/* 1229 */
struct tagMSG
{
  HWND__ *hwnd;
  unsigned int message;
  unsigned int wParam;
  int lParam;
  unsigned int time;
  tagPOINT pt;
};

/* 1230 */
struct _WSAServiceClassInfoA
{
  _GUID *lpServiceClassId;
  char *lpszServiceClassName;
  unsigned int dwCount;
  _WSANSClassInfoA *lpClassInfos;
};

/* 1231 */
struct tagLOGPALETTE
{
  unsigned __int16 palVersion;
  unsigned __int16 palNumEntries;
  tagPALETTEENTRY palPalEntry[1];
};

/* 1232 */
struct tagNONCLIENTMETRICSA
{
  unsigned int cbSize;
  int iBorderWidth;
  int iScrollWidth;
  int iScrollHeight;
  int iCaptionWidth;
  int iCaptionHeight;
  tagLOGFONTA lfCaptionFont;
  int iSmCaptionWidth;
  int iSmCaptionHeight;
  tagLOGFONTA lfSmCaptionFont;
  int iMenuWidth;
  int iMenuHeight;
  tagLOGFONTA lfMenuFont;
  tagLOGFONTA lfStatusFont;
  tagLOGFONTA lfMessageFont;
};

/* 1233 */
struct tagCREATESTRUCTW
{
  void *lpCreateParams;
  HINSTANCE__ *hInstance;
  HMENU__ *hMenu;
  HWND__ *hwndParent;
  int cy;
  int cx;
  int y;
  int x;
  int style;
  const unsigned __int16 *lpszName;
  const unsigned __int16 *lpszClass;
  unsigned int dwExStyle;
};

/* 1234 */
struct tagCBT_CREATEWNDW
{
  tagCREATESTRUCTW *lpcs;
  HWND__ *hwndInsertAfter;
};

/* 1235 */
struct FLASHWINFO
{
  unsigned int cbSize;
  HWND__ *hwnd;
  unsigned int dwFlags;
  unsigned int uCount;
  unsigned int dwTimeout;
};

/* 1236 */
struct _MODEMDEVCAPS
{
  unsigned int dwActualSize;
  unsigned int dwRequiredSize;
  unsigned int dwDevSpecificOffset;
  unsigned int dwDevSpecificSize;
  unsigned int dwModemProviderVersion;
  unsigned int dwModemManufacturerOffset;
  unsigned int dwModemManufacturerSize;
  unsigned int dwModemModelOffset;
  unsigned int dwModemModelSize;
  unsigned int dwModemVersionOffset;
  unsigned int dwModemVersionSize;
  unsigned int dwDialOptions;
  unsigned int dwCallSetupFailTimer;
  unsigned int dwInactivityTimeout;
  unsigned int dwSpeakerVolume;
  unsigned int dwSpeakerMode;
  unsigned int dwModemOptions;
  unsigned int dwMaxDTERate;
  unsigned int dwMaxDCERate;
  char abVariablePortion[1];
};

/* 1237 */
struct _NT_TIB
{
  struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
  void *StackBase;
  void *StackLimit;
  void *SubSystemTib;
  $7A727655067EA29DD1B3C3F7D79CBFD1 ___u4;
  void *ArbitraryUserPointer;
  _NT_TIB *Self;
};

/* 1238 */
union $7A727655067EA29DD1B3C3F7D79CBFD1
{
  void *FiberData;
  unsigned int Version;
};

/* 1239 */
struct tagWINDOWPLACEMENT
{
  unsigned int length;
  unsigned int flags;
  unsigned int showCmd;
  tagPOINT ptMinPosition;
  tagPOINT ptMaxPosition;
  tagRECT rcNormalPosition;
};

/* 1240 */
struct _SERVICE_STATUS
{
  unsigned int dwServiceType;
  unsigned int dwCurrentState;
  unsigned int dwControlsAccepted;
  unsigned int dwWin32ExitCode;
  unsigned int dwServiceSpecificExitCode;
  unsigned int dwCheckPoint;
  unsigned int dwWaitHint;
};

/* 1241 */
struct _ENUM_SERVICE_STATUSW
{
  unsigned __int16 *lpServiceName;
  unsigned __int16 *lpDisplayName;
  _SERVICE_STATUS ServiceStatus;
};

/* 1242 */
struct CServerRequest
{
  CCSLock m_RequestLock;
  char RequestLock[8];
  std::map<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> > > m_RequestMap;
  unsigned int m_dwRequestCounter;
  unsigned int m_dwRequestFlags;
};

/* 1243 */
struct CServerRequest::Result
{
  CPacketDispatch *m_lpSrcDispatch;
  bool m_bRemove;
};

/* 1244 */
struct value_entW
{
  unsigned __int16 *ve_valuename;
  unsigned int ve_valuelen;
  unsigned int ve_valueptr;
  unsigned int ve_type;
};

/* 1245 */
struct _PACKEDEVENTINFO
{
  unsigned int ulSize;
  unsigned int ulNumEventsForLogFile;
  unsigned int ulOffsets[];
};

/* 1246 */
struct _MEMORYSTATUSEX
{
  unsigned int dwLength;
  unsigned int dwMemoryLoad;
  unsigned __int64 ullTotalPhys;
  unsigned __int64 ullAvailPhys;
  unsigned __int64 ullTotalPageFile;
  unsigned __int64 ullAvailPageFile;
  unsigned __int64 ullTotalVirtual;
  unsigned __int64 ullAvailVirtual;
  unsigned __int64 ullAvailExtendedVirtual;
};

/* 1247 */
struct sockproto
{
  unsigned __int16 sp_family;
  unsigned __int16 sp_protocol;
};

/* 1248 */
struct _PSINJECTDATA
{
  unsigned int DataBytes;
  unsigned __int16 InjectionPoint;
  unsigned __int16 PageNumber;
};

/* 1249 */
struct tagMENUITEMINFOW
{
  unsigned int cbSize;
  unsigned int fMask;
  unsigned int fType;
  unsigned int fState;
  unsigned int wID;
  HMENU__ *hSubMenu;
  HBITMAP__ *hbmpChecked;
  HBITMAP__ *hbmpUnchecked;
  unsigned int dwItemData;
  unsigned __int16 *dwTypeData;
  unsigned int cch;
  HBITMAP__ *hbmpItem;
};

/* 1250 */
struct tagGCP_RESULTSA
{
  unsigned int lStructSize;
  char *lpOutString;
  unsigned int *lpOrder;
  int *lpDx;
  int *lpCaretPos;
  char *lpClass;
  unsigned __int16 *lpGlyphs;
  unsigned int nGlyphs;
  int nMaxFit;
};

/* 1251 */
struct HTASK__
{
  int unused;
};

/* 1252 */
struct tagEMRFORMAT
{
  unsigned int dSignature;
  unsigned int nVersion;
  unsigned int cbData;
  unsigned int offData;
};

/* 1253 */
struct tagMETARECORD
{
  unsigned int rdSize;
  unsigned __int16 rdFunction;
  unsigned __int16 rdParm[1];
};

/* 1254 */
struct _GENERIC_MAPPING
{
  unsigned int GenericRead;
  unsigned int GenericWrite;
  unsigned int GenericExecute;
  unsigned int GenericAll;
};

/* 1255 */
struct _SC_ACTION
{
  _SC_ACTION_TYPE Type;
  unsigned int Delay;
};

/* 1256 */
struct _SERVICE_FAILURE_ACTIONSA
{
  unsigned int dwResetPeriod;
  char *lpRebootMsg;
  char *lpCommand;
  unsigned int cActions;
  _SC_ACTION *lpsaActions;
};

/* 1257 */
struct HIMC__
{
  int unused;
};

/* 1258 */
struct tagEMREXTCREATEPEN
{
  tagEMR emr;
  unsigned int ihPen;
  unsigned int offBmi;
  unsigned int cbBmi;
  unsigned int offBits;
  unsigned int cbBits;
  tagEXTLOGPEN elp;
};

/* 1259 */
union $66A2FC5ED47CB5912809650DAB14E256
{
  unsigned int VirtualAddress;
  unsigned int RelocCount;
};

/* 1260 */
#pragma pack(push, 1)
struct _IMAGE_RELOCATION
{
  $66A2FC5ED47CB5912809650DAB14E256 ___u0;
  unsigned int SymbolTableIndex;
  unsigned __int16 Type;
};
#pragma pack(pop)

/* 1261 */
struct tagWNDCLASSW
{
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const unsigned __int16 *lpszMenuName;
  const unsigned __int16 *lpszClassName;
};

/* 1262 */
struct _QUERY_SERVICE_LOCK_STATUSW
{
  unsigned int fIsLocked;
  unsigned __int16 *lpLockOwner;
  unsigned int dwLockDuration;
};

/* 1263 */
struct _MOUSE_EVENT_RECORD
{
  _COORD dwMousePosition;
  unsigned int dwButtonState;
  unsigned int dwControlKeyState;
  unsigned int dwEventFlags;
};

/* 1264 */
struct tagLOCALESIGNATURE
{
  unsigned int lsUsb[4];
  unsigned int lsCsbDefault[2];
  unsigned int lsCsbSupported[2];
};

/* 1265 */
struct _CONNECTDLGSTRUCTW
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  _NETRESOURCEW *lpConnRes;
  unsigned int dwFlags;
  unsigned int dwDevNum;
};

/* 1266 */
struct tagWINDOWPOS
{
  HWND__ *hwnd;
  HWND__ *hwndInsertAfter;
  int x;
  int y;
  int cx;
  int cy;
  unsigned int flags;
};

/* 1267 */
struct tagNCCALCSIZE_PARAMS
{
  tagRECT rgrc[3];
  tagWINDOWPOS *lppos;
};

/* 1268 */
struct _WSACOMPLETION::__unnamed::__unnamed
{
  HWND__ *hWnd;
  unsigned int uMsg;
  unsigned int context;
};

/* 1269 */
union _WSACOMPLETION::__unnamed
{
  _WSACOMPLETION::__unnamed::__unnamed WindowMessage;
  _WSACOMPLETION::__unnamed::__unnamed Event;
  _WSACOMPLETION::__unnamed::__unnamed Apc;
  _WSACOMPLETION::__unnamed::__unnamed Port;
};

/* 1270 */
struct _WSACOMPLETION
{
  _WSACOMPLETIONTYPE Type;
  _WSACOMPLETION::__unnamed Parameters;
};

/* 1271 */
struct _IMAGE_SEPARATE_DEBUG_HEADER
{
  unsigned __int16 Signature;
  unsigned __int16 Flags;
  unsigned __int16 Machine;
  unsigned __int16 Characteristics;
  unsigned int TimeDateStamp;
  unsigned int CheckSum;
  unsigned int ImageBase;
  unsigned int SizeOfImage;
  unsigned int NumberOfSections;
  unsigned int ExportedNamesSize;
  unsigned int DebugDirectorySize;
  unsigned int SectionAlignment;
  unsigned int Reserved[2];
};

/* 1272 */
struct tagCOMPAREITEMSTRUCT
{
  unsigned int CtlType;
  unsigned int CtlID;
  HWND__ *hwndItem;
  unsigned int itemID1;
  unsigned int itemData1;
  unsigned int itemID2;
  unsigned int itemData2;
  unsigned int dwLocaleId;
};

/* 1273 */
struct _ENUM_SERVICE_STATUSA
{
  char *lpServiceName;
  char *lpDisplayName;
  _SERVICE_STATUS ServiceStatus;
};

/* 1274 */
struct tagEMRRESTOREDC
{
  tagEMR emr;
  int iRelative;
};

/* 1275 */
struct _MESSAGE_RESOURCE_DATA
{
  unsigned int NumberOfBlocks;
  _MESSAGE_RESOURCE_BLOCK Blocks[1];
};

/* 1276 */
struct _cpinfoexW
{
  unsigned int MaxCharSize;
  char DefaultChar[2];
  char LeadByte[12];
  unsigned __int16 UnicodeDefaultChar;
  unsigned int CodePage;
  unsigned __int16 CodePageName[260];
};

/* 1277 */
struct tagIMECHARPOSITION
{
  unsigned int dwSize;
  unsigned int dwCharPos;
  tagPOINT pt;
  unsigned int cLineHeight;
  tagRECT rcDocument;
};

/* 1278 */
struct $9C0E1773487B9FD3614C18B0E330CFCD
{
  _SINGLE_LIST_ENTRY Next;
  unsigned __int16 Depth;
  unsigned __int16 Sequence;
};

/* 1279 */
union _SLIST_HEADER
{
  unsigned __int64 Alignment;
  $9C0E1773487B9FD3614C18B0E330CFCD _s1;
};

/* 1280 */
struct _UNIVERSAL_NAME_INFOW
{
  unsigned __int16 *lpUniversalName;
};

/* 1281 */
struct _TAPE_WRITE_MARKS
{
  unsigned int Type;
  unsigned int Count;
  char Immediate;
};

/* 1282 */
struct tagSTYLEBUFA
{
  unsigned int dwStyle;
  char szDescription[32];
};

/* 1283 */
struct tagCURSORINFO
{
  unsigned int cbSize;
  unsigned int flags;
  HICON__ *hCursor;
  tagPOINT ptScreenPos;
};

/* 1284 */
struct value_entA
{
  char *ve_valuename;
  unsigned int ve_valuelen;
  unsigned int ve_valueptr;
  unsigned int ve_type;
};

/* 1285 */
struct _IO_COUNTERS
{
  unsigned __int64 ReadOperationCount;
  unsigned __int64 WriteOperationCount;
  unsigned __int64 OtherOperationCount;
  unsigned __int64 ReadTransferCount;
  unsigned __int64 WriteTransferCount;
  unsigned __int64 OtherTransferCount;
};

/* 1286 */
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION
{
  _JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
  _IO_COUNTERS IoInfo;
  unsigned int ProcessMemoryLimit;
  unsigned int JobMemoryLimit;
  unsigned int PeakProcessMemoryUsed;
  unsigned int PeakJobMemoryUsed;
};

/* 1287 */
struct _MEMORYSTATUS
{
  unsigned int dwLength;
  unsigned int dwMemoryLoad;
  unsigned int dwTotalPhys;
  unsigned int dwAvailPhys;
  unsigned int dwTotalPageFile;
  unsigned int dwAvailPageFile;
  unsigned int dwTotalVirtual;
  unsigned int dwAvailVirtual;
};

/* 1288 */
struct _WGLSWAP
{
  HDC__ *hdc;
  unsigned int uiFlags;
};

/* 1289 */
struct _SHELLEXECUTEINFOW
{
  unsigned int cbSize;
  unsigned int fMask;
  HWND__ *hwnd;
  const unsigned __int16 *lpVerb;
  const unsigned __int16 *lpFile;
  const unsigned __int16 *lpParameters;
  const unsigned __int16 *lpDirectory;
  int nShow;
  HINSTANCE__ *hInstApp;
  void *lpIDList;
  const unsigned __int16 *lpClass;
  HKEY__ *hkeyClass;
  unsigned int dwHotKey;
  $E5EC784184F61E2D1DB730C15D65FB8F ___u13;
  void *hProcess;
};

/* 1290 */
struct tagCHARSETINFO
{
  unsigned int ciCharset;
  unsigned int ciACP;
  tagFONTSIGNATURE fs;
};

/* 1291 */
struct tagTTPOLYGONHEADER
{
  unsigned int cb;
  unsigned int dwType;
  tagPOINTFX pfxStart;
};

/* 1292 */
struct _IMAGE_ARCHIVE_MEMBER_HEADER
{
  char Name[16];
  char Date[12];
  char UserID[6];
  char GroupID[6];
  char Mode[8];
  char Size[10];
  char EndHeader[2];
};

/* 1293 */
struct IMAGE_COR20_HEADER
{
  unsigned int cb;
  unsigned __int16 MajorRuntimeVersion;
  unsigned __int16 MinorRuntimeVersion;
  _IMAGE_DATA_DIRECTORY MetaData;
  unsigned int Flags;
  unsigned int EntryPointToken;
  _IMAGE_DATA_DIRECTORY Resources;
  _IMAGE_DATA_DIRECTORY StrongNameSignature;
  _IMAGE_DATA_DIRECTORY CodeManagerTable;
  _IMAGE_DATA_DIRECTORY VTableFixups;
  _IMAGE_DATA_DIRECTORY ExportAddressTableJumps;
  _IMAGE_DATA_DIRECTORY ManagedNativeHeader;
};

/* 1294 */
#pragma pack(push, 1)
struct _SHFILEOPSTRUCTA
{
  HWND__ *hwnd;
  unsigned int wFunc;
  const char *pFrom;
  const char *pTo;
  unsigned __int16 fFlags;
  int fAnyOperationsAborted;
  void *hNameMappings;
  const char *lpszProgressTitle;
};
#pragma pack(pop)

/* 1295 */
struct _IMAGE_EXPORT_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int Name;
  unsigned int Base;
  unsigned int NumberOfFunctions;
  unsigned int NumberOfNames;
  unsigned int AddressOfFunctions;
  unsigned int AddressOfNames;
  unsigned int AddressOfNameOrdinals;
};

/* 1296 */
struct tagEMRPLGBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  _POINTL aptlDest[3];
  int xSrc;
  int ySrc;
  int cxSrc;
  int cySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int xMask;
  int yMask;
  unsigned int iUsageMask;
  unsigned int offBmiMask;
  unsigned int cbBmiMask;
  unsigned int offBitsMask;
  unsigned int cbBitsMask;
};

/* 1297 */
struct _LOAD_DLL_DEBUG_INFO
{
  void *hFile;
  void *lpBaseOfDll;
  unsigned int dwDebugInfoFileOffset;
  unsigned int nDebugInfoSize;
  void *lpImageName;
  unsigned __int16 fUnicode;
};

/* 1298 */
struct _IMAGE_RUNTIME_FUNCTION_ENTRY
{
  unsigned int BeginAddress;
  unsigned int EndAddress;
  unsigned int UnwindInfoAddress;
};

/* 1299 */
struct tagEMRCREATEMONOBRUSH
{
  tagEMR emr;
  unsigned int ihBrush;
  unsigned int iUsage;
  unsigned int offBmi;
  unsigned int cbBmi;
  unsigned int offBits;
  unsigned int cbBits;
};

/* 1300 */
union _FILE_SEGMENT_ELEMENT
{
  void *Buffer;
  unsigned __int64 Alignment;
};

/* 1301 */
struct tagENUMLOGFONTEXA
{
  tagLOGFONTA elfLogFont;
  char elfFullName[64];
  char elfStyle[32];
  char elfScript[32];
};

/* 1302 */
struct _GLYPHMETRICS
{
  unsigned int gmBlackBoxX;
  unsigned int gmBlackBoxY;
  tagPOINT gmptGlyphOrigin;
  __int16 gmCellIncX;
  __int16 gmCellIncY;
};

/* 1303 */
struct _JOB_SET_ARRAY
{
  void *JobHandle;
  unsigned int MemberLevel;
  unsigned int Flags;
};

/* 1304 */
struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION
{
  _LARGE_INTEGER TotalUserTime;
  _LARGE_INTEGER TotalKernelTime;
  _LARGE_INTEGER ThisPeriodTotalUserTime;
  _LARGE_INTEGER ThisPeriodTotalKernelTime;
  unsigned int TotalPageFaultCount;
  unsigned int TotalProcesses;
  unsigned int ActiveProcesses;
  unsigned int TotalTerminatedProcesses;
};

/* 1305 */
struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION
{
  _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
  _IO_COUNTERS IoInfo;
};

/* 1306 */
struct tagEMRSETMITERLIMIT
{
  tagEMR emr;
  float eMiterLimit;
};

/* 1307 */
struct tagEMRCREATEBRUSHINDIRECT
{
  tagEMR emr;
  unsigned int ihBrush;
  tagLOGBRUSH32 lb;
};

/* 1308 */
struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION
{
  unsigned int dwFlags;
  unsigned int ulFormatVersion;
  unsigned int ulAssemblyCount;
  unsigned int ulRootManifestPathType;
  unsigned int ulRootManifestPathChars;
  unsigned int ulRootConfigurationPathType;
  unsigned int ulRootConfigurationPathChars;
  unsigned int ulAppDirPathType;
  unsigned int ulAppDirPathChars;
  const unsigned __int16 *lpRootManifestPath;
  const unsigned __int16 *lpRootConfigurationPath;
  const unsigned __int16 *lpAppDirPath;
};

/* 1309 */
struct _CREATE_THREAD_DEBUG_INFO
{
  void *hThread;
  void *lpThreadLocalBase;
  unsigned int (__stdcall *lpStartAddress)(void *);
};

/* 1310 */
union _DEBUG_EVENT::__unnamed
{
  _EXCEPTION_DEBUG_INFO Exception;
  _CREATE_THREAD_DEBUG_INFO CreateThread;
  _CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
  _EXIT_THREAD_DEBUG_INFO ExitThread;
  _EXIT_PROCESS_DEBUG_INFO ExitProcess;
  _LOAD_DLL_DEBUG_INFO LoadDll;
  _UNLOAD_DLL_DEBUG_INFO UnloadDll;
  _OUTPUT_DEBUG_STRING_INFO DebugString;
  _RIP_INFO RipInfo;
};

/* 1311 */
struct _DEBUG_EVENT
{
  unsigned int dwDebugEventCode;
  unsigned int dwProcessId;
  unsigned int dwThreadId;
  _DEBUG_EVENT::__unnamed u;
};

/* 1312 */
struct _SECURITY_DESCRIPTOR_RELATIVE
{
  char Revision;
  char Sbz1;
  unsigned __int16 Control;
  unsigned int Owner;
  unsigned int Group;
  unsigned int Sacl;
  unsigned int Dacl;
};

/* 1313 */
struct _SHFILEINFOA
{
  HICON__ *hIcon;
  int iIcon;
  unsigned int dwAttributes;
  char szDisplayName[260];
  char szTypeName[80];
};

/* 1314 */
struct _TOKEN_STATISTICS
{
  _LUID TokenId;
  _LUID AuthenticationId;
  _LARGE_INTEGER ExpirationTime;
  _TOKEN_TYPE TokenType;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  unsigned int DynamicCharged;
  unsigned int DynamicAvailable;
  unsigned int GroupCount;
  unsigned int PrivilegeCount;
  _LUID ModifiedId;
};

/* 1315 */
struct _SHNAMEMAPPINGW
{
  unsigned __int16 *pszOldPath;
  unsigned __int16 *pszNewPath;
  int cchOldPath;
  int cchNewPath;
};

/* 1316 */
struct _PRIVILEGE_SET
{
  unsigned int PrivilegeCount;
  unsigned int Control;
  _LUID_AND_ATTRIBUTES Privilege[1];
};

/* 1317 */
struct _TAPE_GET_POSITION
{
  unsigned int Type;
  unsigned int Partition;
  _LARGE_INTEGER Offset;
};

/* 1318 */
struct tagCWPSTRUCT
{
  int lParam;
  unsigned int wParam;
  unsigned int message;
  HWND__ *hwnd;
};

/* 1319 */
struct tagALTTABINFO
{
  unsigned int cbSize;
  int cItems;
  int cColumns;
  int cRows;
  int iColFocus;
  int iRowFocus;
  int cxItem;
  int cyItem;
  tagPOINT ptStart;
};

/* 1320 */
struct _IMAGE_TLS_DIRECTORY32
{
  unsigned int StartAddressOfRawData;
  unsigned int EndAddressOfRawData;
  unsigned int AddressOfIndex;
  unsigned int AddressOfCallBacks;
  unsigned int SizeOfZeroFill;
  unsigned int Characteristics;
};

/* 1321 */
struct tagEMRPOLYDRAW16
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cpts;
  tagPOINTS apts[1];
  char abTypes[1];
};

/* 1322 */
struct _GRADIENT_RECT
{
  unsigned int UpperLeft;
  unsigned int LowerRight;
};

/* 1323 */
struct _QOS_SHAPING_RATE
{
  QOS_OBJECT_HDR ObjectHdr;
  unsigned int ShapingRate;
};

/* 1324 */
struct _TAPE_ERASE
{
  unsigned int Type;
  char Immediate;
};

/* 1325 */
struct HRSRC__
{
  int unused;
};

/* 1326 */
struct _ACL_SIZE_INFORMATION
{
  unsigned int AceCount;
  unsigned int AclBytesInUse;
  unsigned int AclBytesFree;
};

/* 1327 */
struct tagEMRPOLYPOLYLINE16
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int nPolys;
  unsigned int cpts;
  unsigned int aPolyCounts[1];
  tagPOINTS apts[1];
};

/* 1328 */
struct _ENUM_SERVICE_STATUS_PROCESSW
{
  unsigned __int16 *lpServiceName;
  unsigned __int16 *lpDisplayName;
  _SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

/* 1329 */
struct tagKERNINGPAIR
{
  unsigned __int16 wFirst;
  unsigned __int16 wSecond;
  int iKernAmount;
};

/* 1330 */
struct tagEMRCREATEPEN
{
  tagEMR emr;
  unsigned int ihPen;
  tagLOGPEN lopn;
};

/* 1331 */
union _KEY_EVENT_RECORD::__unnamed
{
  unsigned __int16 UnicodeChar;
  char AsciiChar;
};

/* 1332 */
struct _KEY_EVENT_RECORD
{
  int bKeyDown;
  unsigned __int16 wRepeatCount;
  unsigned __int16 wVirtualKeyCode;
  unsigned __int16 wVirtualScanCode;
  _KEY_EVENT_RECORD::__unnamed uChar;
  unsigned int dwControlKeyState;
};

/* 1333 */
struct _QUERY_SERVICE_LOCK_STATUSA
{
  unsigned int fIsLocked;
  char *lpLockOwner;
  unsigned int dwLockDuration;
};

/* 1334 */
struct _OBJECTID
{
  _GUID Lineage;
  unsigned int Uniquifier;
};

/* 1335 */
struct _SYSTEM_ALARM_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 1336 */
struct IMAGE_LOAD_CONFIG_DIRECTORY64
{
  unsigned int Size;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int GlobalFlagsClear;
  unsigned int GlobalFlagsSet;
  unsigned int CriticalSectionDefaultTimeout;
  unsigned __int64 DeCommitFreeBlockThreshold;
  unsigned __int64 DeCommitTotalFreeThreshold;
  unsigned __int64 LockPrefixTable;
  unsigned __int64 MaximumAllocationSize;
  unsigned __int64 VirtualMemoryThreshold;
  unsigned __int64 ProcessAffinityMask;
  unsigned int ProcessHeapFlags;
  unsigned __int16 CSDVersion;
  unsigned __int16 Reserved1;
  unsigned __int64 EditList;
  unsigned __int64 SecurityCookie;
  unsigned __int64 SEHandlerTable;
  unsigned __int64 SEHandlerCount;
};

/* 1337 */
struct tagEMRSETPIXELV
{
  tagEMR emr;
  _POINTL ptlPixel;
  unsigned int crColor;
};

/* 1338 */
struct linger
{
  unsigned __int16 l_onoff;
  unsigned __int16 l_linger;
};

/* 1339 */
union $8662F439D215AAEDBB1F787C8B649648
{
  unsigned __int64 FiberData;
  unsigned int Version;
};

/* 1340 */
struct _NT_TIB64
{
  unsigned __int64 ExceptionList;
  unsigned __int64 StackBase;
  unsigned __int64 StackLimit;
  unsigned __int64 SubSystemTib;
  $8662F439D215AAEDBB1F787C8B649648 ___u4;
  unsigned __int64 ArbitraryUserPointer;
  unsigned __int64 Self;
};

/* 1341 */
struct _ABCFLOAT
{
  float abcfA;
  float abcfB;
  float abcfC;
};

/* 1342 */
struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
{
  unsigned __int64 BeginAddress;
  unsigned __int64 EndAddress;
  unsigned __int64 ExceptionHandler;
  unsigned __int64 HandlerData;
  unsigned __int64 PrologEndAddress;
};

/* 1343 */
struct _CONSOLE_CURSOR_INFO
{
  unsigned int dwSize;
  int bVisible;
};

/* 1344 */
struct _TAPE_GET_MEDIA_PARAMETERS
{
  _LARGE_INTEGER Capacity;
  _LARGE_INTEGER Remaining;
  unsigned int BlockSize;
  unsigned int PartitionCount;
  char WriteProtected;
};

/* 1345 */
struct _SERVICE_DESCRIPTIONA
{
  char *lpDescription;
};

/* 1346 */
struct timeval
{
  int tv_sec;
  int tv_usec;
};

/* 1347 */
struct tagBITMAP
{
  int bmType;
  int bmWidth;
  int bmHeight;
  int bmWidthBytes;
  unsigned __int16 bmPlanes;
  unsigned __int16 bmBitsPixel;
  void *bmBits;
};

/* 1348 */
struct tagDIBSECTION
{
  tagBITMAP dsBm;
  tagBITMAPINFOHEADER dsBmih;
  unsigned int dsBitfields[3];
  void *dshSection;
  unsigned int dsOffset;
};

/* 1349 */
struct _WIN32_STREAM_ID
{
  unsigned int dwStreamId;
  unsigned int dwStreamAttributes;
  _LARGE_INTEGER Size;
  unsigned int dwStreamNameSize;
  unsigned __int16 cStreamName[1];
};

/* 1350 */
struct tagENUMLOGFONTEXW
{
  tagLOGFONTW elfLogFont;
  unsigned __int16 elfFullName[64];
  unsigned __int16 elfStyle[32];
  unsigned __int16 elfScript[32];
};

/* 1351 */
struct _TOKEN_OWNER
{
  void *Owner;
};

/* 1352 */
struct _EVENTSFORLOGFILE
{
  unsigned int ulSize;
  unsigned __int16 szLogicalLogFile[256];
  unsigned int ulNumRecords;
  _EVENTLOGRECORD pEventLogRecords[];
};

/* 1353 */
struct _IMAGE_RESOURCE_DIRECTORY_STRING
{
  unsigned __int16 Length;
  char NameString[1];
};

/* 1354 */
struct _ACCESS_DENIED_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 1355 */
struct _IMAGE_DOS_HEADER
{
  unsigned __int16 e_magic;
  unsigned __int16 e_cblp;
  unsigned __int16 e_cp;
  unsigned __int16 e_crlc;
  unsigned __int16 e_cparhdr;
  unsigned __int16 e_minalloc;
  unsigned __int16 e_maxalloc;
  unsigned __int16 e_ss;
  unsigned __int16 e_sp;
  unsigned __int16 e_csum;
  unsigned __int16 e_ip;
  unsigned __int16 e_cs;
  unsigned __int16 e_lfarlc;
  unsigned __int16 e_ovno;
  unsigned __int16 e_res[4];
  unsigned __int16 e_oemid;
  unsigned __int16 e_oeminfo;
  unsigned __int16 e_res2[10];
  int e_lfanew;
};

/* 1356 */
struct _NOTIFYICONDATAW
{
  unsigned int cbSize;
  HWND__ *hWnd;
  unsigned int uID;
  unsigned int uFlags;
  unsigned int uCallbackMessage;
  HICON__ *hIcon;
  unsigned __int16 szTip[64];
};

/* 1357 */
struct HDROP__
{
  int unused;
};

/* 1358 */
struct tagIMEMENUITEMINFOW
{
  unsigned int cbSize;
  unsigned int fType;
  unsigned int fState;
  unsigned int wID;
  HBITMAP__ *hbmpChecked;
  HBITMAP__ *hbmpUnchecked;
  unsigned int dwItemData;
  unsigned __int16 szString[80];
  HBITMAP__ *hbmpItem;
};

/* 1359 */
struct _DRAGINFOW
{
  unsigned int uSize;
  tagPOINT pt;
  int fNC;
  unsigned __int16 *lpFileList;
  unsigned int grfKeyState;
};

/* 1360 */
struct tagCOLORADJUSTMENT
{
  unsigned __int16 caSize;
  unsigned __int16 caFlags;
  unsigned __int16 caIlluminantIndex;
  unsigned __int16 caRedGamma;
  unsigned __int16 caGreenGamma;
  unsigned __int16 caBlueGamma;
  unsigned __int16 caReferenceBlack;
  unsigned __int16 caReferenceWhite;
  __int16 caContrast;
  __int16 caBrightness;
  __int16 caColorfulness;
  __int16 caRedGreenTint;
};

/* 1361 */
struct tagEMRSETCOLORADJUSTMENT
{
  tagEMR emr;
  tagCOLORADJUSTMENT ColorAdjustment;
};

/* 1362 */
struct _FPO_DATA
{
  unsigned int ulOffStart;
  unsigned int cbProcSize;
  unsigned int cdwLocals;
  unsigned __int16 cdwParams;
  __int16 _bf14;
};

/* 1363 */
struct tagNONCLIENTMETRICSW
{
  unsigned int cbSize;
  int iBorderWidth;
  int iScrollWidth;
  int iScrollHeight;
  int iCaptionWidth;
  int iCaptionHeight;
  tagLOGFONTW lfCaptionFont;
  int iSmCaptionWidth;
  int iSmCaptionHeight;
  tagLOGFONTW lfSmCaptionFont;
  int iMenuWidth;
  int iMenuHeight;
  tagLOGFONTW lfMenuFont;
  tagLOGFONTW lfStatusFont;
  tagLOGFONTW lfMessageFont;
};

/* 1364 */
struct tagEMRSETVIEWPORTORGEX
{
  tagEMR emr;
  _POINTL ptlOrigin;
};

/* 1365 */
struct _SERVICE_TABLE_ENTRYA
{
  char *lpServiceName;
  void (__stdcall *lpServiceProc)(unsigned int, char **);
};

/* 1366 */
struct _MENU_EVENT_RECORD
{
  unsigned int dwCommandId;
};

/* 1367 */
struct _RGNDATAHEADER
{
  unsigned int dwSize;
  unsigned int iType;
  unsigned int nCount;
  unsigned int nRgnSize;
  tagRECT rcBound;
};

/* 1368 */
struct _RGNDATA
{
  _RGNDATAHEADER rdh;
  char Buffer[1];
};

/* 1369 */
struct _REMOTE_NAME_INFOA
{
  char *lpUniversalName;
  char *lpConnectionName;
  char *lpRemainingPath;
};

/* 1370 */
struct tagFILTERKEYS
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iWaitMSec;
  unsigned int iDelayMSec;
  unsigned int iRepeatMSec;
  unsigned int iBounceMSec;
};

/* 1371 */
struct tagEMRSETTEXTCOLOR
{
  tagEMR emr;
  unsigned int crColor;
};

/* 1372 */
struct _DOCINFOW
{
  int cbSize;
  const unsigned __int16 *lpszDocName;
  const unsigned __int16 *lpszOutput;
  const unsigned __int16 *lpszDatatype;
  unsigned int fwType;
};

/* 1373 */
struct tagDELETEITEMSTRUCT
{
  unsigned int CtlType;
  unsigned int CtlID;
  unsigned int itemID;
  HWND__ *hwndItem;
  unsigned int itemData;
};

/* 1374 */
struct _WSANETWORKEVENTS
{
  int lNetworkEvents;
  int iErrorCode[10];
};

/* 1375 */
struct tagMONITORINFOEXW
{
  tagMONITORINFO baseclass_0;
  unsigned __int16 szDevice[32];
};

/* 1376 */
struct _SYSTEM_POWER_POLICY
{
  unsigned int Revision;
  POWER_ACTION_POLICY PowerButton;
  POWER_ACTION_POLICY SleepButton;
  POWER_ACTION_POLICY LidClose;
  _SYSTEM_POWER_STATE LidOpenWake;
  unsigned int Reserved;
  POWER_ACTION_POLICY Idle;
  unsigned int IdleTimeout;
  char IdleSensitivity;
  char DynamicThrottle;
  char Spare2[2];
  _SYSTEM_POWER_STATE MinSleep;
  _SYSTEM_POWER_STATE MaxSleep;
  _SYSTEM_POWER_STATE ReducedLatencySleep;
  unsigned int WinLogonFlags;
  unsigned int Spare3;
  unsigned int DozeS4Timeout;
  unsigned int BroadcastCapacityResolution;
  SYSTEM_POWER_LEVEL DischargePolicy[4];
  unsigned int VideoTimeout;
  char VideoDimDisplay;
  unsigned int VideoReserved[3];
  unsigned int SpindownTimeout;
  char OptimizeForPower;
  char FanThrottleTolerance;
  char ForcedThrottle;
  char MinThrottle;
  POWER_ACTION_POLICY OverThrottled;
};

/* 1377 */
struct tagNEWTEXTMETRICW
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  unsigned __int16 tmFirstChar;
  unsigned __int16 tmLastChar;
  unsigned __int16 tmDefaultChar;
  unsigned __int16 tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
  unsigned int ntmFlags;
  unsigned int ntmSizeEM;
  unsigned int ntmCellHeight;
  unsigned int ntmAvgWidth;
};

/* 1378 */
struct _IMAGE_RESOURCE_DIR_STRING_U
{
  unsigned __int16 Length;
  unsigned __int16 NameString[1];
};

/* 1379 */
struct tagEMRMASKBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int xMask;
  int yMask;
  unsigned int iUsageMask;
  unsigned int offBmiMask;
  unsigned int cbBmiMask;
  unsigned int offBitsMask;
  unsigned int cbBitsMask;
};

/* 1380 */
struct BATTERY_REPORTING_SCALE
{
  unsigned int Granularity;
  unsigned int Capacity;
};

/* 1381 */
struct tagEMRPIXELFORMAT
{
  tagEMR emr;
  tagPIXELFORMATDESCRIPTOR pfd;
};

/* 1382 */
struct _SYSTEM_AUDIT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 1383 */
struct SERVICE_STATUS_HANDLE__
{
  int unused;
};

/* 1384 */
struct ServerManage::ManageCommand
{
  PktBase baseclass_0;
  unsigned int nMessage;
  unsigned int wParam;
  int lParam;
  unsigned int dwRunID;
  unsigned __int16 usFlags;
  unsigned __int16 usDataLen;
};

/* 1385 */
struct ServerManage::PktManagePacket
{
  PktBase baseclass_0;
  unsigned int m_dwPID;
  unsigned int m_dwStatusFlag;
  unsigned int m_dwSubCommand;
};

/* 1386 */
struct ServerManage::PktManagePing
{
  ServerManage::PktManagePacket baseclass_0;
  char m_szAppFullPathName[260];
  char m_szWindowName[260];
  char m_szCommandLine[520];
};

/* 1387 */
struct tagMENUINFO
{
  unsigned int cbSize;
  unsigned int fMask;
  unsigned int dwStyle;
  unsigned int cyMax;
  HBRUSH__ *hbrBack;
  unsigned int dwContextHelpID;
  unsigned int dwMenuData;
};

/* 1388 */
struct _ICONINFO
{
  int fIcon;
  unsigned int xHotspot;
  unsigned int yHotspot;
  HBITMAP__ *hbmMask;
  HBITMAP__ *hbmColor;
};

/* 1389 */
struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR
{
  unsigned int Length;
  _RTL_VERIFIER_DLL_DESCRIPTOR *ProviderDlls;
  void (__stdcall *ProviderDllLoadCallback)(unsigned __int16 *, void *, unsigned int, void *);
  void (__stdcall *ProviderDllUnloadCallback)(unsigned __int16 *, void *, unsigned int, void *);
  unsigned __int16 *VerifierImage;
  unsigned int VerifierFlags;
  unsigned int VerifierDebug;
  void *RtlpGetStackTraceAddress;
  void *RtlpDebugPageHeapCreate;
  void *RtlpDebugPageHeapDestroy;
};

/* 1390 */
struct _cpinfo
{
  unsigned int MaxCharSize;
  char DefaultChar[2];
  char LeadByte[12];
};

/* 1391 */
struct SHELLHOOKINFO
{
  HWND__ *hwnd;
  tagRECT rc;
};

/* 1392 */
struct _PSFEATURE_OUTPUT
{
  int bPageIndependent;
  int bSetPageDevice;
};

/* 1393 */
struct _SYSTEM_AUDIT_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 1394 */
struct netent
{
  char *n_name;
  char **n_aliases;
  __int16 n_addrtype;
  unsigned int n_net;
};

/* 1395 */
struct tagEMRGDICOMMENT
{
  tagEMR emr;
  unsigned int cbData;
  char Data[1];
};

/* 1396 */
struct tagCURSORSHAPE
{
  int xHotSpot;
  int yHotSpot;
  int cx;
  int cy;
  int cbWidth;
  char Planes;
  char BitsPixel;
};

/* 1397 */
struct provider_info
{
  unsigned int (__cdecl *pi_R0_1val)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);
  unsigned int (__cdecl *pi_R0_allvals)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);
  unsigned int (__cdecl *pi_R3_1val)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);
  unsigned int (__cdecl *pi_R3_allvals)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);
  unsigned int pi_flags;
  void *pi_key_context;
};

/* 1398 */
struct HCOLORSPACE__
{
  int unused;
};

/* 1399 */
struct _TAPE_CREATE_PARTITION
{
  unsigned int Method;
  unsigned int Count;
  unsigned int Size;
};

/* 1400 */
struct tagEMRSETCOLORSPACE
{
  tagEMR emr;
  unsigned int ihCS;
};

/* 1401 */
struct tagSOUNDSENTRYW
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iFSTextEffect;
  unsigned int iFSTextEffectMSec;
  unsigned int iFSTextEffectColorBits;
  unsigned int iFSGrafEffect;
  unsigned int iFSGrafEffectMSec;
  unsigned int iFSGrafEffectColor;
  unsigned int iWindowsEffect;
  unsigned int iWindowsEffectMSec;
  unsigned __int16 *lpszWindowsEffectDLL;
  unsigned int iWindowsEffectOrdinal;
};

/* 1402 */
struct tagENUMLOGFONTW
{
  tagLOGFONTW elfLogFont;
  unsigned __int16 elfFullName[64];
  unsigned __int16 elfStyle[32];
};

/* 1403 */
struct _TOKEN_AUDIT_POLICY
{
  unsigned int PolicyCount;
  _TOKEN_AUDIT_POLICY_ELEMENT Policy[1];
};

/* 1404 */
union _IMAGE_SECTION_HEADER::__unnamed
{
  unsigned int PhysicalAddress;
  unsigned int VirtualSize;
};

/* 1405 */
struct _CONSOLE_FONT_INFO
{
  unsigned int nFont;
  _COORD dwFontSize;
};

/* 1406 */
struct _DISCDLGSTRUCTW
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  unsigned __int16 *lpLocalName;
  unsigned __int16 *lpRemoteName;
  unsigned int dwFlags;
};

/* 1407 */
struct _JOBOBJECT_BASIC_PROCESS_ID_LIST
{
  unsigned int NumberOfAssignedProcesses;
  unsigned int NumberOfProcessIdsInList;
  unsigned int ProcessIdList[1];
};

/* 1408 */
struct _FILE_NOTIFY_INFORMATION
{
  unsigned int NextEntryOffset;
  unsigned int Action;
  unsigned int FileNameLength;
  unsigned __int16 FileName[1];
};

/* 1409 */
struct _IMAGE_RESOURCE_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned __int16 NumberOfNamedEntries;
  unsigned __int16 NumberOfIdEntries;
};

/* 1410 */
struct tagCOMPOSITIONFORM
{
  unsigned int dwStyle;
  tagPOINT ptCurrentPos;
  tagRECT rcArea;
};

/* 1411 */
struct _SERVICE_DESCRIPTIONW
{
  unsigned __int16 *lpDescription;
};

/* 1412 */
union $E38888FFFF2E8047BDBD55C921E86469
{
  unsigned int FiberData;
  unsigned int Version;
};

/* 1413 */
struct _NT_TIB32
{
  unsigned int ExceptionList;
  unsigned int StackBase;
  unsigned int StackLimit;
  unsigned int SubSystemTib;
  $E38888FFFF2E8047BDBD55C921E86469 ___u4;
  unsigned int ArbitraryUserPointer;
  unsigned int Self;
};

/* 1414 */
struct _IMAGE_NT_HEADERS64
{
  unsigned int Signature;
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_OPTIONAL_HEADER64 OptionalHeader;
};

/* 1415 */
struct _IMAGE_TLS_DIRECTORY64
{
  unsigned __int64 StartAddressOfRawData;
  unsigned __int64 EndAddressOfRawData;
  unsigned __int64 AddressOfIndex;
  unsigned __int64 AddressOfCallBacks;
  unsigned int SizeOfZeroFill;
  unsigned int Characteristics;
};

/* 1416 */
struct tagEMRGRADIENTFILL
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int nVer;
  unsigned int nTri;
  unsigned int ulMode;
  _TRIVERTEX Ver[1];
};

/* 1417 */
struct _SE_IMPERSONATION_STATE
{
  void *Token;
  char CopyOnOpen;
  char EffectiveOnly;
  _SECURITY_IMPERSONATION_LEVEL Level;
};

/* 1418 */
struct tagEMREXTFLOODFILL
{
  tagEMR emr;
  _POINTL ptlStart;
  unsigned int crColor;
  unsigned int iMode;
};

/* 1419 */
struct _ACCESS_ALLOWED_CALLBACK_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 1420 */
struct _EVENTLOG_FULL_INFORMATION
{
  unsigned int dwFull;
};

/* 1421 */
struct tagCBT_CREATEWNDA
{
  tagCREATESTRUCTA *lpcs;
  HWND__ *hwndInsertAfter;
};

/* 1422 */
struct HHOOK__
{
  int unused;
};

/* 1423 */
struct _REPARSE_GUID_DATA_BUFFER::__unnamed
{
  char DataBuffer[1];
};

/* 1424 */
struct _REPARSE_GUID_DATA_BUFFER
{
  unsigned int ReparseTag;
  unsigned __int16 ReparseDataLength;
  unsigned __int16 Reserved;
  _GUID ReparseGuid;
  _REPARSE_GUID_DATA_BUFFER::__unnamed GenericReparseBuffer;
};

/* 1425 */
struct _SECURITY_DESCRIPTOR
{
  char Revision;
  char Sbz1;
  unsigned __int16 Control;
  void *Owner;
  void *Group;
  _ACL *Sacl;
  _ACL *Dacl;
};

/* 1426 */
struct tagTTPOLYCURVE
{
  unsigned __int16 wType;
  unsigned __int16 cpfx;
  tagPOINTFX apfx[1];
};

/* 1427 */
struct _TAPE_PREPARE
{
  unsigned int Operation;
  char Immediate;
};

/* 1428 */
union _CHAR_INFO::__unnamed
{
  unsigned __int16 UnicodeChar;
  char AsciiChar;
};

/* 1429 */
struct _CHAR_INFO
{
  _CHAR_INFO::__unnamed Char;
  unsigned __int16 Attributes;
};

/* 1430 */
struct tagEMRCREATEPALETTE
{
  tagEMR emr;
  unsigned int ihPal;
  tagLOGPALETTE lgpl;
};

/* 1431 */
struct _JOBOBJECT_BASIC_UI_RESTRICTIONS
{
  unsigned int UIRestrictionsClass;
};

/* 1432 */
struct LIST_ENTRY64
{
  unsigned __int64 Flink;
  unsigned __int64 Blink;
};

/* 1433 */
struct HPEN__
{
  int unused;
};

/* 1434 */
struct _SECURITY_QUALITY_OF_SERVICE
{
  unsigned int Length;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  char ContextTrackingMode;
  char EffectiveOnly;
};

/* 1435 */
struct tagDRAWITEMSTRUCT
{
  unsigned int CtlType;
  unsigned int CtlID;
  unsigned int itemID;
  unsigned int itemAction;
  unsigned int itemState;
  HWND__ *hwndItem;
  HDC__ *hDC;
  tagRECT rcItem;
  unsigned int itemData;
};

/* 1436 */
struct _TAPE_GET_DRIVE_PARAMETERS
{
  char ECC;
  char Compression;
  char DataPadding;
  char ReportSetmarks;
  unsigned int DefaultBlockSize;
  unsigned int MaximumBlockSize;
  unsigned int MinimumBlockSize;
  unsigned int MaximumPartitionCount;
  unsigned int FeaturesLow;
  unsigned int FeaturesHigh;
  unsigned int EOTWarningZoneSize;
};

/* 1437 */
struct _AppBarData
{
  unsigned int cbSize;
  HWND__ *hWnd;
  unsigned int uCallbackMessage;
  unsigned int uEdge;
  tagRECT rc;
  int lParam;
};

/* 1438 */
struct _TAPE_SET_MEDIA_PARAMETERS
{
  unsigned int BlockSize;
};

/* 1439 */
struct tagMDICREATESTRUCTW
{
  const unsigned __int16 *szClass;
  const unsigned __int16 *szTitle;
  void *hOwner;
  int x;
  int y;
  int cx;
  int cy;
  unsigned int style;
  int lParam;
};

/* 1440 */
struct SYSTEM_POWER_CAPABILITIES
{
  char PowerButtonPresent;
  char SleepButtonPresent;
  char LidPresent;
  char SystemS1;
  char SystemS2;
  char SystemS3;
  char SystemS4;
  char SystemS5;
  char HiberFilePresent;
  char FullWake;
  char VideoDimPresent;
  char ApmPresent;
  char UpsPresent;
  char ThermalControl;
  char ProcessorThrottle;
  char ProcessorMinThrottle;
  char ProcessorMaxThrottle;
  char spare2[4];
  char DiskSpinDown;
  char spare3[8];
  char SystemBatteriesPresent;
  char BatteriesAreShortTerm;
  BATTERY_REPORTING_SCALE BatteryScale[3];
  _SYSTEM_POWER_STATE AcOnLineWake;
  _SYSTEM_POWER_STATE SoftLidWake;
  _SYSTEM_POWER_STATE RtcWake;
  _SYSTEM_POWER_STATE MinDeviceWakeState;
  _SYSTEM_POWER_STATE DefaultLowLatencyWake;
};

/* 1441 */
struct tagEMRGLSBOUNDEDRECORD
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cbData;
  char Data[1];
};

/* 1442 */
union $980F6A28C67C8F3640106D01D4C85A6A
{
  unsigned int Characteristics;
  unsigned int OriginalFirstThunk;
};

/* 1443 */
struct _IMAGE_IMPORT_DESCRIPTOR
{
  $980F6A28C67C8F3640106D01D4C85A6A ___u0;
  unsigned int TimeDateStamp;
  unsigned int ForwarderChain;
  unsigned int Name;
  unsigned int FirstThunk;
};

/* 1444 */
struct _DRAWPATRECT
{
  tagPOINT ptPosition;
  tagPOINT ptSize;
  unsigned __int16 wStyle;
  unsigned __int16 wPattern;
};

/* 1445 */
struct tagEMRBITBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
};

/* 1446 */
struct _SERVICE_FAILURE_ACTIONSW
{
  unsigned int dwResetPeriod;
  unsigned __int16 *lpRebootMsg;
  unsigned __int16 *lpCommand;
  unsigned int cActions;
  _SC_ACTION *lpsaActions;
};

/* 1447 */
struct _SID
{
  char Revision;
  char SubAuthorityCount;
  _SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
  unsigned int SubAuthority[1];
};

/* 1448 */
struct tagEMRSETMAPPERFLAGS
{
  tagEMR emr;
  unsigned int dwFlags;
};

/* 1449 */
struct tagMDINEXTMENU
{
  HMENU__ *hmenuIn;
  HMENU__ *hmenuNext;
  HWND__ *hwndNext;
};

/* 1450 */
struct tagEMRSETPALETTEENTRIES
{
  tagEMR emr;
  unsigned int ihPal;
  unsigned int iStart;
  unsigned int cEntries;
  tagPALETTEENTRY aPalEntries[1];
};

/* 1451 */
struct _EXCEPTION_RECORD64
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  unsigned __int64 ExceptionRecord;
  unsigned __int64 ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int __unusedAlignment;
  unsigned __int64 ExceptionInformation[15];
};

/* 1452 */
struct tagEMRRESIZEPALETTE
{
  tagEMR emr;
  unsigned int ihPal;
  unsigned int cEntries;
};

/* 1453 */
struct _OBJECT_TYPE_LIST
{
  unsigned __int16 Level;
  unsigned __int16 Sbz;
  _GUID *ObjectType;
};

/* 1454 */
struct timecaps_tag
{
  unsigned int wPeriodMin;
  unsigned int wPeriodMax;
};

/* 1455 */
struct _TIME_ZONE_INFORMATION
{
  int Bias;
  unsigned __int16 StandardName[32];
  _SYSTEMTIME StandardDate;
  int StandardBias;
  unsigned __int16 DaylightName[32];
  _SYSTEMTIME DaylightDate;
  int DaylightBias;
};

/* 1456 */
struct CRecvCommandFromManageClient
{
  CMsgProc baseclass_0;
  CServerWindowFramework *m_ServerWindowFramework;
  CConsoleCMDFactory *m_CommandFactory;
  CCommandProcess *m_CommandProcess;
};

/* 1457 */
struct tagTPMPARAMS
{
  unsigned int cbSize;
  tagRECT rcExclude;
};

/* 1458 */
struct pvalueW
{
  unsigned __int16 *pv_valuename;
  int pv_valuelen;
  void *pv_value_context;
  unsigned int pv_type;
};

/* 1459 */
struct _WINDOW_BUFFER_SIZE_RECORD
{
  _COORD dwSize;
};

/* 1460 */
union _INPUT_RECORD::__unnamed
{
  _KEY_EVENT_RECORD KeyEvent;
  _MOUSE_EVENT_RECORD MouseEvent;
  _WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
  _MENU_EVENT_RECORD MenuEvent;
  _FOCUS_EVENT_RECORD FocusEvent;
};

/* 1461 */
struct _INPUT_RECORD
{
  unsigned __int16 EventType;
  _INPUT_RECORD::__unnamed Event;
};

/* 1462 */
#pragma pack(push, 1)
struct _SHQUERYRBINFO
{
  unsigned int cbSize;
  __int64 i64Size;
  __int64 i64NumItems;
};
#pragma pack(pop)

/* 1463 */
struct _PSFEATURE_CUSTPAPER
{
  int lOrientation;
  int lWidth;
  int lHeight;
  int lWidthOffset;
  int lHeightOffset;
};

/* 1464 */
union _IMAGE_THUNK_DATA64::__unnamed
{
  unsigned __int64 ForwarderString;
  unsigned __int64 Function;
  unsigned __int64 Ordinal;
  unsigned __int64 AddressOfData;
};

/* 1465 */
struct _IMAGE_THUNK_DATA64
{
  _IMAGE_THUNK_DATA64::__unnamed u1;
};

/* 1466 */
struct protoent
{
  char *p_name;
  char **p_aliases;
  __int16 p_proto;
};

/* 1467 */
struct HDESK__
{
  int unused;
};

/* 1468 */
struct _QOS_SD_MODE
{
  QOS_OBJECT_HDR ObjectHdr;
  unsigned int ShapeDiscardMode;
};

/* 1469 */
struct MENUITEMTEMPLATE
{
  unsigned __int16 mtOption;
  unsigned __int16 mtID;
  unsigned __int16 mtString[1];
};

/* 1470 */
struct tagNEWTEXTMETRICEXW
{
  tagNEWTEXTMETRICW ntmTm;
  tagFONTSIGNATURE ntmFontSig;
};

/* 1471 */
struct tagGCP_RESULTSW
{
  unsigned int lStructSize;
  unsigned __int16 *lpOutString;
  unsigned int *lpOrder;
  int *lpDx;
  int *lpCaretPos;
  char *lpClass;
  unsigned __int16 *lpGlyphs;
  unsigned int nGlyphs;
  int nMaxFit;
};

/* 1472 */
struct tagHARDWAREHOOKSTRUCT
{
  HWND__ *hwnd;
  unsigned int message;
  unsigned int wParam;
  int lParam;
};

/* 1473 */
struct _QUOTA_LIMITS_EX
{
  unsigned int PagedPoolLimit;
  unsigned int NonPagedPoolLimit;
  unsigned int MinimumWorkingSetSize;
  unsigned int MaximumWorkingSetSize;
  unsigned int PagefileLimit;
  _LARGE_INTEGER TimeLimit;
  unsigned int Reserved1;
  unsigned int Reserved2;
  unsigned int Reserved3;
  unsigned int Reserved4;
  unsigned int Flags;
  unsigned int Reserved5;
};

/* 1474 */
struct _IMAGE_IMPORT_BY_NAME
{
  unsigned __int16 Hint;
  char Name[1];
};

/* 1475 */
struct HSTR__
{
  int unused;
};

/* 1476 */
struct _ACL_REVISION_INFORMATION
{
  unsigned int AclRevision;
};

/* 1477 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *_Right;
  std::pair<unsigned long const ,Registry::CSetupFile::Data> _Myval;
  char _Color;
  char _Isnil;
};

/* 1478 */
struct Registry::CSetupFile::Data
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > m_szSection;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > m_szKey;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > m_szValue;
};

/* 1479 */
struct std::pair<unsigned long const ,Registry::CSetupFile::Data>
{
  const unsigned int first;
  Registry::CSetupFile::Data second;
};

/* 1480 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *>
{
  char dummy[1];
};

/* 1481 */
struct std::_Allocator_base<std::pair<unsigned long const ,Registry::CSetupFile::Data> >
{
  char dummy[1];
};

/* 1482 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *> baseclass_0;
};

/* 1483 */
struct std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1>
{
  std::less<unsigned long> comp;
};

/* 1484 */
struct std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >
{
  std::_Allocator_base<std::pair<unsigned long const ,Registry::CSetupFile::Data> > baseclass_0;
};

/* 1485 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node>
{
  char dummy[1];
};

/* 1486 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node> baseclass_0;
};

/* 1487 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >
{
  std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node> _Alnod;
};

/* 1488 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *> _Alptr;
};

/* 1489 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> > _Alval;
};

/* 1490 */
struct std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1491 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,Registry::CSetupFile::Data>,int,std::pair<unsigned long const ,Registry::CSetupFile::Data> const *,std::pair<unsigned long const ,Registry::CSetupFile::Data> const &>
{
  char dummy[1];
};

/* 1492 */
struct std::_Bidit<std::pair<unsigned long const ,Registry::CSetupFile::Data>,int,std::pair<unsigned long const ,Registry::CSetupFile::Data> const *,std::pair<unsigned long const ,Registry::CSetupFile::Data> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,Registry::CSetupFile::Data>,int,std::pair<unsigned long const ,Registry::CSetupFile::Data> const *,std::pair<unsigned long const ,Registry::CSetupFile::Data> const &> baseclass_0;
};

/* 1493 */
union $8157EC7904172BB8482777088839BC31
{
  std::_Bidit<std::pair<unsigned long const ,Registry::CSetupFile::Data>,int,std::pair<unsigned long const ,Registry::CSetupFile::Data> const *,std::pair<unsigned long const ,Registry::CSetupFile::Data> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *_Ptr;
};

/* 1494 */
struct std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::const_iterator
{
  $8157EC7904172BB8482777088839BC31 ___u0;
};

/* 1495 */
struct std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::const_iterator baseclass_0;
};

/* 1496 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::iterator first;
  bool second;
};

/* 1497 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupF
{
  std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::iterator first;
  std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::iterator second;
};

/* 1498 */
struct std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >::rebind<std::pair<unsigned long const ,Registry::CSetupFile::Data> >
{
  char dummy[1];
};

/* 1499 */
struct std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data>
{
  char dummy[1];
};

/* 1500 */
struct std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 1501 */
struct std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >::rebind<char>
{
  char dummy[1];
};

/* 1502 */
struct std::multimap<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> > baseclass_0;
};

/* 1503 */
struct Registry::CSetupFile
{
  std::multimap<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> > > m_SetupMap;
};

/* 1504 */
struct std::unary_function<CPacketStatistics::PacketData,void>
{
  char dummy[1];
};

/* 1505 */
struct CPacketStatistics::PacketData
{
  long double m_Bytes;
  long double m_Count;
};

/* 1506 */
union $C8C09857246D23FDC4DB10515DA2478E
{
  std::unary_function<CPacketStatistics::PacketData,void> baseclass_0;
  void (__thiscall *_Pmemfun)(CPacketStatistics::PacketData *this);
};

/* 1507 */
struct std::mem_fun_ref_t<void,CPacketStatistics::PacketData>
{
  $C8C09857246D23FDC4DB10515DA2478E ___u0;
};

/* 1508 */
struct std::unary_function<CPacketStatistics::CompressData,void>
{
  char dummy[1];
};

/* 1509 */
struct CPacketStatistics::CompressData
{
  long double m_CompressCount;
  long double m_FailedCount;
  long double m_TotalBytes;
  long double m_TotalCompressed;
};

/* 1510 */
union $BF90997F7938B950E53B5C1262B9BC93
{
  std::unary_function<CPacketStatistics::CompressData,void> baseclass_0;
  void (__thiscall *_Pmemfun)(CPacketStatistics::CompressData *this);
};

/* 1511 */
struct std::mem_fun_ref_t<void,CPacketStatistics::CompressData>
{
  $BF90997F7938B950E53B5C1262B9BC93 ___u0;
};

/* 1512 */
struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;
};

/* 1513 */
struct CPacketStatistics
{
  int m_StartTime;
  void (__cdecl *m_fnPrefix)(_iobuf *);
  void (__cdecl *m_fnPostfix)(_iobuf *);
  CPacketStatistics::PacketData m_RecvData[255];
  CPacketStatistics::PacketData m_SendData[255];
  CPacketStatistics::CompressData m_CompressionData[255];
};

/* 1514 */
struct _TypeDescriptor
{
  const void *pVFTable;
  void *spare;
  char name[];
};

/* 1515 */
struct _PMD
{
  int mdisp;
  int pdisp;
  int vdisp;
};

/* 1516 */
struct _s__CatchableType
{
  unsigned int properties;
  _TypeDescriptor *pType;
  _PMD thisDisplacement;
  int sizeOrOffset;
  void (__cdecl *copyFunction)();
};

/* 1517 */
struct _s__CatchableTypeArray
{
  int nCatchableTypes;
  _s__CatchableType *arrayOfCatchableTypes[];
};

/* 1518 */
const struct _s__RTTIBaseClassDescriptor
{
  _TypeDescriptor *pTypeDescriptor;
  unsigned int numContainedBases;
  _PMD where;
  unsigned int attributes;
};

/* 1519 */
const struct _s__RTTIBaseClassArray
{
  _s__RTTIBaseClassDescriptor *arrayOfBaseClassDescriptors[];
  _BYTE gap0[1];
};

/* 1520 */
struct _s__RTTIClassHierarchyDescriptor
{
  unsigned int signature;
  unsigned int attributes;
  unsigned int numBaseClasses;
  _s__RTTIBaseClassArray *pBaseClassArray;
};

/* 1521 */
struct _s__RTTICompleteObjectLocator
{
  unsigned int signature;
  unsigned int offset;
  unsigned int cdOffset;
  _TypeDescriptor *pTypeDescriptor;
  _s__RTTIClassHierarchyDescriptor *pClassDescriptor;
};

/* 1522 */
struct _s__ThrowInfo
{
  unsigned int attributes;
  void (__cdecl *pmfnUnwind)();
  int (__cdecl *pForwardCompat)();
  _s__CatchableTypeArray *pCatchableTypeArray;
};

/* 1523 */
struct type_info
{
  type_infoVtbl *vfptr;
  void *_m_data;
  char _m_d_name[1];
};

/* 1524 */
struct type_infoVtbl
{
  void *(__thiscall *__vecDelDtor)(type_info *this, unsigned int);
};

/* 1525 */
struct __s_GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  char Data4[8];
};

/* 1526 */
struct std::_Allocator_base<std::pair<unsigned long,unsigned long> >
{
  char dummy[1];
};

/* 1527 */
struct std::allocator<std::pair<unsigned long,unsigned long> >
{
  std::_Allocator_base<std::pair<unsigned long,unsigned long> > baseclass_0;
};

/* 1528 */
struct std::_Vector_val<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >
{
  std::allocator<std::pair<unsigned long,unsigned long> > _Alval;
};

/* 1529 */
struct std::pair<unsigned long,unsigned long>
{
  unsigned int first;
  unsigned int second;
};

/* 1530 */
struct std::vector<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >
{
  std::_Vector_val<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > > baseclass_0;
  std::pair<unsigned long,unsigned long> *_Myfirst;
  std::pair<unsigned long,unsigned long> *_Mylast;
  std::pair<unsigned long,unsigned long> *_Myend;
};

/* 1531 */
struct std::iterator<std::random_access_iterator_tag,std::pair<unsigned long,unsigned long>,int,std::pair<unsigned long,unsigned long> const *,std::pair<unsigned long,unsigned long> const &>
{
  char dummy[1];
};

/* 1532 */
struct std::_Ranit<std::pair<unsigned long,unsigned long>,int,std::pair<unsigned long,unsigned long> const *,std::pair<unsigned long,unsigned long> const &>
{
  std::iterator<std::random_access_iterator_tag,std::pair<unsigned long,unsigned long>,int,std::pair<unsigned long,unsigned long> const *,std::pair<unsigned long,unsigned long> const &> baseclass_0;
};

/* 1533 */
union $62F933183EFAB0B56658FD8FFF78B26B
{
  std::_Ranit<std::pair<unsigned long,unsigned long>,int,std::pair<unsigned long,unsigned long> const *,std::pair<unsigned long,unsigned long> const &> baseclass_0;
  std::pair<unsigned long,unsigned long> *_Myptr;
};

/* 1534 */
struct std::vector<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >::const_iterator
{
  $62F933183EFAB0B56658FD8FFF78B26B ___u0;
};

/* 1535 */
struct std::vector<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >::iterator
{
  std::vector<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >::const_iterator baseclass_0;
};

/* 1536 */
struct std::allocator<std::pair<unsigned long,unsigned long> >::rebind<std::pair<unsigned long,unsigned long> >
{
  char dummy[1];
};

/* 1537 */
struct std::pair<std::vector<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >::iterator,std::vector<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >::iterator>
{
  std::vector<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >::iterator first;
  std::vector<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >::iterator second;
};

/* 1538 */
struct CSendPacketAllServer
{
  const char *m_szData;
  unsigned int m_dwDataLen;
  char m_cPacketCmd;
};

/* 1539 */
struct std::_Init_locks
{
  char dummy[1];
};

/* 1540 */
struct std::unary_function<CCommand *,bool>
{
  char dummy[1];
};

/* 1541 */
union $08CD125A2822EA048CA6F1457DA5C287
{
  std::unary_function<CCommand *,bool> baseclass_0;
  bool (__thiscall *_Pmemfun)(CCommand *this);
};

/* 1542 */
struct std::mem_fun_t<bool,CCommand>
{
  $08CD125A2822EA048CA6F1457DA5C287 ___u0;
};

/* 1543 */
struct _div_t
{
  int quot;
  int rem;
};

/* 1544 */
struct _ldiv_t
{
  int quot;
  int rem;
};

/* 1545 */
struct std::codecvt<char,char,int>
{
  std::codecvt_base baseclass_0;
};

/* 1546 */
struct std::basic_filebuf<char,std::char_traits<char> >
{
  std::basic_streambuf<char,std::char_traits<char> > baseclass_0;
  std::codecvt<char,char,int> *_Pcvt;
  int _State0;
  char _Mychar;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > *_Mystr;
  bool _Wrotesome;
  int _State;
  bool _Closef;
  _iobuf *_Myfile;
};

/* 1547 */
struct $3B14BDF8371F4A72A9A1ACEB6DA6F5B8
{
  _BYTE gap0[8];
  std::basic_ostream<char,std::char_traits<char> > baseclass_8;
};

/* 1548 */
union $A5D6E60D4A2EFAF02492075751D1AB45
{
  std::basic_istream<char,std::char_traits<char> > baseclass_0;
  $3B14BDF8371F4A72A9A1ACEB6DA6F5B8 _s1;
};

/* 1549 */
struct std::basic_iostream<char,std::char_traits<char> >
{
  $A5D6E60D4A2EFAF02492075751D1AB45 ___u0;
};

/* 1550 */
struct $5D77837DC4A1B4534F4D2213AC56C8A3
{
  _BYTE gap0[12];
  std::basic_filebuf<char,std::char_traits<char> > _Filebuffer;
};

/* 1551 */
union $B2569AC46161CFC123BB7501E1AAF96F
{
  std::basic_iostream<char,std::char_traits<char> > baseclass_0;
  $5D77837DC4A1B4534F4D2213AC56C8A3 _s1;
};

/* 1552 */
struct std::basic_fstream<char,std::char_traits<char> >
{
  $B2569AC46161CFC123BB7501E1AAF96F ___u0;
  _BYTE gap68[52];
};

/* 1553 */
union lzo_full_align_t
{
  char a_char;
  char a_uchar;
  __int16 a_short;
  unsigned __int16 a_ushort;
  int a_int;
  unsigned int a_uint;
  int a_long;
  unsigned int a_ulong;
  int a_lzo_int;
  unsigned int a_lzo_uint;
  int a_lzo_int32;
  unsigned int a_lzo_uint32;
  int a_ptrdiff_t;
  int a_lzo_ptrdiff_t;
  unsigned int a_lzo_ptr_t;
  void *a_lzo_voidp;
  void *a_void_p;
  char *a_lzo_bytep;
  char **a_lzo_bytepp;
  unsigned int *a_lzo_uintp;
  unsigned int *a_lzo_uint_p;
  unsigned int *a_lzo_uint32p;
  unsigned int *a_lzo_uint32_p;
  char *a_uchar_p;
  char *a_char_p;
};

/* 1554 */
struct _TI_FINDCHILDREN_PARAMS
{
  unsigned int Count;
  unsigned int Start;
  unsigned int ChildId[1];
};

/* 1555 */
struct SymEnumSymbols_UserData
{
  _tagSTACKFRAME *m_lpsf;
  char *m_szBuffer_Out;
  int m_nBufferSize_In;
  int m_nWritten_Out;
};

/* 1556 */
struct CExceptionReport::DumpTypeIndex::__l16::FINDCHILDREN
{
  _TI_FINDCHILDREN_PARAMS baseclass_0;
  unsigned int MoreChildIds[1024];
};

/* 1557 */
struct DbgUtils::CConvertErrorToText
{
  HINSTANCE__ *m_hNetMsg;
};

/* 1558 */
struct std::unary_function<CThread *,int>
{
  char dummy[1];
};

/* 1559 */
union $F7D28D7F0BE8DA87E90858C8AC28F778
{
  std::unary_function<CThread *,int> baseclass_0;
  int (__thiscall *_Pmemfun)(CThread *this);
};

/* 1560 */
struct std::mem_fun_t<int,CThread>
{
  $F7D28D7F0BE8DA87E90858C8AC28F778 ___u0;
};

/* 1561 */
struct CBufferFactoryTest
{
  char dummy[1];
};

/* 1562 */
struct CDefaultBufferFactory
{
  CBufferFactory baseclass_0;
};

/* 1563 */
struct tagMIDIINCAPS2W
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int dwSupport;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 1564 */
struct _CLASS_MEDIA_CHANGE_CONTEXT
{
  unsigned int MediaChangeCount;
  unsigned int NewState;
};

/* 1565 */
struct midiproptempo_tag
{
  unsigned int cbStruct;
  unsigned int dwTempo;
};

/* 1566 */
struct _CRYPTOAPI_BLOB
{
  unsigned int cbData;
  char *pbData;
};

/* 1567 */
struct _CRYPT_ALGORITHM_IDENTIFIER
{
  char *pszObjId;
  _CRYPTOAPI_BLOB Parameters;
};

/* 1568 */
struct _CRYPT_BIT_BLOB
{
  unsigned int cbData;
  char *pbData;
  unsigned int cUnusedBits;
};

/* 1569 */
struct _CERT_PUBLIC_KEY_INFO
{
  _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
  _CRYPT_BIT_BLOB PublicKey;
};

/* 1570 */
struct _CERT_EXTENSION
{
  char *pszObjId;
  int fCritical;
  _CRYPTOAPI_BLOB Value;
};

/* 1571 */
struct _CERT_INFO
{
  unsigned int dwVersion;
  _CRYPTOAPI_BLOB SerialNumber;
  _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  _CRYPTOAPI_BLOB Issuer;
  _FILETIME NotBefore;
  _FILETIME NotAfter;
  _CRYPTOAPI_BLOB Subject;
  _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  _CRYPT_BIT_BLOB IssuerUniqueId;
  _CRYPT_BIT_BLOB SubjectUniqueId;
  unsigned int cExtension;
  _CERT_EXTENSION *rgExtension;
};

/* 1572 */
struct _CMSG_ENVELOPED_ENCODE_INFO
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  void *pvEncryptionAuxInfo;
  unsigned int cRecipients;
  _CERT_INFO **rgpRecipients;
};

/* 1573 */
struct tagRemHGLOBAL
{
  int fNullHGlobal;
  unsigned int cbData;
  char data[1];
};

/* 1574 */
struct _DWORD_BLOB
{
  unsigned int clSize;
  unsigned int alData[1];
};

/* 1575 */
struct _CERT_ISSUER_SERIAL_NUMBER
{
  _CRYPTOAPI_BLOB Issuer;
  _CRYPTOAPI_BLOB SerialNumber;
};

/* 1576 */
union $AB2D09807F90D88484A03C8CCF518F06
{
  _CERT_ISSUER_SERIAL_NUMBER IssuerSerialNumber;
  _CRYPTOAPI_BLOB KeyId;
  _CRYPTOAPI_BLOB HashId;
};

/* 1577 */
struct _CERT_ID
{
  unsigned int dwIdChoice;
  $AB2D09807F90D88484A03C8CCF518F06 ___u1;
};

/* 1578 */
struct _CRYPT_ATTRIBUTE_TYPE_VALUE
{
  char *pszObjId;
  _CRYPTOAPI_BLOB Value;
};

/* 1579 */
struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO
{
  unsigned int cbSize;
  _CRYPT_BIT_BLOB RecipientPublicKey;
  _CERT_ID RecipientId;
  _FILETIME Date;
  _CRYPT_ATTRIBUTE_TYPE_VALUE *pOtherAttr;
};

/* 1580 */
union $43C3A0B621682D94BADACF958CA35447
{
  _CRYPT_ALGORITHM_IDENTIFIER *pEphemeralAlgorithm;
  _CERT_ID *pSenderId;
};

/* 1581 */
struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO
{
  unsigned int cbSize;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  void *pvKeyEncryptionAuxInfo;
  _CRYPT_ALGORITHM_IDENTIFIER KeyWrapAlgorithm;
  void *pvKeyWrapAuxInfo;
  unsigned int hCryptProv;
  unsigned int dwKeySpec;
  unsigned int dwKeyChoice;
  $43C3A0B621682D94BADACF958CA35447 ___u8;
  _CRYPTOAPI_BLOB UserKeyingMaterial;
  unsigned int cRecipientEncryptedKeys;
  _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO **rgpRecipientEncryptedKeys;
};

/* 1582 */
struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO
{
  _CERT_ID RecipientId;
  _CRYPTOAPI_BLOB EncryptedKey;
  _FILETIME Date;
  _CRYPT_ATTRIBUTE_TYPE_VALUE *pOtherAttr;
};

/* 1583 */
struct IPropertyBag
{
  IUnknown baseclass_0;
};

/* 1584 */
struct tagPARAMDATA
{
  unsigned __int16 *szName;
  unsigned __int16 vt;
};

/* 1585 */
struct tagMETHODDATA
{
  unsigned __int16 *szName;
  tagPARAMDATA *ppdata;
  int dispid;
  unsigned int iMeth;
  tagCALLCONV cc;
  unsigned int cArgs;
  unsigned __int16 wFlags;
  unsigned __int16 vtReturn;
};

/* 1586 */
struct tagMCI_SAVE_PARMSA
{
  unsigned int dwCallback;
  const char *lpfilename;
};

/* 1587 */
struct tagRemHMETAFILEPICT
{
  int mm;
  int xExt;
  int yExt;
  unsigned int cbData;
  char data[1];
};

/* 1588 */
struct _FAT_STATISTICS
{
  unsigned int CreateHits;
  unsigned int SuccessfulCreates;
  unsigned int FailedCreates;
  unsigned int NonCachedReads;
  unsigned int NonCachedReadBytes;
  unsigned int NonCachedWrites;
  unsigned int NonCachedWriteBytes;
  unsigned int NonCachedDiskReads;
  unsigned int NonCachedDiskWrites;
};

/* 1589 */
struct HDRVR__
{
  int unused;
};

/* 1590 */
struct tagMCI_SEEK_PARMS
{
  unsigned int dwCallback;
  unsigned int dwTo;
};

/* 1591 */
struct _FULL_PTR_XLAT_TABLES::__unnamed
{
  void **XlatTable;
  char *StateTable;
  unsigned int NumberOfEntries;
};

/* 1592 */
struct _FULL_PTR_TO_REFID_ELEMENT
{
  _FULL_PTR_TO_REFID_ELEMENT *Next;
  void *Pointer;
  unsigned int RefId;
  char State;
};

/* 1593 */
struct _FULL_PTR_XLAT_TABLES
{
  _FULL_PTR_XLAT_TABLES::__unnamed RefIdToPointer;
  _FULL_PTR_XLAT_TABLES::__unnamed PointerToRefId;
  unsigned int NextRefId;
  XLAT_SIDE XlatSide;
};

/* 1594 */
struct _DOC_INFO_1W
{
  unsigned __int16 *pDocName;
  unsigned __int16 *pOutputFile;
  unsigned __int16 *pDatatype;
};

/* 1595 */
struct _DOC_INFO_2W
{
  unsigned __int16 *pDocName;
  unsigned __int16 *pOutputFile;
  unsigned __int16 *pDatatype;
  unsigned int dwMode;
  unsigned int JobId;
};

/* 1596 */
struct tagOFNA
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const char *lpstrFilter;
  char *lpstrCustomFilter;
  unsigned int nMaxCustFilter;
  unsigned int nFilterIndex;
  char *lpstrFile;
  unsigned int nMaxFile;
  char *lpstrFileTitle;
  unsigned int nMaxFileTitle;
  const char *lpstrInitialDir;
  const char *lpstrTitle;
  unsigned int Flags;
  unsigned __int16 nFileOffset;
  unsigned __int16 nFileExtension;
  const char *lpstrDefExt;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const char *lpTemplateName;
};

/* 1597 */
struct _OFNOTIFYEXA
{
  tagNMHDR hdr;
  tagOFNA *lpOFN;
  void *psf;
  void *pidl;
};

/* 1598 */
struct tagPRINTPAGERANGE
{
  unsigned int nFromPage;
  unsigned int nToPage;
};

/* 1599 */
struct tagPDEXA
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  void *hDevMode;
  void *hDevNames;
  HDC__ *hDC;
  unsigned int Flags;
  unsigned int Flags2;
  unsigned int ExclusionFlags;
  unsigned int nPageRanges;
  unsigned int nMaxPageRanges;
  tagPRINTPAGERANGE *lpPageRanges;
  unsigned int nMinPage;
  unsigned int nMaxPage;
  unsigned int nCopies;
  HINSTANCE__ *hInstance;
  const char *lpPrintTemplateName;
  IUnknown *lpCallback;
  unsigned int nPropertyPages;
  _PSP **lphPropertyPages;
  unsigned int nStartPage;
  unsigned int dwResultAction;
};

/* 1600 */
struct _RPC_ASYNC_STATE
{
  unsigned int Size;
  unsigned int Signature;
  int Lock;
  unsigned int Flags;
  void *StubInfo;
  void *UserInfo;
  void *RuntimeInfo;
  _RPC_ASYNC_EVENT Event;
  _RPC_NOTIFICATION_TYPES NotificationType;
  _RPC_ASYNC_STATE::__unnamed u;
  _BYTE gap2c[8];
  int Reserved[4];
};

/* 1601 */
struct _RPC_ASYNC_STATE::__unnamed::__unnamed
{
  void (__stdcall *NotificationRoutine)(_RPC_ASYNC_STATE *, void *, _RPC_ASYNC_EVENT);
  void *hThread;
};

/* 1602 */
union _RPC_ASYNC_STATE::__unnamed
{
  _RPC_ASYNC_STATE::__unnamed::__unnamed APC;
  _RPC_ASYNC_STATE::__unnamed::__unnamed IOC;
  _RPC_ASYNC_STATE::__unnamed::__unnamed HWND;
  void *hEvent;
  void (__stdcall *NotificationRoutine)(_RPC_ASYNC_STATE *, void *, _RPC_ASYNC_EVENT);
};

/* 1603 */
struct _PROPSHEETPAGEA
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HINSTANCE__ *hInstance;
  $02970673CB439F991103F5BC86721820 ___u3;
  $19AED208800BAD5A235CFF0C7BF52E3D ___u4;
  const char *pszTitle;
  int (__stdcall *pfnDlgProc)(HWND__ *, unsigned int, unsigned int, int);
  int lParam;
  unsigned int (__stdcall *pfnCallback)(HWND__ *, unsigned int, _PROPSHEETPAGEA *);
  unsigned int *pcRefParent;
  const char *pszHeaderTitle;
  const char *pszHeaderSubTitle;
};

/* 1604 */
union $02970673CB439F991103F5BC86721820
{
  const char *pszTemplate;
  DLGTEMPLATE *pResource;
};

/* 1605 */
union $19AED208800BAD5A235CFF0C7BF52E3D
{
  HICON__ *hIcon;
  const char *pszIcon;
};

/* 1606 */
struct _PROPSHEETPAGEA_V3
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HINSTANCE__ *hInstance;
  $02970673CB439F991103F5BC86721820 ___u3;
  $19AED208800BAD5A235CFF0C7BF52E3D ___u4;
  const char *pszTitle;
  int (__stdcall *pfnDlgProc)(HWND__ *, unsigned int, unsigned int, int);
  int lParam;
  unsigned int (__stdcall *pfnCallback)(HWND__ *, unsigned int, _PROPSHEETPAGEA *);
  unsigned int *pcRefParent;
  const char *pszHeaderTitle;
  const char *pszHeaderSubTitle;
  void *hActCtx;
};

/* 1607 */
struct _PRINTER_INFO_5A
{
  char *pPrinterName;
  char *pPortName;
  unsigned int Attributes;
  unsigned int DeviceNotSelectedTimeout;
  unsigned int TransmissionRetryTimeout;
};

/* 1608 */
struct _NLA_BLOB::__unnamed
{
  _NLA_BLOB_DATA_TYPE type;
  unsigned int dwSize;
  unsigned int nextOffset;
};

/* 1609 */
struct _NLA_BLOB
{
  _NLA_BLOB::__unnamed header;
  _NLA_BLOB::__unnamed data;
  _BYTE gap18[1024];
};

/* 1610 */
struct _CERT_CONTEXT
{
  unsigned int dwCertEncodingType;
  char *pbCertEncoded;
  unsigned int cbCertEncoded;
  _CERT_INFO *pCertInfo;
  void *hCertStore;
};

/* 1611 */
struct _CERT_TRUST_STATUS
{
  unsigned int dwErrorStatus;
  unsigned int dwInfoStatus;
};

/* 1612 */
struct _CRL_ENTRY
{
  _CRYPTOAPI_BLOB SerialNumber;
  _FILETIME RevocationDate;
  unsigned int cExtension;
  _CERT_EXTENSION *rgExtension;
};

/* 1613 */
struct _CRL_INFO
{
  unsigned int dwVersion;
  _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  _CRYPTOAPI_BLOB Issuer;
  _FILETIME ThisUpdate;
  _FILETIME NextUpdate;
  unsigned int cCRLEntry;
  _CRL_ENTRY *rgCRLEntry;
  unsigned int cExtension;
  _CERT_EXTENSION *rgExtension;
};

/* 1614 */
const struct _CRL_CONTEXT
{
  unsigned int dwCertEncodingType;
  char *pbCrlEncoded;
  unsigned int cbCrlEncoded;
  _CRL_INFO *pCrlInfo;
  void *hCertStore;
};

/* 1615 */
struct _CERT_REVOCATION_CRL_INFO
{
  unsigned int cbSize;
  _CRL_CONTEXT *pBaseCrlContext;
  _CRL_CONTEXT *pDeltaCrlContext;
  _CRL_ENTRY *pCrlEntry;
  int fDeltaCrlEntry;
};

/* 1616 */
struct _CERT_REVOCATION_INFO
{
  unsigned int cbSize;
  unsigned int dwRevocationResult;
  const char *pszRevocationOid;
  void *pvOidSpecificInfo;
  int fHasFreshnessTime;
  unsigned int dwFreshnessTime;
  _CERT_REVOCATION_CRL_INFO *pCrlInfo;
};

/* 1617 */
struct _CTL_USAGE
{
  unsigned int cUsageIdentifier;
  char **rgpszUsageIdentifier;
};

/* 1618 */
struct _CERT_CHAIN_ELEMENT
{
  unsigned int cbSize;
  _CERT_CONTEXT *pCertContext;
  _CERT_TRUST_STATUS TrustStatus;
  _CERT_REVOCATION_INFO *pRevocationInfo;
  _CTL_USAGE *pIssuanceUsage;
  _CTL_USAGE *pApplicationUsage;
  const unsigned __int16 *pwszExtendedErrorInfo;
};

/* 1619 */
struct _PRINTER_NOTIFY_INFO_DATA::__unnamed::__unnamed
{
  unsigned int cbBuf;
  void *pBuf;
};

/* 1620 */
union _PRINTER_NOTIFY_INFO_DATA::__unnamed
{
  unsigned int adwData[2];
  _PRINTER_NOTIFY_INFO_DATA::__unnamed::__unnamed Data;
};

/* 1621 */
struct _PRINTER_NOTIFY_INFO_DATA
{
  unsigned __int16 Type;
  unsigned __int16 Field;
  unsigned int Reserved;
  unsigned int Id;
  _PRINTER_NOTIFY_INFO_DATA::__unnamed NotifyData;
};

/* 1622 */
struct tagJOYCAPSA
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  char szPname[32];
  unsigned int wXmin;
  unsigned int wXmax;
  unsigned int wYmin;
  unsigned int wYmax;
  unsigned int wZmin;
  unsigned int wZmax;
  unsigned int wNumButtons;
  unsigned int wPeriodMin;
  unsigned int wPeriodMax;
  unsigned int wRmin;
  unsigned int wRmax;
  unsigned int wUmin;
  unsigned int wUmax;
  unsigned int wVmin;
  unsigned int wVmax;
  unsigned int wCaps;
  unsigned int wMaxAxes;
  unsigned int wNumAxes;
  unsigned int wMaxButtons;
  char szRegKey[32];
  char szOEMVxD[260];
};

/* 1623 */
struct _CRYPT_ATTRIBUTE
{
  char *pszObjId;
  unsigned int cValue;
  _CRYPTOAPI_BLOB *rgValue;
};

/* 1624 */
struct _CRYPT_ATTRIBUTES
{
  unsigned int cAttr;
  _CRYPT_ATTRIBUTE *rgAttr;
};

/* 1625 */
struct _FLAGGED_BYTE_BLOB
{
  unsigned int fFlags;
  unsigned int clSize;
  char abData[1];
};

/* 1626 */
union _userHGLOBAL::__MIDL_IWinTypes_0003
{
  int hInproc;
  _FLAGGED_BYTE_BLOB *hRemote;
  __int64 hInproc64;
};

/* 1627 */
struct _userHGLOBAL
{
  int fContext;
  _userHGLOBAL::__MIDL_IWinTypes_0003 u;
};

/* 1628 */
struct IInternetProtocolSinkStackable
{
  IUnknown baseclass_0;
};

/* 1629 */
struct tagOFNW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpstrFilter;
  unsigned __int16 *lpstrCustomFilter;
  unsigned int nMaxCustFilter;
  unsigned int nFilterIndex;
  unsigned __int16 *lpstrFile;
  unsigned int nMaxFile;
  unsigned __int16 *lpstrFileTitle;
  unsigned int nMaxFileTitle;
  const unsigned __int16 *lpstrInitialDir;
  const unsigned __int16 *lpstrTitle;
  unsigned int Flags;
  unsigned __int16 nFileOffset;
  unsigned __int16 nFileExtension;
  const unsigned __int16 *lpstrDefExt;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpTemplateName;
};

/* 1630 */
struct tagMIDIOUTCAPSA
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wVoices;
  unsigned __int16 wNotes;
  unsigned __int16 wChannelMask;
  unsigned int dwSupport;
};

/* 1631 */
struct _CMC_ADD_EXTENSIONS_INFO
{
  unsigned int dwCmcDataReference;
  unsigned int cCertReference;
  unsigned int *rgdwCertReference;
  unsigned int cExtension;
  _CERT_EXTENSION *rgExtension;
};

/* 1632 */
struct _CRYPT_URL_ARRAY
{
  unsigned int cUrl;
  unsigned __int16 **rgwszUrl;
};

/* 1633 */
struct _CHANGER_ELEMENT
{
  _ELEMENT_TYPE ElementType;
  unsigned int ElementAddress;
};

/* 1634 */
struct _PRINTER_NOTIFY_OPTIONS_TYPE
{
  unsigned __int16 Type;
  unsigned __int16 Reserved0;
  unsigned int Reserved1;
  unsigned int Reserved2;
  unsigned int Count;
  unsigned __int16 *pFields;
};

/* 1635 */
struct _PRINTER_NOTIFY_OPTIONS
{
  unsigned int Version;
  unsigned int Flags;
  unsigned int Count;
  _PRINTER_NOTIFY_OPTIONS_TYPE *pTypes;
};

/* 1636 */
struct IOleCacheControl
{
  IUnknown baseclass_0;
};

/* 1637 */
struct tagRPC_CALL_ATTRIBUTES_V1_A
{
  unsigned int Version;
  unsigned int Flags;
  unsigned int ServerPrincipalNameBufferLength;
  char *ServerPrincipalName;
  unsigned int ClientPrincipalNameBufferLength;
  char *ClientPrincipalName;
  unsigned int AuthenticationLevel;
  unsigned int AuthenticationService;
  int NullSession;
};

/* 1638 */
struct _CRYPT_KEY_PROV_PARAM
{
  unsigned int dwParam;
  char *pbData;
  unsigned int cbData;
  unsigned int dwFlags;
};

/* 1639 */
struct _CRYPT_KEY_PROV_INFO
{
  unsigned __int16 *pwszContainerName;
  unsigned __int16 *pwszProvName;
  unsigned int dwProvType;
  unsigned int dwFlags;
  unsigned int cProvParam;
  _CRYPT_KEY_PROV_PARAM *rgProvParam;
  unsigned int dwKeySpec;
};

/* 1640 */
union $444B8AF3F414656C8F88F98B3D40B8AE
{
  unsigned int hKeyEncryptionKey;
  void *pvKeyEncryptionKey;
};

/* 1641 */
struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO
{
  unsigned int cbSize;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  void *pvKeyEncryptionAuxInfo;
  unsigned int hCryptProv;
  unsigned int dwKeyChoice;
  $444B8AF3F414656C8F88F98B3D40B8AE ___u5;
  _CRYPTOAPI_BLOB KeyId;
  _FILETIME Date;
  _CRYPT_ATTRIBUTE_TYPE_VALUE *pOtherAttr;
};

/* 1642 */
struct _PORT_INFO_1A
{
  char *pName;
};

/* 1643 */
struct _MONITOR_INFO_2A
{
  char *pName;
  char *pEnvironment;
  char *pDLLName;
};

/* 1644 */
struct ISynchronize
{
  IUnknown baseclass_0;
};

/* 1645 */
struct tagFINDREPLACEA
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  unsigned int Flags;
  char *lpstrFindWhat;
  char *lpstrReplaceWith;
  unsigned __int16 wFindWhatLen;
  unsigned __int16 wReplaceWithLen;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const char *lpTemplateName;
};

/* 1646 */
struct tagMIXERCONTROLDETAILS_LISTTEXTA
{
  unsigned int dwParam1;
  unsigned int dwParam2;
  char szName[64];
};

/* 1647 */
struct _DISK_GEOMETRY
{
  _LARGE_INTEGER Cylinders;
  _MEDIA_TYPE MediaType;
  unsigned int TracksPerCylinder;
  unsigned int SectorsPerTrack;
  unsigned int BytesPerSector;
};

/* 1648 */
struct tagWAVEOUTCAPS2A
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 1649 */
struct tagMCI_ANIM_WINDOW_PARMSA
{
  unsigned int dwCallback;
  HWND__ *hWnd;
  unsigned int nCmdShow;
  const char *lpstrText;
};

/* 1650 */
struct _PORT_INFO_2A
{
  char *pPortName;
  char *pMonitorName;
  char *pDescription;
  unsigned int fPortType;
  unsigned int Reserved;
};

/* 1651 */
struct _CRYPT_SIGN_MESSAGE_PARA
{
  unsigned int cbSize;
  unsigned int dwMsgEncodingType;
  _CERT_CONTEXT *pSigningCert;
  _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  void *pvHashAuxInfo;
  unsigned int cMsgCert;
  _CERT_CONTEXT **rgpMsgCert;
  unsigned int cMsgCrl;
  _CRL_CONTEXT **rgpMsgCrl;
  unsigned int cAuthAttr;
  _CRYPT_ATTRIBUTE *rgAuthAttr;
  unsigned int cUnauthAttr;
  _CRYPT_ATTRIBUTE *rgUnauthAttr;
  unsigned int dwFlags;
  unsigned int dwInnerContentType;
};

/* 1652 */
struct _DRIVER_INFO_5A
{
  unsigned int cVersion;
  char *pName;
  char *pEnvironment;
  char *pDriverPath;
  char *pDataFile;
  char *pConfigFile;
  unsigned int dwDriverAttributes;
  unsigned int dwConfigVersion;
  unsigned int dwDriverVersion;
};

/* 1653 */
struct IDropTarget
{
  IUnknown baseclass_0;
};

/* 1654 */
struct IDataObject
{
  IUnknown baseclass_0;
};

/* 1655 */
struct _CMSG_KEY_TRANS_RECIPIENT_INFO
{
  unsigned int dwVersion;
  _CERT_ID RecipientId;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  _CRYPTOAPI_BLOB EncryptedKey;
};

/* 1656 */
union $92F61CEF1A52049F6C35465A2E90B4B4
{
  _CERT_ID OriginatorCertId;
  _CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
};

/* 1657 */
struct _CMSG_KEY_AGREE_RECIPIENT_INFO
{
  unsigned int dwVersion;
  unsigned int dwOriginatorChoice;
  $92F61CEF1A52049F6C35465A2E90B4B4 ___u2;
  _CRYPTOAPI_BLOB UserKeyingMaterial;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  unsigned int cRecipientEncryptedKeys;
  _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO **rgpRecipientEncryptedKeys;
};

/* 1658 */
struct _CMSG_MAIL_LIST_RECIPIENT_INFO
{
  unsigned int dwVersion;
  _CRYPTOAPI_BLOB KeyId;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  _CRYPTOAPI_BLOB EncryptedKey;
  _FILETIME Date;
  _CRYPT_ATTRIBUTE_TYPE_VALUE *pOtherAttr;
};

/* 1659 */
union $CF35434A0E286FABF3E2AC97153D21DF
{
  _CMSG_KEY_TRANS_RECIPIENT_INFO *pKeyTrans;
  _CMSG_KEY_AGREE_RECIPIENT_INFO *pKeyAgree;
  _CMSG_MAIL_LIST_RECIPIENT_INFO *pMailList;
};

/* 1660 */
struct _CMSG_CMS_RECIPIENT_INFO
{
  unsigned int dwRecipientChoice;
  $CF35434A0E286FABF3E2AC97153D21DF ___u1;
};

/* 1661 */
struct IWinInetInfo
{
  IUnknown baseclass_0;
};

/* 1662 */
struct IWinInetHttpInfo
{
  IWinInetInfo baseclass_0;
};

/* 1663 */
struct tagWAVEOUTCAPS2W
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 1664 */
struct _CERT_CHAIN_FIND_BY_ISSUER_PARA
{
  unsigned int cbSize;
  const char *pszUsageIdentifier;
  unsigned int dwKeySpec;
  unsigned int dwAcquirePrivateKeyFlags;
  unsigned int cIssuer;
  _CRYPTOAPI_BLOB *rgIssuer;
  int (__stdcall *pfnFindCallback)(_CERT_CONTEXT *, void *);
  void *pvFindArg;
};

/* 1665 */
struct _MONITOR_INFO_1W
{
  unsigned __int16 *pName;
};

/* 1666 */
struct _HMAC_Info
{
  unsigned int HashAlgid;
  char *pbInnerString;
  unsigned int cbInnerString;
  char *pbOuterString;
  unsigned int cbOuterString;
};

/* 1667 */
struct _DOC_INFO_3A
{
  char *pDocName;
  char *pOutputFile;
  char *pDatatype;
  unsigned int dwFlags;
};

/* 1668 */
struct _CRYPT_OID_FUNC_ENTRY
{
  const char *pszOID;
  void *pvFuncAddr;
};

/* 1669 */
struct HMIDIIN__
{
  int unused;
};

/* 1670 */
struct _CRYPT_DECRYPT_MESSAGE_PARA
{
  unsigned int cbSize;
  unsigned int dwMsgAndCertEncodingType;
  unsigned int cCertStore;
  void **rghCertStore;
};

/* 1671 */
struct tagJOYCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned __int16 szPname[32];
  unsigned int wXmin;
  unsigned int wXmax;
  unsigned int wYmin;
  unsigned int wYmax;
  unsigned int wZmin;
  unsigned int wZmax;
  unsigned int wNumButtons;
  unsigned int wPeriodMin;
  unsigned int wPeriodMax;
  unsigned int wRmin;
  unsigned int wRmax;
  unsigned int wUmin;
  unsigned int wUmax;
  unsigned int wVmin;
  unsigned int wVmax;
  unsigned int wCaps;
  unsigned int wMaxAxes;
  unsigned int wNumAxes;
  unsigned int wMaxButtons;
  unsigned __int16 szRegKey[32];
  unsigned __int16 szOEMVxD[260];
};

/* 1672 */
struct tagMCI_SYSINFO_PARMSA
{
  unsigned int dwCallback;
  char *lpstrReturn;
  unsigned int dwRetSize;
  unsigned int dwNumber;
  unsigned int wDeviceType;
};

/* 1673 */
struct _CTL_ENTRY
{
  _CRYPTOAPI_BLOB SubjectIdentifier;
  unsigned int cAttribute;
  _CRYPT_ATTRIBUTE *rgAttribute;
};

/* 1674 */
struct _CTL_INFO
{
  unsigned int dwVersion;
  _CTL_USAGE SubjectUsage;
  _CRYPTOAPI_BLOB ListIdentifier;
  _CRYPTOAPI_BLOB SequenceNumber;
  _FILETIME ThisUpdate;
  _FILETIME NextUpdate;
  _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
  unsigned int cCTLEntry;
  _CTL_ENTRY *rgCTLEntry;
  unsigned int cExtension;
  _CERT_EXTENSION *rgExtension;
};

/* 1675 */
struct _CTL_CONTEXT
{
  unsigned int dwMsgAndCertEncodingType;
  char *pbCtlEncoded;
  unsigned int cbCtlEncoded;
  _CTL_INFO *pCtlInfo;
  void *hCertStore;
  void *hCryptMsg;
  char *pbCtlContent;
  unsigned int cbCtlContent;
};

/* 1676 */
struct _CTL_VERIFY_USAGE_STATUS
{
  unsigned int cbSize;
  unsigned int dwError;
  unsigned int dwFlags;
  _CTL_CONTEXT **ppCtl;
  unsigned int dwCtlEntryIndex;
  _CERT_CONTEXT **ppSigner;
  unsigned int dwSignerIndex;
};

/* 1677 */
struct _CRYPT_BLOB_ARRAY
{
  unsigned int cBlob;
  _CRYPTOAPI_BLOB *rgBlob;
};

/* 1678 */
struct _CERT_TRUST_LIST_INFO
{
  unsigned int cbSize;
  _CTL_ENTRY *pCtlEntry;
  _CTL_CONTEXT *pCtlContext;
};

/* 1679 */
struct _CERT_SIMPLE_CHAIN
{
  unsigned int cbSize;
  _CERT_TRUST_STATUS TrustStatus;
  unsigned int cElement;
  _CERT_CHAIN_ELEMENT **rgpElement;
  _CERT_TRUST_LIST_INFO *pTrustListInfo;
  int fHasRevocationFreshnessTime;
  unsigned int dwRevocationFreshnessTime;
};

/* 1680 */
struct _CERT_CHAIN_CONTEXT
{
  unsigned int cbSize;
  _CERT_TRUST_STATUS TrustStatus;
  unsigned int cChain;
  _CERT_SIMPLE_CHAIN **rgpChain;
  unsigned int cLowerQualityChainContext;
  _CERT_CHAIN_CONTEXT **rgpLowerQualityChainContext;
  int fHasRevocationFreshnessTime;
  unsigned int dwRevocationFreshnessTime;
};

/* 1681 */
struct _PRINTPROCESSOR_INFO_1A
{
  char *pName;
};

/* 1682 */
struct IInternetThreadSwitch
{
  IUnknown baseclass_0;
};

/* 1683 */
struct tagMIXERLINEW::__unnamed
{
  unsigned int dwType;
  unsigned int dwDeviceID;
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
};

/* 1684 */
struct tagMIXERLINEW
{
  unsigned int cbStruct;
  unsigned int dwDestination;
  unsigned int dwSource;
  unsigned int dwLineID;
  unsigned int fdwLine;
  unsigned int dwUser;
  unsigned int dwComponentType;
  unsigned int cChannels;
  unsigned int cConnections;
  unsigned int cControls;
  unsigned __int16 szShortName[16];
  unsigned __int16 szName[64];
  tagMIXERLINEW::__unnamed Target;
};

/* 1685 */
struct tagRemHENHMETAFILE
{
  unsigned int cbData;
  char data[1];
};

/* 1686 */
struct DRVCONFIGINFOEX
{
  unsigned int dwDCISize;
  const unsigned __int16 *lpszDCISectionName;
  const unsigned __int16 *lpszDCIAliasName;
  unsigned int dnDevNode;
};

/* 1687 */
struct _CERT_LDAP_STORE_OPENED_PARA
{
  void *pvLdapSessionHandle;
  const unsigned __int16 *pwszLdapUrl;
};

/* 1688 */
struct _PRINTER_INFO_1A
{
  unsigned int Flags;
  char *pDescription;
  char *pName;
  char *pComment;
};

/* 1689 */
struct tagOLEVERB
{
  int lVerb;
  unsigned __int16 *lpszVerbName;
  unsigned int fuFlags;
  unsigned int grfAttribs;
};

/* 1690 */
struct _wireBRECORD
{
  unsigned int fFlags;
  unsigned int clSize;
  IRecordInfo *pRecInfo;
  char *pRecord;
};

/* 1691 */
struct _wireSAFEARR_BRECORD
{
  unsigned int Size;
  _wireBRECORD **aRecord;
};

/* 1692 */
struct tagCUSTDATAITEM
{
  _GUID guid;
  tagVARIANT varValue;
};

/* 1693 */
struct $0D057425CB83406CCB6CB71DF3FA0A4C
{
  int lMinimum;
  int lMaximum;
};

/* 1694 */
struct $E50C0F09BB6F8C50FF087E1E76EA2CA0
{
  unsigned int dwMinimum;
  unsigned int dwMaximum;
};

/* 1695 */
union tagMIXERCONTROLW::__unnamed
{
  $0D057425CB83406CCB6CB71DF3FA0A4C _s0;
  $E50C0F09BB6F8C50FF087E1E76EA2CA0 _s1;
  unsigned int dwReserved[6];
};

/* 1696 */
struct tagMIXERCONTROLW
{
  unsigned int cbStruct;
  unsigned int dwControlID;
  unsigned int dwControlType;
  unsigned int fdwControl;
  unsigned int cMultipleItems;
  unsigned __int16 szShortName[16];
  unsigned __int16 szName[64];
  tagMIXERCONTROLW::__unnamed Bounds;
  tagMIXERCONTROLW::__unnamed Metrics;
};

/* 1697 */
union $476D211351DA30503E50D2F0E6E515B0
{
  unsigned int dwControlID;
  unsigned int dwControlType;
};

/* 1698 */
struct tagMIXERLINECONTROLSW
{
  unsigned int cbStruct;
  unsigned int dwLineID;
  $476D211351DA30503E50D2F0E6E515B0 ___u2;
  unsigned int cControls;
  unsigned int cbmxctrl;
  tagMIXERCONTROLW *pamxctrl;
};

/* 1699 */
struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE
{
  char *pszOrganization;
  unsigned int cNoticeNumbers;
  int *rgNoticeNumbers;
};

/* 1700 */
struct _CERT_POLICY_QUALIFIER_USER_NOTICE
{
  _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE *pNoticeReference;
  unsigned __int16 *pszDisplayText;
};

/* 1701 */
struct _TAPE_STATISTICS
{
  unsigned int Version;
  unsigned int Flags;
  _LARGE_INTEGER RecoveredWrites;
  _LARGE_INTEGER UnrecoveredWrites;
  _LARGE_INTEGER RecoveredReads;
  _LARGE_INTEGER UnrecoveredReads;
  char CompressionRatioReads;
  char CompressionRatioWrites;
};

/* 1702 */
struct midistrmbuffver_tag
{
  unsigned int dwVersion;
  unsigned int dwMid;
  unsigned int dwOEMVersion;
};

/* 1703 */
struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  _CMSG_MAIL_LIST_RECIPIENT_INFO *pMailList;
  unsigned int dwRecipientIndex;
  unsigned int dwKeyChoice;
  $444B8AF3F414656C8F88F98B3D40B8AE ___u5;
};

/* 1704 */
struct _CHANGER_EXCHANGE_MEDIUM
{
  _CHANGER_ELEMENT Transport;
  _CHANGER_ELEMENT Source;
  _CHANGER_ELEMENT Destination1;
  _CHANGER_ELEMENT Destination2;
  char Flip1;
  char Flip2;
};

/* 1705 */
struct _CRYPT_CREDENTIALS
{
  unsigned int cbSize;
  const char *pszCredentialsOid;
  void *pvCredentials;
};

/* 1706 */
#pragma pack(push, 1)
struct tagPDA
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  void *hDevMode;
  void *hDevNames;
  HDC__ *hDC;
  unsigned int Flags;
  unsigned __int16 nFromPage;
  unsigned __int16 nToPage;
  unsigned __int16 nMinPage;
  unsigned __int16 nMaxPage;
  unsigned __int16 nCopies;
  HINSTANCE__ *hInstance;
  int lCustData;
  unsigned int (__stdcall *lpfnPrintHook)(HWND__ *, unsigned int, unsigned int, int);
  unsigned int (__stdcall *lpfnSetupHook)(HWND__ *, unsigned int, unsigned int, int);
  const char *lpPrintTemplateName;
  const char *lpSetupTemplateName;
  void *hPrintTemplate;
  void *hSetupTemplate;
};
#pragma pack(pop)

/* 1707 */
struct _CRYPT_HASH_INFO
{
  _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  _CRYPTOAPI_BLOB Hash;
};

/* 1708 */
struct _CERT_OTHER_NAME
{
  char *pszObjId;
  _CRYPTOAPI_BLOB Value;
};

/* 1709 */
union $D8B4618386FD0797F64DFC65C58AA10C
{
  _CERT_OTHER_NAME *pOtherName;
  unsigned __int16 *pwszRfc822Name;
  unsigned __int16 *pwszDNSName;
  _CRYPTOAPI_BLOB DirectoryName;
  unsigned __int16 *pwszURL;
  _CRYPTOAPI_BLOB IPAddress;
  char *pszRegisteredID;
};

/* 1710 */
struct _CERT_ALT_NAME_ENTRY
{
  unsigned int dwAltNameChoice;
  $D8B4618386FD0797F64DFC65C58AA10C ___u1;
};

/* 1711 */
struct _CERT_ACCESS_DESCRIPTION
{
  char *pszAccessMethod;
  _CERT_ALT_NAME_ENTRY AccessLocation;
};

/* 1712 */
struct tMIXERCONTROLDETAILS_UNSIGNED
{
  unsigned int dwValue;
};

/* 1713 */
struct _BYTE_BLOB
{
  unsigned int clSize;
  char abData[1];
};

/* 1714 */
union _userHENHMETAFILE::__MIDL_IWinTypes_0006
{
  int hInproc;
  _BYTE_BLOB *hRemote;
  __int64 hInproc64;
};

/* 1715 */
struct _userHENHMETAFILE
{
  int fContext;
  _userHENHMETAFILE::__MIDL_IWinTypes_0006 u;
};

/* 1716 */
struct IXMLDOMNode
{
  IDispatch baseclass_0;
};

/* 1717 */
struct IXMLDOMDocumentFragment
{
  IXMLDOMNode baseclass_0;
};

/* 1718 */
struct _CERT_SIGNED_CONTENT_INFO
{
  _CRYPTOAPI_BLOB ToBeSigned;
  _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  _CRYPT_BIT_BLOB Signature;
};

/* 1719 */
struct _CMC_TAGGED_ATTRIBUTE
{
  unsigned int dwBodyPartID;
  _CRYPT_ATTRIBUTE Attribute;
};

/* 1720 */
struct _USER_MARSHAL_ROUTINE_QUADRUPLE
{
  unsigned int (__stdcall *pfnBufferSize)(unsigned int *, unsigned int, void *);
  char *(__stdcall *pfnMarshall)(unsigned int *, char *, void *);
  char *(__stdcall *pfnUnmarshall)(unsigned int *, char *, void *);
  void (__stdcall *pfnFree)(unsigned int *, void *);
};

/* 1721 */
struct tagOFN_NT4W
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpstrFilter;
  unsigned __int16 *lpstrCustomFilter;
  unsigned int nMaxCustFilter;
  unsigned int nFilterIndex;
  unsigned __int16 *lpstrFile;
  unsigned int nMaxFile;
  unsigned __int16 *lpstrFileTitle;
  unsigned int nMaxFileTitle;
  const unsigned __int16 *lpstrInitialDir;
  const unsigned __int16 *lpstrTitle;
  unsigned int Flags;
  unsigned __int16 nFileOffset;
  unsigned __int16 nFileExtension;
  const unsigned __int16 *lpstrDefExt;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpTemplateName;
};

/* 1722 */
struct tagWAVEOUTCAPSA
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
};

/* 1723 */
struct _CTL_FIND_USAGE_PARA
{
  unsigned int cbSize;
  _CTL_USAGE SubjectUsage;
  _CRYPTOAPI_BLOB ListIdentifier;
  _CERT_INFO *pSigner;
};

/* 1724 */
struct _CTL_FIND_SUBJECT_PARA
{
  unsigned int cbSize;
  _CTL_FIND_USAGE_PARA *pUsagePara;
  unsigned int dwSubjectType;
  void *pvSubject;
};

/* 1725 */
struct _CMC_TAGGED_CONTENT_INFO
{
  unsigned int dwBodyPartID;
  _CRYPTOAPI_BLOB EncodedContentInfo;
};

/* 1726 */
struct _CMC_TAGGED_OTHER_MSG
{
  unsigned int dwBodyPartID;
  char *pszObjId;
  _CRYPTOAPI_BLOB Value;
};

/* 1727 */
struct _CMC_RESPONSE_INFO
{
  unsigned int cTaggedAttribute;
  _CMC_TAGGED_ATTRIBUTE *rgTaggedAttribute;
  unsigned int cTaggedContentInfo;
  _CMC_TAGGED_CONTENT_INFO *rgTaggedContentInfo;
  unsigned int cTaggedOtherMsg;
  _CMC_TAGGED_OTHER_MSG *rgTaggedOtherMsg;
};

/* 1728 */
struct _CHANGER_SET_ACCESS
{
  _CHANGER_ELEMENT Element;
  unsigned int Control;
};

/* 1729 */
struct _REMSECURITY_ATTRIBUTES
{
  unsigned int nLength;
  unsigned int lpSecurityDescriptor;
  int bInheritHandle;
};

/* 1730 */
struct _CRYPT_SMIME_CAPABILITY
{
  char *pszObjId;
  _CRYPTOAPI_BLOB Parameters;
};

/* 1731 */
struct _CRYPT_SMIME_CAPABILITIES
{
  unsigned int cCapability;
  _CRYPT_SMIME_CAPABILITY *rgCapability;
};

/* 1732 */
struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA
{
  unsigned int cbSize;
  unsigned int dwRegPolicySettings;
  int fCommercial;
};

/* 1733 */
struct SCARD_READERSTATEA
{
  const char *szReader;
  void *pvUserData;
  unsigned int dwCurrentState;
  unsigned int dwEventState;
  unsigned int cbAtr;
  char rgbAtr[36];
};

/* 1734 */
struct tagAUXCAPS2W
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 1735 */
struct tagMIXERCAPS2W
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int fdwSupport;
  unsigned int cDestinations;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 1736 */
struct OPENCARD_SEARCH_CRITERIAA
{
  unsigned int dwStructSize;
  char *lpstrGroupNames;
  unsigned int nMaxGroupNames;
  _GUID *rgguidInterfaces;
  unsigned int cguidInterfaces;
  char *lpstrCardNames;
  unsigned int nMaxCardNames;
  int (__stdcall *lpfnCheck)(unsigned int, unsigned int, void *);
  unsigned int (__stdcall *lpfnConnect)(unsigned int, char *, char *, void *);
  void (__stdcall *lpfnDisconnect)(unsigned int, unsigned int, void *);
  void *pvUserData;
  unsigned int dwShareMode;
  unsigned int dwPreferredProtocols;
};

/* 1737 */
struct OPENCARDNAME_EXA
{
  unsigned int dwStructSize;
  unsigned int hSCardContext;
  HWND__ *hwndOwner;
  unsigned int dwFlags;
  const char *lpstrTitle;
  const char *lpstrSearchDesc;
  HICON__ *hIcon;
  OPENCARD_SEARCH_CRITERIAA *pOpenCardSearchCriteria;
  unsigned int (__stdcall *lpfnConnect)(unsigned int, char *, char *, void *);
  void *pvUserData;
  unsigned int dwShareMode;
  unsigned int dwPreferredProtocols;
  char *lpstrRdr;
  unsigned int nMaxRdr;
  char *lpstrCard;
  unsigned int nMaxCard;
  unsigned int dwActiveProtocol;
  unsigned int hCardHandle;
};

/* 1738 */
struct _SEC_WINNT_AUTH_IDENTITY_W
{
  unsigned __int16 *User;
  unsigned int UserLength;
  unsigned __int16 *Domain;
  unsigned int DomainLength;
  unsigned __int16 *Password;
  unsigned int PasswordLength;
  unsigned int Flags;
};

/* 1739 */
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W
{
  _SEC_WINNT_AUTH_IDENTITY_W *TransportCredentials;
  unsigned int Flags;
  unsigned int AuthenticationTarget;
  unsigned int NumberOfAuthnSchemes;
  unsigned int *AuthnSchemes;
  unsigned __int16 *ServerCertificateSubject;
};

/* 1740 */
union _RPC_SECURITY_QOS_V3_W::__unnamed
{
  _RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials;
};

/* 1741 */
struct _RPC_SECURITY_QOS_V3_W
{
  unsigned int Version;
  unsigned int Capabilities;
  unsigned int IdentityTracking;
  unsigned int ImpersonationType;
  unsigned int AdditionalSecurityInfoType;
  _RPC_SECURITY_QOS_V3_W::__unnamed u;
  void *Sid;
};

/* 1742 */
struct _FORM_INFO_1W
{
  unsigned int Flags;
  unsigned __int16 *pName;
  tagSIZE Size;
  _RECTL ImageableArea;
};

/* 1743 */
struct _tagSOFTDISTINFO
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int dwAdState;
  unsigned __int16 *szTitle;
  unsigned __int16 *szAbstract;
  unsigned __int16 *szHREF;
  unsigned int dwInstalledVersionMS;
  unsigned int dwInstalledVersionLS;
  unsigned int dwUpdateVersionMS;
  unsigned int dwUpdateVersionLS;
  unsigned int dwAdvertisedVersionMS;
  unsigned int dwAdvertisedVersionLS;
  unsigned int dwReserved;
};

/* 1744 */
struct IWaitMultiple
{
  IUnknown baseclass_0;
};

/* 1745 */
struct tagMCI_STATUS_PARMS
{
  unsigned int dwCallback;
  unsigned int dwReturn;
  unsigned int dwItem;
  unsigned int dwTrack;
};

/* 1746 */
struct _WORD_BLOB
{
  unsigned int clSize;
  unsigned __int16 asData[1];
};

/* 1747 */
struct _SEC_WINNT_AUTH_IDENTITY_A
{
  char *User;
  unsigned int UserLength;
  char *Domain;
  unsigned int DomainLength;
  char *Password;
  unsigned int PasswordLength;
  unsigned int Flags;
};

/* 1748 */
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A
{
  _SEC_WINNT_AUTH_IDENTITY_A *TransportCredentials;
  unsigned int Flags;
  unsigned int AuthenticationTarget;
  unsigned int NumberOfAuthnSchemes;
  unsigned int *AuthnSchemes;
  char *ServerCertificateSubject;
};

/* 1749 */
union _RPC_SECURITY_QOS_V2_A::__unnamed
{
  _RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials;
};

/* 1750 */
struct _RPC_SECURITY_QOS_V2_A
{
  unsigned int Version;
  unsigned int Capabilities;
  unsigned int IdentityTracking;
  unsigned int ImpersonationType;
  unsigned int AdditionalSecurityInfoType;
  _RPC_SECURITY_QOS_V2_A::__unnamed u;
};

/* 1751 */
struct tagCHOOSEFONTA
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HDC__ *hDC;
  tagLOGFONTA *lpLogFont;
  int iPointSize;
  unsigned int Flags;
  unsigned int rgbColors;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const char *lpTemplateName;
  HINSTANCE__ *hInstance;
  char *lpszStyle;
  unsigned __int16 nFontType;
  unsigned __int16 ___MISSING_ALIGNMENT__;
  int nSizeMin;
  int nSizeMax;
};

/* 1752 */
struct _CRYPT_X942_OTHER_INFO
{
  char *pszContentEncryptionObjId;
  char rgbCounter[4];
  char rgbKeyLength[4];
  _CRYPTOAPI_BLOB PubInfo;
};

/* 1753 */
struct tagAUXCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
};

/* 1754 */
struct tagMCI_OVLY_SAVE_PARMSW
{
  unsigned int dwCallback;
  const unsigned __int16 *lpfilename;
  tagRECT rc;
};

/* 1755 */
struct tagMCI_VD_ESCAPE_PARMSA
{
  unsigned int dwCallback;
  const char *lpstrCommand;
};

/* 1756 */
struct _PORT_INFO_3W
{
  unsigned int dwStatus;
  unsigned __int16 *pszStatus;
  unsigned int dwSeverity;
};

/* 1757 */
struct _tagPROTOCOLDATA
{
  unsigned int grfFlags;
  unsigned int dwState;
  void *pData;
  unsigned int cbData;
};

/* 1758 */
struct tagWAVEINCAPS2A
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 1759 */
struct _CERT_ALT_NAME_INFO
{
  unsigned int cAltEntry;
  _CERT_ALT_NAME_ENTRY *rgAltEntry;
};

/* 1760 */
struct _STORAGE_DEVICE_NUMBER
{
  unsigned int DeviceType;
  unsigned int DeviceNumber;
  unsigned int PartitionNumber;
};

/* 1761 */
struct tagMCI_OPEN_PARMSW
{
  unsigned int dwCallback;
  unsigned int wDeviceID;
  const unsigned __int16 *lpstrDeviceType;
  const unsigned __int16 *lpstrElementName;
  const unsigned __int16 *lpstrAlias;
};

/* 1762 */
struct _CERT_BASIC_CONSTRAINTS2_INFO
{
  int fCA;
  int fPathLenConstraint;
  unsigned int dwPathLenConstraint;
};

/* 1763 */
struct _BIN_RANGE
{
  _LARGE_INTEGER StartValue;
  _LARGE_INTEGER Length;
};

/* 1764 */
struct _BIN_COUNT
{
  _BIN_RANGE BinRange;
  unsigned int BinCount;
};

/* 1765 */
struct _BIN_RESULTS
{
  unsigned int NumberOfBins;
  _BIN_COUNT BinCounts[1];
};

/* 1766 */
struct IDataAdviseHolder
{
  IUnknown baseclass_0;
};

/* 1767 */
struct tagDVTARGETDEVICE
{
  unsigned int tdSize;
  unsigned __int16 tdDriverNameOffset;
  unsigned __int16 tdDeviceNameOffset;
  unsigned __int16 tdPortNameOffset;
  unsigned __int16 tdExtDevmodeOffset;
  char tdData[1];
};

/* 1768 */
struct tagFORMATETC
{
  unsigned __int16 cfFormat;
  tagDVTARGETDEVICE *ptd;
  unsigned int dwAspect;
  int lindex;
  unsigned int tymed;
};

/* 1769 */
struct IAdviseSink
{
  IUnknown baseclass_0;
};

/* 1770 */
struct IEnumSTATDATA
{
  IUnknown baseclass_0;
};

/* 1771 */
struct tagBIND_OPTS
{
  unsigned int cbStruct;
  unsigned int grfFlags;
  unsigned int grfMode;
  unsigned int dwTickCountDeadline;
};

/* 1772 */
struct IXMLDOMNodeList
{
  IDispatch baseclass_0;
};

/* 1773 */
struct IXMLDOMNamedNodeMap
{
  IDispatch baseclass_0;
};

/* 1774 */
struct IXMLDOMDocument
{
  IXMLDOMNode baseclass_0;
};

/* 1775 */
struct tagRemBRUSH
{
  unsigned int cbData;
  char data[1];
};

/* 1776 */
struct _SET_PARTITION_INFORMATION
{
  char PartitionType;
};

/* 1777 */
struct tagMIXERCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int fdwSupport;
  unsigned int cDestinations;
};

/* 1778 */
struct tagMIDIOUTCAPS2W
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wVoices;
  unsigned __int16 wNotes;
  unsigned __int16 wChannelMask;
  unsigned int dwSupport;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 1779 */
struct _CRL_FIND_ISSUED_FOR_PARA
{
  _CERT_CONTEXT *pSubjectCert;
  _CERT_CONTEXT *pIssuerCert;
};

/* 1780 */
struct _PROPSHEETPAGEW
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HINSTANCE__ *hInstance;
  $9C1EDDD10B887C558A23F4795CFD7326 ___u3;
  $F8D56076672271F4E472AFC8D552D121 ___u4;
  const unsigned __int16 *pszTitle;
  int (__stdcall *pfnDlgProc)(HWND__ *, unsigned int, unsigned int, int);
  int lParam;
  unsigned int (__stdcall *pfnCallback)(HWND__ *, unsigned int, _PROPSHEETPAGEW *);
  unsigned int *pcRefParent;
  const unsigned __int16 *pszHeaderTitle;
  const unsigned __int16 *pszHeaderSubTitle;
};

/* 1781 */
union $9C1EDDD10B887C558A23F4795CFD7326
{
  const unsigned __int16 *pszTemplate;
  DLGTEMPLATE *pResource;
};

/* 1782 */
union $F8D56076672271F4E472AFC8D552D121
{
  HICON__ *hIcon;
  const unsigned __int16 *pszIcon;
};

/* 1783 */
union $4B8A0BB10F5C4B9D8BBE7645A6566273
{
  unsigned int nStartPage;
  const unsigned __int16 *pStartPage;
};

/* 1784 */
union $2C4DD64157A6D23F0E045B7550F6785A
{
  _PROPSHEETPAGEW *ppsp;
  _PSP **phpage;
};

/* 1785 */
union $1DED11828144AB823E5838B1AF698007
{
  HBITMAP__ *hbmWatermark;
  const unsigned __int16 *pszbmWatermark;
};

/* 1786 */
union $5E246B371031096E1A5AD239D6EF0597
{
  HBITMAP__ *hbmHeader;
  const unsigned __int16 *pszbmHeader;
};

/* 1787 */
struct _PROPSHEETHEADERW
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HWND__ *hwndParent;
  HINSTANCE__ *hInstance;
  $F8D56076672271F4E472AFC8D552D121 ___u4;
  const unsigned __int16 *pszCaption;
  unsigned int nPages;
  $4B8A0BB10F5C4B9D8BBE7645A6566273 ___u7;
  $2C4DD64157A6D23F0E045B7550F6785A ___u8;
  int (__stdcall *pfnCallback)(HWND__ *, unsigned int, int);
  $1DED11828144AB823E5838B1AF698007 ___u10;
  HPALETTE__ *hplWatermark;
  $5E246B371031096E1A5AD239D6EF0597 ___u12;
};

/* 1788 */
struct tagCHOOSECOLORA
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HWND__ *hInstance;
  unsigned int rgbResult;
  unsigned int *lpCustColors;
  unsigned int Flags;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const char *lpTemplateName;
};

/* 1789 */
struct HMMIO__
{
  int unused;
};

/* 1790 */
struct _MMIOINFO
{
  unsigned int dwFlags;
  unsigned int fccIOProc;
  int (__stdcall *pIOProc)(char *, unsigned int, int, int);
  unsigned int wErrorRet;
  HTASK__ *htask;
  int cchBuffer;
  char *pchBuffer;
  char *pchNext;
  char *pchEndRead;
  char *pchEndWrite;
  int lBufOffset;
  int lDiskOffset;
  unsigned int adwInfo[3];
  unsigned int dwReserved1;
  unsigned int dwReserved2;
  HMMIO__ *hmmio;
};

/* 1791 */
struct _CMSG_SIGNER_INFO
{
  unsigned int dwVersion;
  _CRYPTOAPI_BLOB Issuer;
  _CRYPTOAPI_BLOB SerialNumber;
  _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
  _CRYPTOAPI_BLOB EncryptedHash;
  _CRYPT_ATTRIBUTES AuthAttrs;
  _CRYPT_ATTRIBUTES UnauthAttrs;
};

/* 1792 */
struct _JOB_INFO_2A
{
  unsigned int JobId;
  char *pPrinterName;
  char *pMachineName;
  char *pUserName;
  char *pDocument;
  char *pNotifyName;
  char *pDatatype;
  char *pPrintProcessor;
  char *pParameters;
  char *pDriverName;
  _devicemodeA *pDevMode;
  char *pStatus;
  void *pSecurityDescriptor;
  unsigned int Status;
  unsigned int Priority;
  unsigned int Position;
  unsigned int StartTime;
  unsigned int UntilTime;
  unsigned int TotalPages;
  unsigned int Size;
  _SYSTEMTIME Submitted;
  unsigned int Time;
  unsigned int PagesPrinted;
};

/* 1793 */
struct _JOB_INFO_3
{
  unsigned int JobId;
  unsigned int NextJobId;
  unsigned int Reserved;
};

/* 1794 */
struct _ADDJOB_INFO_1W
{
  unsigned __int16 *Path;
  unsigned int JobId;
};

/* 1795 */
struct IContext
{
  IUnknown baseclass_0;
};

/* 1796 */
struct IObjContext
{
  IContext baseclass_0;
};

/* 1797 */
struct _SCARD_IO_REQUEST
{
  unsigned int dwProtocol;
  unsigned int cbPciLength;
};

/* 1798 */
#pragma pack(push, 1)
struct waveformat_tag
{
  unsigned __int16 wFormatTag;
  unsigned __int16 nChannels;
  unsigned int nSamplesPerSec;
  unsigned int nAvgBytesPerSec;
  unsigned __int16 nBlockAlign;
};
#pragma pack(pop)

/* 1799 */
struct _PROVIDOR_INFO_1A
{
  char *pName;
  char *pEnvironment;
  char *pDLLName;
};

/* 1800 */
struct tagMIXERCAPS2A
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned int fdwSupport;
  unsigned int cDestinations;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 1801 */
struct _CERT_POLICY_ID
{
  unsigned int cCertPolicyElementId;
  char **rgpszCertPolicyElementId;
};

/* 1802 */
struct _CERT_KEY_USAGE_RESTRICTION_INFO
{
  unsigned int cCertPolicyId;
  _CERT_POLICY_ID *rgCertPolicyId;
  _CRYPT_BIT_BLOB RestrictedKeyUsage;
};

/* 1803 */
struct _PRINTER_INFO_1W
{
  unsigned int Flags;
  unsigned __int16 *pDescription;
  unsigned __int16 *pName;
  unsigned __int16 *pComment;
};

/* 1804 */
struct tagJOYCAPS2A
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  char szPname[32];
  unsigned int wXmin;
  unsigned int wXmax;
  unsigned int wYmin;
  unsigned int wYmax;
  unsigned int wZmin;
  unsigned int wZmax;
  unsigned int wNumButtons;
  unsigned int wPeriodMin;
  unsigned int wPeriodMax;
  unsigned int wRmin;
  unsigned int wRmax;
  unsigned int wUmin;
  unsigned int wUmax;
  unsigned int wVmin;
  unsigned int wVmax;
  unsigned int wCaps;
  unsigned int wMaxAxes;
  unsigned int wNumAxes;
  unsigned int wMaxButtons;
  char szRegKey[32];
  char szOEMVxD[260];
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 1805 */
struct tagMCI_ANIM_OPEN_PARMSA
{
  unsigned int dwCallback;
  unsigned int wDeviceID;
  const char *lpstrDeviceType;
  const char *lpstrElementName;
  const char *lpstrAlias;
  unsigned int dwStyle;
  HWND__ *hWndParent;
};

/* 1806 */
struct _SCHANNEL_ALG
{
  unsigned int dwUse;
  unsigned int Algid;
  unsigned int cBits;
  unsigned int dwFlags;
  unsigned int dwReserved;
};

/* 1807 */
struct _CERT_CREATE_CONTEXT_PARA
{
  unsigned int cbSize;
  void (__stdcall *pfnFree)(void *);
  void *pvFree;
};

/* 1808 */
struct _RPC_VERSION
{
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
};

/* 1809 */
struct _RPC_SYNTAX_IDENTIFIER
{
  _GUID SyntaxGUID;
  _RPC_VERSION SyntaxVersion;
};

/* 1810 */
struct _RPC_MESSAGE
{
  void *Handle;
  unsigned int DataRepresentation;
  void *Buffer;
  unsigned int BufferLength;
  unsigned int ProcNum;
  _RPC_SYNTAX_IDENTIFIER *TransferSyntax;
  void *RpcInterfaceInformation;
  void *ReservedForRuntime;
  void *ManagerEpv;
  void *ImportContext;
  unsigned int RpcFlags;
};

/* 1811 */
struct RPC_DISPATCH_TABLE
{
  unsigned int DispatchTableCount;
  void (__stdcall **DispatchTable)(_RPC_MESSAGE *);
  int Reserved;
};

/* 1812 */
struct _MIDL_SYNTAX_INFO
{
  _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  RPC_DISPATCH_TABLE *DispatchTable;
  const char *ProcString;
  const unsigned __int16 *FmtStringOffset;
  const char *TypeString;
  const void *aUserMarshalQuadruple;
  unsigned int pReserved1;
  unsigned int pReserved2;
};

/* 1813 */
struct _DSSSEED
{
  unsigned int counter;
  char seed[20];
};

/* 1814 */
struct _PUBKEYVER3
{
  unsigned int magic;
  unsigned int bitlenP;
  unsigned int bitlenQ;
  unsigned int bitlenJ;
  _DSSSEED DSSSeed;
};

/* 1815 */
struct _CERT_REGISTRY_STORE_ROAMING_PARA
{
  HKEY__ *hKey;
  unsigned __int16 *pwszStoreDirectory;
};

/* 1816 */
struct IRpcChannelBuffer
{
  IUnknown baseclass_0;
};

/* 1817 */
struct _NDR_USER_MARSHAL_INFO_LEVEL1
{
  void *Buffer;
  unsigned int BufferSize;
  void *(__stdcall *pfnAllocate)(unsigned int);
  void (__stdcall *pfnFree)(void *);
  IRpcChannelBuffer *pRpcChannelBuffer;
  unsigned int Reserved[5];
};

/* 1818 */
struct _DATATYPES_INFO_1A
{
  char *pName;
};

/* 1819 */
struct _userBITMAP
{
  int bmType;
  int bmWidth;
  int bmHeight;
  int bmWidthBytes;
  unsigned __int16 bmPlanes;
  unsigned __int16 bmBitsPixel;
  unsigned int cbSize;
  char pBuffer[1];
};

/* 1820 */
union _userHBITMAP::__MIDL_IWinTypes_0007
{
  int hInproc;
  _userBITMAP *hRemote;
  __int64 hInproc64;
};

/* 1821 */
struct _userHBITMAP
{
  int fContext;
  _userHBITMAP::__MIDL_IWinTypes_0007 u;
};

/* 1822 */
union _userHPALETTE::__MIDL_IWinTypes_0008
{
  int hInproc;
  tagLOGPALETTE *hRemote;
  __int64 hInproc64;
};

/* 1823 */
struct _userHPALETTE
{
  int fContext;
  _userHPALETTE::__MIDL_IWinTypes_0008 u;
};

/* 1824 */
union _GDI_OBJECT::__MIDL_IAdviseSink_0002
{
  _userHBITMAP *hBitmap;
  _userHPALETTE *hPalette;
  _userHGLOBAL *hGeneric;
};

/* 1825 */
struct _GDI_OBJECT
{
  unsigned int ObjectType;
  _GDI_OBJECT::__MIDL_IAdviseSink_0002 u;
};

/* 1826 */
union _RPC_SECURITY_QOS_V3_A::__unnamed
{
  _RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials;
};

/* 1827 */
struct _RPC_SECURITY_QOS_V3_A
{
  unsigned int Version;
  unsigned int Capabilities;
  unsigned int IdentityTracking;
  unsigned int ImpersonationType;
  unsigned int AdditionalSecurityInfoType;
  _RPC_SECURITY_QOS_V3_A::__unnamed u;
  void *Sid;
};

/* 1828 */
struct IComThreadingInfo
{
  IUnknown baseclass_0;
};

/* 1829 */
struct _OLESTREAM
{
  _OLESTREAMVTBL *lpstbl;
};

/* 1830 */
struct _OLESTREAMVTBL
{
  unsigned int (__stdcall *Get)(_OLESTREAM *, void *, unsigned int);
  unsigned int (__stdcall *Put)(_OLESTREAM *, const void *, unsigned int);
};

/* 1831 */
struct _PRINTER_INFO_8A
{
  _devicemodeA *pDevMode;
};

/* 1832 */
struct tagMCI_OPEN_PARMSA
{
  unsigned int dwCallback;
  unsigned int wDeviceID;
  const char *lpstrDeviceType;
  const char *lpstrElementName;
  const char *lpstrAlias;
};

/* 1833 */
struct tagMCI_SAVE_PARMSW
{
  unsigned int dwCallback;
  const unsigned __int16 *lpfilename;
};

/* 1834 */
struct __GENERIC_BINDING_INFO
{
  void *pObj;
  unsigned int Size;
  void *(__stdcall *pfnBind)(void *);
  void (__stdcall *pfnUnbind)(void *, char *);
};

/* 1835 */
union _MIDL_STUB_DESC::__unnamed
{
  void **pAutoHandle;
  void **pPrimitiveHandle;
  __GENERIC_BINDING_INFO *pGenericBindingInfo;
};

/* 1836 */
struct _GENERIC_BINDING_ROUTINE_PAIR
{
  void *(__stdcall *pfnBind)(void *);
  void (__stdcall *pfnUnbind)(void *, char *);
};

/* 1837 */
struct _MIDL_STUB_MESSAGE
{
  _RPC_MESSAGE *RpcMsg;
  char *Buffer;
  char *BufferStart;
  char *BufferEnd;
  char *BufferMark;
  unsigned int BufferLength;
  unsigned int MemorySize;
  char *Memory;
  int IsClient;
  int ReuseBuffer;
  struct NDR_ALLOC_ALL_NODES_CONTEXT *pAllocAllNodesContext;
  struct NDR_POINTER_QUEUE_STATE *pPointerQueueState;
  int IgnoreEmbeddedPointers;
  char *PointerBufferMark;
  char fBufferValid;
  char uFlags;
  unsigned __int16 UniquePtrCount;
  unsigned int MaxCount;
  unsigned int Offset;
  unsigned int ActualCount;
  void *(__stdcall *pfnAllocate)(unsigned int);
  void (__stdcall *pfnFree)(void *);
  char *StackTop;
  char *pPresentedType;
  char *pTransmitType;
  void *SavedHandle;
  _MIDL_STUB_DESC *StubDesc;
  _FULL_PTR_XLAT_TABLES *FullPtrXlatTables;
  unsigned int FullPtrRefId;
  unsigned int PointerLength;
  int _bf112;
  unsigned int dwDestContext;
  void *pvDestContext;
  $3FA64165D15A4602C29B2D9B0DA4A5E9 **SavedContextHandles;
  int ParamNumber;
  IRpcChannelBuffer *pRpcChannelBuffer;
  ARRAY_INFO *pArrayInfo;
  unsigned int *SizePtrCountArray;
  unsigned int *SizePtrOffsetArray;
  unsigned int *SizePtrLengthArray;
  void *pArgQueue;
  unsigned int dwStubPhase;
  void *LowStackMark;
  struct _NDR_ASYNC_MESSAGE *pAsyncMsg;
  _NDR_CORRELATION_INFO *pCorrInfo;
  char *pCorrMemory;
  void *pMemoryList;
  CS_STUB_INFO *pCSInfo;
  char *ConformanceMark;
  char *VarianceMark;
  int Unused;
  struct _NDR_PROC_CONTEXT *pContext;
  int Reserved51_1;
  int Reserved51_2;
  int Reserved51_3;
  int Reserved51_4;
  int Reserved51_5;
};

/* 1838 */
const struct _XMIT_ROUTINE_QUINTUPLE
{
  void (__stdcall *pfnTranslateToXmit)(_MIDL_STUB_MESSAGE *);
  void (__stdcall *pfnTranslateFromXmit)(_MIDL_STUB_MESSAGE *);
  void (__stdcall *pfnFreeXmit)(_MIDL_STUB_MESSAGE *);
  void (__stdcall *pfnFreeInst)(_MIDL_STUB_MESSAGE *);
};

/* 1839 */
struct _MALLOC_FREE_STRUCT
{
  void *(__stdcall *pfnAllocate)(unsigned int);
  void (__stdcall *pfnFree)(void *);
};

/* 1840 */
const struct _COMM_FAULT_OFFSETS
{
  __int16 CommOffset;
  __int16 FaultOffset;
};

/* 1841 */
struct _NDR_CS_SIZE_CONVERT_ROUTINES
{
  void (__stdcall *pfnNetSize)(void *, unsigned int, unsigned int, _IDL_CS_CONVERT *, unsigned int *, unsigned int *);
  void (__stdcall *pfnToNetCs)(void *, unsigned int, void *, unsigned int, char *, unsigned int *, unsigned int *);
  void (__stdcall *pfnLocalSize)(void *, unsigned int, unsigned int, _IDL_CS_CONVERT *, unsigned int *, unsigned int *);
  void (__stdcall *pfnFromNetCs)(void *, unsigned int, char *, unsigned int, unsigned int, void *, unsigned int *, unsigned int *);
};

/* 1842 */
const struct _NDR_CS_ROUTINES
{
  _NDR_CS_SIZE_CONVERT_ROUTINES *pSizeConvertRoutines;
  void (__stdcall **pTagGettingRoutines)(void *, int, unsigned int *, unsigned int *, unsigned int *, unsigned int *);
};

/* 1843 */
const struct _MIDL_STUB_DESC
{
  void *RpcInterfaceInformation;
  void *(__stdcall *pfnAllocate)(unsigned int);
  void (__stdcall *pfnFree)(void *);
  _MIDL_STUB_DESC::__unnamed IMPLICIT_HANDLE_INFO;
  void (__stdcall *const *apfnNdrRundownRoutines)(void *);
  _GENERIC_BINDING_ROUTINE_PAIR *aGenericBindingRoutinePairs;
  void (__stdcall *const *apfnExprEval)(_MIDL_STUB_MESSAGE *);
  _XMIT_ROUTINE_QUINTUPLE *aXmitQuintuple;
  const char *pFormatTypes;
  int fCheckBounds;
  unsigned int Version;
  _MALLOC_FREE_STRUCT *pMallocFreeStruct;
  int MIDLVersion;
  _COMM_FAULT_OFFSETS *CommFaultOffsets;
  _USER_MARSHAL_ROUTINE_QUADRUPLE *aUserMarshalQuadruple;
  void (__stdcall *const *NotifyRoutineTable)();
  unsigned int mFlags;
  _NDR_CS_ROUTINES *CsRoutineTables;
  void *Reserved4;
  unsigned int Reserved5;
};

/* 1844 */
struct $3FA64165D15A4602C29B2D9B0DA4A5E9
{
  void *pad[2];
  void *userContext;
};

/* 1845 */
struct ARRAY_INFO
{
  int Dimension;
  unsigned int *BufferConformanceMark;
  unsigned int *BufferVarianceMark;
  unsigned int *MaxCountArray;
  unsigned int *OffsetArray;
  unsigned int *ActualCountArray;
};

/* 1846 */
struct CS_STUB_INFO
{
  unsigned int WireCodeset;
  unsigned int DesiredReceivingCodeset;
  void *CSArrayInfo;
};

/* 1847 */
union $598610CC988E402B9A82B84B75BDDF21
{
  unsigned int dwValue;
  unsigned int Algid;
  unsigned int dwLength;
};

/* 1848 */
struct _CRYPT_OID_INFO
{
  unsigned int cbSize;
  const char *pszOID;
  const unsigned __int16 *pwszName;
  unsigned int dwGroupId;
  $598610CC988E402B9A82B84B75BDDF21 ___u4;
  _CRYPTOAPI_BLOB ExtraInfo;
};

/* 1849 */
struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION
{
  void (__stdcall *pfnCompletion)(void *, unsigned int, const char *, char *, void *);
  void *pvCompletion;
};

/* 1850 */
struct SCARD_T1_REQUEST
{
  _SCARD_IO_REQUEST ioRequest;
};

/* 1851 */
struct _DRIVER_INFO_4A
{
  unsigned int cVersion;
  char *pName;
  char *pEnvironment;
  char *pDriverPath;
  char *pDataFile;
  char *pConfigFile;
  char *pHelpFile;
  char *pDependentFiles;
  char *pMonitorName;
  char *pDefaultDataType;
  char *pszzPreviousNames;
};

/* 1852 */
struct tagOBJECTDESCRIPTOR
{
  unsigned int cbSize;
  _GUID clsid;
  unsigned int dwDrawAspect;
  tagSIZE sizel;
  _POINTL pointl;
  unsigned int dwStatus;
  unsigned int dwFullUserTypeName;
  unsigned int dwSrcOfCopy;
};

/* 1853 */
struct _OFNOTIFYW
{
  tagNMHDR hdr;
  tagOFNW *lpOFN;
  unsigned __int16 *pszFile;
};

/* 1854 */
struct HSZ__
{
  int unused;
};

/* 1855 */
struct HCONV__
{
  int unused;
};

/* 1856 */
struct tagMONCONVSTRUCT
{
  unsigned int cb;
  int fConnect;
  unsigned int dwTime;
  void *hTask;
  HSZ__ *hszSvc;
  HSZ__ *hszTopic;
  HCONV__ *hConvClient;
  HCONV__ *hConvServer;
};

/* 1857 */
struct tagMCI_PLAY_PARMS
{
  unsigned int dwCallback;
  unsigned int dwFrom;
  unsigned int dwTo;
};

/* 1858 */
union _CLIENT_CALL_RETURN
{
  void *Pointer;
  int Simple;
};

/* 1859 */
struct _ADDJOB_INFO_1A
{
  char *Path;
  unsigned int JobId;
};

/* 1860 */
struct std::iterator<std::bidirectional_iterator_tag,CSession *,int,CSession * const *,CSession * const &>
{
  char dummy[1];
};

/* 1861 */
struct std::_Bidit<CSession *,int,CSession * const *,CSession * const &>
{
  std::iterator<std::bidirectional_iterator_tag,CSession *,int,CSession * const *,CSession * const &> baseclass_0;
};

/* 1862 */
union $045769FFBED5059FC7E8B7AB5C335068
{
  std::_Bidit<CSession *,int,CSession * const *,CSession * const &> baseclass_0;
  std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *_Ptr;
};

/* 1863 */
struct std::list<CSession *,std::allocator<CSession *> >::const_iterator
{
  $045769FFBED5059FC7E8B7AB5C335068 ___u0;
};

/* 1864 */
struct std::list<CSession *,std::allocator<CSession *> >::iterator
{
  std::list<CSession *,std::allocator<CSession *> >::const_iterator baseclass_0;
};

/* 1865 */
struct std::_Int_iterator_tag
{
  char dummy[1];
};

/* 1866 */
struct std::iterator_traits<unsigned short>
{
  char dummy[1];
};

/* 1867 */
struct std::output_iterator_tag
{
  char dummy[1];
};

/* 1868 */
struct std::iterator_traits<unsigned long>
{
  char dummy[1];
};

/* 1869 */
struct std::iterator_traits<short>
{
  char dummy[1];
};

/* 1870 */
struct std::iterator_traits<unsigned __int64>
{
  char dummy[1];
};

/* 1871 */
struct std::iterator_traits<signed char>
{
  char dummy[1];
};

/* 1872 */
struct std::iterator_traits<__int64>
{
  char dummy[1];
};

/* 1873 */
struct std::iterator_traits<unsigned int>
{
  char dummy[1];
};

/* 1874 */
struct std::iterator_traits<char>
{
  char dummy[1];
};

/* 1875 */
struct std::iterator_traits<unsigned char>
{
  char dummy[1];
};

/* 1876 */
struct std::iterator_traits<int>
{
  char dummy[1];
};

/* 1877 */
struct std::iterator_traits<bool>
{
  char dummy[1];
};

/* 1878 */
struct std::iterator_traits<long>
{
  char dummy[1];
};

/* 1879 */
struct std::allocator<CSession *>::rebind<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node>
{
  char dummy[1];
};

/* 1880 */
struct std::allocator<CSession *>::rebind<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *>
{
  char dummy[1];
};

/* 1881 */
struct std::allocator<CSession *>::rebind<CSession *>
{
  char dummy[1];
};

/* 1882 */
struct tagMCI_WAVE_OPEN_PARMSA
{
  unsigned int dwCallback;
  unsigned int wDeviceID;
  const char *lpstrDeviceType;
  const char *lpstrElementName;
  const char *lpstrAlias;
  unsigned int dwBufferSeconds;
};

/* 1883 */
struct _CERT_RDN_ATTR
{
  char *pszObjId;
  unsigned int dwValueType;
  _CRYPTOAPI_BLOB Value;
};

/* 1884 */
struct _CERT_RDN
{
  unsigned int cRDNAttr;
  _CERT_RDN_ATTR *rgRDNAttr;
};

/* 1885 */
struct _CERT_STORE_PROV_INFO
{
  unsigned int cbSize;
  unsigned int cStoreProvFunc;
  void **rgpvStoreProvFunc;
  void *hStoreProv;
  unsigned int dwStoreProvFlags;
  void *hStoreProvFuncAddr2;
};

/* 1886 */
struct IXMLDOMAttribute
{
  IXMLDOMNode baseclass_0;
};

/* 1887 */
struct ITypeMarshal
{
  IUnknown baseclass_0;
};

/* 1888 */
struct tagMCI_GENERIC_PARMS
{
  unsigned int dwCallback;
};

/* 1889 */
struct _PRINTER_INFO_2A
{
  char *pServerName;
  char *pPrinterName;
  char *pShareName;
  char *pPortName;
  char *pDriverName;
  char *pComment;
  char *pLocation;
  _devicemodeA *pDevMode;
  char *pSepFile;
  char *pPrintProcessor;
  char *pDatatype;
  char *pParameters;
  void *pSecurityDescriptor;
  unsigned int Attributes;
  unsigned int Priority;
  unsigned int DefaultPriority;
  unsigned int StartTime;
  unsigned int UntilTime;
  unsigned int Status;
  unsigned int cJobs;
  unsigned int AveragePPM;
};

/* 1890 */
struct IParseDisplayName
{
  IUnknown baseclass_0;
};

/* 1891 */
struct IOleContainer
{
  IParseDisplayName baseclass_0;
};

/* 1892 */
struct IOleItemContainer
{
  IOleContainer baseclass_0;
};

/* 1893 */
struct IWindowForBindingUI
{
  IUnknown baseclass_0;
};

/* 1894 */
struct _CMC_PEND_INFO
{
  _CRYPTOAPI_BLOB PendToken;
  _FILETIME PendTime;
};

/* 1895 */
union $84590542501E391A730D2DB567562C8E
{
  unsigned int dwFailInfo;
  _CMC_PEND_INFO *pPendInfo;
};

/* 1896 */
struct _CMC_STATUS_INFO
{
  unsigned int dwStatus;
  unsigned int cBodyList;
  unsigned int *rgdwBodyList;
  unsigned __int16 *pwszStatusString;
  unsigned int dwOtherInfoChoice;
  $84590542501E391A730D2DB567562C8E ___u5;
};

/* 1897 */
struct tagMCI_ANIM_OPEN_PARMSW
{
  unsigned int dwCallback;
  unsigned int wDeviceID;
  const unsigned __int16 *lpstrDeviceType;
  const unsigned __int16 *lpstrElementName;
  const unsigned __int16 *lpstrAlias;
  unsigned int dwStyle;
  HWND__ *hWndParent;
};

/* 1898 */
struct _DEVICE_MEDIA_INFO::__unnamed::__unnamed
{
  _LARGE_INTEGER Cylinders;
  _STORAGE_MEDIA_TYPE MediaType;
  unsigned int TracksPerCylinder;
  unsigned int SectorsPerTrack;
  unsigned int BytesPerSector;
  unsigned int NumberMediaSides;
  unsigned int MediaCharacteristics;
};

/* 1899 */
union _DEVICE_MEDIA_INFO::__unnamed
{
  _DEVICE_MEDIA_INFO::__unnamed::__unnamed DiskInfo;
  _DEVICE_MEDIA_INFO::__unnamed::__unnamed RemovableDiskInfo;
  _DEVICE_MEDIA_INFO::__unnamed::__unnamed TapeInfo;
};

/* 1900 */
struct _DEVICE_MEDIA_INFO
{
  _DEVICE_MEDIA_INFO::__unnamed DeviceSpecific;
};

/* 1901 */
struct _GET_MEDIA_TYPES
{
  unsigned int DeviceType;
  unsigned int MediaInfoCount;
  _DEVICE_MEDIA_INFO MediaInfo[1];
};

/* 1902 */
struct IInternetZoneManager
{
  IUnknown baseclass_0;
};

/* 1903 */
struct _ZONEATTRIBUTES
{
  unsigned int cbSize;
  unsigned __int16 szDisplayName[260];
  unsigned __int16 szDescription[200];
  unsigned __int16 szIconPath[260];
  unsigned int dwTemplateMinLevel;
  unsigned int dwTemplateRecommended;
  unsigned int dwTemplateCurrentLevel;
  unsigned int dwFlags;
};

/* 1904 */
struct ICreateTypeLib
{
  IUnknown baseclass_0;
};

/* 1905 */
struct ICreateTypeLib2
{
  ICreateTypeLib baseclass_0;
};

/* 1906 */
struct tagPSDA
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  void *hDevMode;
  void *hDevNames;
  unsigned int Flags;
  tagPOINT ptPaperSize;
  tagRECT rtMinMargin;
  tagRECT rtMargin;
  HINSTANCE__ *hInstance;
  int lCustData;
  unsigned int (__stdcall *lpfnPageSetupHook)(HWND__ *, unsigned int, unsigned int, int);
  unsigned int (__stdcall *lpfnPagePaintHook)(HWND__ *, unsigned int, unsigned int, int);
  const char *lpPageSetupTemplateName;
  void *hPageSetupTemplate;
};

/* 1907 */
struct _PRINTER_DEFAULTSA
{
  char *pDatatype;
  _devicemodeA *pDevMode;
  unsigned int DesiredAccess;
};

/* 1908 */
struct _CMS_DH_KEY_INFO
{
  unsigned int dwVersion;
  unsigned int Algid;
  char *pszContentEncObjId;
  _CRYPTOAPI_BLOB PubInfo;
  void *pReserved;
};

/* 1909 */
struct _WSAMSG
{
  sockaddr *name;
  int namelen;
  _WSABUF *lpBuffers;
  unsigned int dwBufferCount;
  _WSABUF Control;
  unsigned int dwFlags;
};

/* 1910 */
struct IInternetProtocolRoot
{
  IUnknown baseclass_0;
};

/* 1911 */
struct IInternetProtocol
{
  IInternetProtocolRoot baseclass_0;
};

/* 1912 */
struct tagCONVCONTEXT
{
  unsigned int cb;
  unsigned int wFlags;
  unsigned int wCountryID;
  int iCodePage;
  unsigned int dwLangID;
  unsigned int dwSecurity;
  _SECURITY_QUALITY_OF_SERVICE qos;
};

/* 1913 */
struct _PATHNAME_BUFFER
{
  unsigned int PathNameLength;
  unsigned __int16 Name[1];
};

/* 1914 */
struct _JOB_INFO_1A
{
  unsigned int JobId;
  char *pPrinterName;
  char *pMachineName;
  char *pUserName;
  char *pDocument;
  char *pDatatype;
  char *pStatus;
  unsigned int Status;
  unsigned int Priority;
  unsigned int Position;
  unsigned int TotalPages;
  unsigned int PagesPrinted;
  _SYSTEMTIME Submitted;
};

/* 1915 */
union _RPC_SECURITY_QOS_V2_W::__unnamed
{
  _RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials;
};

/* 1916 */
struct _RPC_SECURITY_QOS_V2_W
{
  unsigned int Version;
  unsigned int Capabilities;
  unsigned int IdentityTracking;
  unsigned int ImpersonationType;
  unsigned int AdditionalSecurityInfoType;
  _RPC_SECURITY_QOS_V2_W::__unnamed u;
};

/* 1917 */
struct _CERTIFICATE_BLOB
{
  unsigned int dwCertEncodingType;
  unsigned int cbData;
  char *pbData;
};

/* 1918 */
struct _ENCRYPTION_CERTIFICATE
{
  unsigned int cbTotalLength;
  _SID *pUserSid;
  _CERTIFICATE_BLOB *pCertBlob;
};

/* 1919 */
struct _STORAGE_PREDICT_FAILURE
{
  unsigned int PredictFailure;
  char VendorSpecific[512];
};

/* 1920 */
struct midievent_tag
{
  unsigned int dwDeltaTime;
  unsigned int dwStreamID;
  unsigned int dwEvent;
  unsigned int dwParms[1];
};

/* 1921 */
struct tagAUXCAPSA
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
};

/* 1922 */
union _userCLIPFORMAT::__MIDL_IWinTypes_0001
{
  unsigned int dwValue;
  wchar_t *pwszName;
};

/* 1923 */
struct _userCLIPFORMAT
{
  int fContext;
  _userCLIPFORMAT::__MIDL_IWinTypes_0001 u;
};

/* 1924 */
struct _CRYPT_RC2_CBC_PARAMETERS
{
  unsigned int dwVersion;
  int fIV;
  char rgbIV[8];
};

/* 1925 */
struct _PREVENT_MEDIA_REMOVAL
{
  char PreventMediaRemoval;
};

/* 1926 */
struct _DOC_INFO_2A
{
  char *pDocName;
  char *pOutputFile;
  char *pDatatype;
  unsigned int dwMode;
  unsigned int JobId;
};

/* 1927 */
struct _PROPSHEETPAGEW_V3
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HINSTANCE__ *hInstance;
  $9C1EDDD10B887C558A23F4795CFD7326 ___u3;
  $F8D56076672271F4E472AFC8D552D121 ___u4;
  const unsigned __int16 *pszTitle;
  int (__stdcall *pfnDlgProc)(HWND__ *, unsigned int, unsigned int, int);
  int lParam;
  unsigned int (__stdcall *pfnCallback)(HWND__ *, unsigned int, _PROPSHEETPAGEW *);
  unsigned int *pcRefParent;
  const unsigned __int16 *pszHeaderTitle;
  const unsigned __int16 *pszHeaderSubTitle;
  void *hActCtx;
};

/* 1928 */
struct _PRINTER_INFO_4A
{
  char *pPrinterName;
  char *pServerName;
  unsigned int Attributes;
};

/* 1929 */
struct tagOFN_NT4A
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const char *lpstrFilter;
  char *lpstrCustomFilter;
  unsigned int nMaxCustFilter;
  unsigned int nFilterIndex;
  char *lpstrFile;
  unsigned int nMaxFile;
  char *lpstrFileTitle;
  unsigned int nMaxFileTitle;
  const char *lpstrInitialDir;
  const char *lpstrTitle;
  unsigned int Flags;
  unsigned __int16 nFileOffset;
  unsigned __int16 nFileExtension;
  const char *lpstrDefExt;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const char *lpTemplateName;
};

/* 1930 */
struct _OFNOTIFYA
{
  tagNMHDR hdr;
  tagOFNA *lpOFN;
  char *pszFile;
};

/* 1931 */
struct _WSACMSGHDR
{
  unsigned int cmsg_len;
  int cmsg_level;
  int cmsg_type;
};

/* 1932 */
struct _CERT_FORTEZZA_DATA_PROP
{
  char SerialNumber[8];
  int CertIndex;
  char CertLabel[36];
};

/* 1933 */
struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA
{
  unsigned int cbSize;
  unsigned int dwSignerIndex;
  unsigned int dwUnauthAttrIndex;
};

/* 1934 */
struct _PRINTER_INFO_8W
{
  _devicemodeW *pDevMode;
};

/* 1935 */
struct pcmwaveformat_tag
{
  waveformat_tag wf;
  unsigned __int16 wBitsPerSample;
};

/* 1936 */
struct tagMCI_OVLY_OPEN_PARMSW
{
  unsigned int dwCallback;
  unsigned int wDeviceID;
  const unsigned __int16 *lpstrDeviceType;
  const unsigned __int16 *lpstrElementName;
  const unsigned __int16 *lpstrAlias;
  unsigned int dwStyle;
  HWND__ *hWndParent;
};

/* 1937 */
struct _DRIVER_INFO_1A
{
  char *pName;
};

/* 1938 */
struct _PRINTER_DEFAULTSW
{
  unsigned __int16 *pDatatype;
  _devicemodeW *pDevMode;
  unsigned int DesiredAccess;
};

/* 1939 */
struct IInternet
{
  IUnknown baseclass_0;
};

/* 1940 */
struct IInternetProtocolInfo
{
  IUnknown baseclass_0;
};

/* 1941 */
struct _BINARY_CONTAINER
{
  unsigned int cbBuf;
  char *pData;
};

/* 1942 */
union _BIDI_DATA::__unnamed
{
  int bData;
  int iData;
  unsigned __int16 *sData;
  float fData;
  _BINARY_CONTAINER biData;
};

/* 1943 */
struct _BIDI_DATA
{
  unsigned int dwBidiType;
  _BIDI_DATA::__unnamed u;
};

/* 1944 */
struct _BIDI_RESPONSE_DATA
{
  unsigned int dwResult;
  unsigned int dwReqNumber;
  unsigned __int16 *pSchema;
  _BIDI_DATA data;
};

/* 1945 */
struct _BIDI_RESPONSE_CONTAINER
{
  unsigned int Version;
  unsigned int Flags;
  unsigned int Count;
  _BIDI_RESPONSE_DATA aData[1];
};

/* 1946 */
struct IBindCtx
{
  IUnknown baseclass_0;
};

/* 1947 */
struct IRunningObjectTable
{
  IUnknown baseclass_0;
};

/* 1948 */
struct IEnumString
{
  IUnknown baseclass_0;
};

/* 1949 */
struct _STORAGE_HOTPLUG_INFO
{
  unsigned int Size;
  char MediaRemovable;
  char MediaHotplug;
  char DeviceHotplug;
  char WriteCacheEnableOverride;
};

/* 1950 */
struct IPropertyStorage
{
  IUnknown baseclass_0;
};

/* 1951 */
union $3CCD9A809E379FE498328B9C7C4CD0C6
{
  unsigned int propid;
  unsigned __int16 *lpwstr;
};

/* 1952 */
struct tagPROPSPEC
{
  unsigned int ulKind;
  $3CCD9A809E379FE498328B9C7C4CD0C6 ___u1;
};

/* 1953 */
struct IEnumSTATPROPSTG
{
  IUnknown baseclass_0;
};

/* 1954 */
struct tagSTATPROPSETSTG
{
  _GUID fmtid;
  _GUID clsid;
  unsigned int grfFlags;
  _FILETIME mtime;
  _FILETIME ctime;
  _FILETIME atime;
  unsigned int dwOSVersion;
};

/* 1955 */
#pragma pack(push, 1)
struct tagPDW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  void *hDevMode;
  void *hDevNames;
  HDC__ *hDC;
  unsigned int Flags;
  unsigned __int16 nFromPage;
  unsigned __int16 nToPage;
  unsigned __int16 nMinPage;
  unsigned __int16 nMaxPage;
  unsigned __int16 nCopies;
  HINSTANCE__ *hInstance;
  int lCustData;
  unsigned int (__stdcall *lpfnPrintHook)(HWND__ *, unsigned int, unsigned int, int);
  unsigned int (__stdcall *lpfnSetupHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpPrintTemplateName;
  const unsigned __int16 *lpSetupTemplateName;
  void *hPrintTemplate;
  void *hSetupTemplate;
};
#pragma pack(pop)

/* 1956 */
struct _CERT_CRL_CONTEXT_PAIR
{
  _CERT_CONTEXT *pCertContext;
  _CRL_CONTEXT *pCrlContext;
};

/* 1957 */
struct tagRemHPALETTE
{
  unsigned int cbData;
  char data[1];
};

/* 1958 */
struct HDDEDATA__
{
  int unused;
};

/* 1959 */
struct _DRIVER_INFO_6W
{
  unsigned int cVersion;
  unsigned __int16 *pName;
  unsigned __int16 *pEnvironment;
  unsigned __int16 *pDriverPath;
  unsigned __int16 *pDataFile;
  unsigned __int16 *pConfigFile;
  unsigned __int16 *pHelpFile;
  unsigned __int16 *pDependentFiles;
  unsigned __int16 *pMonitorName;
  unsigned __int16 *pDefaultDataType;
  unsigned __int16 *pszzPreviousNames;
  _FILETIME ftDriverDate;
  unsigned __int64 dwlDriverVersion;
  unsigned __int16 *pszMfgName;
  unsigned __int16 *pszOEMUrl;
  unsigned __int16 *pszHardwareID;
  unsigned __int16 *pszProvider;
};

/* 1960 */
struct _FLAGGED_WORD_BLOB
{
  unsigned int fFlags;
  unsigned int clSize;
  unsigned __int16 asData[1];
};

/* 1961 */
struct _CHANGER_ELEMENT_LIST
{
  _CHANGER_ELEMENT Element;
  unsigned int NumberOfElements;
};

/* 1962 */
struct _CHANGER_READ_ELEMENT_STATUS
{
  _CHANGER_ELEMENT_LIST ElementList;
  char VolumeTagInfo;
};

/* 1963 */
struct IUrlMon
{
  IUnknown baseclass_0;
};

/* 1964 */
struct _RPC_PROTSEQ_VECTORW
{
  unsigned int Count;
  unsigned __int16 *Protseq[1];
};

/* 1965 */
struct _PUBKEY
{
  unsigned int magic;
  unsigned int bitlen;
};

/* 1966 */
struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO
{
  unsigned int cbSize;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  void *pvKeyEncryptionAuxInfo;
  unsigned int hCryptProv;
  _CRYPT_BIT_BLOB RecipientPublicKey;
  _CERT_ID RecipientId;
};

/* 1967 */
union $C586F1BA4D2A4CE9CDD0B71FCD429287
{
  _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO *pKeyTrans;
  _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO *pKeyAgree;
  _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO *pMailList;
};

/* 1968 */
struct _CMSG_RECIPIENT_ENCODE_INFO
{
  unsigned int dwRecipientChoice;
  $C586F1BA4D2A4CE9CDD0B71FCD429287 ___u1;
};

/* 1969 */
struct _CMSG_CONTENT_ENCRYPT_INFO
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  void *pvEncryptionAuxInfo;
  unsigned int cRecipients;
  _CMSG_RECIPIENT_ENCODE_INFO *rgCmsRecipients;
  void *(__stdcall *pfnAlloc)(unsigned int);
  void (__stdcall *pfnFree)(void *);
  unsigned int dwEncryptFlags;
  unsigned int hContentEncryptKey;
  unsigned int dwFlags;
};

/* 1970 */
struct IPSFactoryBuffer
{
  IUnknown baseclass_0;
};

/* 1971 */
struct IRpcProxyBuffer
{
  IUnknown baseclass_0;
};

/* 1972 */
struct IRpcStubBuffer
{
  IUnknown baseclass_0;
};

/* 1973 */
struct IInternetProtocolSink
{
  IUnknown baseclass_0;
};

/* 1974 */
struct IXMLElement2
{
  IDispatch baseclass_0;
};

/* 1975 */
struct IXMLElementCollection
{
  IDispatch baseclass_0;
};

/* 1976 */
struct _CERT_PRIVATE_KEY_VALIDITY
{
  _FILETIME NotBefore;
  _FILETIME NotAfter;
};

/* 1977 */
struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO
{
  unsigned int cbSize;
  _CRYPTOAPI_BLOB EncryptedKey;
};

/* 1978 */
struct _CMSG_KEY_AGREE_ENCRYPT_INFO
{
  unsigned int cbSize;
  unsigned int dwRecipientIndex;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  _CRYPTOAPI_BLOB UserKeyingMaterial;
  unsigned int dwOriginatorChoice;
  $92F61CEF1A52049F6C35465A2E90B4B4 ___u5;
  unsigned int cKeyAgreeKeyEncryptInfo;
  _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO **rgpKeyAgreeKeyEncryptInfo;
  unsigned int dwFlags;
};

/* 1979 */
struct tagRPCOLEMESSAGE
{
  void *reserved1;
  unsigned int dataRepresentation;
  void *Buffer;
  unsigned int cbBuffer;
  unsigned int iMethod;
  void *reserved2[5];
  unsigned int rpcFlags;
};

/* 1980 */
struct _PROVIDOR_INFO_2W
{
  unsigned __int16 *pOrder;
};

/* 1981 */
struct _KEY_TYPE_SUBTYPE
{
  unsigned int dwKeySpec;
  _GUID Type;
  _GUID Subtype;
};

/* 1982 */
struct IProcessInitControl
{
  IUnknown baseclass_0;
};

/* 1983 */
struct tagAUXCAPS2A
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 1984 */
struct _CHANGER_ELEMENT_STATUS_EX
{
  _CHANGER_ELEMENT Element;
  _CHANGER_ELEMENT SrcElementAddress;
  unsigned int Flags;
  unsigned int ExceptionCode;
  char TargetId;
  char Lun;
  unsigned __int16 Reserved;
  char PrimaryVolumeID[36];
  char AlternateVolumeID[36];
  char VendorIdentification[8];
  char ProductIdentification[16];
  char SerialNumber[32];
};

/* 1985 */
struct tagRemSTGMEDIUM
{
  unsigned int tymed;
  unsigned int dwHandleType;
  unsigned int pData;
  unsigned int pUnkForRelease;
  unsigned int cbData;
  char data[1];
};

/* 1986 */
struct _RPC_PROTSEQ_ENDPOINT
{
  char *RpcProtocolSequence;
  char *Endpoint;
};

/* 1987 */
struct _DRIVER_INFO_5W
{
  unsigned int cVersion;
  unsigned __int16 *pName;
  unsigned __int16 *pEnvironment;
  unsigned __int16 *pDriverPath;
  unsigned __int16 *pDataFile;
  unsigned __int16 *pConfigFile;
  unsigned int dwDriverAttributes;
  unsigned int dwConfigVersion;
  unsigned int dwDriverVersion;
};

/* 1988 */
struct IPersistMoniker
{
  IUnknown baseclass_0;
};

/* 1989 */
struct _PROV_ENUMALGS_EX
{
  unsigned int aiAlgid;
  unsigned int dwDefaultLen;
  unsigned int dwMinLen;
  unsigned int dwMaxLen;
  unsigned int dwProtocols;
  unsigned int dwNameLen;
  char szName[20];
  unsigned int dwLongNameLen;
  char szLongName[40];
};

/* 1990 */
struct _CERT_X942_DH_VALIDATION_PARAMS
{
  _CRYPT_BIT_BLOB seed;
  unsigned int pgenCounter;
};

/* 1991 */
struct _CERT_X942_DH_PARAMETERS
{
  _CRYPTOAPI_BLOB p;
  _CRYPTOAPI_BLOB g;
  _CRYPTOAPI_BLOB q;
  _CRYPTOAPI_BLOB j;
  _CERT_X942_DH_VALIDATION_PARAMS *pValidationParams;
};

/* 1992 */
struct IOleWindow
{
  IUnknown baseclass_0;
};

/* 1993 */
struct IOleInPlaceActiveObject
{
  IOleWindow baseclass_0;
};

/* 1994 */
struct IOleInPlaceUIWindow
{
  IOleWindow baseclass_0;
};

/* 1995 */
struct _CHANGER_INITIALIZE_ELEMENT_STATUS
{
  _CHANGER_ELEMENT_LIST ElementList;
  char BarCodeScan;
};

/* 1996 */
struct _PRINTER_ENUM_VALUESW
{
  unsigned __int16 *pValueName;
  unsigned int cbValueName;
  unsigned int dwType;
  char *pData;
  unsigned int cbData;
};

/* 1997 */
struct _NAME_BUFFER
{
  char name[16];
  char name_num;
  char name_flags;
};

/* 1998 */
struct _CMSG_ENCRYPTED_ENCODE_INFO
{
  unsigned int cbSize;
  _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  void *pvEncryptionAuxInfo;
};

/* 1999 */
struct _PARTITION_INFORMATION
{
  _LARGE_INTEGER StartingOffset;
  _LARGE_INTEGER PartitionLength;
  unsigned int HiddenSectors;
  unsigned int PartitionNumber;
  char PartitionType;
  char BootIndicator;
  char RecognizedPartition;
  char RewritePartition;
};

/* 2000 */
struct _DOC_INFO_1A
{
  char *pDocName;
  char *pOutputFile;
  char *pDatatype;
};

/* 2001 */
struct tagMCI_VD_ESCAPE_PARMSW
{
  unsigned int dwCallback;
  const unsigned __int16 *lpstrCommand;
};

/* 2002 */
struct _DRIVER_INFO_4W
{
  unsigned int cVersion;
  unsigned __int16 *pName;
  unsigned __int16 *pEnvironment;
  unsigned __int16 *pDriverPath;
  unsigned __int16 *pDataFile;
  unsigned __int16 *pConfigFile;
  unsigned __int16 *pHelpFile;
  unsigned __int16 *pDependentFiles;
  unsigned __int16 *pMonitorName;
  unsigned __int16 *pDefaultDataType;
  unsigned __int16 *pszzPreviousNames;
};

/* 2003 */
struct tagMIDIOUTCAPS2A
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wVoices;
  unsigned __int16 wNotes;
  unsigned __int16 wChannelMask;
  unsigned int dwSupport;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 2004 */
struct _CERT_REVOCATION_PARA
{
  unsigned int cbSize;
  _CERT_CONTEXT *pIssuerCert;
  unsigned int cCertStore;
  void **rgCertStore;
  void *hCrlStore;
  _FILETIME *pftTimeToUse;
};

/* 2005 */
struct _DISK_RECORD
{
  _LARGE_INTEGER ByteOffset;
  _LARGE_INTEGER StartTime;
  _LARGE_INTEGER EndTime;
  void *VirtualAddress;
  unsigned int NumberOfBytes;
  char DeviceNumber;
  char ReadRequest;
};

/* 2006 */
struct _CMSG_CTRL_DECRYPT_PARA
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  unsigned int dwKeySpec;
  unsigned int dwRecipientIndex;
};

/* 2007 */
struct tagMIDIINCAPSA
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned int dwSupport;
};

/* 2008 */
struct tagMCI_WAVE_SET_PARMS
{
  unsigned int dwCallback;
  unsigned int dwTimeFormat;
  unsigned int dwAudio;
  unsigned int wInput;
  unsigned int wOutput;
  unsigned __int16 wFormatTag;
  unsigned __int16 wReserved2;
  unsigned __int16 nChannels;
  unsigned __int16 wReserved3;
  unsigned int nSamplesPerSec;
  unsigned int nAvgBytesPerSec;
  unsigned __int16 nBlockAlign;
  unsigned __int16 wReserved4;
  unsigned __int16 wBitsPerSample;
  unsigned __int16 wReserved5;
};

/* 2009 */
struct _HISTOGRAM_BUCKET
{
  unsigned int Reads;
  unsigned int Writes;
};

/* 2010 */
struct _STORAGE_BUS_RESET_REQUEST
{
  char PathId;
};

/* 2011 */
struct _PRINTER_INFO_4W
{
  unsigned __int16 *pPrinterName;
  unsigned __int16 *pServerName;
  unsigned int Attributes;
};

/* 2012 */
struct _CMSG_CMS_SIGNER_INFO
{
  unsigned int dwVersion;
  _CERT_ID SignerId;
  _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
  _CRYPTOAPI_BLOB EncryptedHash;
  _CRYPT_ATTRIBUTES AuthAttrs;
  _CRYPT_ATTRIBUTES UnauthAttrs;
};

/* 2013 */
struct IPropertySetStorage
{
  IUnknown baseclass_0;
};

/* 2014 */
struct HCONVLIST__
{
  int unused;
};

/* 2015 */
struct tagCONVINFO
{
  unsigned int cb;
  unsigned int hUser;
  HCONV__ *hConvPartner;
  HSZ__ *hszSvcPartner;
  HSZ__ *hszServiceReq;
  HSZ__ *hszTopic;
  HSZ__ *hszItem;
  unsigned int wFmt;
  unsigned int wType;
  unsigned int wStatus;
  unsigned int wConvst;
  unsigned int wLastError;
  HCONVLIST__ *hConvList;
  tagCONVCONTEXT ConvCtxt;
  HWND__ *hwnd;
  HWND__ *hwndPartner;
};

/* 2016 */
struct IEnumSTATPROPSETSTG
{
  IUnknown baseclass_0;
};

/* 2017 */
struct _PROPSHEETPAGEA_V1
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HINSTANCE__ *hInstance;
  $02970673CB439F991103F5BC86721820 ___u3;
  $19AED208800BAD5A235CFF0C7BF52E3D ___u4;
  const char *pszTitle;
  int (__stdcall *pfnDlgProc)(HWND__ *, unsigned int, unsigned int, int);
  int lParam;
  unsigned int (__stdcall *pfnCallback)(HWND__ *, unsigned int, _PROPSHEETPAGEA *);
  unsigned int *pcRefParent;
};

/* 2018 */
struct IWrappedProtocol
{
  IUnknown baseclass_0;
};

/* 2019 */
struct midihdr_tag
{
  char *lpData;
  unsigned int dwBufferLength;
  unsigned int dwBytesRecorded;
  unsigned int dwUser;
  unsigned int dwFlags;
  midihdr_tag *lpNext;
  unsigned int reserved;
  unsigned int dwOffset;
  unsigned int dwReserved[8];
};

/* 2020 */
struct tagMCI_WAVE_DELETE_PARMS
{
  unsigned int dwCallback;
  unsigned int dwFrom;
  unsigned int dwTo;
};

/* 2021 */
struct _CRYPT_PASSWORD_CREDENTIALSA
{
  unsigned int cbSize;
  char *pszUsername;
  char *pszPassword;
};

/* 2022 */
struct IPersist
{
  IUnknown baseclass_0;
};

/* 2023 */
struct IPersistStream
{
  IPersist baseclass_0;
};

/* 2024 */
struct IMoniker
{
  IPersistStream baseclass_0;
};

/* 2025 */
struct _CERT_REQUEST_INFO
{
  unsigned int dwVersion;
  _CRYPTOAPI_BLOB Subject;
  _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  unsigned int cAttribute;
  _CRYPT_ATTRIBUTE *rgAttribute;
};

/* 2026 */
struct _PRINTPROCESSOR_CAPS_1
{
  unsigned int dwLevel;
  unsigned int dwNupOptions;
  unsigned int dwPageOrderFlags;
  unsigned int dwNumberOfCopies;
};

/* 2027 */
struct _PORT_INFO_3A
{
  unsigned int dwStatus;
  char *pszStatus;
  unsigned int dwSeverity;
};

/* 2028 */
struct tagMIXERLINEA::__unnamed
{
  unsigned int dwType;
  unsigned int dwDeviceID;
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
};

/* 2029 */
struct tagMIXERLINEA
{
  unsigned int cbStruct;
  unsigned int dwDestination;
  unsigned int dwSource;
  unsigned int dwLineID;
  unsigned int fdwLine;
  unsigned int dwUser;
  unsigned int dwComponentType;
  unsigned int cChannels;
  unsigned int cConnections;
  unsigned int cControls;
  char szShortName[16];
  char szName[64];
  tagMIXERLINEA::__unnamed Target;
};

/* 2030 */
struct _CERT_POLICY_QUALIFIER_INFO
{
  char *pszPolicyQualifierId;
  _CRYPTOAPI_BLOB Qualifier;
};

/* 2031 */
struct _CERT_POLICY_INFO
{
  char *pszPolicyIdentifier;
  unsigned int cPolicyQualifier;
  _CERT_POLICY_QUALIFIER_INFO *rgPolicyQualifier;
};

/* 2032 */
struct _CERT_POLICIES_INFO
{
  unsigned int cPolicyInfo;
  _CERT_POLICY_INFO *rgPolicyInfo;
};

/* 2033 */
struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  unsigned int dwKeySpec;
  _CMSG_KEY_TRANS_RECIPIENT_INFO *pKeyTrans;
  unsigned int dwRecipientIndex;
};

/* 2034 */
struct _MONITOR_INFO_1A
{
  char *pName;
};

/* 2035 */
struct _PRINTER_INFO_6
{
  unsigned int dwStatus;
};

/* 2036 */
struct AsyncIPipeDouble
{
  IUnknown baseclass_0;
};

/* 2037 */
struct _OFNOTIFYEXW
{
  tagNMHDR hdr;
  tagOFNW *lpOFN;
  void *psf;
  void *pidl;
};

/* 2038 */
struct tagMCI_BREAK_PARMS
{
  unsigned int dwCallback;
  int nVirtKey;
  HWND__ *hwndBreak;
};

/* 2039 */
struct _CERT_PHYSICAL_STORE_INFO
{
  unsigned int cbSize;
  char *pszOpenStoreProvider;
  unsigned int dwOpenEncodingType;
  unsigned int dwOpenFlags;
  _CRYPTOAPI_BLOB OpenParameters;
  unsigned int dwFlags;
  unsigned int dwPriority;
};

/* 2040 */
struct _FILESYSTEM_STATISTICS
{
  unsigned __int16 FileSystemType;
  unsigned __int16 Version;
  unsigned int SizeOfCompleteStructure;
  unsigned int UserFileReads;
  unsigned int UserFileReadBytes;
  unsigned int UserDiskReads;
  unsigned int UserFileWrites;
  unsigned int UserFileWriteBytes;
  unsigned int UserDiskWrites;
  unsigned int MetaDataReads;
  unsigned int MetaDataReadBytes;
  unsigned int MetaDataDiskReads;
  unsigned int MetaDataWrites;
  unsigned int MetaDataWriteBytes;
  unsigned int MetaDataDiskWrites;
};

/* 2041 */
struct tagMCI_ANIM_WINDOW_PARMSW
{
  unsigned int dwCallback;
  HWND__ *hWnd;
  unsigned int nCmdShow;
  const unsigned __int16 *lpstrText;
};

/* 2042 */
struct _CERT_KEYGEN_REQUEST_INFO
{
  unsigned int dwVersion;
  _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  unsigned __int16 *pwszChallengeString;
};

/* 2043 */
struct __MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005::__unnamed
{
  unsigned __int16 *pPackageName;
  _GUID PolicyId;
};

/* 2044 */
union __MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005
{
  _GUID clsid;
  unsigned __int16 *pFileExt;
  unsigned __int16 *pMimeType;
  unsigned __int16 *pProgId;
  unsigned __int16 *pFileName;
  __MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005::__unnamed ByName;
  __MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005::__unnamed ByObjectId;
};

/* 2045 */
struct __MIDL___MIDL_itf_wtypes_0003_0001
{
  unsigned int tyspec;
  __MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005 tagged_union;
  _BYTE gap18[12];
};

/* 2046 */
struct IEnumMoniker
{
  IUnknown baseclass_0;
};

/* 2047 */
struct _CRYPT_ENCODE_PARA
{
  unsigned int cbSize;
  void *(__stdcall *pfnAlloc)(unsigned int);
  void (__stdcall *pfnFree)(void *);
};

/* 2048 */
struct _DOC_INFO_3W
{
  unsigned __int16 *pDocName;
  unsigned __int16 *pOutputFile;
  unsigned __int16 *pDatatype;
  unsigned int dwFlags;
};

/* 2049 */
struct IAddrExclusionControl
{
  IUnknown baseclass_0;
};

/* 2050 */
struct IPrintDialogServices
{
  IUnknown baseclass_0;
};

/* 2051 */
struct _CERT_TEMPLATE_EXT
{
  char *pszObjId;
  unsigned int dwMajorVersion;
  int fMinorVersion;
  unsigned int dwMinorVersion;
};

/* 2052 */
struct _FORM_INFO_1A
{
  unsigned int Flags;
  char *pName;
  tagSIZE Size;
  _RECTL ImageableArea;
};

/* 2053 */
struct tagMCI_SEQ_SET_PARMS
{
  unsigned int dwCallback;
  unsigned int dwTimeFormat;
  unsigned int dwAudio;
  unsigned int dwTempo;
  unsigned int dwPort;
  unsigned int dwSlave;
  unsigned int dwMaster;
  unsigned int dwOffset;
};

/* 2054 */
struct _RPC_IF_ID
{
  _GUID Uuid;
  unsigned __int16 VersMajor;
  unsigned __int16 VersMinor;
};

/* 2055 */
struct _CERT_KEY_ATTRIBUTES_INFO
{
  _CRYPTOAPI_BLOB KeyId;
  _CRYPT_BIT_BLOB IntendedKeyUsage;
  _CERT_PRIVATE_KEY_VALIDITY *pPrivateKeyUsagePeriod;
};

/* 2056 */
struct _DRIVER_INFO_2W
{
  unsigned int cVersion;
  unsigned __int16 *pName;
  unsigned __int16 *pEnvironment;
  unsigned __int16 *pDriverPath;
  unsigned __int16 *pDataFile;
  unsigned __int16 *pConfigFile;
};

/* 2057 */
struct _COAUTHIDENTITY
{
  unsigned __int16 *User;
  unsigned int UserLength;
  unsigned __int16 *Domain;
  unsigned int DomainLength;
  unsigned __int16 *Password;
  unsigned int PasswordLength;
  unsigned int Flags;
};

/* 2058 */
struct _COAUTHINFO
{
  unsigned int dwAuthnSvc;
  unsigned int dwAuthzSvc;
  unsigned __int16 *pwszServerPrincName;
  unsigned int dwAuthnLevel;
  unsigned int dwImpersonationLevel;
  _COAUTHIDENTITY *pAuthIdentityData;
  unsigned int dwCapabilities;
};

/* 2059 */
struct _COSERVERINFO
{
  unsigned int dwReserved1;
  unsigned __int16 *pwszName;
  _COAUTHINFO *pAuthInfo;
  unsigned int dwReserved2;
};

/* 2060 */
struct tagBIND_OPTS2
{
  tagBIND_OPTS baseclass_0;
  unsigned int dwTrackFlags;
  unsigned int dwClassContext;
  unsigned int locale;
  _COSERVERINFO *pServerInfo;
};

/* 2061 */
union _userHMETAFILE::__MIDL_IWinTypes_0004
{
  int hInproc;
  _BYTE_BLOB *hRemote;
  __int64 hInproc64;
};

/* 2062 */
struct _userHMETAFILE
{
  int fContext;
  _userHMETAFILE::__MIDL_IWinTypes_0004 u;
};

/* 2063 */
struct _DRIVER_INFO_3A
{
  unsigned int cVersion;
  char *pName;
  char *pEnvironment;
  char *pDriverPath;
  char *pDataFile;
  char *pConfigFile;
  char *pHelpFile;
  char *pDependentFiles;
  char *pMonitorName;
  char *pDefaultDataType;
};

/* 2064 */
struct _PORT_INFO_2W
{
  unsigned __int16 *pPortName;
  unsigned __int16 *pMonitorName;
  unsigned __int16 *pDescription;
  unsigned int fPortType;
  unsigned int Reserved;
};

/* 2065 */
struct tagRemFORMATETC
{
  unsigned int cfFormat;
  unsigned int ptd;
  unsigned int dwAspect;
  int lindex;
  unsigned int tymed;
};

/* 2066 */
union tagMIXERCONTROLA::__unnamed
{
  $0D057425CB83406CCB6CB71DF3FA0A4C _s0;
  $E50C0F09BB6F8C50FF087E1E76EA2CA0 _s1;
  unsigned int dwReserved[6];
};

/* 2067 */
struct tagMIXERCONTROLA
{
  unsigned int cbStruct;
  unsigned int dwControlID;
  unsigned int dwControlType;
  unsigned int fdwControl;
  unsigned int cMultipleItems;
  char szShortName[16];
  char szName[64];
  tagMIXERCONTROLA::__unnamed Bounds;
  tagMIXERCONTROLA::__unnamed Metrics;
};

/* 2068 */
struct _CRYPT_CONTENT_INFO
{
  char *pszObjId;
  _CRYPTOAPI_BLOB Content;
};

/* 2069 */
struct IPersistStorage
{
  IPersist baseclass_0;
};

/* 2070 */
struct tagDDEML_MSG_HOOK_DATA
{
  unsigned int uiLo;
  unsigned int uiHi;
  unsigned int cbData;
  unsigned int Data[8];
};

/* 2071 */
struct tagMONMSGSTRUCT
{
  unsigned int cb;
  HWND__ *hwndTo;
  unsigned int dwTime;
  void *hTask;
  unsigned int wMsg;
  unsigned int wParam;
  int lParam;
  tagDDEML_MSG_HOOK_DATA dmhd;
};

/* 2072 */
struct _PSHNOTIFY
{
  tagNMHDR hdr;
  int lParam;
};

/* 2073 */
struct _RPC_POLICY
{
  unsigned int Length;
  unsigned int EndpointFlags;
  unsigned int NICFlags;
};

/* 2074 */
struct _remoteMETAFILEPICT
{
  int mm;
  int xExt;
  int yExt;
  _userHMETAFILE *hMF;
};

/* 2075 */
union _userHMETAFILEPICT::__MIDL_IWinTypes_0005
{
  int hInproc;
  _remoteMETAFILEPICT *hRemote;
  __int64 hInproc64;
};

/* 2076 */
struct _userHMETAFILEPICT
{
  int fContext;
  _userHMETAFILEPICT::__MIDL_IWinTypes_0005 u;
};

/* 2077 */
union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003
{
  _userHMETAFILEPICT *hMetaFilePict;
  _userHENHMETAFILE *hHEnhMetaFile;
  _GDI_OBJECT *hGdiHandle;
  _userHGLOBAL *hGlobal;
  unsigned __int16 *lpszFileName;
  _BYTE_BLOB *pstm;
  _BYTE_BLOB *pstg;
};

/* 2078 */
struct _userSTGMEDIUM::_STGMEDIUM_UNION
{
  unsigned int tymed;
  _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003 u;
};

/* 2079 */
struct _userSTGMEDIUM
{
  IUnknown *pUnkForRelease;
};

/* 2080 */
struct _REASSIGN_BLOCKS
{
  unsigned __int16 Reserved;
  unsigned __int16 Count;
  unsigned int BlockNumber[1];
};

/* 2081 */
struct _DISK_EXTENT
{
  unsigned int DiskNumber;
  _LARGE_INTEGER StartingOffset;
  _LARGE_INTEGER ExtentLength;
};

/* 2082 */
struct _VOLUME_DISK_EXTENTS
{
  unsigned int NumberOfDiskExtents;
  _DISK_EXTENT Extents[1];
};

/* 2083 */
struct IInternetPriority
{
  IUnknown baseclass_0;
};

/* 2084 */
struct _wireSAFEARR_HAVEIID
{
  unsigned int Size;
  IUnknown **apUnknown;
  _GUID iid;
};

/* 2085 */
struct tagMCI_ANIM_RECT_PARMS
{
  unsigned int dwCallback;
  tagRECT rc;
};

/* 2086 */
struct tagMIDIINCAPS2A
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned int dwSupport;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 2087 */
struct midiproptimediv_tag
{
  unsigned int cbStruct;
  unsigned int dwTimeDiv;
};

/* 2088 */
struct _SESSION_HEADER
{
  char sess_name;
  char num_sess;
  char rcv_dg_outstanding;
  char rcv_any_outstanding;
};

/* 2089 */
struct IErrorLog
{
  IUnknown baseclass_0;
};

/* 2090 */
struct tagCUSTDATA
{
  unsigned int cCustData;
  tagCUSTDATAITEM *prgCustData;
};

/* 2091 */
union _RemotableHandle::__MIDL_IWinTypes_0009
{
  int hInproc;
  int hRemote;
};

/* 2092 */
struct _RemotableHandle
{
  int fContext;
  _RemotableHandle::__MIDL_IWinTypes_0009 u;
};

/* 2093 */
struct _DISK_HISTOGRAM
{
  _LARGE_INTEGER DiskSize;
  _LARGE_INTEGER Start;
  _LARGE_INTEGER End;
  _LARGE_INTEGER Average;
  _LARGE_INTEGER AverageRead;
  _LARGE_INTEGER AverageWrite;
  unsigned int Granularity;
  unsigned int Size;
  unsigned int ReadCount;
  unsigned int WriteCount;
  _HISTOGRAM_BUCKET *Histogram;
};

/* 2094 */
struct _CERT_POLICY_MAPPING
{
  char *pszIssuerDomainPolicy;
  char *pszSubjectDomainPolicy;
};

/* 2095 */
struct _CERT_POLICY_MAPPINGS_INFO
{
  unsigned int cPolicyMapping;
  _CERT_POLICY_MAPPING *rgPolicyMapping;
};

/* 2096 */
struct ISynchronizeHandle
{
  IUnknown baseclass_0;
};

/* 2097 */
struct ISynchronizeEvent
{
  ISynchronizeHandle baseclass_0;
};

/* 2098 */
struct _CMSG_MAIL_LIST_ENCRYPT_INFO
{
  unsigned int cbSize;
  unsigned int dwRecipientIndex;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  _CRYPTOAPI_BLOB EncryptedKey;
  unsigned int dwFlags;
};

/* 2099 */
struct _CERT_CHAIN_POLICY_PARA
{
  unsigned int cbSize;
  unsigned int dwFlags;
  void *pvExtraPolicyPara;
};

/* 2100 */
struct IViewObject
{
  IUnknown baseclass_0;
};

/* 2101 */
struct _CERT_POLICY_CONSTRAINTS_INFO
{
  int fRequireExplicitPolicy;
  unsigned int dwRequireExplicitPolicySkipCerts;
  int fInhibitPolicyMapping;
  unsigned int dwInhibitPolicyMappingSkipCerts;
};

/* 2102 */
struct _MONITOR_INFO_2W
{
  unsigned __int16 *pName;
  unsigned __int16 *pEnvironment;
  unsigned __int16 *pDLLName;
};

/* 2103 */
struct _MMCKINFO
{
  unsigned int ckid;
  unsigned int cksize;
  unsigned int fccType;
  unsigned int dwDataOffset;
  unsigned int dwFlags;
};

/* 2104 */
struct _PRINTER_INFO_9A
{
  _devicemodeA *pDevMode;
};

/* 2105 */
struct _JOB_INFO_1W
{
  unsigned int JobId;
  unsigned __int16 *pPrinterName;
  unsigned __int16 *pMachineName;
  unsigned __int16 *pUserName;
  unsigned __int16 *pDocument;
  unsigned __int16 *pDatatype;
  unsigned __int16 *pStatus;
  unsigned int Status;
  unsigned int Priority;
  unsigned int Position;
  unsigned int TotalPages;
  unsigned int PagesPrinted;
  _SYSTEMTIME Submitted;
};

/* 2106 */
struct _PRINTER_ENUM_VALUESA
{
  char *pValueName;
  unsigned int cbValueName;
  unsigned int dwType;
  char *pData;
  unsigned int cbData;
};

/* 2107 */
struct _CRL_DIST_POINT_NAME
{
  unsigned int dwDistPointNameChoice;
  _CERT_ALT_NAME_INFO FullName;
};

/* 2108 */
struct _CRYPT_PASSWORD_CREDENTIALSW
{
  unsigned int cbSize;
  unsigned __int16 *pszUsername;
  unsigned __int16 *pszPassword;
};

/* 2109 */
struct tMIXERCONTROLDETAILS_SIGNED
{
  int lValue;
};

/* 2110 */
struct IEncodingFilterFactory
{
  IUnknown baseclass_0;
};

/* 2111 */
struct _BYTE_SIZEDARR
{
  unsigned int clSize;
  char *pData;
};

/* 2112 */
struct _DRIVER_INFO_3W
{
  unsigned int cVersion;
  unsigned __int16 *pName;
  unsigned __int16 *pEnvironment;
  unsigned __int16 *pDriverPath;
  unsigned __int16 *pDataFile;
  unsigned __int16 *pConfigFile;
  unsigned __int16 *pHelpFile;
  unsigned __int16 *pDependentFiles;
  unsigned __int16 *pMonitorName;
  unsigned __int16 *pDefaultDataType;
};

/* 2113 */
struct tagINTERFACEINFO
{
  IUnknown *pUnk;
  _GUID iid;
  unsigned __int16 wMethod;
};

/* 2114 */
struct IXMLDOMEntityReference
{
  IXMLDOMNode baseclass_0;
};

/* 2115 */
struct HWAVEIN__
{
  int unused;
};

/* 2116 */
struct tagMIXERCAPSA
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned int fdwSupport;
  unsigned int cDestinations;
};

/* 2117 */
struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY
{
  char *pszObjId;
  unsigned int cValue;
  _CRYPTOAPI_BLOB *rgValue;
};

/* 2118 */
struct tagJOYCAPS2W
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned __int16 szPname[32];
  unsigned int wXmin;
  unsigned int wXmax;
  unsigned int wYmin;
  unsigned int wYmax;
  unsigned int wZmin;
  unsigned int wZmax;
  unsigned int wNumButtons;
  unsigned int wPeriodMin;
  unsigned int wPeriodMax;
  unsigned int wRmin;
  unsigned int wRmax;
  unsigned int wUmin;
  unsigned int wUmax;
  unsigned int wVmin;
  unsigned int wVmax;
  unsigned int wCaps;
  unsigned int wMaxAxes;
  unsigned int wNumAxes;
  unsigned int wMaxButtons;
  unsigned __int16 szRegKey[32];
  unsigned __int16 szOEMVxD[260];
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 2119 */
struct joyinfoex_tag
{
  unsigned int dwSize;
  unsigned int dwFlags;
  unsigned int dwXpos;
  unsigned int dwYpos;
  unsigned int dwZpos;
  unsigned int dwRpos;
  unsigned int dwUpos;
  unsigned int dwVpos;
  unsigned int dwButtons;
  unsigned int dwButtonNumber;
  unsigned int dwPOV;
  unsigned int dwReserved1;
  unsigned int dwReserved2;
};

/* 2120 */
struct _PRINTER_INFO_5W
{
  unsigned __int16 *pPrinterName;
  unsigned __int16 *pPortName;
  unsigned int Attributes;
  unsigned int DeviceNotSelectedTimeout;
  unsigned int TransmissionRetryTimeout;
};

/* 2121 */
struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  unsigned int dwKeySpec;
  _CMSG_KEY_AGREE_RECIPIENT_INFO *pKeyAgree;
  unsigned int dwRecipientIndex;
  unsigned int dwRecipientEncryptedKeyIndex;
  _CRYPT_BIT_BLOB OriginatorPublicKey;
};

/* 2122 */
struct tagMCI_SYSINFO_PARMSW
{
  unsigned int dwCallback;
  unsigned __int16 *lpstrReturn;
  unsigned int dwRetSize;
  unsigned int dwNumber;
  unsigned int wDeviceType;
};

/* 2123 */
struct OPENCARD_SEARCH_CRITERIAW
{
  unsigned int dwStructSize;
  unsigned __int16 *lpstrGroupNames;
  unsigned int nMaxGroupNames;
  _GUID *rgguidInterfaces;
  unsigned int cguidInterfaces;
  unsigned __int16 *lpstrCardNames;
  unsigned int nMaxCardNames;
  int (__stdcall *lpfnCheck)(unsigned int, unsigned int, void *);
  unsigned int (__stdcall *lpfnConnect)(unsigned int, unsigned __int16 *, unsigned __int16 *, void *);
  void (__stdcall *lpfnDisconnect)(unsigned int, unsigned int, void *);
  void *pvUserData;
  unsigned int dwShareMode;
  unsigned int dwPreferredProtocols;
};

/* 2124 */
struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA
{
  unsigned int cOID;
  char **rgpszOID;
};

/* 2125 */
struct _PRINTER_NOTIFY_INFO
{
  unsigned int Version;
  unsigned int Flags;
  unsigned int Count;
  _PRINTER_NOTIFY_INFO_DATA aData[1];
};

/* 2126 */
struct ISurrogate
{
  IUnknown baseclass_0;
};

/* 2127 */
struct tagMCI_OVLY_WINDOW_PARMSA
{
  unsigned int dwCallback;
  HWND__ *hWnd;
  unsigned int nCmdShow;
  const char *lpstrText;
};

/* 2128 */
struct _PRINTER_INFO_7A
{
  char *pszObjectGUID;
  unsigned int dwAction;
};

/* 2129 */
struct _CERT_AUTHORITY_INFO_ACCESS
{
  unsigned int cAccDescr;
  _CERT_ACCESS_DESCRIPTION *rgAccDescr;
};

/* 2130 */
struct _CERT_GENERAL_SUBTREE
{
  _CERT_ALT_NAME_ENTRY Base;
  unsigned int dwMinimum;
  int fMaximum;
  unsigned int dwMaximum;
};

/* 2131 */
struct _CERT_KEY_CONTEXT
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  unsigned int dwKeySpec;
};

/* 2132 */
struct _TAPE_GET_STATISTICS
{
  unsigned int Operation;
};

/* 2133 */
struct _PROVIDOR_INFO_1W
{
  unsigned __int16 *pName;
  unsigned __int16 *pEnvironment;
  unsigned __int16 *pDLLName;
};

/* 2134 */
struct IDataFilter
{
  IUnknown baseclass_0;
};

/* 2135 */
struct ITypeLib2
{
  ITypeLib baseclass_0;
};

/* 2136 */
struct _PERF_COUNTER_DEFINITION
{
  unsigned int ByteLength;
  unsigned int CounterNameTitleIndex;
  unsigned __int16 *CounterNameTitle;
  unsigned int CounterHelpTitleIndex;
  unsigned __int16 *CounterHelpTitle;
  int DefaultScale;
  unsigned int DetailLevel;
  unsigned int CounterType;
  unsigned int CounterSize;
  unsigned int CounterOffset;
};

/* 2137 */
union $B5432B5766EACA8D7A891B0C9CA17601
{
  unsigned int cbStruct;
  unsigned int cbSize;
};

/* 2138 */
struct _HTTPSPolicyCallbackData
{
  $B5432B5766EACA8D7A891B0C9CA17601 ___u0;
  unsigned int dwAuthType;
  unsigned int fdwChecks;
  unsigned __int16 *pwszServerName;
};

/* 2139 */
struct tagWAVEINCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
};

/* 2140 */
struct tagMCI_OVLY_LOAD_PARMSA
{
  unsigned int dwCallback;
  const char *lpfilename;
  tagRECT rc;
};

/* 2141 */
struct _wireSAFEARR_BSTR
{
  unsigned int Size;
  _FLAGGED_WORD_BLOB **aBstr;
};

/* 2142 */
struct _wireSAFEARR_UNKNOWN
{
  unsigned int Size;
  IUnknown **apUnknown;
};

/* 2143 */
struct _wireSAFEARR_DISPATCH
{
  unsigned int Size;
  IDispatch **apDispatch;
};

/* 2144 */
union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001
{
  _wireSAFEARR_BSTR BstrStr;
  _wireSAFEARR_UNKNOWN UnknownStr;
  _wireSAFEARR_DISPATCH DispatchStr;
  _wireSAFEARR_VARIANT VariantStr;
  _wireSAFEARR_BRECORD RecordStr;
  _wireSAFEARR_HAVEIID HaveIidStr;
  _BYTE_SIZEDARR ByteStr;
  _SHORT_SIZEDARR WordStr;
  _LONG_SIZEDARR LongStr;
  _HYPER_SIZEDARR HyperStr;
};

/* 2145 */
#pragma pack(push, 1)
struct _wireSAFEARRAY_UNION
{
  unsigned int sfType;
  _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001 u;
};
#pragma pack(pop)

/* 2146 */
#pragma pack(push, 1)
struct _wireSAFEARRAY
{
  unsigned __int16 cDims;
  unsigned __int16 fFeatures;
  unsigned int cbElements;
  unsigned int cLocks;
  _wireSAFEARRAY_UNION uArrayStructs;
  tagSAFEARRAYBOUND rgsabound[1];
};
#pragma pack(pop)

/* 2147 */
struct _wireVARIANT
{
  unsigned int clSize;
  unsigned int rpcReserved;
  unsigned __int16 vt;
  unsigned __int16 wReserved1;
  unsigned __int16 wReserved2;
  unsigned __int16 wReserved3;
  $26E1BB053D0A04B491BBB4F760A40D3C ___u6;
};

/* 2148 */
union $26E1BB053D0A04B491BBB4F760A40D3C
{
  __int64 llVal;
  int lVal;
  char bVal;
  __int16 iVal;
  float fltVal;
  long double dblVal;
  __int16 boolVal;
  int scode;
  tagCY cyVal;
  long double date;
  _FLAGGED_WORD_BLOB *bstrVal;
  IUnknown *punkVal;
  IDispatch *pdispVal;
  _wireSAFEARRAY **parray;
  _wireBRECORD *brecVal;
  char *pbVal;
  __int16 *piVal;
  int *plVal;
  __int64 *pllVal;
  float *pfltVal;
  long double *pdblVal;
  __int16 *pboolVal;
  int *pscode;
  tagCY *pcyVal;
  long double *pdate;
  _FLAGGED_WORD_BLOB **pbstrVal;
  IUnknown **ppunkVal;
  IDispatch **ppdispVal;
  _wireSAFEARRAY ***pparray;
  _wireVARIANT **pvarVal;
  char cVal;
  unsigned __int16 uiVal;
  unsigned int ulVal;
  unsigned __int64 ullVal;
  int intVal;
  unsigned int uintVal;
  tagDEC decVal;
  tagDEC *pdecVal;
  char *pcVal;
  unsigned __int16 *puiVal;
  unsigned int *pulVal;
  unsigned __int64 *pullVal;
  int *pintVal;
  unsigned int *puintVal;
};

/* 2149 */
struct _wireSAFEARR_VARIANT
{
  unsigned int Size;
  _wireVARIANT **aVariant;
};

/* 2150 */
struct _SHORT_SIZEDARR
{
  unsigned int clSize;
  unsigned __int16 *pData;
};

/* 2151 */
struct _LONG_SIZEDARR
{
  unsigned int clSize;
  unsigned int *pData;
};

/* 2152 */
struct _HYPER_SIZEDARR
{
  unsigned int clSize;
  __int64 *pData;
};

/* 2153 */
struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA
{
  unsigned int cbSize;
  unsigned int dwSignerIndex;
  _CRYPTOAPI_BLOB blob;
};

/* 2154 */
struct tagMCI_OVLY_OPEN_PARMSA
{
  unsigned int dwCallback;
  unsigned int wDeviceID;
  const char *lpstrDeviceType;
  const char *lpstrElementName;
  const char *lpstrAlias;
  unsigned int dwStyle;
  HWND__ *hWndParent;
};

/* 2155 */
struct _CMC_TAGGED_CERT_REQUEST
{
  unsigned int dwBodyPartID;
  _CRYPTOAPI_BLOB SignedCertRequest;
};

/* 2156 */
struct _CMC_TAGGED_REQUEST
{
  unsigned int dwTaggedRequestChoice;
  _CMC_TAGGED_CERT_REQUEST *pTaggedCertRequest;
};

/* 2157 */
struct _userFLAG_STGMEDIUM
{
  int ContextFlags;
  int fPassOwnership;
  _userSTGMEDIUM Stgmed;
};

/* 2158 */
struct IInternetBindInfo
{
  IUnknown baseclass_0;
};

/* 2159 */
#pragma pack(push, 1)
struct tWAVEFORMATEX
{
  unsigned __int16 wFormatTag;
  unsigned __int16 nChannels;
  unsigned int nSamplesPerSec;
  unsigned int nAvgBytesPerSec;
  unsigned __int16 nBlockAlign;
  unsigned __int16 wBitsPerSample;
  unsigned __int16 cbSize;
};
#pragma pack(pop)

/* 2160 */
struct _CMS_KEY_INFO
{
  unsigned int dwVersion;
  unsigned int Algid;
  char *pbOID;
  unsigned int cbOID;
};

/* 2161 */
struct _CTL_VERIFY_USAGE_PARA
{
  unsigned int cbSize;
  _CRYPTOAPI_BLOB ListIdentifier;
  unsigned int cCtlStore;
  void **rghCtlStore;
  unsigned int cSignerStore;
  void **rghSignerStore;
};

/* 2162 */
struct _CMSG_KEY_TRANS_ENCRYPT_INFO
{
  unsigned int cbSize;
  unsigned int dwRecipientIndex;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  _CRYPTOAPI_BLOB EncryptedKey;
  unsigned int dwFlags;
};

/* 2163 */
struct tagMCI_LOAD_PARMSA
{
  unsigned int dwCallback;
  const char *lpfilename;
};

/* 2164 */
struct _CRYPT_RETRIEVE_AUX_INFO
{
  unsigned int cbSize;
  _FILETIME *pLastSyncTime;
  unsigned int dwMaxUrlRetrievalByteCount;
};

/* 2165 */
struct OPENCARDNAMEW
{
  unsigned int dwStructSize;
  HWND__ *hwndOwner;
  unsigned int hSCardContext;
  unsigned __int16 *lpstrGroupNames;
  unsigned int nMaxGroupNames;
  unsigned __int16 *lpstrCardNames;
  unsigned int nMaxCardNames;
  _GUID *rgguidInterfaces;
  unsigned int cguidInterfaces;
  unsigned __int16 *lpstrRdr;
  unsigned int nMaxRdr;
  unsigned __int16 *lpstrCard;
  unsigned int nMaxCard;
  const unsigned __int16 *lpstrTitle;
  unsigned int dwFlags;
  void *pvUserData;
  unsigned int dwShareMode;
  unsigned int dwPreferredProtocols;
  unsigned int dwActiveProtocol;
  unsigned int (__stdcall *lpfnConnect)(unsigned int, unsigned __int16 *, unsigned __int16 *, void *);
  int (__stdcall *lpfnCheck)(unsigned int, unsigned int, void *);
  void (__stdcall *lpfnDisconnect)(unsigned int, unsigned int, void *);
  unsigned int hCardHandle;
};

/* 2166 */
struct _PORT_INFO_1W
{
  unsigned __int16 *pName;
};

/* 2167 */
struct tagWAVEINCAPSA
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
};

/* 2168 */
struct _CRL_REVOCATION_INFO
{
  _CRL_ENTRY *pCrlEntry;
  _CRL_CONTEXT *pCrlContext;
  _CERT_CHAIN_CONTEXT *pCrlIssuerChain;
};

/* 2169 */
struct _BIDI_REQUEST_DATA
{
  unsigned int dwReqNumber;
  unsigned __int16 *pSchema;
  _BIDI_DATA data;
};

/* 2170 */
struct _BIDI_REQUEST_CONTAINER
{
  unsigned int Version;
  unsigned int Flags;
  unsigned int Count;
  _BIDI_REQUEST_DATA aData[1];
};

/* 2171 */
struct IDropSource
{
  IUnknown baseclass_0;
};

/* 2172 */
struct _EFS_HASH_BLOB
{
  unsigned int cbData;
  char *pbData;
};

/* 2173 */
struct tagFINDREPLACEW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  unsigned int Flags;
  unsigned __int16 *lpstrFindWhat;
  unsigned __int16 *lpstrReplaceWith;
  unsigned __int16 wFindWhatLen;
  unsigned __int16 wReplaceWithLen;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpTemplateName;
};

/* 2174 */
struct wavehdr_tag
{
  char *lpData;
  unsigned int dwBufferLength;
  unsigned int dwBytesRecorded;
  unsigned int dwUser;
  unsigned int dwFlags;
  unsigned int dwLoops;
  wavehdr_tag *lpNext;
  unsigned int reserved;
};

/* 2175 */
struct _CRYPT_HASH_MESSAGE_PARA
{
  unsigned int cbSize;
  unsigned int dwMsgEncodingType;
  unsigned int hCryptProv;
  _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  void *pvHashAuxInfo;
};

/* 2176 */
struct _CERT_BASIC_CONSTRAINTS_INFO
{
  _CRYPT_BIT_BLOB SubjectType;
  int fPathLenConstraint;
  unsigned int dwPathLenConstraint;
  unsigned int cSubtreesConstraint;
  _CRYPTOAPI_BLOB *rgSubtreesConstraint;
};

/* 2177 */
struct _CERT_STORE_PROV_FIND_INFO
{
  unsigned int cbSize;
  unsigned int dwMsgAndCertEncodingType;
  unsigned int dwFindFlags;
  unsigned int dwFindType;
  const void *pvFindPara;
};

/* 2178 */
struct tagBinaryParam
{
  void *Buffer;
  __int16 Size;
};

/* 2179 */
struct _NTFS_STATISTICS::__unnamed
{
  unsigned __int16 Write;
  unsigned __int16 Create;
  unsigned __int16 SetInfo;
  unsigned __int16 Flush;
};

/* 2180 */
struct _CMC_ADD_ATTRIBUTES_INFO
{
  unsigned int dwCmcDataReference;
  unsigned int cCertReference;
  unsigned int *rgdwCertReference;
  unsigned int cAttribute;
  _CRYPT_ATTRIBUTE *rgAttribute;
};

/* 2181 */
struct IContinue
{
  IUnknown baseclass_0;
};

/* 2182 */
struct _CRYPT_TIME_STAMP_REQUEST_INFO
{
  char *pszTimeStampAlgorithm;
  char *pszContentType;
  _CRYPTOAPI_BLOB Content;
  unsigned int cAttribute;
  _CRYPT_ATTRIBUTE *rgAttribute;
};

/* 2183 */
struct _CERT_AUTHORITY_KEY_ID2_INFO
{
  _CRYPTOAPI_BLOB KeyId;
  _CERT_ALT_NAME_INFO AuthorityCertIssuer;
  _CRYPTOAPI_BLOB AuthorityCertSerialNumber;
};

/* 2184 */
struct ICancelMethodCalls
{
  IUnknown baseclass_0;
};

/* 2185 */
union $C6149E6DA2F8783CB7C7DAC8AADA2565
{
  HBITMAP__ *hBitmap;
  void *hMetaFilePict;
  HENHMETAFILE__ *hEnhMetaFile;
  void *hGlobal;
  unsigned __int16 *lpszFileName;
  IStream *pstm;
  IStorage *pstg;
};

/* 2186 */
struct tagSTGMEDIUM
{
  unsigned int tymed;
  $C6149E6DA2F8783CB7C7DAC8AADA2565 ___u1;
  IUnknown *pUnkForRelease;
};

/* 2187 */
struct tagMONERRSTRUCT
{
  unsigned int cb;
  unsigned int wLastError;
  unsigned int dwTime;
  void *hTask;
};

/* 2188 */
struct _PRINTPROCESSOR_INFO_1W
{
  unsigned __int16 *pName;
};

/* 2189 */
struct _RPC_SERVER_INTERFACE
{
  unsigned int Length;
  _RPC_SYNTAX_IDENTIFIER InterfaceId;
  _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  RPC_DISPATCH_TABLE *DispatchTable;
  unsigned int RpcProtseqEndpointCount;
  _RPC_PROTSEQ_ENDPOINT *RpcProtseqEndpoint;
  void *DefaultManagerEpv;
  const void *InterpreterInfo;
  unsigned int Flags;
};

/* 2190 */
struct IServiceProvider
{
  IUnknown baseclass_0;
};

/* 2191 */
struct _stat
{
  unsigned int st_dev;
  unsigned __int16 st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  unsigned int st_rdev;
  int st_size;
  int st_atime;
  int st_mtime;
  int st_ctime;
};

/* 2192 */
struct IStdMarshalInfo
{
  IUnknown baseclass_0;
};

/* 2193 */
struct _CRYPT_OBJID_TABLE
{
  unsigned int dwAlgId;
  const char *pszObjId;
};

/* 2194 */
struct _PERF_DATA_BLOCK
{
  unsigned __int16 Signature[4];
  unsigned int LittleEndian;
  unsigned int Version;
  unsigned int Revision;
  unsigned int TotalByteLength;
  unsigned int HeaderLength;
  unsigned int NumObjectTypes;
  int DefaultObject;
  _SYSTEMTIME SystemTime;
  _LARGE_INTEGER PerfTime;
  _LARGE_INTEGER PerfFreq;
  _LARGE_INTEGER PerfTime100nSec;
  unsigned int SystemNameLength;
  unsigned int SystemNameOffset;
};

/* 2195 */
struct tagWAVEOUTCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
};

/* 2196 */
struct _CERT_AUTHORITY_KEY_ID_INFO
{
  _CRYPTOAPI_BLOB KeyId;
  _CRYPTOAPI_BLOB CertIssuer;
  _CRYPTOAPI_BLOB CertSerialNumber;
};

/* 2197 */
struct _CERT_PAIR
{
  _CRYPTOAPI_BLOB Forward;
  _CRYPTOAPI_BLOB Reverse;
};

/* 2198 */
struct tagMCI_INFO_PARMSW
{
  unsigned int dwCallback;
  unsigned __int16 *lpstrReturn;
  unsigned int dwRetSize;
};

/* 2199 */
struct _CROSS_CERT_DIST_POINTS_INFO
{
  unsigned int dwSyncDeltaTime;
  unsigned int cDistPoint;
  _CERT_ALT_NAME_INFO *rgDistPoint;
};

/* 2200 */
struct _CHANGER_MOVE_MEDIUM
{
  _CHANGER_ELEMENT Transport;
  _CHANGER_ELEMENT Source;
  _CHANGER_ELEMENT Destination;
  char Flip;
};

/* 2201 */
struct _ENCRYPTION_CERTIFICATE_LIST
{
  unsigned int nUsers;
  _ENCRYPTION_CERTIFICATE **pUsers;
};

/* 2202 */
struct _EFS_RPC_BLOB
{
  unsigned int cbData;
  char *pbData;
};

/* 2203 */
struct tagMULTI_QI
{
  _GUID *pIID;
  IUnknown *pItf;
  HRESULT hr;
};

/* 2204 */
struct IHttpNegotiate
{
  IUnknown baseclass_0;
};

/* 2205 */
struct IHttpNegotiate2
{
  IHttpNegotiate baseclass_0;
};

/* 2206 */
struct IPersistFile
{
  IPersist baseclass_0;
};

/* 2207 */
struct tagMCI_VD_STEP_PARMS
{
  unsigned int dwCallback;
  unsigned int dwFrames;
};

/* 2208 */
struct _CRL_DIST_POINT
{
  _CRL_DIST_POINT_NAME DistPointName;
  _CRYPT_BIT_BLOB ReasonFlags;
  _CERT_ALT_NAME_INFO CRLIssuer;
};

/* 2209 */
struct _CRL_DIST_POINTS_INFO
{
  unsigned int cDistPoint;
  _CRL_DIST_POINT *rgDistPoint;
};

/* 2210 */
struct tagRPC_ERROR_ENUM_HANDLE
{
  unsigned int Signature;
  void *CurrentPos;
  void *Head;
};

/* 2211 */
struct _PERF_BIN
{
  unsigned int NumberOfBins;
  unsigned int TypeOfBin;
  _BIN_RANGE BinsRanges[1];
};

/* 2212 */
struct _UUID_VECTOR
{
  unsigned int Count;
  _GUID *Uuid[1];
};

/* 2213 */
struct SCARD_T0_COMMAND
{
  char bCla;
  char bIns;
  char bP1;
  char bP2;
  char bP3;
};

/* 2214 */
struct _EFS_KEY_INFO
{
  unsigned int dwVersion;
  unsigned int Entropy;
  unsigned int Algorithm;
  unsigned int KeyLength;
};

/* 2215 */
struct tagMONHSZSTRUCTW
{
  unsigned int cb;
  int fsAction;
  unsigned int dwTime;
  HSZ__ *hsz;
  void *hTask;
  unsigned __int16 str[1];
};

/* 2216 */
struct _SCONTEXT_QUEUE
{
  unsigned int NumberOfObjects;
  $3FA64165D15A4602C29B2D9B0DA4A5E9 **ArrayOfObjects;
};

/* 2217 */
struct IMallocSpy
{
  IUnknown baseclass_0;
};

/* 2218 */
struct tagMIDIOUTCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wVoices;
  unsigned __int16 wNotes;
  unsigned __int16 wChannelMask;
  unsigned int dwSupport;
};

/* 2219 */
struct tagMCI_WAVE_OPEN_PARMSW
{
  unsigned int dwCallback;
  unsigned int wDeviceID;
  const unsigned __int16 *lpstrDeviceType;
  const unsigned __int16 *lpstrElementName;
  const unsigned __int16 *lpstrAlias;
  unsigned int dwBufferSeconds;
};

/* 2220 */
struct _RPC_TRANSFER_SYNTAX
{
  _GUID Uuid;
  unsigned __int16 VersMajor;
  unsigned __int16 VersMinor;
};

/* 2221 */
struct _CRYPT_VERIFY_MESSAGE_PARA
{
  unsigned int cbSize;
  unsigned int dwMsgAndCertEncodingType;
  unsigned int hCryptProv;
  _CERT_CONTEXT *(__stdcall *pfnGetSignerCertificate)(void *, unsigned int, _CERT_INFO *, void *);
  void *pvGetArg;
};

/* 2222 */
struct _CMSG_SIGNER_ENCODE_INFO
{
  unsigned int cbSize;
  _CERT_INFO *pCertInfo;
  unsigned int hCryptProv;
  unsigned int dwKeySpec;
  _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  void *pvHashAuxInfo;
  unsigned int cAuthAttr;
  _CRYPT_ATTRIBUTE *rgAuthAttr;
  unsigned int cUnauthAttr;
  _CRYPT_ATTRIBUTE *rgUnauthAttr;
};

/* 2223 */
struct _CMSG_SIGNED_ENCODE_INFO
{
  unsigned int cbSize;
  unsigned int cSigners;
  _CMSG_SIGNER_ENCODE_INFO *rgSigners;
  unsigned int cCertEncoded;
  _CRYPTOAPI_BLOB *rgCertEncoded;
  unsigned int cCrlEncoded;
  _CRYPTOAPI_BLOB *rgCrlEncoded;
};

/* 2224 */
struct _CHANGER_PRODUCT_DATA
{
  char VendorId[8];
  char ProductId[16];
  char Revision[4];
  char SerialNumber[32];
  char DeviceType;
};

/* 2225 */
struct tagMCI_OVLY_SAVE_PARMSA
{
  unsigned int dwCallback;
  const char *lpfilename;
  tagRECT rc;
};

/* 2226 */
struct IBindHost
{
  IUnknown baseclass_0;
};

/* 2227 */
union $E3CAD8411F77256CCB020CE77D197F57
{
  unsigned int nStartPage;
  const char *pStartPage;
};

/* 2228 */
union $8C2F8F9DABAA7349D57C2E39EB9D1D05
{
  _PROPSHEETPAGEA *ppsp;
  _PSP **phpage;
};

/* 2229 */
union $29D86ECF339C538DCC30544C18CE6129
{
  HBITMAP__ *hbmWatermark;
  const char *pszbmWatermark;
};

/* 2230 */
union $0C28DB2AF6523A40BED3497F363119EC
{
  HBITMAP__ *hbmHeader;
  const char *pszbmHeader;
};

/* 2231 */
struct _PROPSHEETHEADERA
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HWND__ *hwndParent;
  HINSTANCE__ *hInstance;
  $19AED208800BAD5A235CFF0C7BF52E3D ___u4;
  const char *pszCaption;
  unsigned int nPages;
  $E3CAD8411F77256CCB020CE77D197F57 ___u7;
  $8C2F8F9DABAA7349D57C2E39EB9D1D05 ___u8;
  int (__stdcall *pfnCallback)(HWND__ *, unsigned int, int);
  $29D86ECF339C538DCC30544C18CE6129 ___u10;
  HPALETTE__ *hplWatermark;
  $0C28DB2AF6523A40BED3497F363119EC ___u12;
};

/* 2232 */
struct tagCHOOSEFONTW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HDC__ *hDC;
  tagLOGFONTW *lpLogFont;
  int iPointSize;
  unsigned int Flags;
  unsigned int rgbColors;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpTemplateName;
  HINSTANCE__ *hInstance;
  unsigned __int16 *lpszStyle;
  unsigned __int16 nFontType;
  unsigned __int16 ___MISSING_ALIGNMENT__;
  int nSizeMin;
  int nSizeMax;
};

/* 2233 */
struct _SCARD_ATRMASK
{
  unsigned int cbAtr;
  char rgbAtr[36];
  char rgbMask[36];
};

/* 2234 */
struct _LANA_ENUM
{
  char length;
  char lana[255];
};

/* 2235 */
struct _PRINTER_INFO_7W
{
  unsigned __int16 *pszObjectGUID;
  unsigned int dwAction;
};

/* 2236 */
struct IEnumUnknown
{
  IUnknown baseclass_0;
};

/* 2237 */
struct ISupportErrorInfo
{
  IUnknown baseclass_0;
};

/* 2238 */
struct tagMCI_OVLY_LOAD_PARMSW
{
  unsigned int dwCallback;
  const unsigned __int16 *lpfilename;
  tagRECT rc;
};

/* 2239 */
struct IXMLDOMCharacterData
{
  IXMLDOMNode baseclass_0;
};

/* 2240 */
struct _RPC_SECURITY_QOS
{
  unsigned int Version;
  unsigned int Capabilities;
  unsigned int IdentityTracking;
  unsigned int ImpersonationType;
};

/* 2241 */
struct tagMONHSZSTRUCTA
{
  unsigned int cb;
  int fsAction;
  unsigned int dwTime;
  HSZ__ *hsz;
  void *hTask;
  char str[1];
};

/* 2242 */
struct mmtime_tag::__unnamed::__unnamed
{
  char hour;
  char min;
  char sec;
  char frame;
  char fps;
  char dummy;
  char pad[2];
};

/* 2243 */
union mmtime_tag::__unnamed
{
  unsigned int ms;
  unsigned int sample;
  unsigned int cb;
  unsigned int ticks;
  mmtime_tag::__unnamed::__unnamed smpte;
  mmtime_tag::__unnamed::__unnamed midi;
};

/* 2244 */
struct mmtime_tag
{
  unsigned int wType;
  mmtime_tag::__unnamed u;
};

/* 2245 */
struct tagCHOOSECOLORW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HWND__ *hInstance;
  unsigned int rgbResult;
  unsigned int *lpCustColors;
  unsigned int Flags;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpTemplateName;
};

/* 2246 */
struct tagMCI_OVLY_WINDOW_PARMSW
{
  unsigned int dwCallback;
  HWND__ *hWnd;
  unsigned int nCmdShow;
  const unsigned __int16 *lpstrText;
};

/* 2247 */
struct _CERT_USAGE_MATCH
{
  unsigned int dwType;
  _CTL_USAGE Usage;
};

/* 2248 */
struct _CERT_CHAIN_PARA
{
  unsigned int cbSize;
  _CERT_USAGE_MATCH RequestedUsage;
};

/* 2249 */
struct IMarshal
{
  IUnknown baseclass_0;
};

/* 2250 */
struct IMarshal2
{
  IMarshal baseclass_0;
};

/* 2251 */
struct IClassFactory
{
  IUnknown baseclass_0;
};

/* 2252 */
struct ICallFactory
{
  IUnknown baseclass_0;
};

/* 2253 */
struct IRootStorage
{
  IUnknown baseclass_0;
};

/* 2254 */
struct IXMLDSOControl
{
  IDispatch baseclass_0;
};

/* 2255 */
struct tagDEVNAMES
{
  unsigned __int16 wDriverOffset;
  unsigned __int16 wDeviceOffset;
  unsigned __int16 wOutputOffset;
  unsigned __int16 wDefault;
};

/* 2256 */
struct __wfinddata64_t
{
  unsigned int attrib;
  __int64 time_create;
  __int64 time_access;
  __int64 time_write;
  __int64 size;
  wchar_t name[260];
};

/* 2257 */
struct ITypeChangeEvents
{
  IUnknown baseclass_0;
};

/* 2258 */
struct tagPSDW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  void *hDevMode;
  void *hDevNames;
  unsigned int Flags;
  tagPOINT ptPaperSize;
  tagRECT rtMinMargin;
  tagRECT rtMargin;
  HINSTANCE__ *hInstance;
  int lCustData;
  unsigned int (__stdcall *lpfnPageSetupHook)(HWND__ *, unsigned int, unsigned int, int);
  unsigned int (__stdcall *lpfnPagePaintHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpPageSetupTemplateName;
  void *hPageSetupTemplate;
};

/* 2259 */
struct tagMIXERCONTROLDETAILS_LISTTEXTW
{
  unsigned int dwParam1;
  unsigned int dwParam2;
  unsigned __int16 szName[64];
};

/* 2260 */
struct _FSCTL_QUERY_FAT_BPB_BUFFER
{
  char First0x24BytesOfBootSector[36];
};

/* 2261 */
struct _DRIVER_INFO_6A
{
  unsigned int cVersion;
  char *pName;
  char *pEnvironment;
  char *pDriverPath;
  char *pDataFile;
  char *pConfigFile;
  char *pHelpFile;
  char *pDependentFiles;
  char *pMonitorName;
  char *pDefaultDataType;
  char *pszzPreviousNames;
  _FILETIME ftDriverDate;
  unsigned __int64 dwlDriverVersion;
  char *pszMfgName;
  char *pszOEMUrl;
  char *pszHardwareID;
  char *pszProvider;
};

/* 2262 */
struct AsyncIMultiQI
{
  IUnknown baseclass_0;
};

/* 2263 */
struct _tagBINDINFO
{
  unsigned int cbSize;
  unsigned __int16 *szExtraInfo;
  tagSTGMEDIUM stgmedData;
  unsigned int grfBindInfoF;
  unsigned int dwBindVerb;
  unsigned __int16 *szCustomVerb;
  unsigned int cbstgmedData;
  unsigned int dwOptions;
  unsigned int dwOptionsFlags;
  unsigned int dwCodePage;
  _SECURITY_ATTRIBUTES securityAttributes;
  _GUID iid;
  IUnknown *pUnk;
  unsigned int dwReserved;
};

/* 2264 */
struct _CERT_NAME_CONSTRAINTS_INFO
{
  unsigned int cPermittedSubtree;
  _CERT_GENERAL_SUBTREE *rgPermittedSubtree;
  unsigned int cExcludedSubtree;
  _CERT_GENERAL_SUBTREE *rgExcludedSubtree;
};

/* 2265 */
struct HMIDIOUT__
{
  int unused;
};

/* 2266 */
struct tagCLEANLOCALSTORAGE
{
  IUnknown *pInterface;
  void *pStorage;
  unsigned int flags;
};

/* 2267 */
struct IBindProtocol
{
  IUnknown baseclass_0;
};

/* 2268 */
struct IBinding
{
  IUnknown baseclass_0;
};

/* 2269 */
struct _CERT_DSS_PARAMETERS
{
  _CRYPTOAPI_BLOB p;
  _CRYPTOAPI_BLOB q;
  _CRYPTOAPI_BLOB g;
};

/* 2270 */
struct _NCB
{
  char ncb_command;
  char ncb_retcode;
  char ncb_lsn;
  char ncb_num;
  char *ncb_buffer;
  unsigned __int16 ncb_length;
  char ncb_callname[16];
  char ncb_name[16];
  char ncb_rto;
  char ncb_sto;
  void (__stdcall *ncb_post)(_NCB *);
  char ncb_lana_num;
  char ncb_cmd_cplt;
  char ncb_reserve[10];
  void *ncb_event;
};

/* 2271 */
struct _CERT_CHAIN
{
  unsigned int cCerts;
  _CRYPTOAPI_BLOB *certs;
  _CRYPT_KEY_PROV_INFO keyLocatorInfo;
};

/* 2272 */
struct _CHANGER_ELEMENT_STATUS
{
  _CHANGER_ELEMENT Element;
  _CHANGER_ELEMENT SrcElementAddress;
  unsigned int Flags;
  unsigned int ExceptionCode;
  char TargetId;
  char Lun;
  unsigned __int16 Reserved;
  char PrimaryVolumeID[36];
  char AlternateVolumeID[36];
};

/* 2273 */
struct _READ_ELEMENT_ADDRESS_INFO
{
  unsigned int NumberOfElements;
  _CHANGER_ELEMENT_STATUS ElementStatus[1];
};

/* 2274 */
struct _CRYPT_KEY_SIGN_MESSAGE_PARA
{
  unsigned int cbSize;
  unsigned int dwMsgAndCertEncodingType;
  unsigned int hCryptProv;
  unsigned int dwKeySpec;
  _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  void *pvHashAuxInfo;
  _CRYPT_ALGORITHM_IDENTIFIER PubKeyAlgorithm;
};

/* 2275 */
struct IOleInPlaceObject
{
  IOleWindow baseclass_0;
};

/* 2276 */
struct _CMSG_HASHED_ENCODE_INFO
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  void *pvHashAuxInfo;
};

/* 2277 */
struct _DRIVE_LAYOUT_INFORMATION
{
  unsigned int PartitionCount;
  unsigned int Signature;
  _PARTITION_INFORMATION PartitionEntry[1];
};

/* 2278 */
struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  unsigned int dwSignerIndex;
  unsigned int dwSignerType;
  void *pvSigner;
};

/* 2279 */
struct _ENCRYPTION_CERTIFICATE_HASH
{
  unsigned int cbTotalLength;
  _SID *pUserSid;
  _EFS_HASH_BLOB *pHash;
  unsigned __int16 *lpDisplayInformation;
};

/* 2280 */
struct _ENCRYPTION_CERTIFICATE_HASH_LIST
{
  unsigned int nCert_Hash;
  _ENCRYPTION_CERTIFICATE_HASH **pUsers;
};

/* 2281 */
struct DDEADVISE
{
  __int16 _bf0;
  __int16 cfFormat;
};

/* 2282 */
struct IXMLDOMElement
{
  IXMLDOMNode baseclass_0;
};

/* 2283 */
union tagRPC_EE_INFO_PARAM::__unnamed
{
  char *AnsiString;
  unsigned __int16 *UnicodeString;
  int LVal;
  __int16 SVal;
  unsigned __int64 PVal;
  tagBinaryParam BVal;
};

/* 2284 */
struct tagRPC_EE_INFO_PARAM
{
  tagExtendedErrorParamTypes ParameterType;
  tagRPC_EE_INFO_PARAM::__unnamed u;
};

/* 2285 */
struct tagStorageLayout
{
  unsigned int LayoutType;
  unsigned __int16 *pwcsElementName;
  _LARGE_INTEGER cOffset;
  _LARGE_INTEGER cBytes;
};

/* 2286 */
struct _FORMAT_EX_PARAMETERS
{
  _MEDIA_TYPE MediaType;
  unsigned int StartCylinderNumber;
  unsigned int EndCylinderNumber;
  unsigned int StartHeadNumber;
  unsigned int EndHeadNumber;
  unsigned __int16 FormatGapLength;
  unsigned __int16 SectorsPerTrack;
  unsigned __int16 SectorNumber[1];
};

/* 2287 */
struct _MIDL_FORMAT_STRING
{
  __int16 Pad;
  char Format[];
};

/* 2288 */
struct tagMCI_ANIM_STEP_PARMS
{
  unsigned int dwCallback;
  unsigned int dwFrames;
};

/* 2289 */
struct _CERT_DH_PARAMETERS
{
  _CRYPTOAPI_BLOB p;
  _CRYPTOAPI_BLOB g;
};

/* 2290 */
struct IInternetSecurityManager
{
  IUnknown baseclass_0;
};

/* 2291 */
struct IInternetSecurityMgrSite
{
  IUnknown baseclass_0;
};

/* 2292 */
struct _CERT_REVOCATION_STATUS
{
  unsigned int cbSize;
  unsigned int dwIndex;
  unsigned int dwError;
  unsigned int dwReason;
  int fHasFreshnessTime;
  unsigned int dwFreshnessTime;
};

/* 2293 */
struct tagMIXERLINECONTROLSA
{
  unsigned int cbStruct;
  unsigned int dwLineID;
  $476D211351DA30503E50D2F0E6E515B0 ___u2;
  unsigned int cControls;
  unsigned int cbmxctrl;
  tagMIXERCONTROLA *pamxctrl;
};

/* 2294 */
struct IXMLDOMComment
{
  IXMLDOMCharacterData baseclass_0;
};

/* 2295 */
struct tagCSPLATFORM
{
  unsigned int dwPlatformId;
  unsigned int dwVersionHi;
  unsigned int dwVersionLo;
  unsigned int dwProcessorArch;
};

/* 2296 */
struct tagQUERYCONTEXT
{
  unsigned int dwContext;
  tagCSPLATFORM Platform;
  unsigned int Locale;
  unsigned int dwVersionHi;
  unsigned int dwVersionLo;
};

/* 2297 */
struct _CERT_CHAIN_POLICY_STATUS
{
  unsigned int cbSize;
  unsigned int dwError;
  int lChainIndex;
  int lElementIndex;
  void *pvExtraPolicyStatus;
};

/* 2298 */
struct _CRYPT_PKCS8_EXPORT_PARAMS
{
  unsigned int hCryptProv;
  unsigned int dwKeySpec;
  char *pszPrivateKeyObjId;
  int (__stdcall *pEncryptPrivateKeyFunc)(_CRYPT_ALGORITHM_IDENTIFIER *, _CRYPTOAPI_BLOB *, char *, unsigned int *, void *);
  void *pVoidEncryptFunc;
};

/* 2299 */
struct tagMCI_GETDEVCAPS_PARMS
{
  unsigned int dwCallback;
  unsigned int dwReturn;
  unsigned int dwItem;
};

/* 2300 */
struct _tagHIT_LOGGING_INFO
{
  unsigned int dwStructSize;
  char *lpszLoggedUrlName;
  _SYSTEMTIME StartTime;
  _SYSTEMTIME EndTime;
  char *lpszExtendedInfo;
};

/* 2301 */
struct tagRPC_CALL_ATTRIBUTES_V1_W
{
  unsigned int Version;
  unsigned int Flags;
  unsigned int ServerPrincipalNameBufferLength;
  unsigned __int16 *ServerPrincipalName;
  unsigned int ClientPrincipalNameBufferLength;
  unsigned __int16 *ClientPrincipalName;
  unsigned int AuthenticationLevel;
  unsigned int AuthenticationService;
  int NullSession;
};

/* 2302 */
struct tagMCI_LOAD_PARMSW
{
  unsigned int dwCallback;
  const unsigned __int16 *lpfilename;
};

/* 2303 */
struct IErrorInfo
{
  IUnknown baseclass_0;
};

/* 2304 */
struct _RSAPUBKEY
{
  unsigned int magic;
  unsigned int bitlen;
  unsigned int pubexp;
};

/* 2305 */
struct _VERIFY_INFORMATION
{
  _LARGE_INTEGER StartingOffset;
  unsigned int Length;
};

/* 2306 */
struct _SESSION_BUFFER
{
  char lsn;
  char state;
  char local_name[16];
  char remote_name[16];
  char rcvs_outstanding;
  char sends_outstanding;
};

/* 2307 */
struct IOleLink
{
  IUnknown baseclass_0;
};

/* 2308 */
struct _CMSG_SP3_COMPATIBLE_AUX_INFO
{
  unsigned int cbSize;
  unsigned int dwFlags;
};

/* 2309 */
struct IOleCache
{
  IUnknown baseclass_0;
};

/* 2310 */
struct _CRYPT_PRIVATE_KEY_INFO
{
  unsigned int Version;
  _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
  _CRYPTOAPI_BLOB PrivateKey;
  _CRYPT_ATTRIBUTES *pAttributes;
};

/* 2311 */
struct _FLAG_STGMEDIUM
{
  int ContextFlags;
  int fPassOwnership;
  tagSTGMEDIUM Stgmed;
};

/* 2312 */
struct _PRINTER_INFO_9W
{
  _devicemodeW *pDevMode;
};

/* 2313 */
struct IViewObject2
{
  IViewObject baseclass_0;
};

/* 2314 */
struct _TRANSMIT_FILE_BUFFERS
{
  void *Head;
  unsigned int HeadLength;
  void *Tail;
  unsigned int TailLength;
};

/* 2315 */
struct IRunnableObject
{
  IUnknown baseclass_0;
};

/* 2316 */
struct tagDRVCONFIGINFO
{
  unsigned int dwDCISize;
  const unsigned __int16 *lpszDCISectionName;
  const unsigned __int16 *lpszDCIAliasName;
};

/* 2317 */
struct _FILE_PREFETCH
{
  unsigned int Type;
  unsigned int Count;
  unsigned __int64 Prefetch[1];
};

/* 2318 */
struct _CMSG_RC2_AUX_INFO
{
  unsigned int cbSize;
  unsigned int dwBitLen;
};

/* 2319 */
struct IMultiQI
{
  IUnknown baseclass_0;
};

/* 2320 */
struct _MIDL_STUBLESS_PROXY_INFO
{
  _MIDL_STUB_DESC *pStubDesc;
  const char *ProcFormatString;
  const unsigned __int16 *FormatStringOffset;
  _RPC_SYNTAX_IDENTIFIER *pTransferSyntax;
  unsigned int nCount;
  _MIDL_SYNTAX_INFO *pSyntaxInfo;
};

/* 2321 */
struct _GET_CHANGER_PARAMETERS
{
  unsigned int Size;
  unsigned __int16 NumberTransportElements;
  unsigned __int16 NumberStorageElements;
  unsigned __int16 NumberCleanerSlots;
  unsigned __int16 NumberIEElements;
  unsigned __int16 NumberDataTransferElements;
  unsigned __int16 NumberOfDoors;
  unsigned __int16 FirstSlotNumber;
  unsigned __int16 FirstDriveNumber;
  unsigned __int16 FirstTransportNumber;
  unsigned __int16 FirstIEPortNumber;
  unsigned __int16 FirstCleanerSlotAddress;
  unsigned __int16 MagazineSize;
  unsigned int DriveCleanTimeout;
  unsigned int Features0;
  unsigned int Features1;
  char MoveFromTransport;
  char MoveFromSlot;
  char MoveFromIePort;
  char MoveFromDrive;
  char ExchangeFromTransport;
  char ExchangeFromSlot;
  char ExchangeFromIePort;
  char ExchangeFromDrive;
  char LockUnlockCapabilities;
  char PositionCapabilities;
  char Reserved1[2];
  unsigned int Reserved2[2];
};

/* 2322 */
struct _PROPSHEETPAGEW_V1
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HINSTANCE__ *hInstance;
  $9C1EDDD10B887C558A23F4795CFD7326 ___u3;
  $F8D56076672271F4E472AFC8D552D121 ___u4;
  const unsigned __int16 *pszTitle;
  int (__stdcall *pfnDlgProc)(HWND__ *, unsigned int, unsigned int, int);
  int lParam;
  unsigned int (__stdcall *pfnCallback)(HWND__ *, unsigned int, _PROPSHEETPAGEW *);
  unsigned int *pcRefParent;
};

/* 2323 */
struct IXMLDOMDocumentType
{
  IXMLDOMNode baseclass_0;
};

/* 2324 */
struct _PERF_INSTANCE_DEFINITION
{
  unsigned int ByteLength;
  unsigned int ParentObjectTitleIndex;
  unsigned int ParentObjectInstance;
  int UniqueID;
  unsigned int NameOffset;
  unsigned int NameLength;
};

/* 2325 */
struct _PROVIDOR_INFO_2A
{
  char *pOrder;
};

/* 2326 */
struct HMIDISTRM__
{
  int unused;
};

/* 2327 */
struct _CERT_NAME_VALUE
{
  unsigned int dwValueType;
  _CRYPTOAPI_BLOB Value;
};

/* 2328 */
struct _CPS_URLS
{
  unsigned __int16 *pszURL;
  _CRYPT_ALGORITHM_IDENTIFIER *pAlgorithm;
  _CRYPTOAPI_BLOB *pDigest;
};

/* 2329 */
struct IMessageFilter
{
  IUnknown baseclass_0;
};

/* 2330 */
struct _PROV_ENUMALGS
{
  unsigned int aiAlgid;
  unsigned int dwBitLen;
  unsigned int dwNameLen;
  char szName[20];
};

/* 2331 */
struct IAsyncManager
{
  IUnknown baseclass_0;
};

/* 2332 */
struct IReleaseMarshalBuffers
{
  IUnknown baseclass_0;
};

/* 2333 */
struct _wfinddatai64_t
{
  unsigned int attrib;
  int time_create;
  int time_access;
  int time_write;
  __int64 size;
  wchar_t name[260];
};

/* 2334 */
struct _CRL_ISSUING_DIST_POINT
{
  _CRL_DIST_POINT_NAME DistPointName;
  int fOnlyContainsUserCerts;
  int fOnlyContainsCACerts;
  _CRYPT_BIT_BLOB OnlySomeReasonFlags;
  int fIndirectCRL;
};

/* 2335 */
struct tagSTATDATA
{
  tagFORMATETC formatetc;
  unsigned int advf;
  IAdviseSink *pAdvSink;
  unsigned int dwConnection;
};

/* 2336 */
struct tagCRGB
{
  char bRed;
  char bGreen;
  char bBlue;
  char bExtra;
};

/* 2337 */
struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR
{
  unsigned __int16 *pwszName;
  unsigned __int16 *pwszValue;
};

/* 2338 */
struct IOleObject
{
  IUnknown baseclass_0;
};

/* 2339 */
struct tagRemHBITMAP
{
  unsigned int cbData;
  char data[1];
};

/* 2340 */
struct _CMSG_RC4_AUX_INFO
{
  unsigned int cbSize;
  unsigned int dwBitLen;
};

/* 2341 */
struct _tagRemBINDINFO
{
  unsigned int cbSize;
  unsigned __int16 *szExtraInfo;
  unsigned int grfBindInfoF;
  unsigned int dwBindVerb;
  unsigned __int16 *szCustomVerb;
  unsigned int cbstgmedData;
  unsigned int dwOptions;
  unsigned int dwOptionsFlags;
  unsigned int dwCodePage;
  _REMSECURITY_ATTRIBUTES securityAttributes;
  _GUID iid;
  IUnknown *pUnk;
  unsigned int dwReserved;
};

/* 2342 */
struct IXMLHttpRequest
{
  IDispatch baseclass_0;
};

/* 2343 */
struct tMIXERCONTROLDETAILS_BOOLEAN
{
  int fValue;
};

/* 2344 */
struct _CRYPT_CSP_PROVIDER
{
  unsigned int dwKeySpec;
  unsigned __int16 *pwszProviderName;
  _CRYPT_BIT_BLOB Signature;
};

/* 2345 */
struct _ADAPTER_STATUS
{
  char adapter_address[6];
  char rev_major;
  char reserved0;
  char adapter_type;
  char rev_minor;
  unsigned __int16 duration;
  unsigned __int16 frmr_recv;
  unsigned __int16 frmr_xmit;
  unsigned __int16 iframe_recv_err;
  unsigned __int16 xmit_aborts;
  unsigned int xmit_success;
  unsigned int recv_success;
  unsigned __int16 iframe_xmit_err;
  unsigned __int16 recv_buff_unavail;
  unsigned __int16 t1_timeouts;
  unsigned __int16 ti_timeouts;
  unsigned int reserved1;
  unsigned __int16 free_ncbs;
  unsigned __int16 max_cfg_ncbs;
  unsigned __int16 max_ncbs;
  unsigned __int16 xmit_buf_unavail;
  unsigned __int16 max_dgram_size;
  unsigned __int16 pending_sess;
  unsigned __int16 max_cfg_sess;
  unsigned __int16 max_sess;
  unsigned __int16 max_sess_pkt_size;
  unsigned __int16 name_count;
};

/* 2346 */
struct _CTL_ANY_SUBJECT_INFO
{
  _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
  _CRYPTOAPI_BLOB SubjectIdentifier;
};

/* 2347 */
struct _PRIVKEYVER3
{
  unsigned int magic;
  unsigned int bitlenP;
  unsigned int bitlenQ;
  unsigned int bitlenJ;
  unsigned int bitlenX;
  _DSSSEED DSSSeed;
};

/* 2348 */
struct _FORMAT_PARAMETERS
{
  _MEDIA_TYPE MediaType;
  unsigned int StartCylinderNumber;
  unsigned int EndCylinderNumber;
  unsigned int StartHeadNumber;
  unsigned int EndHeadNumber;
};

/* 2349 */
struct _CERT_NAME_INFO
{
  unsigned int cRDN;
  _CERT_RDN *rgRDN;
};

/* 2350 */
struct _NDR_USER_MARSHAL_INFO
{
  unsigned int InformationLevel;
  _NDR_USER_MARSHAL_INFO_LEVEL1 Level1;
};

/* 2351 */
struct _RPC_PROTSEQ_VECTORA
{
  unsigned int Count;
  char *Protseq[1];
};

/* 2352 */
struct _CMSG_STREAM_INFO
{
  unsigned int cbContent;
  int (__stdcall *pfnStreamOutput)(const void *, char *, unsigned int, int);
  void *pvArg;
};

/* 2353 */
struct _DATATYPES_INFO_1W
{
  unsigned __int16 *pName;
};

/* 2354 */
struct _FIND_NAME_HEADER
{
  unsigned __int16 node_count;
  char reserved;
  char unique_group;
};

/* 2355 */
struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO
{
  unsigned int cbSize;
  _CMSG_SIGNED_ENCODE_INFO SignedInfo;
  _CMSG_ENVELOPED_ENCODE_INFO EnvelopedInfo;
};

/* 2356 */
struct _FIND_NAME_BUFFER
{
  char length;
  char access_control;
  char frame_control;
  char destination_addr[6];
  char source_addr[6];
  char routing_info[18];
};

/* 2357 */
struct _ACTION_HEADER
{
  unsigned int transport_id;
  unsigned __int16 action_code;
  unsigned __int16 reserved;
};

/* 2358 */
struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA
{
  unsigned int cbSize;
  unsigned int dwRegPolicySettings;
  _CMSG_SIGNER_INFO *pSignerInfo;
};

/* 2359 */
struct IOleCache2
{
  IOleCache baseclass_0;
};

/* 2360 */
struct ISynchronizeMutex
{
  ISynchronize baseclass_0;
};

/* 2361 */
struct tagSTATPROPSTG
{
  unsigned __int16 *lpwstrName;
  unsigned int propid;
  unsigned __int16 vt;
};

/* 2362 */
struct HMIDI__
{
  int unused;
};

/* 2363 */
struct tagHSZPAIR
{
  HSZ__ *hszSvc;
  HSZ__ *hszTopic;
};

/* 2364 */
union tagRPC_EXTENDED_ERROR_INFO::__unnamed
{
  _SYSTEMTIME SystemTime;
  _FILETIME FileTime;
};

/* 2365 */
struct tagRPC_EXTENDED_ERROR_INFO
{
  unsigned int Version;
  unsigned __int16 *ComputerName;
  unsigned int ProcessID;
  tagRPC_EXTENDED_ERROR_INFO::__unnamed u;
  unsigned int GeneratingComponent;
  unsigned int Status;
  unsigned __int16 DetectionLocation;
  unsigned __int16 Flags;
  int NumberOfParameters;
  tagRPC_EE_INFO_PARAM Parameters[4];
};

/* 2366 */
struct IOleInPlaceFrame
{
  IOleInPlaceUIWindow baseclass_0;
};

/* 2367 */
struct tagOleMenuGroupWidths
{
  int width[6];
};

/* 2368 */
struct HMIXER__
{
  int unused;
};

/* 2369 */
struct IAdviseSink2
{
  IAdviseSink baseclass_0;
};

/* 2370 */
struct IOleAdviseHolder
{
  IUnknown baseclass_0;
};

/* 2371 */
struct tagMCI_OVLY_RECT_PARMS
{
  unsigned int dwCallback;
  tagRECT rc;
};

/* 2372 */
struct tagMCI_RECORD_PARMS
{
  unsigned int dwCallback;
  unsigned int dwFrom;
  unsigned int dwTo;
};

/* 2373 */
struct ITypeInfo2
{
  ITypeInfo baseclass_0;
};

/* 2374 */
struct tagINTERFACEDATA
{
  tagMETHODDATA *pmethdata;
  unsigned int cMembers;
};

/* 2375 */
struct tagMCI_VD_PLAY_PARMS
{
  unsigned int dwCallback;
  unsigned int dwFrom;
  unsigned int dwTo;
  unsigned int dwSpeed;
};

/* 2376 */
struct _DRIVER_INFO_1W
{
  unsigned __int16 *pName;
};

/* 2377 */
struct _CRYPTPROTECT_PROMPTSTRUCT
{
  unsigned int cbSize;
  unsigned int dwPromptFlags;
  HWND__ *hwndApp;
  const unsigned __int16 *szPrompt;
};

/* 2378 */
struct OPENCARDNAME_EXW
{
  unsigned int dwStructSize;
  unsigned int hSCardContext;
  HWND__ *hwndOwner;
  unsigned int dwFlags;
  const unsigned __int16 *lpstrTitle;
  const unsigned __int16 *lpstrSearchDesc;
  HICON__ *hIcon;
  OPENCARD_SEARCH_CRITERIAW *pOpenCardSearchCriteria;
  unsigned int (__stdcall *lpfnConnect)(unsigned int, unsigned __int16 *, unsigned __int16 *, void *);
  void *pvUserData;
  unsigned int dwShareMode;
  unsigned int dwPreferredProtocols;
  unsigned __int16 *lpstrRdr;
  unsigned int nMaxRdr;
  unsigned __int16 *lpstrCard;
  unsigned int nMaxCard;
  unsigned int dwActiveProtocol;
  unsigned int hCardHandle;
};

/* 2379 */
struct IExternalConnection
{
  IUnknown baseclass_0;
};

/* 2380 */
struct IOleClientSite
{
  IUnknown baseclass_0;
};

/* 2381 */
struct HWAVE__
{
  int unused;
};

/* 2382 */
struct _DRIVER_INFO_2A
{
  unsigned int cVersion;
  char *pName;
  char *pEnvironment;
  char *pDriverPath;
  char *pDataFile;
  char *pConfigFile;
};

/* 2383 */
struct IXMLDOMParseError
{
  IDispatch baseclass_0;
};

/* 2384 */
struct _CRYPT_SEQUENCE_OF_ANY
{
  unsigned int cValue;
  _CRYPTOAPI_BLOB *rgValue;
};

/* 2385 */
struct IMonikerProp
{
  IUnknown baseclass_0;
};

/* 2386 */
struct boost::type_traits::ice_and<1,1,1,1,1,1,1>
{
  char dummy[1];
};

/* 2387 */
struct boost::type_traits::no_type
{
  char padding[8];
};

/* 2388 */
struct boost::type_traits::ice_or<0,0,0,0,0,0,0>
{
  char dummy[1];
};

/* 2389 */
struct boost::type_traits::ice_not<1>
{
  char dummy[1];
};

/* 2390 */
struct boost::STATIC_ASSERTION_FAILURE<1>
{
  char dummy[1];
};

/* 2391 */
struct tagMIDIINCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int dwSupport;
};

/* 2392 */
struct IEnumVARIANT
{
  IUnknown baseclass_0;
};

/* 2393 */
struct _wfinddata_t
{
  unsigned int attrib;
  int time_create;
  int time_access;
  int time_write;
  unsigned int size;
  wchar_t name[260];
};

/* 2394 */
struct tagMONCBSTRUCT
{
  unsigned int cb;
  unsigned int dwTime;
  void *hTask;
  unsigned int dwRet;
  unsigned int wType;
  unsigned int wFmt;
  HCONV__ *hConv;
  HSZ__ *hsz1;
  HSZ__ *hsz2;
  HDDEDATA__ *hData;
  unsigned int dwData1;
  unsigned int dwData2;
  tagCONVCONTEXT cc;
  unsigned int cbData;
  unsigned int Data[8];
};

/* 2395 */
struct _CRYPT_PKCS8_IMPORT_PARAMS
{
  _CRYPTOAPI_BLOB PrivateKey;
  int (__stdcall *pResolvehCryptProvFunc)(_CRYPT_PRIVATE_KEY_INFO *, unsigned int *, void *);
  void *pVoidResolveFunc;
  int (__stdcall *pDecryptPrivateKeyFunc)(_CRYPT_ALGORITHM_IDENTIFIER, _CRYPTOAPI_BLOB, char *, unsigned int *, void *);
  void *pVoidDecryptFunc;
};

/* 2396 */
struct _CRYPT_ENCRYPT_MESSAGE_PARA
{
  unsigned int cbSize;
  unsigned int dwMsgEncodingType;
  unsigned int hCryptProv;
  _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  void *pvEncryptionAuxInfo;
  unsigned int dwFlags;
  unsigned int dwInnerContentType;
};

/* 2397 */
struct IBindStatusCallback
{
  IUnknown baseclass_0;
};

/* 2398 */
struct _CERT_SYSTEM_STORE_INFO
{
  unsigned int cbSize;
};

/* 2399 */
struct ICodeInstall
{
  IWindowForBindingUI baseclass_0;
};

/* 2400 */
struct XMLDOMDocumentEvents
{
  IDispatch baseclass_0;
};

/* 2401 */
struct joyinfo_tag
{
  unsigned int wXpos;
  unsigned int wYpos;
  unsigned int wZpos;
  unsigned int wButtons;
};

/* 2402 */
struct _JOB_INFO_2W
{
  unsigned int JobId;
  unsigned __int16 *pPrinterName;
  unsigned __int16 *pMachineName;
  unsigned __int16 *pUserName;
  unsigned __int16 *pDocument;
  unsigned __int16 *pNotifyName;
  unsigned __int16 *pDatatype;
  unsigned __int16 *pPrintProcessor;
  unsigned __int16 *pParameters;
  unsigned __int16 *pDriverName;
  _devicemodeW *pDevMode;
  unsigned __int16 *pStatus;
  void *pSecurityDescriptor;
  unsigned int Status;
  unsigned int Priority;
  unsigned int Position;
  unsigned int StartTime;
  unsigned int UntilTime;
  unsigned int TotalPages;
  unsigned int Size;
  _SYSTEMTIME Submitted;
  unsigned int Time;
  unsigned int PagesPrinted;
};

/* 2403 */
struct _CHANGER_SEND_VOLUME_TAG_INFORMATION
{
  _CHANGER_ELEMENT StartingElement;
  unsigned int ActionCode;
  char VolumeIDTemplate[40];
};

/* 2404 */
struct tagMCI_SET_PARMS
{
  unsigned int dwCallback;
  unsigned int dwTimeFormat;
  unsigned int dwAudio;
};

/* 2405 */
struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA
{
  HKEY__ *hKeyBase;
  unsigned __int16 *pwszRegPath;
};

/* 2406 */
struct IDummyHICONIncluder
{
  IUnknown baseclass_0;
};

/* 2407 */
struct _PRINTER_INFO_3
{
  void *pSecurityDescriptor;
};

/* 2408 */
struct IRpcHelper
{
  IUnknown baseclass_0;
};

/* 2409 */
union $673D86590A7C9D4AA7B37C3AD54FBBEA
{
  _LARGE_INTEGER nFileOffset;
  void *pBuffer;
};

/* 2410 */
struct _TRANSMIT_PACKETS_ELEMENT
{
  unsigned int dwElFlags;
  unsigned int cLength;
  $673D86590A7C9D4AA7B37C3AD54FBBEA ___u2;
  void *hFile;
};

/* 2411 */
struct tagSTGOPTIONS
{
  unsigned __int16 usVersion;
  unsigned __int16 reserved;
  unsigned int ulSectorSize;
  const unsigned __int16 *pwcsTemplateFile;
};

/* 2412 */
struct IMalloc
{
  IUnknown baseclass_0;
};

/* 2413 */
struct NUMPARSE
{
  int cDig;
  unsigned int dwInFlags;
  unsigned int dwOutFlags;
  int cchUsed;
  int nBaseShift;
  int nPwr10;
};

/* 2414 */
struct _PERF_OBJECT_TYPE
{
  unsigned int TotalByteLength;
  unsigned int DefinitionLength;
  unsigned int HeaderLength;
  unsigned int ObjectNameTitleIndex;
  unsigned __int16 *ObjectNameTitle;
  unsigned int ObjectHelpTitleIndex;
  unsigned __int16 *ObjectHelpTitle;
  unsigned int DetailLevel;
  unsigned int NumCounters;
  int DefaultCounter;
  int NumInstances;
  unsigned int CodePage;
  _LARGE_INTEGER PerfTime;
  _LARGE_INTEGER PerfFreq;
};

/* 2415 */
struct IForegroundTransfer
{
  IUnknown baseclass_0;
};

/* 2416 */
struct _tagPROTOCOLFILTERDATA
{
  unsigned int cbSize;
  IInternetProtocolSink *pProtocolSink;
  IInternetProtocol *pProtocol;
  IUnknown *pUnk;
  unsigned int dwFilterFlags;
};

/* 2417 */
struct _CERT_EXTENSIONS
{
  unsigned int cExtension;
  _CERT_EXTENSION *rgExtension;
};

/* 2418 */
struct _CMC_DATA_INFO
{
  unsigned int cTaggedAttribute;
  _CMC_TAGGED_ATTRIBUTE *rgTaggedAttribute;
  unsigned int cTaggedRequest;
  _CMC_TAGGED_REQUEST *rgTaggedRequest;
  unsigned int cTaggedContentInfo;
  _CMC_TAGGED_CONTENT_INFO *rgTaggedContentInfo;
  unsigned int cTaggedOtherMsg;
  _CMC_TAGGED_OTHER_MSG *rgTaggedOtherMsg;
};

/* 2419 */
struct stat
{
  unsigned int st_dev;
  unsigned __int16 st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  unsigned int st_rdev;
  int st_size;
  int st_atime;
  int st_mtime;
  int st_ctime;
};

/* 2420 */
struct HWAVEOUT__
{
  int unused;
};

/* 2421 */
struct tagOIFI
{
  unsigned int cb;
  int fMDIApp;
  HWND__ *hwndFrame;
  HACCEL__ *haccel;
  unsigned int cAccelEntries;
};

/* 2422 */
struct DDEDATA
{
  __int16 _bf0;
  __int16 cfFormat;
  char Value[1];
};

/* 2423 */
struct _CRYPT_DECODE_PARA
{
  unsigned int cbSize;
  void *(__stdcall *pfnAlloc)(unsigned int);
  void (__stdcall *pfnFree)(void *);
};

/* 2424 */
struct _NLA_BLOB::__unnamed::__unnamed
{
  unsigned int dwType;
  unsigned int dwSpeed;
  char adapterName[1];
};

/* 2425 */
struct _NLA_BLOB::__unnamed::__unnamed::__unnamed
{
  unsigned int speed;
  unsigned int type;
  unsigned int state;
  unsigned __int16 machineName[256];
  unsigned __int16 sharedAdapterName[256];
};

/* 2426 */
union $8B66593A8C1282C8A71C379A04BA2EE3
{
  HWND__ *hwndOwner;
  unsigned int cMultipleItems;
};

/* 2427 */
struct tMIXERCONTROLDETAILS
{
  unsigned int cbStruct;
  unsigned int dwControlID;
  unsigned int cChannels;
  $8B66593A8C1282C8A71C379A04BA2EE3 ___u3;
  unsigned int cbDetails;
  void *paDetails;
};

/* 2428 */
struct IXMLDOMText
{
  IXMLDOMCharacterData baseclass_0;
};

/* 2429 */
struct IXMLDOMCDATASection
{
  IXMLDOMText baseclass_0;
};

/* 2430 */
struct tagWAVEINCAPS2W
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 2431 */
struct IEnumOLEVERB
{
  IUnknown baseclass_0;
};

/* 2432 */
struct AsyncIAdviseSink
{
  IUnknown baseclass_0;
};

/* 2433 */
struct AsyncIAdviseSink2
{
  AsyncIAdviseSink baseclass_0;
};

/* 2434 */
struct ILockBytes
{
  IUnknown baseclass_0;
};

/* 2435 */
struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS
{
  unsigned int cbSize;
  int fCommercial;
};

/* 2436 */
struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO
{
  _CRYPT_ALGORITHM_IDENTIFIER EncryptionAlgorithm;
  _CRYPTOAPI_BLOB EncryptedPrivateKey;
};

/* 2437 */
struct _USER_MARSHAL_CB
{
  unsigned int Flags;
  _MIDL_STUB_MESSAGE *pStubMsg;
  const char *pReserve;
  unsigned int Signature;
  _USER_MARSHAL_CB_TYPE CBType;
  const char *pFormat;
  const char *pTypeFormat;
};

/* 2438 */
struct __stat64
{
  unsigned int st_dev;
  unsigned __int16 st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  unsigned int st_rdev;
  __int64 st_size;
  __int64 st_atime;
  __int64 st_mtime;
  __int64 st_ctime;
};

/* 2439 */
struct OPENCARDNAMEA
{
  unsigned int dwStructSize;
  HWND__ *hwndOwner;
  unsigned int hSCardContext;
  char *lpstrGroupNames;
  unsigned int nMaxGroupNames;
  char *lpstrCardNames;
  unsigned int nMaxCardNames;
  _GUID *rgguidInterfaces;
  unsigned int cguidInterfaces;
  char *lpstrRdr;
  unsigned int nMaxRdr;
  char *lpstrCard;
  unsigned int nMaxCard;
  const char *lpstrTitle;
  unsigned int dwFlags;
  void *pvUserData;
  unsigned int dwShareMode;
  unsigned int dwPreferredProtocols;
  unsigned int dwActiveProtocol;
  unsigned int (__stdcall *lpfnConnect)(unsigned int, char *, char *, void *);
  int (__stdcall *lpfnCheck)(unsigned int, unsigned int, void *);
  void (__stdcall *lpfnDisconnect)(unsigned int, unsigned int, void *);
  unsigned int hCardHandle;
};

/* 2440 */
struct _PERF_COUNTER_BLOCK
{
  unsigned int ByteLength;
};

/* 2441 */
union $F0DEFC8ED02BA2E1A0DEF8313D2A6B62
{
  SCARD_T0_COMMAND CmdBytes;
  char rgbHeader[5];
};

/* 2442 */
struct SCARD_T0_REQUEST
{
  _SCARD_IO_REQUEST ioRequest;
  char bSw1;
  char bSw2;
  $F0DEFC8ED02BA2E1A0DEF8313D2A6B62 ___u3;
};

/* 2443 */
struct ICatalogFileInfo
{
  IUnknown baseclass_0;
};

/* 2444 */
struct RPC_CLIENT_INFORMATION1
{
  char *UserName;
  char *ComputerName;
  unsigned __int16 Privilege;
  unsigned int AuthFlags;
};

/* 2445 */
struct IBlockingLock
{
  IUnknown baseclass_0;
};

/* 2446 */
struct _CHANGER_SET_POSITION
{
  _CHANGER_ELEMENT Transport;
  _CHANGER_ELEMENT Destination;
  char Flip;
};

/* 2447 */
struct ICreateTypeInfo
{
  IUnknown baseclass_0;
};

/* 2448 */
struct ITimeAndNoticeControl
{
  IUnknown baseclass_0;
};

/* 2449 */
struct tagI_RpcProxyCallbackInterface
{
  int (__stdcall *IsValidMachineFn)(char *, char *, unsigned int);
  int (__stdcall *GetClientAddressFn)(void *, char *, unsigned int *);
  int (__stdcall *GetConnectionTimeoutFn)(unsigned int *);
};

/* 2450 */
struct _tagStartParam
{
  _GUID iid;
  IBindCtx *pIBindCtx;
  IUnknown *pItf;
};

/* 2451 */
struct _DEVICE_MEDIA_INFO::__unnamed::__unnamed::__unnamed::__unnamed
{
  char MediumType;
  char DensityCode;
};

/* 2452 */
union _DEVICE_MEDIA_INFO::__unnamed::__unnamed::__unnamed
{
  _DEVICE_MEDIA_INFO::__unnamed::__unnamed::__unnamed::__unnamed ScsiInformation;
};

/* 2453 */
struct tagPDEXW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  void *hDevMode;
  void *hDevNames;
  HDC__ *hDC;
  unsigned int Flags;
  unsigned int Flags2;
  unsigned int ExclusionFlags;
  unsigned int nPageRanges;
  unsigned int nMaxPageRanges;
  tagPRINTPAGERANGE *lpPageRanges;
  unsigned int nMinPage;
  unsigned int nMaxPage;
  unsigned int nCopies;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpPrintTemplateName;
  IUnknown *lpCallback;
  unsigned int nPropertyPages;
  _PSP **lphPropertyPages;
  unsigned int nStartPage;
  unsigned int dwResultAction;
};

/* 2454 */
struct AsyncIUnknown
{
  IUnknown baseclass_0;
};

/* 2455 */
struct IEnumFORMATETC
{
  IUnknown baseclass_0;
};

/* 2456 */
struct _tagCODEBASEHOLD
{
  unsigned int cbSize;
  unsigned __int16 *szDistUnit;
  unsigned __int16 *szCodeBase;
  unsigned int dwVersionMS;
  unsigned int dwVersionLS;
  unsigned int dwStyle;
};

/* 2457 */
struct _PRINTER_INFO_2W
{
  unsigned __int16 *pServerName;
  unsigned __int16 *pPrinterName;
  unsigned __int16 *pShareName;
  unsigned __int16 *pPortName;
  unsigned __int16 *pDriverName;
  unsigned __int16 *pComment;
  unsigned __int16 *pLocation;
  _devicemodeW *pDevMode;
  unsigned __int16 *pSepFile;
  unsigned __int16 *pPrintProcessor;
  unsigned __int16 *pDatatype;
  unsigned __int16 *pParameters;
  void *pSecurityDescriptor;
  unsigned int Attributes;
  unsigned int Priority;
  unsigned int DefaultPriority;
  unsigned int StartTime;
  unsigned int UntilTime;
  unsigned int Status;
  unsigned int cJobs;
  unsigned int AveragePPM;
};

/* 2458 */
struct _stati64
{
  unsigned int st_dev;
  unsigned __int16 st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  unsigned int st_rdev;
  __int64 st_size;
  int st_atime;
  int st_mtime;
  int st_ctime;
};

/* 2459 */
struct _CRYPT_URL_INFO
{
  unsigned int cbSize;
  unsigned int dwSyncDeltaTime;
  unsigned int cGroup;
  unsigned int *rgcGroupEntry;
};

/* 2460 */
struct IXMLDOMProcessingInstruction
{
  IXMLDOMNode baseclass_0;
};

/* 2461 */
struct ISurrogateService
{
  IUnknown baseclass_0;
};

/* 2462 */
struct IProcessLock
{
  IUnknown baseclass_0;
};

/* 2463 */
struct tagMONLINKSTRUCT
{
  unsigned int cb;
  unsigned int dwTime;
  void *hTask;
  int fEstablished;
  int fNoData;
  HSZ__ *hszSvc;
  HSZ__ *hszTopic;
  HSZ__ *hszItem;
  unsigned int wFmt;
  int fServer;
  HCONV__ *hConvServer;
  HCONV__ *hConvClient;
};

/* 2464 */
struct RPC_IF_ID_VECTOR
{
  unsigned int Count;
  _RPC_IF_ID *IfId[1];
};

/* 2465 */
struct _RPC_CLIENT_INTERFACE
{
  unsigned int Length;
  _RPC_SYNTAX_IDENTIFIER InterfaceId;
  _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  RPC_DISPATCH_TABLE *DispatchTable;
  unsigned int RpcProtseqEndpointCount;
  _RPC_PROTSEQ_ENDPOINT *RpcProtseqEndpoint;
  unsigned int Reserved;
  const void *InterpreterInfo;
  unsigned int Flags;
};

/* 2466 */
struct _CTL_USAGE_MATCH
{
  unsigned int dwType;
  _CTL_USAGE Usage;
};

/* 2467 */
struct DDEACK
{
  __int16 _bf0;
};

/* 2468 */
struct _RPC_BINDING_VECTOR
{
  unsigned int Count;
  void *BindingH[1];
};

/* 2469 */
struct RPC_IMPORT_CONTEXT_P
{
  void *LookupContext;
  void *ProposedHandle;
  _RPC_BINDING_VECTOR *Bindings;
};

/* 2470 */
struct tagMCI_ANIM_PLAY_PARMS
{
  unsigned int dwCallback;
  unsigned int dwFrom;
  unsigned int dwTo;
  unsigned int dwSpeed;
};

/* 2471 */
struct IGlobalInterfaceTable
{
  IUnknown baseclass_0;
};

/* 2472 */
struct IDirectWriterLock
{
  IUnknown baseclass_0;
};

/* 2473 */
struct SCARD_READERSTATEW
{
  const unsigned __int16 *szReader;
  void *pvUserData;
  unsigned int dwCurrentState;
  unsigned int dwEventState;
  unsigned int cbAtr;
  char rgbAtr[36];
};

/* 2474 */
struct tagContextProperty
{
  _GUID policyId;
  unsigned int flags;
  IUnknown *pUnk;
};

/* 2475 */
struct ILayoutStorage
{
  IUnknown baseclass_0;
};

/* 2476 */
struct _tagDATAINFO
{
  unsigned int ulTotalSize;
  unsigned int ulavrPacketSize;
  unsigned int ulConnectSpeed;
  unsigned int ulProcessorSpeed;
};

/* 2477 */
struct IXMLDocument
{
  IDispatch baseclass_0;
};

/* 2478 */
struct IXMLElement
{
  IDispatch baseclass_0;
};

/* 2479 */
struct UDATE
{
  _SYSTEMTIME st;
  unsigned __int16 wDayOfYear;
};

/* 2480 */
struct _DISK_LOGGING
{
  char Function;
  void *BufferAddress;
  unsigned int BufferSize;
};

/* 2481 */
struct CONFIRMSAFETY
{
  _GUID clsid;
  IUnknown *pUnk;
  unsigned int dwFlags;
};

/* 2482 */
struct IXMLDocument2
{
  IDispatch baseclass_0;
};

/* 2483 */
struct ICreateTypeInfo2
{
  ICreateTypeInfo baseclass_0;
};

/* 2484 */
struct _CERT_POLICY95_QUALIFIER1
{
  unsigned __int16 *pszPracticesReference;
  char *pszNoticeIdentifier;
  char *pszNSINoticeIdentifier;
  unsigned int cCPSURLs;
  _CPS_URLS *rgCPSURLs;
};

/* 2485 */
struct tagMCI_INFO_PARMSA
{
  unsigned int dwCallback;
  char *lpstrReturn;
  unsigned int dwRetSize;
};

/* 2486 */
struct IFillLockBytes
{
  IUnknown baseclass_0;
};

/* 2487 */
union $47E1DBAFB1D3CF8D27A981243BF325F6
{
  HKEY__ *hKeyBase;
  void *pvBase;
};

/* 2488 */
union $644E3772CE471009796AF877D4363EF9
{
  void *pvSystemStore;
  const char *pszSystemStore;
  const unsigned __int16 *pwszSystemStore;
};

/* 2489 */
struct _CERT_SYSTEM_STORE_RELOCATE_PARA
{
  $47E1DBAFB1D3CF8D27A981243BF325F6 ___u0;
  $644E3772CE471009796AF877D4363EF9 ___u1;
};

/* 2490 */
struct IInternetSession
{
  IUnknown baseclass_0;
};

/* 2491 */
struct IXMLDOMImplementation
{
  IDispatch baseclass_0;
};

/* 2492 */
struct _DISK_PERFORMANCE
{
  _LARGE_INTEGER BytesRead;
  _LARGE_INTEGER BytesWritten;
  _LARGE_INTEGER ReadTime;
  _LARGE_INTEGER WriteTime;
  _LARGE_INTEGER IdleTime;
  unsigned int ReadCount;
  unsigned int WriteCount;
  unsigned int QueueDepth;
  unsigned int SplitCount;
  _LARGE_INTEGER QueryTime;
  unsigned int StorageDeviceNumber;
  unsigned __int16 StorageManagerName[8];
};

/* 2493 */
struct _MIDL_SERVER_INFO_
{
  _MIDL_STUB_DESC *pStubDesc;
  int (__stdcall *const *DispatchTable)();
  const char *ProcString;
  const unsigned __int16 *FmtStringOffset;
  void (__stdcall *const *ThunkTable)(_MIDL_STUB_MESSAGE *);
  _RPC_SYNTAX_IDENTIFIER *pTransferSyntax;
  unsigned int nCount;
  _MIDL_SYNTAX_INFO *pSyntaxInfo;
};

/* 2494 */
struct IProgressNotify
{
  IUnknown baseclass_0;
};

/* 2495 */
struct _xml_error
{
  unsigned int _nLine;
  unsigned __int16 *_pchBuf;
  unsigned int _cchBuf;
  unsigned int _ich;
  unsigned __int16 *_pszFound;
  unsigned __int16 *_pszExpected;
  unsigned int _reserved1;
  unsigned int _reserved2;
};

/* 2496 */
struct DDEPOKE
{
  __int16 _bf0;
  __int16 cfFormat;
  char Value[1];
};

/* 2497 */
struct DDELN
{
  __int16 _bf0;
  __int16 cfFormat;
};

/* 2498 */
struct DDEUP
{
  __int16 _bf0;
  __int16 cfFormat;
  char rgb[1];
};

/* 2499 */
struct RPC_STATS_VECTOR
{
  unsigned int Count;
  unsigned int Stats[1];
};

/* 2500 */
struct tagRemSNB
{
  unsigned int ulCntStr;
  unsigned int ulCntChar;
  unsigned __int16 rgString[1];
};

/* 2501 */
struct _PUBLICKEYSTRUC
{
  char bType;
  char bVersion;
  unsigned __int16 reserved;
  unsigned int aiKeyAlg;
};

/* 2502 */
struct IOleInPlaceSite
{
  IOleWindow baseclass_0;
};

/* 2503 */
struct IRpcChannelBuffer2
{
  IRpcChannelBuffer baseclass_0;
};

/* 2504 */
struct AsyncIPipeByte
{
  IUnknown baseclass_0;
};

/* 2505 */
struct IOplockStorage
{
  IUnknown baseclass_0;
};

/* 2506 */
struct IEnumContextProps
{
  IUnknown baseclass_0;
};

/* 2507 */
struct IPrintDialogCallback
{
  IUnknown baseclass_0;
};

/* 2508 */
struct IRpcChannelBuffer3
{
  IRpcChannelBuffer2 baseclass_0;
};

/* 2509 */
struct IPipeByte
{
  IUnknown baseclass_0;
};

/* 2510 */
struct IAddrTrackingControl
{
  IUnknown baseclass_0;
};

/* 2511 */
struct IXTLRuntime
{
  IXMLDOMNode baseclass_0;
};

/* 2512 */
struct IRpcSyntaxNegotiate
{
  IUnknown baseclass_0;
};

/* 2513 */
struct ISynchronizeContainer
{
  IUnknown baseclass_0;
};

/* 2514 */
struct IHttpSecurity
{
  IWindowForBindingUI baseclass_0;
};

/* 2515 */
struct tagMCI_ANIM_UPDATE_PARMS
{
  unsigned int dwCallback;
  tagRECT rc;
  HDC__ *hDC;
};

/* 2516 */
struct IXMLDOMNotation
{
  IXMLDOMNode baseclass_0;
};

/* 2517 */
struct IXMLDOMEntity
{
  IXMLDOMNode baseclass_0;
};

/* 2518 */
struct _CRYPT_KEY_VERIFY_MESSAGE_PARA
{
  unsigned int cbSize;
  unsigned int dwMsgEncodingType;
  unsigned int hCryptProv;
};

/* 2519 */
struct IAsyncRpcChannelBuffer
{
  IRpcChannelBuffer2 baseclass_0;
};

/* 2520 */
struct IThumbnailExtractor
{
  IUnknown baseclass_0;
};

/* 2521 */
struct _CERT_CHAIN_ENGINE_CONFIG
{
  unsigned int cbSize;
  void *hRestrictedRoot;
  void *hRestrictedTrust;
  void *hRestrictedOther;
  unsigned int cAdditionalStore;
  void **rghAdditionalStore;
  unsigned int dwFlags;
  unsigned int dwUrlRetrievalTimeout;
  unsigned int MaximumCachedCertificates;
  unsigned int CycleDetectionModulus;
};

/* 2522 */
struct AsyncIPipeLong
{
  IUnknown baseclass_0;
};

/* 2523 */
struct ITypeFactory
{
  IUnknown baseclass_0;
};

/* 2524 */
struct IInternetHostSecurityManager
{
  IUnknown baseclass_0;
};

/* 2525 */
union _GDI_NONREMOTE::__MIDL_IWinTypes_0002
{
  int hInproc;
  _DWORD_BLOB *hRemote;
};

/* 2526 */
struct _GDI_NONREMOTE
{
  int fContext;
  _GDI_NONREMOTE::__MIDL_IWinTypes_0002 u;
};

/* 2527 */
struct ICreateErrorInfo
{
  IUnknown baseclass_0;
};

/* 2528 */
struct IInternalUnknown
{
  IUnknown baseclass_0;
};

/* 2529 */
struct IROTData
{
  IUnknown baseclass_0;
};

/* 2530 */
struct HMIXEROBJ__
{
  int unused;
};

/* 2531 */
struct IAuthenticate
{
  IUnknown baseclass_0;
};

/* 2532 */
struct IXMLError
{
  IUnknown baseclass_0;
};

/* 2533 */
struct ISoftDistExt
{
  IUnknown baseclass_0;
};

/* 2534 */
struct IXMLAttribute
{
  IDispatch baseclass_0;
};

/* 2535 */
struct IPipeLong
{
  IUnknown baseclass_0;
};

/* 2536 */
struct IPipeDouble
{
  IUnknown baseclass_0;
};

/* 2537 */
struct CEnsureHeapFree
{
  void *m_hHeap;
  void *m_pv;
};

/* 2538 */
struct CEnsureReleaseRegion
{
  void *m_pv;
};

/* 2539 */
struct CAcceptOverlapped
{
  COverlapped baseclass_0;
  CListener *m_Listener;
  unsigned int m_hSocket;
};

/* 2540 */
struct CStreamRecvOverlapped
{
  COverlapped baseclass_0;
};

/* 2541 */
struct CDatagramRecvOverlapped
{
  COverlapped baseclass_0;
};

/* 2542 */
struct CSendOverlapped
{
  COverlapped baseclass_0;
};

/* 2543 */
struct CIOWorker
{
  CThread baseclass_0;
  CCompletionHandler *m_SocketHandler;
};

/* 2544 */
struct std::pair<unsigned long,CServerRequest::RequestInfo>
{
  unsigned int first;
  CServerRequest::RequestInfo second;
};

/* 2545 */
struct std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >
{
  std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >Vtbl *vfptr;
  std::_Mutex _Mylock;
  wchar_t *_Gfirst;
  wchar_t *_Pfirst;
  wchar_t **_IGfirst;
  wchar_t **_IPfirst;
  wchar_t *_Gnext;
  wchar_t *_Pnext;
  wchar_t **_IGnext;
  wchar_t **_IPnext;
  int _Gcount;
  int _Pcount;
  int *_IGcount;
  int *_IPcount;
  std::locale *_Plocale;
};

/* 2546 */
struct std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >Vtbl
{
  void *(__thiscall *__vecDelDtor)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, unsigned int);
  unsigned __int16 (__thiscall *overflow)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, unsigned __int16);
  unsigned __int16 (__thiscall *pbackfail)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, unsigned __int16);
  int (__thiscall *showmanyc)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this);
  unsigned __int16 (__thiscall *underflow)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this);
  unsigned __int16 (__thiscall *uflow)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this);
  int (__thiscall *xsgetn)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, wchar_t *, int);
  int (__thiscall *xsputn)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, const wchar_t *, int);
  std::fpos<int> *(__thiscall *seekoff)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, std::fpos<int> *result, int, int, int);
  std::fpos<int> *(__thiscall *seekpos)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, std::fpos<int> *result, std::fpos<int>, int);
  std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *(__thiscall *setbuf)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, wchar_t *, int);
  int (__thiscall *sync)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this);
  void (__thiscall *imbue)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, std::locale *);
};

/* 2547 */
struct std::char_traits<wchar_t>
{
  char dummy[1];
};

/* 2548 */
struct std::ctype<wchar_t>
{
  std::ctype_base baseclass_0;
  _Ctypevec _Ctype;
  _Cvtvec _Cvt;
};

/* 2549 */
struct std::basic_ostream<wchar_t,std::char_traits<wchar_t> >
{
  char dummy[56];
};

/* 2550 */
struct std::basic_ios<wchar_t,std::char_traits<wchar_t> >
{
  std::ios_base baseclass_0;
  std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *_Mystrbuf;
  std::basic_ostream<wchar_t,std::char_traits<wchar_t> > *_Tiestr;
  wchar_t _Fillch;
};

/* 2551 */
struct std::basic_istream<wchar_t,std::char_traits<wchar_t> >
{
  _BYTE gap0[4];
  int _Chcount;
  _BYTE gap8[52];
};

/* 2552 */
struct std::basic_istream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base
{
  std::basic_istream<wchar_t,std::char_traits<wchar_t> > *_Myistr;
};

/* 2553 */
struct std::basic_istream<wchar_t,std::char_traits<wchar_t> >::sentry
{
  std::basic_istream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base baseclass_0;
  bool _Ok;
};

/* 2554 */
struct std::codecvt<wchar_t,char,int>
{
  std::codecvt_base baseclass_0;
  _Cvtvec _Cvt;
};

/* 2555 */
struct std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base
{
  std::basic_ostream<wchar_t,std::char_traits<wchar_t> > *_Myostr;
};

/* 2556 */
struct std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry
{
  std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base baseclass_0;
  bool _Ok;
};

/* 2557 */
struct std::_Fac_node
{
  std::_Fac_node *_Next;
  std::locale::facet *_Facptr;
};

/* 2558 */
struct std::money_base::pattern
{
  char field[4];
};

/* 2559 */
struct std::money_base
{
  std::locale::facet baseclass_0;
};

/* 2560 */
struct std::messages_base
{
  std::locale::facet baseclass_0;
};

/* 2561 */
struct std::time_base
{
  std::locale::facet baseclass_0;
};

/* 2562 */
struct _Init_atexit
{
  char dummy[1];
};

/* 2563 */
struct _FloatOutStruct
{
  __int16 exp;
  char sign;
  char ManLen;
  char man[22];
};

/* 2564 */
struct _LDOUBLE
{
  char ld[10];
};

/* 2565 */
struct _LDBL12
{
  char ld12[12];
};

/* 2566 */
struct FpFormatDescriptor
{
  int max_exp;
  int min_exp;
  int precision;
  int exp_width;
  int format_width;
  int bias;
};

/* 2567 */
struct DOUBLE
{
  long double x;
};

/* 2568 */
struct FLOAT
{
  float f;
};

/* 2569 */
struct _strflt
{
  int sign;
  int decpt;
  int flag;
  char *mantissa;
};

/* 2570 */
struct transitiondate
{
  int yr;
  int yd;
  int ms;
};

/* 2571 */
union FT
{
  unsigned __int64 ft_scalar;
  _FILETIME ft_struct;
};

/* 2572 */
struct __lc_time_data
{
  char *wday_abbr[7];
  char *wday[7];
  char *month_abbr[12];
  char *month[12];
  char *ampm[2];
  char *ww_sdatefmt;
  char *ww_ldatefmt;
  char *ww_timefmt;
  unsigned int ww_lcid;
  int ww_caltype;
  int refcount;
};

/* 2573 */
struct threadlocaleinfostruct
{
  int refcount;
  unsigned int lc_codepage;
  unsigned int lc_collate_cp;
  unsigned int lc_handle[6];
  int lc_clike;
  int mb_cur_max;
  int *lconv_intl_refcount;
  int *lconv_num_refcount;
  int *lconv_mon_refcount;
  lconv *lconv;
  lconv *lconv_intl;
  int *ctype1_refcount;
  unsigned __int16 *ctype1;
  const unsigned __int16 *pctype;
  __lc_time_data *lc_time_curr;
  __lc_time_data *lc_time_intl;
};

/* 2574 */
struct threadmbcinfostruct
{
  int refcount;
  int mbcodepage;
  int ismbcodepage;
  int mblcid;
  unsigned __int16 mbulinfo[6];
  char mbctype[257];
  char mbcasemap[256];
};

/* 2575 */
struct _tiddata
{
  unsigned int _tid;
  unsigned int _thandle;
  int _terrno;
  unsigned int _tdoserrno;
  unsigned int _fpds;
  unsigned int _holdrand;
  char *_token;
  unsigned __int16 *_wtoken;
  char *_mtoken;
  char *_errmsg;
  unsigned __int16 *_werrmsg;
  char *_namebuf0;
  unsigned __int16 *_wnamebuf0;
  char *_namebuf1;
  unsigned __int16 *_wnamebuf1;
  char *_asctimebuf;
  unsigned __int16 *_wasctimebuf;
  void *_gmtimebuf;
  char *_cvtbuf;
  void *_initaddr;
  void *_initarg;
  void *_pxcptacttab;
  void *_tpxcptinfoptrs;
  int _tfpecode;
  threadmbcinfostruct *ptmbcinfo;
  threadlocaleinfostruct *ptlocinfo;
  unsigned int _NLG_dwCode;
  void *_terminate;
  void *_unexpected;
  void *_translator;
  void *_purecall;
  void *_curexception;
  void *_curcontext;
  int _ProcessingThrow;
  void *_pFrameInfoChain;
};

/* 2576 */
union $C8014B43F160BFD769FAE3F15553333C
{
  char sz[512];
};

/* 2577 */
union $519E2A0ABDBAFFC353FD5D86715BA24D
{
  char *sz;
  unsigned __int16 *wz;
};

/* 2578 */
struct _count_string
{
  __int16 Length;
  __int16 MaximumLength;
  char *Buffer;
};

/* 2579 */
struct ioinfo
{
  int osfhnd;
  char osfile;
  char pipech;
  int lockinitflag;
  _RTL_CRITICAL_SECTION lock;
};

/* 2580 */
struct _XCPT_ACTION
{
  unsigned int XcptNum;
  int SigNum;
  void (__cdecl *XcptAction)(int);
};

/* 2581 */
struct $C87D4DECBB21298C4EE0D0813BC7EFB1
{
  _RTL_CRITICAL_SECTION *lock;
  $1DD7A03358E0D01DD359262876E6A0F0 kind;
};

/* 2582 */
struct rterrmsgs
{
  int rterrno;
  char *rterrtxt;
};

/* 2583 */
struct tagLC_ID
{
  unsigned __int16 wLanguage;
  unsigned __int16 wCountry;
  unsigned __int16 wCodePage;
};

/* 2584 */
struct tagLC_STRINGS
{
  char szLanguage[64];
  char szCountry[64];
  char szCodePage[16];
};

/* 2585 */
struct _is_ctype_compatible
{
  unsigned int id;
  int is_clike;
};

/* 2586 */
struct tagRGLOCINFO
{
  unsigned int lcid;
  char chILanguage[8];
  char *pchSEngLanguage;
  char chSAbbrevLangName[4];
  char *pchSEngCountry;
  char chSAbbrevCtryName[4];
  char chIDefaultCodepage[8];
  char chIDefaultAnsiCodepage[8];
};

/* 2587 */
struct tagLOCALETAB
{
  char *szName;
  char chAbbrev[4];
};

/* 2588 */
struct IMAGE_LOAD_CONFIG_DIRECTORY32_2
{
  unsigned int Size;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int GlobalFlagsClear;
  unsigned int GlobalFlagsSet;
  unsigned int CriticalSectionDefaultTimeout;
  unsigned int DeCommitFreeBlockThreshold;
  unsigned int DeCommitTotalFreeThreshold;
  unsigned int LockPrefixTable;
  unsigned int MaximumAllocationSize;
  unsigned int VirtualMemoryThreshold;
  unsigned int ProcessHeapFlags;
  unsigned int ProcessAffinityMask;
  unsigned __int16 CSDVersion;
  unsigned __int16 Reserved1;
  unsigned int EditList;
  unsigned int *SecurityCookie;
  void **SEHandlerTable;
  unsigned int SEHandlerCount;
};

/* 2589 */
struct __declspec(align(32)) _JMP_BUF
{
  unsigned int saved_ebp;
  unsigned int saved_ebx;
  unsigned int saved_edi;
  unsigned int saved_esi;
  unsigned int saved_esp;
  unsigned int saved_return;
  unsigned int saved_xregistration;
  unsigned int saved_trylevel;
  unsigned int version_cookie;
  unsigned int unwind_func;
  unsigned int unwind_data;
};

/* 2590 */
struct _SCOPETABLE_ENTRY
{
  int EnclosingLevel;
  void *FilterFunc;
  void *HandlerFunc;
};

/* 2591 */
struct _EXCEPTION_REGISTRATION
{
  unsigned int prev;
  unsigned int handler;
};

/* 2592 */
struct _NLG_INFO
{
  unsigned int dwSig;
  unsigned int uoffDestination;
  unsigned int dwCode;
  unsigned int uoffFramePointer;
};

/* 2593 */
struct _C9_EXCEPTION_REGISTRATION
{
  unsigned int er_prev;
  unsigned int er_handler;
  unsigned int scopetable;
  unsigned int trylevel;
};

/* 2594 */
struct _EXCEPTION_REGISTRATION_COMMON
{
  _BYTE gap0[8];
  unsigned int scopetable;
  unsigned int trylevel;
};

/* 2595 */
struct _EH3_EXCEPTION_REGISTRATION
{
  _EH3_EXCEPTION_REGISTRATION *Next;
  void *ExceptionHandler;
  _SCOPETABLE_ENTRY *ScopeTable;
  unsigned int TryLevel;
};

/* 2596 */
struct code_page_info
{
  int code_page;
  unsigned __int16 mbulinfo[6];
  char rgrange[4][8];
};

/* 2597 */
struct $9EDDA679613D7E4E5E37CB563F432A3F
{
  unsigned int lowerhalf;
  int upperhalf;
};

/* 2598 */
union doubleint
{
  __int64 bigint;
  $9EDDA679613D7E4E5E37CB563F432A3F twoints;
};

/* 2599 */
struct tagEntry
{
  int sizeFront;
  tagEntry *pEntryNext;
  tagEntry *pEntryPrev;
};

/* 2600 */
struct tagListHead
{
  tagEntry *pEntryNext;
  tagEntry *pEntryPrev;
};

/* 2601 */
struct tagGroup
{
  int cntEntries;
  tagListHead listHead[64];
};

/* 2602 */
struct tagRegion
{
  int indGroupUse;
  char cntRegionSize[64];
  unsigned int bitvGroupHi[32];
  unsigned int bitvGroupLo[32];
  tagGroup grpHeadList[32];
};

/* 2603 */
struct tagHeader
{
  unsigned int bitvEntryHi;
  unsigned int bitvEntryLo;
  unsigned int bitvCommit;
  void *pHeapData;
  tagRegion *pRegion;
};

/* 2604 */
struct tagEntryEnd
{
  int sizeBack;
};

/* 2605 */
struct TypeDescriptor
{
  unsigned int hash;
  void *spare;
  char name[];
};

/* 2606 */
struct PMD
{
  int mdisp;
  int pdisp;
  int vdisp;
};

/* 2607 */
struct _s_CatchableType
{
  unsigned int properties;
  TypeDescriptor *pType;
  PMD thisDisplacement;
  int sizeOrOffset;
  void (__cdecl *copyFunction)();
};

/* 2608 */
struct _s_CatchableTypeArray
{
  int nCatchableTypes;
  _s_CatchableType *arrayOfCatchableTypes[];
};

/* 2609 */
struct _s_HandlerType
{
  unsigned int adjectives;
  TypeDescriptor *pType;
  int dispCatchObj;
  void *addressOfHandler;
};

/* 2610 */
struct _s_ESTypeList
{
  int nCount;
  _s_HandlerType *pTypeArray;
};

/* 2611 */
struct _s_ThrowInfo
{
  unsigned int attributes;
  void (__cdecl *pmfnUnwind)();
  int (__cdecl *pForwardCompat)();
  _s_CatchableTypeArray *pCatchableTypeArray;
};

/* 2612 */
struct _s_UnwindMapEntry
{
  int toState;
  void (__cdecl *action)();
};

/* 2613 */
struct _s_TryBlockMapEntry
{
  int tryLow;
  int tryHigh;
  int catchHigh;
  int nCatches;
  _s_HandlerType *pHandlerArray;
};

/* 2614 */
struct _s_FuncInfo
{
  int _bf0;
  int maxState;
  _s_UnwindMapEntry *pUnwindMap;
  unsigned int nTryBlocks;
  _s_TryBlockMapEntry *pTryBlockMap;
  unsigned int nIPMapEntries;
  void *pIPtoStateMap;
  _s_ESTypeList *pESTypeList;
};

/* 2615 */
struct EHExceptionRecord::EHParameters
{
  unsigned int magicNumber;
  void *pExceptionObject;
  _s_ThrowInfo *pThrowInfo;
};

/* 2616 */
struct EHExceptionRecord
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  void *ExceptionAddress;
  unsigned int NumberParameters;
  EHExceptionRecord::EHParameters params;
};

/* 2617 */
struct EHRegistrationNode
{
  EHRegistrationNode *pNext;
  void *frameHandler;
  int state;
};

/* 2618 */
struct CatchGuardRN
{
  EHRegistrationNode *pNext;
  void *pFrameHandler;
  unsigned int RandomCookie;
  _s_FuncInfo *pFuncInfo;
  EHRegistrationNode *pRN;
  int CatchDepth;
};

/* 2619 */
struct TranslatorGuardRN
{
  EHRegistrationNode *pNext;
  void *pFrameHandler;
  unsigned int RandomCookie;
  _s_FuncInfo *pFuncInfo;
  EHRegistrationNode *pRN;
  int CatchDepth;
  EHRegistrationNode *pMarkerRN;
  void *ESP;
  void *EBP;
  int DidUnwind;
};

/* 2620 */
struct FrameInfo
{
  void *pExceptionObject;
  FrameInfo *pNext;
};

/* 2621 */
struct __JUMP_BUFFER
{
  unsigned int Ebp;
  unsigned int Ebx;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Esp;
  unsigned int Eip;
  unsigned int Registration;
  unsigned int TryLevel;
  unsigned int Cookie;
  unsigned int UnwindFunc;
  unsigned int UnwindData[6];
};

/* 2622 */
struct bad_typeid
{
  exception baseclass_0;
};

/* 2623 */
struct __non_rtti_object
{
  bad_typeid baseclass_0;
};

/* 2624 */
struct errentry
{
  unsigned int oscode;
  int errnocode;
};

/* 2625 */ typedef tagMSGBOXPARAMSW *PMSGBOXPARAMSW;

/* 2626 */ typedef _MESSAGE_RESOURCE_ENTRY *PMESSAGE_RESOURCE_ENTRY;

/* 2627 */ typedef void (__stdcall *WAITORTIMERCALLBACKFUNC)(void *, char);

/* 2628 */ typedef HDC__ *HDC;

/* 2629 */ typedef tagAUXCAPS2A *NPAUXCAPS2A;

/* 2630 */ typedef tagMIXERCAPSA *PMIXERCAPS;

/* 2631 */ typedef tagEMRSELECTCLIPPATH *PEMRSELECTCLIPPATH;

/* 2632 */ typedef tagAUXCAPS2A *LPAUXCAPS2A;

/* 2633 */ typedef _PORT_INFO_1W *LPPORT_INFO_1W;

/* 2634 */ typedef _IMAGE_DEBUG_DIRECTORY *PIMAGE_DEBUG_DIRECTORY;

/* 2635 */ typedef _PORT_INFO_3W *LPPORT_INFO_3W;

/* 2636 */ typedef _PRINTER_INFO_1A *LPPRINTER_INFO_1A;

/* 2637 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_FIND_CERT)(void *, _CERT_STORE_PROV_FIND_INFO *, _CERT_CONTEXT *, unsigned int, void **, _CERT_CONTEXT **);

/* 2638 */ typedef _PORT_INFO_2W *LPPORT_INFO_2W;

/* 2639 */ typedef _CTL_ENTRY *PCTL_ENTRY;

/* 2640 */ typedef tagAUXCAPS2W *LPAUXCAPS2W;

/* 2641 */ typedef _DOC_INFO_3A *PDOC_INFO_3A;

/* 2642 */ typedef tagEVENTMSG *PEVENTMSGMSG;

/* 2643 */ typedef unsigned __int16 wchar_t;

/* 2644 */ typedef tagAUXCAPS2W *NPAUXCAPS2W;

/* 2645 */ typedef char *LPBYTE;

/* 2646 */ typedef IUnknown *LPUNKNOWN;

/* 2647 */ typedef _NON_PAGED_DEBUG_INFO *PNON_PAGED_DEBUG_INFO;

/* 2648 */ typedef tagMIXERCAPS2A *PMIXERCAPS2;

/* 2649 */ typedef void __stdcall RPCNOTIFICATION_ROUTINE(_RPC_ASYNC_STATE *, void *, _RPC_ASYNC_EVENT);

/* 2650 */ typedef unsigned int HCRYPTHASH;

/* 2651 */ typedef unsigned int (__stdcall *LPOFNHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 2652 */ typedef SCARD_READERSTATEA *LPSCARD_READERSTATEA;

/* 2653 */ typedef _IMAGE_RESOURCE_DIRECTORY_ENTRY *PIMAGE_RESOURCE_DIRECTORY_ENTRY;

/* 2654 */ typedef _PRINTER_INFO_1W *LPPRINTER_INFO_1W;

/* 2655 */ typedef tagIMEMENUITEMINFOA *PIMEMENUITEMINFO;

/* 2656 */ typedef sockaddr *PSOCKADDR;

/* 2657 */ typedef tagEMRLINETO *PEMRLINETO;

/* 2658 */ typedef tagEVENTMSG *PEVENTMSG;

/* 2659 */ typedef IAddrExclusionControl *LPADDREXCLUSIONCONTROL;

/* 2660 */ typedef HKEY__ **PHKEY;

/* 2661 */ typedef tagMCI_LOAD_PARMSW *LPMCI_LOAD_PARMSW;

/* 2662 */ typedef _DISK_GEOMETRY *PDISK_GEOMETRY;

/* 2663 */ typedef tagHIGHCONTRASTA *LPHIGHCONTRASTA;

/* 2664 */ typedef unsigned __int16 PROPVAR_PAD2;

/* 2665 */ typedef _RIP_INFO *LPRIP_INFO;

/* 2666 */ typedef tagKERNINGPAIR *LPKERNINGPAIR;

/* 2667 */ typedef _OSVERSIONINFOW *POSVERSIONINFOW;

/* 2668 */ typedef tagMCI_OVLY_LOAD_PARMSA *LPMCI_OVLY_LOAD_PARMS;

/* 2669 */ typedef tagVARDESC *LPVARDESC;

/* 2670 */ typedef tagMCI_WAVE_DELETE_PARMS *PMCI_WAVE_DELETE_PARMS;

/* 2671 */ typedef int *LPFXPT16DOT16;

/* 2672 */ typedef _PRINTER_ENUM_VALUESW *LPPRINTER_ENUM_VALUESW;

/* 2673 */ typedef _DOC_INFO_2A *PDOC_INFO_2A;

/* 2674 */ typedef _PROVIDOR_INFO_2W *LPPROVIDOR_INFO_2W;

/* 2675 */ typedef _PORT_INFO_3A *PPORT_INFO_3;

/* 2676 */ typedef _PROVIDOR_INFO_1W *LPPROVIDOR_INFO_1W;

/* 2677 */ typedef tagHIGHCONTRASTW *LPHIGHCONTRASTW;

/* 2678 */ typedef tagMCI_LOAD_PARMSA *LPMCI_LOAD_PARMSA;

/* 2679 */ typedef tagEMRPOLYLINE *PEMRPOLYBEZIER;

/* 2680 */ typedef void (__stdcall *PIMAGE_TLS_CALLBACK)(void *, unsigned int, void *);

/* 2681 */ typedef HWINSTA__ *HWINSTA;

/* 2682 */ typedef _CRYPT_HASH_MESSAGE_PARA *PCRYPT_HASH_MESSAGE_PARA;

/* 2683 */ typedef _OSVERSIONINFOA *POSVERSIONINFOA;

/* 2684 */ typedef unsigned __int64 *PDWORDLONG;

/* 2685 */ typedef _IMAGE_FUNCTION_ENTRY *PIMAGE_FUNCTION_ENTRY;

/* 2686 */ typedef tagMINMAXINFO *LPMINMAXINFO;

/* 2687 */ typedef _currencyfmtA *LPCURRENCYFMTA;

/* 2688 */ typedef _ADDJOB_INFO_1A *LPADDJOB_INFO_1;

/* 2689 */ typedef _RPC_PROTSEQ_ENDPOINT *PRPC_PROTSEQ_ENDPOINT;

/* 2690 */ typedef ITypeLib2 *LPTYPELIB2;

/* 2691 */ typedef tagMIXERCAPSA *PMIXERCAPSA;

/* 2692 */ typedef tagMIXERLINEA *LPMIXERLINEA;

/* 2693 */ typedef tagAUXCAPS2A *NPAUXCAPS2;

/* 2694 */ typedef tagEMREXTFLOODFILL *PEMREXTFLOODFILL;

/* 2695 */ typedef tagAUXCAPS2A *LPAUXCAPS2;

/* 2696 */ typedef _BIDI_RESPONSE_CONTAINER *PBIDI_RESPONSE_CONTAINER;

/* 2697 */ typedef _TRIVERTEX *PTRIVERTEX;

/* 2698 */ typedef _BIN_RANGE *PBIN_RANGE;

/* 2699 */ typedef tagIMEMENUITEMINFOW *PIMEMENUITEMINFOW;

/* 2700 */ typedef _FSCTL_QUERY_FAT_BPB_BUFFER *PFSCTL_QUERY_FAT_BPB_BUFFER;

/* 2701 */ typedef void *LOCALHANDLE;

/* 2702 */ typedef _PRINTER_INFO_1A *LPPRINTER_INFO_1;

/* 2703 */ typedef int (__stdcall *FARPROC)();

/* 2704 */ typedef _IMAGE_EXPORT_DIRECTORY *PIMAGE_EXPORT_DIRECTORY;

/* 2705 */ typedef tagMIXERCAPSW *PMIXERCAPSW;

/* 2706 */ typedef _DOC_INFO_1A *PDOC_INFO_1A;

/* 2707 */ typedef _BINARY_CONTAINER *PBINARY_CONTAINER;

/* 2708 */ typedef _SYSTEM_INFO *LPSYSTEM_INFO;

/* 2709 */ typedef DLGTEMPLATE *LPDLGTEMPLATEA;

/* 2710 */ typedef _EXCEPTION_RECORD *LPEXCEPTION_RECORD;

/* 2711 */ typedef _BIDI_RESPONSE_CONTAINER *LPBIDI_RESPONSE_CONTAINER;

/* 2712 */ typedef tagIMEMENUITEMINFOA *PIMEMENUITEMINFOA;

/* 2713 */ typedef tagOLERENDER *LPOLERENDER;

/* 2714 */ typedef tagMCI_OVLY_WINDOW_PARMSA *LPMCI_OVLY_WINDOW_PARMSA;

/* 2715 */ typedef POWER_ACTION *PPOWER_ACTION;

/* 2716 */ typedef tagGUITHREADINFO *LPGUITHREADINFO;

/* 2717 */ typedef tagHIGHCONTRASTA *LPHIGHCONTRAST;

/* 2718 */ typedef _PORT_INFO_3W *PPORT_INFO_3W;

/* 2719 */ typedef _PRINTER_INFO_8A *PPRINTER_INFO_8;

/* 2720 */ typedef _PRINTER_INFO_9A *PPRINTER_INFO_9;

/* 2721 */ typedef _PRINTER_INFO_6 *PPRINTER_INFO_6;

/* 2722 */ typedef void *HCERTSTOREPROV;

/* 2723 */ typedef _PRINTER_INFO_7A *PPRINTER_INFO_7;

/* 2724 */ typedef _PRINTER_INFO_4A *PPRINTER_INFO_4;

/* 2725 */ typedef _PRINTER_INFO_5A *PPRINTER_INFO_5;

/* 2726 */ typedef _PRINTER_INFO_2A *PPRINTER_INFO_2;

/* 2727 */ typedef _PRINTER_INFO_3 *PPRINTER_INFO_3;

/* 2728 */ typedef tagGCP_RESULTSW *LPGCP_RESULTSW;

/* 2729 */ typedef tagHELPINFO *LPHELPINFO;

/* 2730 */ typedef _PRINTER_INFO_1A *PPRINTER_INFO_1;

/* 2731 */ typedef char *PTCH;

/* 2732 */ typedef tagCANDIDATELIST *PCANDIDATELIST;

/* 2733 */ typedef _NCB *PNCB;

/* 2734 */ typedef _STARTUPINFOA *LPSTARTUPINFOA;

/* 2735 */ typedef _PORT_INFO_3A *PPORT_INFO_3A;

/* 2736 */ typedef tagMCI_LOAD_PARMSA *LPMCI_LOAD_PARMS;

/* 2737 */ typedef unsigned __int64 *PUINT64;

/* 2738 */ typedef tagBITMAP *NPBITMAP;

/* 2739 */ typedef tagBITMAP *LPBITMAP;

/* 2740 */ typedef tagMCI_SYSINFO_PARMSW *LPMCI_SYSINFO_PARMSW;

/* 2741 */ typedef _OSVERSIONINFOA *POSVERSIONINFO;

/* 2742 */ typedef void (__stdcall *WSPIAPI_PFREEADDRINFO)(addrinfo *);

/* 2743 */ typedef tagDDEML_MSG_HOOK_DATA *PDDEML_MSG_HOOK_DATA;

/* 2744 */ typedef int (__stdcall *DRIVERPROC)(unsigned int, HDRVR__ *, unsigned int, int, int);

/* 2745 */ typedef void *HGDIOBJ;

/* 2746 */ typedef _userHMETAFILE *wireHMETAFILE;

/* 2747 */ typedef _CMSG_CTRL_DECRYPT_PARA *PCMSG_CTRL_DECRYPT_PARA;

/* 2748 */ typedef _CMSG_CONTENT_ENCRYPT_INFO *PCMSG_CONTENT_ENCRYPT_INFO;

/* 2749 */ typedef _GET_CHANGER_PARAMETERS *PGET_CHANGER_PARAMETERS;

/* 2750 */ typedef tagEMRSTRETCHDIBITS *PEMRSTRETCHDIBITS;

/* 2751 */ typedef _WSAServiceClassInfoA *LPWSASERVICECLASSINFOA;

/* 2752 */ typedef _JOBOBJECT_BASIC_LIMIT_INFORMATION *PJOBOBJECT_BASIC_LIMIT_INFORMATION;

/* 2753 */ typedef tagMIXERCAPS2A *LPMIXERCAPS2;

/* 2754 */ typedef _OSVERSIONINFOEXA *POSVERSIONINFOEX;

/* 2755 */ typedef _CERT_CHAIN_ENGINE_CONFIG *PCERT_CHAIN_ENGINE_CONFIG;

/* 2756 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_FREE_FIND_CTL)(void *, _CTL_CONTEXT *, void *, unsigned int);

/* 2757 */ typedef _WSACOMPLETIONTYPE *PWSACOMPLETIONTYPE;

/* 2758 */ typedef tagSCROLLBARINFO *PSCROLLBARINFO;

/* 2759 */ typedef IInternetProtocol *LPIINTERNETPROTOCOL;

/* 2760 */ typedef _HTTPSPolicyCallbackData *PHTTPSPolicyCallbackData;

/* 2761 */ typedef fd_set *PFD_SET;

/* 2762 */ typedef _CERT_X942_DH_VALIDATION_PARAMS *PCERT_X942_DH_VALIDATION_PARAMS;

/* 2763 */ typedef tagMDICREATESTRUCTA *LPMDICREATESTRUCTA;

/* 2764 */ typedef _CERT_ALT_NAME_INFO *PCERT_ALT_NAME_INFO;

/* 2765 */ typedef _MONITOR_INFO_2W *LPMONITOR_INFO_2W;

/* 2766 */ typedef unsigned int __stdcall PM_QUERY_PROC(unsigned int *, void **, unsigned int *, unsigned int *);

/* 2767 */ typedef HMIXEROBJ__ **LPHMIXEROBJ;

/* 2768 */ typedef _REASSIGN_BLOCKS *PREASSIGN_BLOCKS;

/* 2769 */ typedef unsigned int *PULONG32;

/* 2770 */ typedef void (__stdcall *LPSERVICE_MAIN_FUNCTIONW)(unsigned int, unsigned __int16 **);

/* 2771 */ typedef tagHeader *PHEADER;

/* 2772 */ typedef IAddrTrackingControl *LPADDRTRACKINGCONTROL;

/* 2773 */ typedef _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY *PCRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;

/* 2774 */ typedef tagPARAMDESC *LPPARAMDESC;

/* 2775 */ typedef IErrorLog *LPERRORLOG;

/* 2776 */ typedef HCONV__ *HCONV;

/* 2777 */ typedef tagLOGCOLORSPACEW *LPLOGCOLORSPACEW;

/* 2778 */ typedef tagSAFEARRAYBOUND *LPSAFEARRAYBOUND;

/* 2779 */ typedef tagEMRTEXT *PEMRTEXT;

/* 2780 */ typedef int *PBOOL;

/* 2781 */ typedef _MONITOR_INFO_2A *LPMONITOR_INFO_2A;

/* 2782 */ typedef ARRAY_INFO *PARRAY_INFO;

/* 2783 */ typedef _UNIVERSAL_NAME_INFOA *LPUNIVERSAL_NAME_INFO;

/* 2784 */ typedef HICON__ *HCURSOR;

/* 2785 */ typedef tagPOINT *PPOINT;

/* 2786 */ typedef _IMAGE_AUX_SYMBOL *PIMAGE_AUX_SYMBOL;

/* 2787 */ typedef protoent *LPPROTOENT;

/* 2788 */ typedef bool _Bool;

/* 2789 */ typedef _PERF_BIN *PPERF_BIN;

/* 2790 */ typedef _OUTLINETEXTMETRICW *NPOUTLINETEXTMETRICW;

/* 2791 */ typedef _RTL_VERIFIER_DLL_DESCRIPTOR *PRTL_VERIFIER_DLL_DESCRIPTOR;

/* 2792 */ typedef tagVARIANT *LPVARIANT;

/* 2793 */ typedef _OUTLINETEXTMETRICW *LPOUTLINETEXTMETRICW;

/* 2794 */ typedef char UINT8;

/* 2795 */ typedef char *PINT8;

/* 2796 */ typedef tagMIXERCAPS2W *LPMIXERCAPS2W;

/* 2797 */ typedef _OSVERSIONINFOEXW *POSVERSIONINFOEXW;

/* 2798 */ typedef void (__stdcall *PFN_RPCNOTIFICATION_ROUTINE)(_RPC_ASYNC_STATE *, void *, _RPC_ASYNC_EVENT);

/* 2799 */ typedef unsigned int (__stdcall *USER_MARSHAL_SIZING_ROUTINE)(unsigned int *, unsigned int, void *);

/* 2800 */ typedef _CRL_ENTRY *PCRL_ENTRY;

/* 2801 */ typedef unsigned __int16 DBTYPE;

/* 2802 */ typedef DLGITEMTEMPLATE *LPDLGITEMTEMPLATEW;

/* 2803 */ typedef IClassFactory *LPCLASSFACTORY;

/* 2804 */ typedef _OSVERSIONINFOEXW *LPOSVERSIONINFOEXW;

/* 2805 */ typedef tagEMRSETARCDIRECTION *PEMRSETARCDIRECTION;

/* 2806 */ typedef tagMIXERCAPS2A *LPMIXERCAPS2A;

/* 2807 */ typedef _OSVERSIONINFOEXA *POSVERSIONINFOEXA;

/* 2808 */ typedef tagEMRGRADIENTFILL *PEMRGRADIENTFILL;

/* 2809 */ typedef _TOKEN_DEFAULT_DACL *PTOKEN_DEFAULT_DACL;

/* 2810 */ typedef float *PFLOAT;

/* 2811 */ typedef unsigned int UINT;

/* 2812 */ typedef void (__stdcall *LPDRVCALLBACK)(HDRVR__ *, unsigned int, unsigned int, unsigned int, unsigned int);

/* 2813 */ typedef unsigned int *PULONG;

/* 2814 */ typedef tagLOCALESIGNATURE *PLOCALESIGNATURE;

/* 2815 */ typedef unsigned __int16 BAD_TRACK_NUMBER;

/* 2816 */ typedef _ACCESS_DENIED_CALLBACK_ACE *PACCESS_DENIED_CALLBACK_ACE;

/* 2817 */ typedef int *PINT;

/* 2818 */ typedef tagMINIMIZEDMETRICS *PMINIMIZEDMETRICS;

/* 2819 */ typedef _CMSG_SIGNER_ENCODE_INFO *PCMSG_SIGNER_ENCODE_INFO;

/* 2820 */ typedef tagEMRPOLYLINE *PEMRPOLYLINE;

/* 2821 */ typedef tagMCI_WAVE_SET_PARMS *LPMCI_WAVE_SET_PARMS;

/* 2822 */ typedef tagLC_STRINGS *LPLC_STRINGS;

/* 2823 */ typedef hostent *LPHOSTENT;

/* 2824 */ typedef _EFS_HASH_BLOB *PEFS_HASH_BLOB;

/* 2825 */ typedef _GLYPHMETRICS *LPGLYPHMETRICS;

/* 2826 */ typedef _QOS_SD_MODE *LPQOS_SD_MODE;

/* 2827 */ typedef unsigned int (__stdcall *PFNRECONCILEPROFILEA)(const char *, const char *, unsigned int);

/* 2828 */ typedef _CMSG_KEY_AGREE_RECIPIENT_INFO *PCMSG_KEY_AGREE_RECIPIENT_INFO;

/* 2829 */ typedef tagPOINTS *PPOINTS;

/* 2830 */ typedef HRGN__ *HRGN;

/* 2831 */ typedef unsigned int EXECUTION_STATE;

/* 2832 */ typedef unsigned int RPC_LENGTH;

/* 2833 */ typedef _MONITOR_INFO_2A *LPMONITOR_INFO_2;

/* 2834 */ typedef _POINTL *PPOINTL;

/* 2835 */ typedef tagWNDCLASSEXW *PWNDCLASSEXW;

/* 2836 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_CONTROL)(void *, unsigned int, unsigned int, const void *);

/* 2837 */ typedef _SERVICE_DESCRIPTIONW *LPSERVICE_DESCRIPTIONW;

/* 2838 */ typedef _PRINTPROCESSOR_CAPS_1 *PPRINTPROCESSOR_CAPS_1;

/* 2839 */ typedef _numberfmtW *LPNUMBERFMTW;

/* 2840 */ typedef tMIXERCONTROLDETAILS_BOOLEAN *PMIXERCONTROLDETAILS_BOOLEAN;

/* 2841 */ typedef _SOCKET_ADDRESS *PSOCKET_ADDRESS;

/* 2842 */ typedef unsigned int FOURCC;

/* 2843 */ typedef midihdr_tag *LPMIDIHDR;

/* 2844 */ typedef _FLOAT128 *PFLOAT128;

/* 2845 */ typedef _IMAGE_RESOURCE_DIR_STRING_U *PIMAGE_RESOURCE_DIR_STRING_U;

/* 2846 */ typedef _IMAGE_THUNK_DATA32 *PIMAGE_THUNK_DATA;

/* 2847 */ typedef _CHANGER_DEVICE_PROBLEM_TYPE *PCHANGER_DEVICE_PROBLEM_TYPE;

/* 2848 */ typedef midihdr_tag *NPMIDIHDR;

/* 2849 */ typedef int *LPFXPT2DOT30;

/* 2850 */ typedef HMONITOR__ *HMONITOR;

/* 2851 */ typedef tagHELPWININFOA *PHELPWININFOA;

/* 2852 */ typedef HBRUSH__ *HBRUSH;

/* 2853 */ typedef _RGNDATAHEADER *PRGNDATAHEADER;

/* 2854 */ typedef void (__stdcall *LPFN_GETACCEPTEXSOCKADDRS)(void *, unsigned int, unsigned int, unsigned int, sockaddr **, int *, sockaddr **, int *);

/* 2855 */ typedef tagIMECHARPOSITION *PIMECHARPOSITION;

/* 2856 */ typedef _QUERY_SERVICE_LOCK_STATUSA *LPQUERY_SERVICE_LOCK_STATUS;

/* 2857 */ typedef _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE;

/* 2858 */ typedef _CROSS_CERT_DIST_POINTS_INFO *PCROSS_CERT_DIST_POINTS_INFO;

/* 2859 */ typedef IGlobalInterfaceTable *LPGLOBALINTERFACETABLE;

/* 2860 */ typedef _SE_IMPERSONATION_STATE *PSE_IMPERSONATION_STATE;

/* 2861 */ typedef tagMETAHEADER *PMETAHEADER;

/* 2862 */ typedef _DISCDLGSTRUCTA *LPDISCDLGSTRUCTA;

/* 2863 */ typedef int LCSCSTYPE;

/* 2864 */ typedef _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO *PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;

/* 2865 */ typedef int (__stdcall *PFN_IMPORT_PRIV_KEY_FUNC)(unsigned int, _CRYPT_PRIVATE_KEY_INFO *, unsigned int, void *);

/* 2866 */ typedef tagHELPWININFOW *PHELPWININFOW;

/* 2867 */ typedef _PROVIDOR_INFO_2A *PPROVIDOR_INFO_2;

/* 2868 */ typedef int LCSGAMUTMATCH;

/* 2869 */ typedef tagCLIENTCREATESTRUCT *LPCLIENTCREATESTRUCT;

/* 2870 */ typedef int (__stdcall *HOOKPROC)(int, unsigned int, int);

/* 2871 */ typedef _DISPLAY_DEVICEW *PDISPLAY_DEVICEW;

/* 2872 */ typedef tagEMRFILLRGN *PEMRFILLRGN;

/* 2873 */ typedef tagNEWTEXTMETRICA *PNEWTEXTMETRICA;

/* 2874 */ typedef _KEY_EVENT_RECORD *PKEY_EVENT_RECORD;

/* 2875 */ typedef RPC_DISPATCH_TABLE *PRPC_DISPATCH_TABLE;

/* 2876 */ typedef _COMMCONFIG *LPCOMMCONFIG;

/* 2877 */ typedef tagMCI_OVLY_LOAD_PARMSA *LPMCI_OVLY_LOAD_PARMSA;

/* 2878 */ typedef unsigned __int16 PROPVAR_PAD3;

/* 2879 */ typedef _PRINTPROCESSOR_INFO_1A *PPRINTPROCESSOR_INFO_1;

/* 2880 */ typedef _CERT_NAME_VALUE *PCERT_NAME_VALUE;

/* 2881 */ typedef _STORAGE_MEDIA_TYPE *PSTORAGE_MEDIA_TYPE;

/* 2882 */ typedef int __stdcall RPC_IF_CALLBACK_FN(void *, void *);

/* 2883 */ typedef _SHNAMEMAPPINGW *LPSHNAMEMAPPINGW;

/* 2884 */ typedef _RGNDATA *LPRGNDATA;

/* 2885 */ typedef _RGNDATA *NPRGNDATA;

/* 2886 */ typedef _PORT_INFO_2A *PPORT_INFO_2;

/* 2887 */ typedef unsigned int *LPSCARDCONTEXT;

/* 2888 */ typedef tagNEWTEXTMETRICW *PNEWTEXTMETRICW;

/* 2889 */ typedef _JOBOBJECT_JOBSET_INFORMATION *PJOBOBJECT_JOBSET_INFORMATION;

/* 2890 */ typedef ICreateErrorInfo *LPCREATEERRORINFO;

/* 2891 */ typedef IParseDisplayName *LPPARSEDISPLAYNAME;

/* 2892 */ typedef tagMONCONVSTRUCT *PMONCONVSTRUCT;

/* 2893 */ typedef tagMCI_SAVE_PARMSW *PMCI_SAVE_PARMSW;

/* 2894 */ typedef unsigned int COLORREF;

/* 2895 */ typedef void *(__stdcall *GENERIC_BINDING_ROUTINE)(void *);

/* 2896 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_WRITE_CTL)(void *, _CTL_CONTEXT *, unsigned int);

/* 2897 */ typedef unsigned __int16 *PWCHAR;

/* 2898 */ typedef _CERT_CONTEXT *PCERT_CONTEXT;

/* 2899 */ typedef ICodeInstall *LPCODEINSTALL;

/* 2900 */ typedef tagMULTIKEYHELPW *PMULTIKEYHELPW;

/* 2901 */ typedef tagHELPWININFOA *PHELPWININFO;

/* 2902 */ typedef _SOCKET_ADDRESS_LIST *LPSOCKET_ADDRESS_LIST;

/* 2903 */ typedef OPENCARDNAMEW *POPENCARDNAMEW;

/* 2904 */ typedef tagEMRPIXELFORMAT *PEMRPIXELFORMAT;

/* 2905 */ typedef _currencyfmtA *LPCURRENCYFMT;

/* 2906 */ typedef _CRYPTOAPI_BLOB *PCRYPT_HASH_BLOB;

/* 2907 */ typedef _IMAGE_RUNTIME_FUNCTION_ENTRY *PIMAGE_RUNTIME_FUNCTION_ENTRY;

/* 2908 */ typedef _PROVIDOR_INFO_2W *PPROVIDOR_INFO_2W;

/* 2909 */ typedef _WGLSWAP *LPWGLSWAP;

/* 2910 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_READ_CRL)(void *, _CRL_CONTEXT *, unsigned int, _CRL_CONTEXT **);

/* 2911 */ typedef _EVENTSFORLOGFILE *PEVENTSFORLOGFILE;

/* 2912 */ typedef unsigned __int64 _ULonglong;

/* 2913 */ typedef _ASSEMBLY_FILE_DETAILED_INFORMATION *PASSEMBLY_FILE_DETAILED_INFORMATION;

/* 2914 */ typedef char *(__stdcall *USER_MARSHAL_MARSHALLING_ROUTINE)(unsigned int *, char *, void *);

/* 2915 */ typedef _PROVIDOR_INFO_2A *PPROVIDOR_INFO_2A;

/* 2916 */ typedef unsigned __int64 *PULONGLONG;

/* 2917 */ typedef tagSAFEARRAY *LPSAFEARRAY;

/* 2918 */ typedef IPersistFile *LPPERSISTFILE;

/* 2919 */ typedef DLGTEMPLATE *LPDLGTEMPLATE;

/* 2920 */ typedef _CRYPT_KEY_PROV_INFO *PCRYPT_KEY_PROV_INFO;

/* 2921 */ typedef tagNEWTEXTMETRICA *PNEWTEXTMETRIC;

/* 2922 */ typedef _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;

/* 2923 */ typedef _PORT_INFO_2W *PPORT_INFO_2W;

/* 2924 */ typedef _ASSEMBLY_FILE_DETAILED_INFORMATION *PCASSEMBLY_FILE_DETAILED_INFORMATION;

/* 2925 */ typedef _PRINTPROCESSOR_INFO_1A *PPRINTPROCESSOR_INFO_1A;

/* 2926 */ typedef tagMCI_OPEN_PARMSA *PMCI_OPEN_PARMS;

/* 2927 */ typedef _SYMBOL_INFO *PSYMBOL_INFO;

/* 2928 */ typedef _QualityOfService *LPQOS;

/* 2929 */ typedef tagEMRCREATEBRUSHINDIRECT *PEMRCREATEBRUSHINDIRECT;

/* 2930 */ typedef _CRYPT_PRIVATE_KEY_INFO *PCRYPT_PRIVATE_KEY_INFO;

/* 2931 */ typedef unsigned __int16 *PUSHORT;

/* 2932 */ typedef _PRINTPROCESSOR_INFO_1W *PPRINTPROCESSOR_INFO_1W;

/* 2933 */ typedef _ACL *PACL;

/* 2934 */ typedef tagMCI_OVLY_OPEN_PARMSW *LPMCI_OVLY_OPEN_PARMSW;

/* 2935 */ typedef _PORT_INFO_2A *PPORT_INFO_2A;

/* 2936 */ typedef tagTEXTMETRICA *PTEXTMETRICA;

/* 2937 */ typedef tagEMRGDICOMMENT *PEMRGDICOMMENT;

/* 2938 */ typedef int (__stdcall *ICMENUMPROCA)(char *, int);

/* 2939 */ typedef IOleContainer *LPOLECONTAINER;

/* 2940 */ typedef IWindowForBindingUI *LPWINDOWFORBINDINGUI;

/* 2941 */ typedef _STARTUPINFOA *LPSTARTUPINFO;

/* 2942 */ typedef _SCARD_ATRMASK *PSCARD_ATRMASK;

/* 2943 */ typedef __int16 INT16;

/* 2944 */ typedef HMIXEROBJ__ *HMIXEROBJ;

/* 2945 */ typedef tagMENUITEMINFOW *LPCMENUITEMINFOW;

/* 2946 */ typedef unsigned int __stdcall PM_COLLECT_PROC(unsigned __int16 *, void **, unsigned int *, unsigned int *);

/* 2947 */ typedef unsigned int *PSECURITY_INFORMATION;

/* 2948 */ typedef joyinfoex_tag *LPJOYINFOEX;

/* 2949 */ typedef int _off_t;

/* 2950 */ typedef joyinfoex_tag *NPJOYINFOEX;

/* 2951 */ typedef tagHANDLETABLE *LPHANDLETABLE;

/* 2952 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_READ_CTL)(void *, _CTL_CONTEXT *, unsigned int, _CTL_CONTEXT **);

/* 2953 */ typedef _CMS_KEY_INFO *PCMS_KEY_INFO;

/* 2954 */ typedef _WSAServiceClassInfoA *LPWSASERVICECLASSINFO;

/* 2955 */ typedef _INPUT_RECORD *PINPUT_RECORD;

/* 2956 */ typedef void (__cdecl *_inconsistency_function)();

/* 2957 */ typedef _WSANSClassInfoA *PWSANSCLASSINFOA;

/* 2958 */ typedef int LRESULT;

/* 2959 */ typedef _userSTGMEDIUM *wireASYNC_STGMEDIUM;

/* 2960 */ typedef int HRESULT;

/* 2961 */ typedef unsigned int *PKAFFINITY;

/* 2962 */ typedef tagCBTACTIVATESTRUCT *LPCBTACTIVATESTRUCT;

/* 2963 */ typedef tagMDICREATESTRUCTA *LPMDICREATESTRUCT;

/* 2964 */ typedef int GEOID;

/* 2965 */ typedef unsigned int (__stdcall *PGET_MODULE_BASE_ROUTINE)(void *, unsigned int);

/* 2966 */ typedef _DRAGINFOA *LPDRAGINFOA;

/* 2967 */ typedef tagBIND_OPTS *LPBIND_OPTS;

/* 2968 */ typedef unsigned int HCHAPTER;

/* 2969 */ typedef tagEMRPOLYTEXTOUTA *PEMRPOLYTEXTOUTA;

/* 2970 */ typedef int (__stdcall *CODEPAGE_ENUMPROCW)(unsigned __int16 *);

/* 2971 */ typedef _DRAGINFOW *LPDRAGINFOW;

/* 2972 */ typedef unsigned int *PDWORD;

/* 2973 */ typedef tagEMRSETVIEWPORTORGEX *PEMRSETWINDOWORGEX;

/* 2974 */ typedef LIST_ENTRY32 *PLIST_ENTRY32;

/* 2975 */ typedef _UNIVERSAL_NAME_INFOA *LPUNIVERSAL_NAME_INFOA;

/* 2976 */ typedef unsigned int LCTYPE;

/* 2977 */ typedef int (__stdcall *PFN_CMSG_IMPORT_MAIL_LIST)(_CRYPT_ALGORITHM_IDENTIFIER *, _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA *, unsigned int, void *, unsigned int *);

/* 2978 */ typedef waveformat_tag *PWAVEFORMAT;

/* 2979 */ typedef unsigned int *PDWORD32;

/* 2980 */ typedef int (__stdcall *PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK)(_CERT_CONTEXT *, void *);

/* 2981 */ typedef tagINTERFACEDATA *LPINTERFACEDATA;

/* 2982 */ typedef unsigned int uintptr_t;

/* 2983 */ typedef _WSANAMESPACE_INFOW *LPWSANAMESPACE_INFOW;

/* 2984 */ typedef tagRECONVERTSTRING *PRECONVERTSTRING;

/* 2985 */ typedef tagENUMLOGFONTEXW *LPENUMLOGFONTEXW;

/* 2986 */ typedef _NAME_BUFFER *PNAME_BUFFER;

/* 2987 */ typedef __int64 LONG64;

/* 2988 */ typedef _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;

/* 2989 */ typedef _ACTIVATION_CONTEXT_DETAILED_INFORMATION *PCACTIVATION_CONTEXT_DETAILED_INFORMATION;

/* 2990 */ typedef _tagADDRESS *LPADDRESS;

/* 2991 */ typedef tagWINDOWPLACEMENT *LPWINDOWPLACEMENT;

/* 2992 */ typedef tagLOGBRUSH *LPPATTERN;

/* 2993 */ typedef _CRL_CONTEXT *PCCRL_CONTEXT;

/* 2994 */ typedef tagLOGBRUSH *NPPATTERN;

/* 2995 */ typedef _PRINTER_NOTIFY_INFO *PPRINTER_NOTIFY_INFO;

/* 2996 */ typedef tagCURSORSHAPE *LPCURSORSHAPE;

/* 2997 */ typedef _RTL_CRITICAL_SECTION_DEBUG *PCRITICAL_SECTION_DEBUG;

/* 2998 */ typedef void (__stdcall *CS_TYPE_TO_NETCS_ROUTINE)(void *, unsigned int, void *, unsigned int, char *, unsigned int *, unsigned int *);

/* 2999 */ typedef _RECTL *PRECTL;

/* 3000 */ typedef unsigned int RPCOLEDATAREP;

/* 3001 */ typedef _DRAGINFOA *LPDRAGINFO;

/* 3002 */ typedef void (__stdcall *WORKERCALLBACKFUNC)(void *);

/* 3003 */ typedef tagMONITORINFOEXW *LPMONITORINFOEXW;

/* 3004 */ typedef tagDEVNAMES *LPDEVNAMES;

/* 3005 */ typedef tagEXTLOGFONTA *PEXTLOGFONT;

/* 3006 */ typedef IDispatch *LPDISPATCH;

/* 3007 */ typedef tagJOYCAPS2W *PJOYCAPS2W;

/* 3008 */ typedef _SCONTEXT_QUEUE *PSCONTEXT_QUEUE;

/* 3009 */ typedef _CERTIFICATE_BLOB *PEFS_CERTIFICATE_BLOB;

/* 3010 */ typedef IOleClientSite *LPOLECLIENTSITE;

/* 3011 */ typedef SCARD_T0_COMMAND *LPSCARD_T0_COMMAND;

/* 3012 */ typedef char *va_list;

/* 3013 */ typedef void (__stdcall *WINEVENTPROC)(HWINEVENTHOOK__ *, unsigned int, HWND__ *, int, int, unsigned int, unsigned int);

/* 3014 */ typedef _DATATYPES_INFO_1A *PDATATYPES_INFO_1;

/* 3015 */ typedef _EXCEPTION_POINTERS *LPEXCEPTION_POINTERS;

/* 3016 */ typedef _DOCINFOW *LPDOCINFOW;

/* 3017 */ typedef _BLOB *LPBLOB;

/* 3018 */ typedef int lzo_bool;

/* 3019 */ typedef __int16 HALF_PTR;

/* 3020 */ typedef tagWINDOWPOS *LPWINDOWPOS;

/* 3021 */ typedef _CRYPT_PASSWORD_CREDENTIALSW *PCRYPT_PASSWORD_CREDENTIALSW;

/* 3022 */ typedef tagBITMAPINFOHEADER *PBITMAPINFOHEADER;

/* 3023 */ typedef tagMCI_ANIM_OPEN_PARMSA *PMCI_ANIM_OPEN_PARMS;

/* 3024 */ typedef tagCBT_CREATEWNDA *LPCBT_CREATEWNDA;

/* 3025 */ typedef _PROVIDOR_INFO_1A *PPROVIDOR_INFO_1;

/* 3026 */ typedef _BIDI_REQUEST_DATA *PBIDI_REQUEST_DATA;

/* 3027 */ typedef _CERT_STORE_PROV_INFO *PCERT_STORE_PROV_INFO;

/* 3028 */ typedef unsigned int DBBYTEOFFSET;

/* 3029 */ typedef tagPOLYTEXTW *PPOLYTEXTW;

/* 3030 */ typedef tagSOUNDSENTRYA *LPSOUNDSENTRY;

/* 3031 */ typedef HACCEL__ *HACCEL;

/* 3032 */ typedef tagICEXYZTRIPLE *LPCIEXYZTRIPLE;

/* 3033 */ typedef IWinInetHttpInfo *LPWININETHTTPINFO;

/* 3034 */ typedef _PROPSHEETHEADERW *LPPROPSHEETHEADERW;

/* 3035 */ typedef tagSIZE *LPSIZE;

/* 3036 */ typedef unsigned int (__stdcall *LPFNPSPCALLBACKW)(HWND__ *, unsigned int, _PROPSHEETPAGEW *);

/* 3037 */ typedef void (__stdcall *CS_TYPE_FROM_NETCS_ROUTINE)(void *, unsigned int, char *, unsigned int, unsigned int, void *, unsigned int *, unsigned int *);

/* 3038 */ typedef _PORT_INFO_1A *PPORT_INFO_1;

/* 3039 */ typedef char _TCHAR;

/* 3040 */ typedef tagLOGFONTA *NPLOGFONTA;

/* 3041 */ typedef _RPC_SECURITY_QOS_V2_W *PRPC_SECURITY_QOS_V2_W;

/* 3042 */ typedef tagLOGFONTA *LPLOGFONTA;

/* 3043 */ typedef _LDT_ENTRY *LPLDT_ENTRY;

/* 3044 */ typedef tagMIXERCONTROLA *LPMIXERCONTROL;

/* 3045 */ typedef void *handle_t;

/* 3046 */ typedef char *PTCHAR;

/* 3047 */ typedef tagABORTPATH *PEMRBEGINPATH;

/* 3048 */ typedef tagABORTPATH *PEMRFLATTENPATH;

/* 3049 */ typedef _LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[1];

/* 3050 */ typedef tagMCI_ANIM_OPEN_PARMSW *PMCI_ANIM_OPEN_PARMSW;

/* 3051 */ typedef _CERT_CRL_CONTEXT_PAIR *PCERT_CRL_CONTEXT_PAIR;

/* 3052 */ typedef tagAUXCAPSA *LPAUXCAPS;

/* 3053 */ typedef ITypeLib *LPTYPELIB;

/* 3054 */ typedef tagAUXCAPSA *NPAUXCAPS;

/* 3055 */ typedef IViewObject2 *LPVIEWOBJECT2;

/* 3056 */ typedef _TRANSMIT_FILE_BUFFERS *PTRANSMIT_FILE_BUFFERS;

/* 3057 */ typedef _IMAGE_TLS_DIRECTORY64 *PIMAGE_TLS_DIRECTORY64;

/* 3058 */ typedef tagABORTPATH *PEMRWIDENPATH;

/* 3059 */ typedef _PRINTER_INFO_3 *LPPRINTER_INFO_3;

/* 3060 */ typedef _CERT_KEY_CONTEXT *PCERT_KEY_CONTEXT;

/* 3061 */ typedef _PRINTER_INFO_9A *PPRINTER_INFO_9A;

/* 3062 */ typedef _PROVIDOR_INFO_1W *PPROVIDOR_INFO_1W;

/* 3063 */ typedef _IMAGE_SYMBOL *PIMAGE_SYMBOL;

/* 3064 */ typedef _WIN32_FIND_DATAW *LPWIN32_FIND_DATAW;

/* 3065 */ typedef tagMCI_ANIM_OPEN_PARMSA *PMCI_ANIM_OPEN_PARMSA;

/* 3066 */ typedef _READ_ELEMENT_ADDRESS_INFO *PREAD_ELEMENT_ADDRESS_INFO;

/* 3067 */ typedef _CMC_ADD_ATTRIBUTES_INFO *PCMC_ADD_ATTRIBUTES_INFO;

/* 3068 */ typedef void (__stdcall *PRPC_RUNDOWN)(void *);

/* 3069 */ typedef _PROVIDOR_INFO_1A *PPROVIDOR_INFO_1A;

/* 3070 */ typedef IViewObject *LPVIEWOBJECT;

/* 3071 */ typedef tagMCI_ANIM_PLAY_PARMS *LPMCI_ANIM_PLAY_PARMS;

/* 3072 */ typedef _CERT_POLICY95_QUALIFIER1 *PCERT_POLICY95_QUALIFIER1;

/* 3073 */ typedef _IMAGE_RUNTIME_FUNCTION_ENTRY *_PIMAGE_RUNTIME_FUNCTION_ENTRY;

/* 3074 */ typedef void (__stdcall *RTL_VERIFIER_DLL_UNLOAD_CALLBACK)(unsigned __int16 *, void *, unsigned int, void *);

/* 3075 */ typedef POWER_ACTION_POLICY *PPOWER_ACTION_POLICY;

/* 3076 */ typedef tagMIXERCONTROLW *LPMIXERCONTROLW;

/* 3077 */ typedef tagSIZE *LPSIZEL;

/* 3078 */ typedef _CERT_CHAIN_POLICY_PARA *PCERT_CHAIN_POLICY_PARA;

/* 3079 */ typedef _PORT_INFO_1W *PPORT_INFO_1W;

/* 3080 */ typedef _PROCESSOR_POWER_POLICY_INFO *PPROCESSOR_POWER_POLICY_INFO;

/* 3081 */ typedef tagEMRINVERTRGN *PEMRINVERTRGN;

/* 3082 */ typedef char yes_type;

/* 3083 */ typedef _PRINTER_INFO_8A *PPRINTER_INFO_8A;

/* 3084 */ typedef void (__stdcall *NDR_NOTIFY2_ROUTINE)(char);

/* 3085 */ typedef IPersist *LPPERSIST;

/* 3086 */ typedef _WSAQuerySetW *LPWSAQUERYSETW;

/* 3087 */ typedef _PORT_INFO_1A *PPORT_INFO_1A;

/* 3088 */ typedef _GUID *LPCGUID;

/* 3089 */ typedef tagMIXERCONTROLA *LPMIXERCONTROLA;

/* 3090 */ typedef _CRYPT_RC2_CBC_PARAMETERS *PCRYPT_RC2_CBC_PARAMETERS;

/* 3091 */ typedef _BIDI_RESPONSE_DATA *PBIDI_RESPONSE_DATA;

/* 3092 */ typedef unsigned int *LPCOLORREF;

/* 3093 */ typedef tagMENUBARINFO *LPMENUBARINFO;

/* 3094 */ typedef void (__stdcall *MSGBOXCALLBACK)(tagHELPINFO *);

/* 3095 */ typedef IInternetProtocolSinkStackable *LPIINTERNETPROTOCOLSINKStackable;

/* 3096 */ typedef SCARD_READERSTATEA *PSCARD_READERSTATEA;

/* 3097 */ typedef _REPARSE_GUID_DATA_BUFFER *PREPARSE_GUID_DATA_BUFFER;

/* 3098 */ typedef int FXPT16DOT16;

/* 3099 */ typedef tagMIDIINCAPS2A *LPMIDIINCAPS2;

/* 3100 */ typedef tagMIDIINCAPS2A *NPMIDIINCAPS2;

/* 3101 */ typedef void DispatcherContext;

/* 3102 */ typedef tagWINDOWPOS *PWINDOWPOS;

/* 3103 */ typedef SCARD_READERSTATEW *PSCARD_READERSTATEW;

/* 3104 */ typedef char BYTE;

/* 3105 */ typedef SHELLHOOKINFO *LPSHELLHOOKINFO;

/* 3106 */ typedef unsigned int (__stdcall *LPPAGEPAINTHOOK)(HWND__ *, unsigned int, unsigned int, int);

/* 3107 */ typedef tagMIDIINCAPSA *NPMIDIINCAPS;

/* 3108 */ typedef int (__stdcall *PFNPROPSHEETCALLBACK)(HWND__ *, unsigned int, int);

/* 3109 */ typedef tagMIDIINCAPSA *LPMIDIINCAPS;

/* 3110 */ typedef _CRYPT_KEY_PROV_PARAM *PCRYPT_KEY_PROV_PARAM;

/* 3111 */ typedef _JOBOBJECT_END_OF_JOB_TIME_INFORMATION *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION;

/* 3112 */ typedef tagMCI_VD_ESCAPE_PARMSA *LPMCI_VD_ESCAPE_PARMS;

/* 3113 */ typedef _RTL_CRITICAL_SECTION *PRTL_CRITICAL_SECTION;

/* 3114 */ typedef _CHANGER_INITIALIZE_ELEMENT_STATUS *PCHANGER_INITIALIZE_ELEMENT_STATUS;

/* 3115 */ typedef tagDRAWTEXTPARAMS *LPDRAWTEXTPARAMS;

/* 3116 */ typedef HMIXER__ **LPHMIXER;

/* 3117 */ typedef HPEN__ *HPEN;

/* 3118 */ typedef _IMAGE_BASE_RELOCATION *PIMAGE_BASE_RELOCATION;

/* 3119 */ typedef IMessageFilter *LPMESSAGEFILTER;

/* 3120 */ typedef _ENCRYPTION_CERTIFICATE_HASH *PENCRYPTION_CERTIFICATE_HASH;

/* 3121 */ typedef _ENUM_SERVICE_STATUSW *LPENUM_SERVICE_STATUSW;

/* 3122 */ typedef _CERT_OTHER_NAME *PCERT_OTHER_NAME;

/* 3123 */ typedef void *PVOID;

/* 3124 */ typedef unsigned __int16 OLECHAR;

/* 3125 */ typedef _SERVICE_STATUS_PROCESS *LPSERVICE_STATUS_PROCESS;

/* 3126 */ typedef void (__stdcall *GENERIC_UNBIND_ROUTINE)(void *, char *);

/* 3127 */ typedef _FILE_PREFETCH *PFILE_PREFETCH;

/* 3128 */ typedef _userHGLOBAL *wireHGLOBAL;

/* 3129 */ typedef SCARD_READERSTATEA *PSCARD_READERSTATE;

/* 3130 */ typedef unsigned int UINT32;

/* 3131 */ typedef tagMIDIINCAPSW *LPMIDIINCAPSW;

/* 3132 */ typedef BITMAPV4HEADER *PBITMAPV4HEADER;

/* 3133 */ typedef tagMIDIINCAPSW *NPMIDIINCAPSW;

/* 3134 */ typedef BITMAPV5HEADER *PBITMAPV5HEADER;

/* 3135 */ typedef int *PINT32;

/* 3136 */ typedef tagWAVEINCAPS2W *NPWAVEINCAPS2W;

/* 3137 */ typedef _FAT_STATISTICS *PFAT_STATISTICS;

/* 3138 */ typedef tagWAVEINCAPS2W *LPWAVEINCAPS2W;

/* 3139 */ typedef _CERT_EXTENSION *PCERT_EXTENSION;

/* 3140 */ typedef _CERT_CREATE_CONTEXT_PARA *PCERT_CREATE_CONTEXT_PARA;

/* 3141 */ typedef tagBITMAPINFOHEADER *LPBITMAPINFOHEADER;

/* 3142 */ typedef _CERT_STORE_PROV_FIND_INFO *PCERT_STORE_PROV_FIND_INFO;

/* 3143 */ typedef IMonikerProp *LPMONIKERPROP;

/* 3144 */ typedef int (__stdcall *EDITWORDBREAKPROC)(char *, int, int, int);

/* 3145 */ typedef unsigned int BITVEC;

/* 3146 */ typedef int (__stdcall *ENHMFENUMPROC)(HDC__ *, tagHANDLETABLE *, tagENHMETARECORD *, int, int);

/* 3147 */ typedef unsigned int MCIERROR;

/* 3148 */ typedef tagEMRSELECTCLIPPATH *PEMRSETICMMODE;

/* 3149 */ typedef tagMIDIINCAPSA *NPMIDIINCAPSA;

/* 3150 */ typedef _CRYPTOAPI_BLOB *PCRYPT_UINT_BLOB;

/* 3151 */ typedef _AFPROTOCOLS *PAFPROTOCOLS;

/* 3152 */ typedef tagMIDIINCAPSA *LPMIDIINCAPSA;

/* 3153 */ typedef _CRL_REVOCATION_INFO *PCRL_REVOCATION_INFO;

/* 3154 */ typedef _VIDEOPARAMETERS *LPVIDEOPARAMETERS;

/* 3155 */ typedef _CMC_DATA_INFO *PCMC_DATA_INFO;

/* 3156 */ typedef _WSANETWORKEVENTS *LPWSANETWORKEVENTS;

/* 3157 */ typedef _CRYPT_OID_FUNC_ENTRY *PCRYPT_OID_FUNC_ENTRY;

/* 3158 */ typedef int (__stdcall *MFENUMPROC)(HDC__ *, tagHANDLETABLE *, tagMETARECORD *, int, int);

/* 3159 */ typedef const unsigned __int16 *LPCUWSTR;

/* 3160 */ typedef tagCWPSTRUCT *PCWPSTRUCT;

/* 3161 */ typedef const char *LPCUTSTR;

/* 3162 */ typedef _RTL_CRITICAL_SECTION_DEBUG *PRTL_RESOURCE_DEBUG;

/* 3163 */ typedef ITypeChangeEvents *LPTYPECHANGEEVENTS;

/* 3164 */ typedef midiproptimediv_tag *LPMIDIPROPTIMEDIV;

/* 3165 */ typedef _PERF_COUNTER_DEFINITION *PPERF_COUNTER_DEFINITION;

/* 3166 */ typedef tagEMRPOLYLINE16 *PEMRPOLYGON16;

/* 3167 */ typedef unsigned int SERVICETYPE;

/* 3168 */ typedef void (__stdcall *LINEDDAPROC)(int, int, int);

/* 3169 */ typedef _RPC_SECURITY_QOS *PRPC_SECURITY_QOS;

/* 3170 */ typedef tagMIXERCONTROLDETAILS_LISTTEXTW *PMIXERCONTROLDETAILS_LISTTEXTW;

/* 3171 */ typedef _CONNECTDLGSTRUCTW *LPCONNECTDLGSTRUCTW;

/* 3172 */ typedef tagFONTSIGNATURE *PFONTSIGNATURE;

/* 3173 */ typedef _DATATYPES_INFO_1A *PDATATYPES_INFO_1A;

/* 3174 */ typedef _PRINTER_INFO_2A *LPPRINTER_INFO_2A;

/* 3175 */ typedef tagMCI_GENERIC_PARMS *LPMCI_GENERIC_PARMS;

/* 3176 */ typedef DRVCONFIGINFOEX *PDRVCONFIGINFOEX;

/* 3177 */ typedef int (__stdcall *DATEFMT_ENUMPROCA)(char *);

/* 3178 */ typedef IBindHost *LPBINDHOST;

/* 3179 */ typedef _TOKEN_TYPE *PTOKEN_TYPE;

/* 3180 */ typedef void (__stdcall *USER_MARSHAL_FREEING_ROUTINE)(unsigned int *, void *);

/* 3181 */ typedef _ACCESS_ALLOWED_ACE *PACCESS_ALLOWED_ACE;

/* 3182 */ typedef _CONNECTDLGSTRUCTA *LPCONNECTDLGSTRUCTA;

/* 3183 */ typedef int (__stdcall *DATEFMT_ENUMPROCW)(unsigned __int16 *);

/* 3184 */ typedef tagCOMPAREITEMSTRUCT *PCOMPAREITEMSTRUCT;

/* 3185 */ typedef unsigned int DBMEMOWNER;

/* 3186 */ typedef _PRINTER_INFO_2W *LPPRINTER_INFO_2W;

/* 3187 */ typedef OPENCARDNAMEA *LPOPENCARDNAME;

/* 3188 */ typedef _PRINTER_INFO_2A *PPRINTER_INFO_2A;

/* 3189 */ typedef const unsigned __int16 *LPCWCH;

/* 3190 */ typedef unsigned __int16 PROPVAR_PAD1;

/* 3191 */ typedef tagLAYERPLANEDESCRIPTOR *PLAYERPLANEDESCRIPTOR;

/* 3192 */ typedef tagEntryEnd *PENTRYEND;

/* 3193 */ typedef tagSOUNDSENTRYA *LPSOUNDSENTRYA;

/* 3194 */ typedef unsigned int __cdecl QUERYHANDLER(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);

/* 3195 */ typedef int DISPID;

/* 3196 */ typedef _RPC_SECURITY_QOS_V3_W *PRPC_SECURITY_QOS_V3_W;

/* 3197 */ typedef int (__stdcall *RPC_NEW_HTTP_PROXY_CHANNEL)(unsigned __int16 *, unsigned __int16 *, char *, unsigned __int16 **);

/* 3198 */ typedef char *PUCHAR;

/* 3199 */ typedef int lzo_ptrdiff_t;

/* 3200 */ typedef tagLOGFONTA *NPLOGFONT;

/* 3201 */ typedef tagLOGFONTA *LPLOGFONT;

/* 3202 */ typedef _CHANGER_ELEMENT_STATUS_EX *PCHANGER_ELEMENT_STATUS_EX;

/* 3203 */ typedef tagEXTLOGPEN *LPEXTLOGPEN;

/* 3204 */ typedef _SECURITY_ATTRIBUTES *LPSECURITY_ATTRIBUTES;

/* 3205 */ typedef tagEXTLOGPEN *NPEXTLOGPEN;

/* 3206 */ typedef unsigned __int64 DWORDLONG;

/* 3207 */ typedef _PRINTER_INFO_1A *PPRINTER_INFO_1A;

/* 3208 */ typedef int (__stdcall *PFN_CMSG_STREAM_OUTPUT)(const void *, char *, unsigned int, int);

/* 3209 */ typedef OPENCARDNAMEW *LPOPENCARDNAMEW;

/* 3210 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_SET_CRL_PROPERTY)(void *, _CRL_CONTEXT *, unsigned int, unsigned int, const void *);

/* 3211 */ typedef _PRINTER_INFO_2A *LPPRINTER_INFO_2;

/* 3212 */ typedef tagAUXCAPSA *LPAUXCAPSA;

/* 3213 */ typedef _CRL_DIST_POINT_NAME *PCRL_DIST_POINT_NAME;

/* 3214 */ typedef int (__stdcall *LOCALE_ENUMPROCA)(char *);

/* 3215 */ typedef _WSABUF *LPWSABUF;

/* 3216 */ typedef tagAUXCAPSA *NPAUXCAPSA;

/* 3217 */ typedef tagEMRCREATEDIBPATTERNBRUSHPT *PEMRCREATEDIBPATTERNBRUSHPT;

/* 3218 */ typedef _ImageArchitectureEntry *PIMAGE_ARCHITECTURE_ENTRY;

/* 3219 */ typedef _CERT_CONTEXT *PCCERT_CONTEXT;

/* 3220 */ typedef _CONNECTDLGSTRUCTA *LPCONNECTDLGSTRUCT;

/* 3221 */ typedef _ACL_SIZE_INFORMATION *PACL_SIZE_INFORMATION;

/* 3222 */ typedef OPENCARDNAMEA *LPOPENCARDNAMEA;

/* 3223 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_GET_CRL_PROPERTY)(void *, _CRL_CONTEXT *, unsigned int, unsigned int, void *, unsigned int *);

/* 3224 */ typedef tagMIXERCAPS2A *PMIXERCAPS2A;

/* 3225 */ typedef _CERT_USAGE_MATCH *PCERT_USAGE_MATCH;

/* 3226 */ typedef _AFPROTOCOLS *LPAFPROTOCOLS;

/* 3227 */ typedef _IMAGE_DOS_HEADER *PIMAGE_DOS_HEADER;

/* 3228 */ typedef int LPARAM;

/* 3229 */ typedef _ADDJOB_INFO_1A *LPADDJOB_INFO_1A;

/* 3230 */ typedef const void *LPCVOID;

/* 3231 */ typedef unsigned int (__cdecl *PQUERYHANDLER)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);

/* 3232 */ typedef pvalueA *PPVALUEA;

/* 3233 */ typedef unsigned __int16 *PWCH;

/* 3234 */ typedef tagELEMDESC *LPELEMDESC;

/* 3235 */ typedef int *LPINT;

/* 3236 */ typedef _SYSTEMTIME *LPSYSTEMTIME;

/* 3237 */ typedef tagPAINTSTRUCT *NPPAINTSTRUCT;

/* 3238 */ typedef tMIXERCONTROLDETAILS_UNSIGNED *PMIXERCONTROLDETAILS_UNSIGNED;

/* 3239 */ typedef tagPAINTSTRUCT *LPPAINTSTRUCT;

/* 3240 */ typedef _DOC_INFO_3A *PDOC_INFO_3;

/* 3241 */ typedef _DOC_INFO_2A *PDOC_INFO_2;

/* 3242 */ typedef void *(__stdcall *PFN_CMSG_ALLOC)(unsigned int);

/* 3243 */ typedef _DOC_INFO_1A *PDOC_INFO_1;

/* 3244 */ typedef unsigned int WPARAM;

/* 3245 */ typedef tagPOLYTEXTW *LPPOLYTEXTW;

/* 3246 */ typedef _PRINTER_INFO_7A *PPRINTER_INFO_7A;

/* 3247 */ typedef tagPOLYTEXTW *NPPOLYTEXTW;

/* 3248 */ typedef _OSVERSIONINFOA *LPOSVERSIONINFOA;

/* 3249 */ typedef SYSTEM_POWER_CAPABILITIES *PSYSTEM_POWER_CAPABILITIES;

/* 3250 */ typedef int INT32;

/* 3251 */ typedef tagMIDIINCAPS2A *LPMIDIINCAPS2A;

/* 3252 */ typedef tagMIDIINCAPS2A *NPMIDIINCAPS2A;

/* 3253 */ typedef _KDHELP *PKDHELP;

/* 3254 */ typedef tagWAVEINCAPSW *PWAVEINCAPSW;

/* 3255 */ typedef tagWAVEOUTCAPS2W *PWAVEOUTCAPS2W;

/* 3256 */ typedef ISurrogate *LPSURROGATE;

/* 3257 */ typedef _NETCONNECTINFOSTRUCT *LPNETCONNECTINFOSTRUCT;

/* 3258 */ typedef _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO *PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO;

/* 3259 */ typedef tagMCI_OVLY_SAVE_PARMSA *PMCI_OVLY_SAVE_PARMS;

/* 3260 */ typedef unsigned int GEOCLASS;

/* 3261 */ typedef tagPOLYTEXTA *NPPOLYTEXTA;

/* 3262 */ typedef int (__stdcall *LPCONDITIONPROC)(_WSABUF *, _WSABUF *, _QualityOfService *, _QualityOfService *, _WSABUF *, _WSABUF *, unsigned int *, unsigned int);

/* 3263 */ typedef tagPOLYTEXTA *LPPOLYTEXTA;

/* 3264 */ typedef tagMIXERCAPSA *LPMIXERCAPSA;

/* 3265 */ typedef tagEMRSETTEXTCOLOR *PEMRSETBKCOLOR;

/* 3266 */ typedef _SCOPETABLE_ENTRY *PSCOPETABLE_ENTRY;

/* 3267 */ typedef _LOAD_DLL_DEBUG_INFO *LPLOAD_DLL_DEBUG_INFO;

/* 3268 */ typedef tagMIXERLINECONTROLSA *LPMIXERLINECONTROLSA;

/* 3269 */ typedef value_entA *PVALENTA;

/* 3270 */ typedef tagMCI_SYSINFO_PARMSA *PMCI_SYSINFO_PARMSA;

/* 3271 */ typedef tagEMRARC *PEMRPIE;

/* 3272 */ typedef _MONITOR_INFO_1W *LPMONITOR_INFO_1W;

/* 3273 */ typedef _SHELLEXECUTEINFOW *LPSHELLEXECUTEINFOW;

/* 3274 */ typedef unsigned int MMVERSION;

/* 3275 */ typedef tagRGBQUAD *LPRGBQUAD;

/* 3276 */ typedef pcmwaveformat_tag *PPCMWAVEFORMAT;

/* 3277 */ typedef tagMCI_VD_ESCAPE_PARMSA *LPMCI_VD_ESCAPE_PARMSA;

/* 3278 */ typedef _CERT_CHAIN_FIND_BY_ISSUER_PARA *PCERT_CHAIN_FIND_ISSUER_PARA;

/* 3279 */ typedef _MONITOR_INFO_1A *LPMONITOR_INFO_1A;

/* 3280 */ typedef _CRYPT_KEY_VERIFY_MESSAGE_PARA *PCRYPT_KEY_VERIFY_MESSAGE_PARA;

/* 3281 */ typedef tagMCI_SYSINFO_PARMSW *PMCI_SYSINFO_PARMSW;

/* 3282 */ typedef tagIMECHARPOSITION *NPIMECHARPOSITION;

/* 3283 */ typedef tagSCROLLBARINFO *LPSCROLLBARINFO;

/* 3284 */ typedef tagIMECHARPOSITION *LPIMECHARPOSITION;

/* 3285 */ typedef void (__stdcall *CS_TYPE_NET_SIZE_ROUTINE)(void *, unsigned int, unsigned int, _IDL_CS_CONVERT *, unsigned int *, unsigned int *);

/* 3286 */ typedef _SYSTEM_ALARM_CALLBACK_OBJECT_ACE *PSYSTEM_ALARM_CALLBACK_OBJECT_ACE;

/* 3287 */ typedef _MENU_EVENT_RECORD *PMENU_EVENT_RECORD;

/* 3288 */ typedef _SHELLEXECUTEINFOA *LPSHELLEXECUTEINFOA;

/* 3289 */ typedef IRecordInfo *LPRECORDINFO;

/* 3290 */ typedef _PRINTER_INFO_5A *PPRINTER_INFO_5A;

/* 3291 */ typedef tagMCI_OVLY_SAVE_PARMSW *PMCI_OVLY_SAVE_PARMSW;

/* 3292 */ typedef _MMCKINFO *NPMMCKINFO;

/* 3293 */ typedef _MMCKINFO *LPMMCKINFO;

/* 3294 */ typedef int (__stdcall *DESKTOPENUMPROC)(char *, int);

/* 3295 */ typedef _PROPSHEETPAGEW_V3 *LPCPROPSHEETPAGEW_LATEST;

/* 3296 */ typedef _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION;

/* 3297 */ typedef int (__stdcall *NEARPROC)();

/* 3298 */ typedef char *PBOOLEAN;

/* 3299 */ typedef tagRECT *LPCBORDERWIDTHS;

/* 3300 */ typedef _EXCEPTION_RECORD64 *PEXCEPTION_RECORD64;

/* 3301 */ typedef tagPOLYTEXTA *NPPOLYTEXT;

/* 3302 */ typedef unsigned int SCARDCONTEXT;

/* 3303 */ typedef tagDIBSECTION *LPDIBSECTION;

/* 3304 */ typedef tagMCI_OVLY_SAVE_PARMSA *PMCI_OVLY_SAVE_PARMSA;

/* 3305 */ typedef tagPOLYTEXTA *LPPOLYTEXT;

/* 3306 */ typedef _DISK_LOGGING *PDISK_LOGGING;

/* 3307 */ typedef tagPOINTFX *LPPOINTFX;

/* 3308 */ typedef _HMAC_Info *PHMAC_INFO;

/* 3309 */ typedef _PROPSHEETPAGEA_V3 *LPCPROPSHEETPAGEA_LATEST;

/* 3310 */ typedef int (__stdcall *EDITWORDBREAKPROCA)(char *, int, int, int);

/* 3311 */ typedef tagCWPSTRUCT *NPCWPSTRUCT;

/* 3312 */ typedef void *SC_LOCK;

/* 3313 */ typedef tagCWPSTRUCT *LPCWPSTRUCT;

/* 3314 */ typedef tagICONMETRICSW *LPICONMETRICSW;

/* 3315 */ typedef tagDRVCONFIGINFO *PDRVCONFIGINFO;

/* 3316 */ typedef _PRINTER_INFO_4A *PPRINTER_INFO_4A;

/* 3317 */ typedef _CERT_REVOCATION_INFO *PCERT_REVOCATION_INFO;

/* 3318 */ typedef _CHANGER_ELEMENT *PCHANGER_ELEMENT;

/* 3319 */ typedef tagMCI_SYSINFO_PARMSA *PMCI_SYSINFO_PARMS;

/* 3320 */ typedef IEnumSTATPROPSTG *LPENUMSTATPROPSTG;

/* 3321 */ typedef void (__cdecl *RPCLT_PDU_FILTER_FUNC)(void *, unsigned int, int);

/* 3322 */ typedef tagLOGPEN *PLOGPEN;

/* 3323 */ typedef _IMAGE_THUNK_DATA32 *PIMAGE_THUNK_DATA32;

/* 3324 */ typedef _MESSAGE_RESOURCE_BLOCK *PMESSAGE_RESOURCE_BLOCK;

/* 3325 */ typedef _GRADIENT_RECT *PGRADIENT_RECT;

/* 3326 */ typedef IDataFilter *LPDATAFILTER;

/* 3327 */ typedef IInternetPriority *LPIINTERNETPRIORITY;

/* 3328 */ typedef _MONITOR_INFO_1A *LPMONITOR_INFO_1;

/* 3329 */ typedef tagACCESSTIMEOUT *LPACCESSTIMEOUT;

/* 3330 */ typedef _RemotableHandle *wireHFONT;

/* 3331 */ typedef _CMSG_SIGNER_INFO *PCMSG_SIGNER_INFO;

/* 3332 */ typedef tagEMRPOLYLINE16 *PEMRPOLYBEZIERTO16;

/* 3333 */ typedef _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO *PCMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;

/* 3334 */ typedef unsigned int *LPUINT;

/* 3335 */ typedef _SHELLEXECUTEINFOA *LPSHELLEXECUTEINFO;

/* 3336 */ typedef tagMCI_ANIM_RECT_PARMS *LPMCI_ANIM_RECT_PARMS;

/* 3337 */ typedef __int64 LONGLONG;

/* 3338 */ typedef _DOCINFOA *LPDOCINFOA;

/* 3339 */ typedef int (__stdcall *DRAWSTATEPROC)(HDC__ *, int, unsigned int, int, int);

/* 3340 */ typedef _MMCKINFO *LPCMMCKINFO;

/* 3341 */ typedef tagEMRPOLYLINE16 *PEMRPOLYBEZIER16;

/* 3342 */ typedef _TOKEN_GROUPS_AND_PRIVILEGES *PTOKEN_GROUPS_AND_PRIVILEGES;

/* 3343 */ typedef _PRINTER_INFO_5A *LPPRINTER_INFO_5A;

/* 3344 */ typedef _CRYPT_DECODE_PARA *PCRYPT_DECODE_PARA;

/* 3345 */ typedef tagMCI_SEQ_SET_PARMS *PMCI_SEQ_SET_PARMS;

/* 3346 */ typedef _CTL_ANY_SUBJECT_INFO *PCTL_ANY_SUBJECT_INFO;

/* 3347 */ typedef IInternetProtocolRoot *LPIINTERNETPROTOCOLROOT;

/* 3348 */ typedef tagMSGBOXPARAMSA *LPMSGBOXPARAMSA;

/* 3349 */ typedef char *PTBYTE;

/* 3350 */ typedef HMIDI__ **LPHMIDI;

/* 3351 */ typedef _CRYPT_PASSWORD_CREDENTIALSA *PCRYPT_PASSWORD_CREDENTIALSA;

/* 3352 */ typedef sockaddr *LPSOCKADDR;

/* 3353 */ typedef unsigned __int16 *PARAM_OFFSETTABLE;

/* 3354 */ typedef IInternetProtocolSink *LPIINTERNETPROTOCOLSINK;

/* 3355 */ typedef int (__stdcall *PFN_CMSG_EXPORT_KEY_AGREE)(_CMSG_CONTENT_ENCRYPT_INFO *, _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO *, _CMSG_KEY_AGREE_ENCRYPT_INFO *, unsigned int, void *);

/* 3356 */ typedef _TAPE_GET_POSITION *PTAPE_GET_POSITION;

/* 3357 */ typedef unsigned int (__stdcall *LPFNDEVMODE)(HWND__ *, HINSTANCE__ *, _devicemodeA *, char *, char *, _devicemodeA *, char *, unsigned int);

/* 3358 */ typedef tagMSGBOXPARAMSW *LPMSGBOXPARAMSW;

/* 3359 */ typedef _RPC_SYNTAX_IDENTIFIER *PRPC_SYNTAX_IDENTIFIER;

/* 3360 */ typedef tagCBT_CREATEWNDW *LPCBT_CREATEWNDW;

/* 3361 */ typedef int (__stdcall *PFN_EXPORT_PRIV_KEY_FUNC)(unsigned int, unsigned int, char *, unsigned int, void *, _CRYPT_PRIVATE_KEY_INFO *, unsigned int *);

/* 3362 */ typedef tagFUNCDESC *LPFUNCDESC;

/* 3363 */ typedef _PSP *HPROPSHEETPAGE;

/* 3364 */ typedef _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION *PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

/* 3365 */ typedef _PRINTER_INFO_5W *LPPRINTER_INFO_5W;

/* 3366 */ typedef tagPOLYTEXTA *PPOLYTEXTA;

/* 3367 */ typedef tagHANDLETABLE *PHANDLETABLE;

/* 3368 */ typedef tagLOGPEN *NPLOGPEN;

/* 3369 */ typedef tagLOGPEN *LPLOGPEN;

/* 3370 */ typedef _PROPSHEETHEADERA *LPPROPSHEETHEADERA;

/* 3371 */ typedef int (__stdcall *WNDENUMPROC)(HWND__ *, int);

/* 3372 */ typedef _FORM_INFO_1A *PFORM_INFO_1;

/* 3373 */ typedef _IMAGE_SEPARATE_DEBUG_HEADER *PIMAGE_SEPARATE_DEBUG_HEADER;

/* 3374 */ typedef HWAVEIN__ *HWAVEIN;

/* 3375 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_WRITE_CERT)(void *, _CERT_CONTEXT *, unsigned int);

/* 3376 */ typedef unsigned int (__stdcall *LPFNPSPCALLBACKA)(HWND__ *, unsigned int, _PROPSHEETPAGEA *);

/* 3377 */ typedef tagSTICKYKEYS *LPSTICKYKEYS;

/* 3378 */ typedef tagLOGFONTW *LPLOGFONTW;

/* 3379 */ typedef _HTTPSPolicyCallbackData *PSSL_EXTRA_CERT_CHAIN_POLICY_PARA;

/* 3380 */ typedef tagLOGFONTA *PLOGFONT;

/* 3381 */ typedef tagLOGFONTW *NPLOGFONTW;

/* 3382 */ typedef _CERT_REQUEST_INFO *PCERT_REQUEST_INFO;

/* 3383 */ typedef _RPC_SECURITY_QOS_V2_A *PRPC_SECURITY_QOS_V2_A;

/* 3384 */ typedef tagEMRSETWORLDTRANSFORM *PEMRSETWORLDTRANSFORM;

/* 3385 */ typedef _CTL_FIND_SUBJECT_PARA *PCTL_FIND_SUBJECT_PARA;

/* 3386 */ typedef int (__cdecl *RPC_BLOCKING_FN)(void *, void *, void *);

/* 3387 */ typedef _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO *PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;

/* 3388 */ typedef int (__stdcall *PCRYPT_RESOLVE_HCRYPTPROV_FUNC)(_CRYPT_PRIVATE_KEY_INFO *, unsigned int *, void *);

/* 3389 */ typedef _PRINTER_INFO_5A *LPPRINTER_INFO_5;

/* 3390 */ typedef _IMAGE_TLS_DIRECTORY32 *PIMAGE_TLS_DIRECTORY32;

/* 3391 */ typedef _PRINTER_INFO_9W *PPRINTER_INFO_9W;

/* 3392 */ typedef _OSVERSIONINFOEXW *PRTL_OSVERSIONINFOEXW;

/* 3393 */ typedef tagMSGBOXPARAMSA *LPMSGBOXPARAMS;

/* 3394 */ typedef __int64 *PLONGLONG;

/* 3395 */ typedef tagMEASUREITEMSTRUCT *PMEASUREITEMSTRUCT;

/* 3396 */ typedef _WIN32_FIND_DATAA *LPWIN32_FIND_DATAA;

/* 3397 */ typedef _CRYPT_OID_INFO *PCRYPT_OID_INFO;

/* 3398 */ typedef tWAVEFORMATEX *NPWAVEFORMATEX;

/* 3399 */ typedef unsigned __int64 ULONGLONG;

/* 3400 */ typedef tWAVEFORMATEX *LPWAVEFORMATEX;

/* 3401 */ typedef _AppBarData *PAPPBARDATA;

/* 3402 */ typedef void (__cdecl *_purecall_handler)();

/* 3403 */ typedef _FILESYSTEM_STATISTICS *PFILESYSTEM_STATISTICS;

/* 3404 */ typedef _SID_AND_ATTRIBUTES (*PSID_AND_ATTRIBUTES_ARRAY)[1];

/* 3405 */ typedef __int64 _Longlong;

/* 3406 */ typedef int (__stdcall *CALINFO_ENUMPROCA)(char *);

/* 3407 */ typedef tagEVENTMSG *NPEVENTMSG;

/* 3408 */ typedef tagMSG *PMSG;

/* 3409 */ typedef _GUID *LPIID;

/* 3410 */ typedef tagLOGFONTW *PLOGFONTW;

/* 3411 */ typedef tagEVENTMSG *LPEVENTMSG;

/* 3412 */ typedef int streamsize;

/* 3413 */ typedef _RemotableHandle *wireHACCEL;

/* 3414 */ typedef HMIDIIN__ **LPHMIDIIN;

/* 3415 */ typedef _FORM_INFO_1A *PFORM_INFO_1A;

/* 3416 */ typedef IBindStatusCallback *LPBINDSTATUSCALLBACK;

/* 3417 */ typedef HMIDI__ *HMIDI;

/* 3418 */ typedef unsigned int HANDLE_PTR;

/* 3419 */ typedef _CHANGER_SET_ACCESS *PCHANGER_SET_ACCESS;

/* 3420 */ typedef tagMCI_ANIM_STEP_PARMS *LPMCI_ANIM_STEP_PARMS;

/* 3421 */ typedef char *LPCH;

/* 3422 */ typedef _PRINTER_INFO_8W *PPRINTER_INFO_8W;

/* 3423 */ typedef _CMC_TAGGED_ATTRIBUTE *PCMC_TAGGED_ATTRIBUTE;

/* 3424 */ typedef _CRL_DIST_POINTS_INFO *PCRL_DIST_POINTS_INFO;

/* 3425 */ typedef _WINDOW_BUFFER_SIZE_RECORD *PWINDOW_BUFFER_SIZE_RECORD;

/* 3426 */ typedef _WSAQuerySetA *LPWSAQUERYSETA;

/* 3427 */ typedef tagLOGFONTA *PLOGFONTA;

/* 3428 */ typedef _PREVENT_MEDIA_REMOVAL *PPREVENT_MEDIA_REMOVAL;

/* 3429 */ typedef tagEMRSELECTCLIPPATH *PEMRSETSTRETCHBLTMODE;

/* 3430 */ typedef int (__stdcall *CALINFO_ENUMPROCW)(unsigned __int16 *);

/* 3431 */ typedef void **PHDEVNOTIFY;

/* 3432 */ typedef _CMSG_KEY_AGREE_ENCRYPT_INFO *PCMSG_KEY_AGREE_ENCRYPT_INFO;

/* 3433 */ typedef tagSIZE *PSIZE;

/* 3434 */ typedef unsigned int SECURITY_INFORMATION;

/* 3435 */ typedef _FORM_INFO_1W *PFORM_INFO_1W;

/* 3436 */ typedef tagWAVEOUTCAPS2A *PWAVEOUTCAPS2;

/* 3437 */ typedef void *HGLOBAL;

/* 3438 */ typedef IDropSource *LPDROPSOURCE;

/* 3439 */ typedef void **LPHANDLE;

/* 3440 */ typedef unsigned int dev_t;

/* 3441 */ typedef tagFONTSIGNATURE *LPFONTSIGNATURE;

/* 3442 */ typedef void *HCRYPTDEFAULTCONTEXT;

/* 3443 */ typedef _IMAGE_IMPORT_DESCRIPTOR *PIMAGE_IMPORT_DESCRIPTOR;

/* 3444 */ typedef unsigned __int16 wint_t;

/* 3445 */ typedef tagEMRARC *PEMRARCTO;

/* 3446 */ typedef tagWAVEOUTCAPSA *PWAVEOUTCAPS;

/* 3447 */ typedef _CMC_TAGGED_CONTENT_INFO *PCMC_TAGGED_CONTENT_INFO;

/* 3448 */ typedef _SHCREATEPROCESSINFOW *PSHCREATEPROCESSINFOW;

/* 3449 */ typedef _FULL_PTR_TO_REFID_ELEMENT *PFULL_PTR_TO_REFID_ELEMENT;

/* 3450 */ typedef tagDRVCONFIGINFO *LPDRVCONFIGINFO;

/* 3451 */ typedef tagEXTLOGFONTA *LPEXTLOGFONT;

/* 3452 */ typedef tagDRVCONFIGINFO *NPDRVCONFIGINFO;

/* 3453 */ typedef _CREATE_PROCESS_DEBUG_INFO *LPCREATE_PROCESS_DEBUG_INFO;

/* 3454 */ typedef void **SPHANDLE;

/* 3455 */ typedef tagEXTLOGFONTA *NPEXTLOGFONT;

/* 3456 */ typedef unsigned int __stdcall PM_CLOSE_PROC();

/* 3457 */ typedef _OSVERSIONINFOW *PRTL_OSVERSIONINFOW;

/* 3458 */ typedef _CRYPTOAPI_BLOB *PCERT_BLOB;

/* 3459 */ typedef tagEMRSELECTOBJECT *PEMRDELETEOBJECT;

/* 3460 */ typedef void (__stdcall *RPC_DISPATCH_FUNCTION)(_RPC_MESSAGE *);

/* 3461 */ typedef _FILE_NOTIFY_INFORMATION *PFILE_NOTIFY_INFORMATION;

/* 3462 */ typedef IWinInetInfo *LPWININETINFO;

/* 3463 */ typedef _SHFILEOPSTRUCTW *LPSHFILEOPSTRUCTW;

/* 3464 */ typedef void *PVOID64;

/* 3465 */ typedef _OUTLINETEXTMETRICA *POUTLINETEXTMETRIC;

/* 3466 */ typedef tagEXCEPINFO *LPEXCEPINFO;

/* 3467 */ typedef _ENUM_SERVICE_STATUSA *LPENUM_SERVICE_STATUSA;

/* 3468 */ typedef _CRYPT_PKCS8_IMPORT_PARAMS *PCRYPT_PRIVATE_KEY_BLOB_AND_PARAMS;

/* 3469 */ typedef void (__stdcall *TIMERPROC)(HWND__ *, unsigned int, unsigned int, unsigned int);

/* 3470 */ typedef LIST_ENTRY64 *PLIST_ENTRY64;

/* 3471 */ typedef _SHFILEOPSTRUCTA *LPSHFILEOPSTRUCTA;

/* 3472 */ typedef OPENCARD_SEARCH_CRITERIAA *LPOPENCARD_SEARCH_CRITERIA;

/* 3473 */ typedef tagEMREXTCREATEPEN *PEMREXTCREATEPEN;

/* 3474 */ typedef tagEMRCREATEPALETTE *PEMRCREATEPALETTE;

/* 3475 */ typedef int (__stdcall *PREAD_PROCESS_MEMORY_ROUTINE)(void *, unsigned int, void *, unsigned int, unsigned int *);

/* 3476 */ typedef tagWAVEOUTCAPSW *PWAVEOUTCAPSW;

/* 3477 */ typedef __int64 *PINT64;

/* 3478 */ typedef unsigned __int64 UINT64;

/* 3479 */ typedef tagEXTLOGFONTW *NPEXTLOGFONTW;

/* 3480 */ typedef tagWAVEINCAPS2A *LPWAVEINCAPS2A;

/* 3481 */ typedef IMultiQI *LPMULTIQI;

/* 3482 */ typedef int (__stdcall *PFNPROCESSPOLICIESA)(HWND__ *, const char *, const char *, const char *, unsigned int);

/* 3483 */ typedef tagEXTLOGFONTW *LPEXTLOGFONTW;

/* 3484 */ typedef tagWAVEINCAPS2A *NPWAVEINCAPS2A;

/* 3485 */ typedef _TAPE_GET_MEDIA_PARAMETERS *PTAPE_GET_MEDIA_PARAMETERS;

/* 3486 */ typedef tagWAVEOUTCAPSA *PWAVEOUTCAPSA;

/* 3487 */ typedef tagNMHDR *LPNMHDR;

/* 3488 */ typedef tagWINDOWINFO *LPWINDOWINFO;

/* 3489 */ typedef _ENCRYPTION_CERTIFICATE_HASH_LIST *PENCRYPTION_CERTIFICATE_HASH_LIST;

/* 3490 */ typedef tagEXTLOGFONTA *LPEXTLOGFONTA;

/* 3491 */ typedef tagNEWTEXTMETRICA *LPNEWTEXTMETRIC;

/* 3492 */ typedef tagEXTLOGFONTA *NPEXTLOGFONTA;

/* 3493 */ typedef tagNEWTEXTMETRICA *NPNEWTEXTMETRIC;

/* 3494 */ typedef int (__stdcall *PFNPROCESSPOLICIESW)(HWND__ *, const unsigned __int16 *, const unsigned __int16 *, const unsigned __int16 *, unsigned int);

/* 3495 */ typedef joyinfo_tag *LPJOYINFO;

/* 3496 */ typedef joyinfo_tag *NPJOYINFO;

/* 3497 */ typedef IErrorInfo *LPERRORINFO;

/* 3498 */ typedef _CONSOLE_SCREEN_BUFFER_INFO *PCONSOLE_SCREEN_BUFFER_INFO;

/* 3499 */ typedef _BIDI_REQUEST_DATA *LPBIDI_REQUEST_DATA;

/* 3500 */ typedef _OUTLINETEXTMETRICW *POUTLINETEXTMETRICW;

/* 3501 */ typedef _SCARD_IO_REQUEST *LPSCARD_IO_REQUEST;

/* 3502 */ typedef tagICONMETRICSA *LPICONMETRICS;

/* 3503 */ typedef _OFSTRUCT *LPOFSTRUCT;

/* 3504 */ typedef _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA *PCMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;

/* 3505 */ typedef OPENCARD_SEARCH_CRITERIAW *LPOPENCARD_SEARCH_CRITERIAW;

/* 3506 */ typedef unsigned __int16 ATOM;

/* 3507 */ typedef _OUTLINETEXTMETRICA *POUTLINETEXTMETRICA;

/* 3508 */ typedef _CRYPT_PKCS8_IMPORT_PARAMS *PCRYPT_PKCS8_IMPORT_PARAMS;

/* 3509 */ typedef _CSADDR_INFO *PCSADDR_INFO;

/* 3510 */ typedef _SHFILEOPSTRUCTA *LPSHFILEOPSTRUCT;

/* 3511 */ typedef OPENCARD_SEARCH_CRITERIAA *LPOPENCARD_SEARCH_CRITERIAA;

/* 3512 */ typedef tagEMRCREATEMONOBRUSH *PEMRCREATEMONOBRUSH;

/* 3513 */ typedef _CMSG_RECIPIENT_ENCODE_INFO *PCMSG_RECIPIENT_ENCODE_INFO;

/* 3514 */ typedef threadmbcinfostruct *pthreadmbcinfo;

/* 3515 */ typedef tagMIXERCONTROLDETAILS_LISTTEXTA *PMIXERCONTROLDETAILS_LISTTEXTA;

/* 3516 */ typedef int (__stdcall *LPMMIOPROC)(char *, unsigned int, int, int);

/* 3517 */ typedef _CRYPT_SMIME_CAPABILITY *PCRYPT_SMIME_CAPABILITY;

/* 3518 */ typedef tagDEBUGHOOKINFO *LPDEBUGHOOKINFO;

/* 3519 */ typedef _CRYPT_ENCODE_PARA *PCRYPT_ENCODE_PARA;

/* 3520 */ typedef tagDEBUGHOOKINFO *NPDEBUGHOOKINFO;

/* 3521 */ typedef unsigned int (__stdcall *LPSETUPHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 3522 */ typedef tMIXERCONTROLDETAILS_SIGNED *LPMIXERCONTROLDETAILS_SIGNED;

/* 3523 */ typedef _DOCINFOA *LPDOCINFO;

/* 3524 */ typedef _EFS_RPC_BLOB *PEFS_RPC_BLOB;

/* 3525 */ typedef _PRINTER_INFO_4A *LPPRINTER_INFO_4A;

/* 3526 */ typedef HDROP__ *HDROP;

/* 3527 */ typedef _NOTIFYICONDATAA *PNOTIFYICONDATA;

/* 3528 */ typedef _DATATYPES_INFO_1W *PDATATYPES_INFO_1W;

/* 3529 */ typedef _CERT_SYSTEM_STORE_RELOCATE_PARA *PCERT_SYSTEM_STORE_RELOCATE_PARA;

/* 3530 */ typedef tagMCI_OPEN_PARMSA *LPMCI_OPEN_PARMS;

/* 3531 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_DELETE_CTL)(void *, _CTL_CONTEXT *, unsigned int);

/* 3532 */ typedef tagPALETTEENTRY *LPPALETTEENTRY;

/* 3533 */ typedef tagPOLYTEXTA *PPOLYTEXT;

/* 3534 */ typedef _CERT_CRL_CONTEXT_PAIR *PCCERT_CRL_CONTEXT_PAIR;

/* 3535 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_DELETE_CRL)(void *, _CRL_CONTEXT *, unsigned int);

/* 3536 */ typedef mmtime_tag *NPMMTIME;

/* 3537 */ typedef mmtime_tag *LPMMTIME;

/* 3538 */ typedef _TAPE_STATISTICS *PTAPE_STATISTICS;

/* 3539 */ typedef _PRINTER_INFO_4W *LPPRINTER_INFO_4W;

/* 3540 */ typedef _LDT_ENTRY *PLDT_ENTRY;

/* 3541 */ typedef tagENHMETAHEADER *PENHMETAHEADER;

/* 3542 */ typedef tagNCCALCSIZE_PARAMS *LPNCCALCSIZE_PARAMS;

/* 3543 */ typedef _GENERIC_BINDING_ROUTINE_PAIR *PGENERIC_BINDING_ROUTINE_PAIR;

/* 3544 */ typedef _POINTFLOAT *PPOINTFLOAT;

/* 3545 */ typedef _PRINTER_INFO_2W *PPRINTER_INFO_2W;

/* 3546 */ typedef BATTERY_REPORTING_SCALE *PBATTERY_REPORTING_SCALE;

/* 3547 */ typedef tagEMRELLIPSE *PEMRELLIPSE;

/* 3548 */ typedef tagSOUNDSENTRYW *LPSOUNDSENTRYW;

/* 3549 */ typedef _TRIVERTEX *LPTRIVERTEX;

/* 3550 */ typedef _CRYPTOAPI_BLOB *PDATA_BLOB;

/* 3551 */ typedef _MMCKINFO *PMMCKINFO;

/* 3552 */ typedef _RPC_SECURITY_QOS_V3_A *PRPC_SECURITY_QOS_V3_A;

/* 3553 */ typedef unsigned int *LPSCARDHANDLE;

/* 3554 */ typedef int *PSCODE;

/* 3555 */ typedef void (__stdcall *APC_CALLBACK_FUNCTION)(unsigned int, void *, void *);

/* 3556 */ typedef __int16 *PSHORT;

/* 3557 */ typedef unsigned __int16 WORD;

/* 3558 */ typedef _TAPE_PREPARE *PTAPE_PREPARE;

/* 3559 */ typedef _PRINTER_INFO_1W *PPRINTER_INFO_1W;

/* 3560 */ typedef unsigned __int16 USHORT;

/* 3561 */ typedef tagMCI_OPEN_PARMSW *LPMCI_OPEN_PARMSW;

/* 3562 */ typedef _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO *PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO;

/* 3563 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_SET_CTL_PROPERTY)(void *, _CTL_CONTEXT *, unsigned int, unsigned int, const void *);

/* 3564 */ typedef _PRINTER_INFO_4A *LPPRINTER_INFO_4;

/* 3565 */ typedef int (__stdcall *LOCALE_ENUMPROCW)(unsigned __int16 *);

/* 3566 */ typedef tagAUXCAPSW *NPAUXCAPSW;

/* 3567 */ typedef _OUTPUT_DEBUG_STRING_INFO *LPOUTPUT_DEBUG_STRING_INFO;

/* 3568 */ typedef tagAUXCAPSW *LPAUXCAPSW;

/* 3569 */ typedef _RPC_MESSAGE *PRPC_MESSAGE;

/* 3570 */ typedef tagDRAWITEMSTRUCT *PDRAWITEMSTRUCT;

/* 3571 */ typedef tagMCI_OPEN_PARMSA *LPMCI_OPEN_PARMSA;

/* 3572 */ typedef tagMCI_ANIM_UPDATE_PARMS *LPMCI_ANIM_UPDATE_PARMS;

/* 3573 */ typedef unsigned __int16 FSHORT;

/* 3574 */ typedef _WIN32_FIND_DATAA *LPWIN32_FIND_DATA;

/* 3575 */ typedef in_addr *PIN_ADDR;

/* 3576 */ typedef tagDELETEITEMSTRUCT *PDELETEITEMSTRUCT;

/* 3577 */ typedef tagMIXERCAPS2W *PMIXERCAPS2W;

/* 3578 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_GET_CTL_PROPERTY)(void *, _CTL_CONTEXT *, unsigned int, unsigned int, void *, unsigned int *);

/* 3579 */ typedef tagWINDOWPLACEMENT *PWINDOWPLACEMENT;

/* 3580 */ typedef int (__stdcall *SERVER_ROUTINE)();

/* 3581 */ typedef _ADDJOB_INFO_1W *LPADDJOB_INFO_1W;

/* 3582 */ typedef tagEMRSETCOLORADJUSTMENT *PEMRSETCOLORADJUSTMENT;

/* 3583 */ typedef pvalueW *PPVALUEW;

/* 3584 */ typedef tagCY *LPCY;

/* 3585 */ typedef _RTL_CRITICAL_SECTION_DEBUG *PRTL_CRITICAL_SECTION_DEBUG;

/* 3586 */ typedef servent *PSERVENT;

/* 3587 */ typedef _CERT_POLICY_CONSTRAINTS_INFO *PCERT_POLICY_CONSTRAINTS_INFO;

/* 3588 */ typedef tagRECONVERTSTRING *NPRECONVERTSTRING;

/* 3589 */ typedef _TOKEN_PRIVILEGES *PTOKEN_PRIVILEGES;

/* 3590 */ typedef tagRECONVERTSTRING *LPRECONVERTSTRING;

/* 3591 */ typedef _TRANSMIT_PACKETS_ELEMENT *LPTRANSMIT_PACKETS_ELEMENT;

/* 3592 */ typedef void *HCRYPTASYNC;

/* 3593 */ typedef _WSAQuerySetA *LPWSAQUERYSET;

/* 3594 */ typedef _GLYPHMETRICSFLOAT *LPGLYPHMETRICSFLOAT;

/* 3595 */ typedef unsigned int *PUINT32;

/* 3596 */ typedef provider_info *PPROVIDER;

/* 3597 */ typedef tagWAVEINCAPSW *LPWAVEINCAPSW;

/* 3598 */ typedef _OSVERSIONINFOW *LPOSVERSIONINFOW;

/* 3599 */ typedef _FIND_NAME_BUFFER *PFIND_NAME_BUFFER;

/* 3600 */ typedef _CHANGER_ELEMENT_LIST *PCHANGER_ELEMENT_LIST;

/* 3601 */ typedef tagWAVEINCAPSW *NPWAVEINCAPSW;

/* 3602 */ typedef _PRINTER_INFO_7W *PPRINTER_INFO_7W;

/* 3603 */ typedef IAdviseSink2 *LPADVISESINK2;

/* 3604 */ typedef tagMIDIINCAPS2W *NPMIDIINCAPS2W;

/* 3605 */ typedef tagEntry *PENTRY;

/* 3606 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_FREE_FIND_CERT)(void *, _CERT_CONTEXT *, void *, unsigned int);

/* 3607 */ typedef tagMIDIINCAPS2W *LPMIDIINCAPS2W;

/* 3608 */ typedef _IMAGE_DATA_DIRECTORY *PIMAGE_DATA_DIRECTORY;

/* 3609 */ typedef _SECURITY_IMPERSONATION_LEVEL *PSECURITY_IMPERSONATION_LEVEL;

/* 3610 */ typedef tagCUSTDATAITEM *LPCUSTDATAITEM;

/* 3611 */ typedef tagWAVEOUTCAPS2A *PWAVEOUTCAPS2A;

/* 3612 */ typedef _CTL_USAGE *PCERT_ENHKEY_USAGE;

/* 3613 */ typedef tagWAVEINCAPSA *PWAVEINCAPSA;

/* 3614 */ typedef tagMCI_VD_ESCAPE_PARMSA *PMCI_VD_ESCAPE_PARMSA;

/* 3615 */ typedef int MEMBERID;

/* 3616 */ typedef int __stdcall RPC_FORWARD_FUNCTION(_GUID *, _RPC_VERSION *, _GUID *, char *, void **);

/* 3617 */ typedef _CRYPTOAPI_BLOB *PCRL_BLOB;

/* 3618 */ typedef tagWAVEINCAPSA *NPWAVEINCAPSA;

/* 3619 */ typedef IAdviseSink *LPADVISESINK;

/* 3620 */ typedef _CHANGER_SET_POSITION *PCHANGER_SET_POSITION;

/* 3621 */ typedef tagWAVEINCAPSA *LPWAVEINCAPSA;

/* 3622 */ typedef void *LPVOID;

/* 3623 */ typedef WSAData *LPWSADATA;

/* 3624 */ typedef _WSAPROTOCOLCHAIN *LPWSAPROTOCOLCHAIN;

/* 3625 */ typedef int SHANDLE_PTR;

/* 3626 */ typedef tagMIXERCAPSW *LPMIXERCAPSW;

/* 3627 */ typedef tagMCI_VD_ESCAPE_PARMSW *PMCI_VD_ESCAPE_PARMSW;

/* 3628 */ typedef tagMCI_LOAD_PARMSA *PMCI_LOAD_PARMS;

/* 3629 */ typedef int off_t;

/* 3630 */ typedef _CRYPT_X942_OTHER_INFO *PCRYPT_X942_OTHER_INFO;

/* 3631 */ typedef HMIDIOUT__ *HMIDIOUT;

/* 3632 */ typedef _cpinfo *LPCPINFO;

/* 3633 */ typedef value_entW *PVALENTW;

/* 3634 */ typedef unsigned __int16 *LPWORD;

/* 3635 */ typedef tagEMREXTTEXTOUTA *PEMREXTTEXTOUTA;

/* 3636 */ typedef _EVENTLOG_FULL_INFORMATION *LPEVENTLOG_FULL_INFORMATION;

/* 3637 */ typedef tagMIXERLINECONTROLSW *LPMIXERLINECONTROLSW;

/* 3638 */ typedef _COORD *PCOORD;

/* 3639 */ typedef tagEMRSELECTOBJECT *PEMRSELECTOBJECT;

/* 3640 */ typedef tagCUSTDATA *LPCUSTDATA;

/* 3641 */ typedef tagMENUITEMINFOA *LPMENUITEMINFOA;

/* 3642 */ typedef _PRINTER_NOTIFY_OPTIONS *PPRINTER_NOTIFY_OPTIONS;

/* 3643 */ typedef ITypeComp *LPTYPECOMP;

/* 3644 */ typedef _WSACOMPLETION *LPWSACOMPLETION;

/* 3645 */ typedef tagMCI_VD_ESCAPE_PARMSW *LPMCI_VD_ESCAPE_PARMSW;

/* 3646 */ typedef tagEMRFILLPATH *PEMRFILLPATH;

/* 3647 */ typedef tagMENUITEMINFOW *LPMENUITEMINFOW;

/* 3648 */ typedef HFONT__ *HFONT;

/* 3649 */ typedef tagEMREXTTEXTOUTA *PEMREXTTEXTOUTW;

/* 3650 */ typedef tagEMREOF *PEMREOF;

/* 3651 */ typedef int (__stdcall *PFN_INIT_CRITSEC_AND_SPIN_COUNT)(_RTL_CRITICAL_SECTION *, unsigned int);

/* 3652 */ typedef ICreateTypeLib2 *LPCREATETYPELIB2;

/* 3653 */ typedef _ENUM_SERVICE_STATUSA *LPENUM_SERVICE_STATUS;

/* 3654 */ typedef tagEMRPOLYPOLYLINE *PEMRPOLYPOLYGON;

/* 3655 */ typedef _PRINTER_INFO_5W *PPRINTER_INFO_5W;

/* 3656 */ typedef int LONG;

/* 3657 */ typedef tagWAVEINCAPS2A *LPWAVEINCAPS2;

/* 3658 */ typedef int *LPLONG;

/* 3659 */ typedef _EXCEPTION_RECORD *PEXCEPTION_RECORD;

/* 3660 */ typedef tagWAVEINCAPS2A *NPWAVEINCAPS2;

/* 3661 */ typedef tagMENUINFO *LPMENUINFO;

/* 3662 */ typedef unsigned __int16 *PPARAM_OFFSETTABLE;

/* 3663 */ typedef unsigned int CALID;

/* 3664 */ typedef tagMCI_VD_ESCAPE_PARMSA *PMCI_VD_ESCAPE_PARMS;

/* 3665 */ typedef int (__cdecl *_PNH)(unsigned int);

/* 3666 */ typedef int (__stdcall *PFN_CERT_DLL_OPEN_STORE_PROV_FUNC)(const char *, unsigned int, unsigned int, unsigned int, const void *, void *, _CERT_STORE_PROV_INFO *);

/* 3667 */ typedef tagWAVEINCAPSA *NPWAVEINCAPS;

/* 3668 */ typedef tagWAVEINCAPSA *LPWAVEINCAPS;

/* 3669 */ typedef tagEMRLINETO *PEMRMOVETOEX;

/* 3670 */ typedef _CHANGER_READ_ELEMENT_STATUS *PCHANGER_READ_ELEMENT_STATUS;

/* 3671 */ typedef int (__stdcall *EDITWORDBREAKPROCW)(unsigned __int16 *, int, int, int);

/* 3672 */ typedef IExternalConnection *LPEXTERNALCONNECTION;

/* 3673 */ typedef tagICONMETRICSA *LPICONMETRICSA;

/* 3674 */ typedef _PRINTER_INFO_4W *PPRINTER_INFO_4W;

/* 3675 */ typedef _CONSOLE_FONT_INFO *PCONSOLE_FONT_INFO;

/* 3676 */ typedef tagEMRSETVIEWPORTEXTEX *PEMRSETVIEWPORTEXTEX;

/* 3677 */ typedef _CMC_ADD_EXTENSIONS_INFO *PCMC_ADD_EXTENSIONS_INFO;

/* 3678 */ typedef tagMENUITEMINFOA *LPMENUITEMINFO;

/* 3679 */ typedef _ACCESS_ALLOWED_OBJECT_ACE *PACCESS_ALLOWED_OBJECT_ACE;

/* 3680 */ typedef tagEMRPOLYLINE *PEMRPOLYBEZIERTO;

/* 3681 */ typedef tagOleMenuGroupWidths *LPOLEMENUGROUPWIDTHS;

/* 3682 */ typedef int time_t;

/* 3683 */ typedef tagCURSORINFO *PCURSORINFO;

/* 3684 */ typedef _CERT_ISSUER_SERIAL_NUMBER *PCERT_ISSUER_SERIAL_NUMBER;

/* 3685 */ typedef _TOKEN_GROUPS *PTOKEN_GROUPS;

/* 3686 */ typedef void (__stdcall *LPTIMECALLBACK)(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);

/* 3687 */ typedef threadlocaleinfostruct *pthreadlocinfo;

/* 3688 */ typedef IMarshal2 *LPMARSHAL2;

/* 3689 */ typedef tagMIXERCONTROLDETAILS_LISTTEXTA *PMIXERCONTROLDETAILS_LISTTEXT;

/* 3690 */ typedef unsigned __int16 SECURITY_DESCRIPTOR_CONTROL;

/* 3691 */ typedef tagCOMPOSITIONFORM *NPCOMPOSITIONFORM;

/* 3692 */ typedef tagMSGBOXPARAMSA *PMSGBOXPARAMSA;

/* 3693 */ typedef tagCOMPOSITIONFORM *LPCOMPOSITIONFORM;

/* 3694 */ typedef _PORT_INFO_3A *LPPORT_INFO_3A;

/* 3695 */ typedef _PORT_INFO_2A *LPPORT_INFO_2A;

/* 3696 */ typedef _PORT_INFO_1A *LPPORT_INFO_1A;

/* 3697 */ typedef _PRINTER_INFO_7A *LPPRINTER_INFO_7A;

/* 3698 */ typedef _CRYPT_KEY_SIGN_MESSAGE_PARA *PCRYPT_KEY_SIGN_MESSAGE_PARA;

/* 3699 */ typedef unsigned __int64 *PULONG64;

/* 3700 */ typedef IDataAdviseHolder *LPDATAADVISEHOLDER;

/* 3701 */ typedef IEnumString *LPENUMSTRING;

/* 3702 */ typedef _DOC_INFO_3W *PDOC_INFO_3W;

/* 3703 */ typedef _WSACOMPLETION *PWSACOMPLETION;

/* 3704 */ typedef _FILETIME *LPFILETIME;

/* 3705 */ typedef IInternetProtocolInfo *LPIINTERNETPROTOCOLINFO;

/* 3706 */ typedef SCARD_READERSTATEW *LPSCARD_READERSTATEW;

/* 3707 */ typedef tagGroup *PGROUP;

/* 3708 */ typedef _PRINTER_INFO_7W *LPPRINTER_INFO_7W;

/* 3709 */ typedef timeval *PTIMEVAL;

/* 3710 */ typedef _ACCESS_DENIED_CALLBACK_OBJECT_ACE *PACCESS_DENIED_CALLBACK_OBJECT_ACE;

/* 3711 */ typedef char CHAR;

/* 3712 */ typedef _SCARD_IO_REQUEST *PSCARD_IO_REQUEST;

/* 3713 */ typedef tagMENUGETOBJECTINFO *PMENUGETOBJECTINFO;

/* 3714 */ typedef _IMAGE_FUNCTION_ENTRY64 *PIMAGE_FUNCTION_ENTRY64;

/* 3715 */ typedef int (__stdcall *WINSTAENUMPROC)(char *, int);

/* 3716 */ typedef IBinding *LPBINDING;

/* 3717 */ typedef _RTL_CRITICAL_SECTION *PCRITICAL_SECTION;

/* 3718 */ typedef _PROVIDOR_INFO_1A *LPPROVIDOR_INFO_1A;

/* 3719 */ typedef _PRINTER_ENUM_VALUESA *LPPRINTER_ENUM_VALUESA;

/* 3720 */ typedef _DOC_INFO_2W *PDOC_INFO_2W;

/* 3721 */ typedef _PROVIDOR_INFO_2A *LPPROVIDOR_INFO_2A;

/* 3722 */ typedef _MODEMDEVCAPS *LPMODEMDEVCAPS;

/* 3723 */ typedef void (__cdecl *_se_translator_function)(unsigned int, _EXCEPTION_POINTERS *);

/* 3724 */ typedef _COMMPROP *LPCOMMPROP;

/* 3725 */ typedef tagSTYLESTRUCT *LPSTYLESTRUCT;

/* 3726 */ typedef tagMULTIKEYHELPA *PMULTIKEYHELP;

/* 3727 */ typedef _CERT_NAME_CONSTRAINTS_INFO *PCERT_NAME_CONSTRAINTS_INFO;

/* 3728 */ typedef void **PHANDLE;

/* 3729 */ typedef _QUOTA_LIMITS *PQUOTA_LIMITS;

/* 3730 */ typedef _SECURITY_ATTRIBUTES *PSECURITY_ATTRIBUTES;

/* 3731 */ typedef tagPAINTSTRUCT *PPAINTSTRUCT;

/* 3732 */ typedef _userFLAG_STGMEDIUM *wireFLAG_STGMEDIUM;

/* 3733 */ typedef _currencyfmtW *LPCURRENCYFMTW;

/* 3734 */ typedef tagMIXERLINEW *LPMIXERLINEW;

/* 3735 */ typedef _RemotableHandle *wireHDC;

/* 3736 */ typedef IRootStorage *LPROOTSTORAGE;

/* 3737 */ typedef tagUSEROBJECTFLAGS *PUSEROBJECTFLAGS;

/* 3738 */ typedef _CRYPT_URL_INFO *PCRYPT_URL_INFO;

/* 3739 */ typedef _DRIVE_LAYOUT_INFORMATION *PDRIVE_LAYOUT_INFORMATION;

/* 3740 */ typedef HKL__ **LPHKL;

/* 3741 */ typedef _PRINTER_INFO_7A *LPPRINTER_INFO_7;

/* 3742 */ typedef OPENCARDNAMEA *POPENCARDNAME;

/* 3743 */ typedef _CREATE_THREAD_DEBUG_INFO *LPCREATE_THREAD_DEBUG_INFO;

/* 3744 */ typedef _NLA_BLOB *PNLA_BLOB;

/* 3745 */ typedef tagFILTERKEYS *LPFILTERKEYS;

/* 3746 */ typedef _DOC_INFO_1W *PDOC_INFO_1W;

/* 3747 */ typedef DLGTEMPLATE *LPDLGTEMPLATEW;

/* 3748 */ typedef tagEMREXTESCAPE *PEMREXTESCAPE;

/* 3749 */ typedef tagBITMAPFILEHEADER *PBITMAPFILEHEADER;

/* 3750 */ typedef tagHSZPAIR *PHSZPAIR;

/* 3751 */ typedef _TAPE_SET_MEDIA_PARAMETERS *PTAPE_SET_MEDIA_PARAMETERS;

/* 3752 */ typedef void __stdcall RPC_SECURITY_CALLBACK_FN(void *);

/* 3753 */ typedef _IMAGE_TLS_DIRECTORY32 *PIMAGE_TLS_DIRECTORY;

/* 3754 */ typedef tagMCI_OVLY_WINDOW_PARMSW *LPMCI_OVLY_WINDOW_PARMSW;

/* 3755 */ typedef unsigned int (__stdcall *LPHANDLER_FUNCTION_EX)(unsigned int, unsigned int, void *, void *);

/* 3756 */ typedef tagEMRGLSRECORD *PEMRGLSRECORD;

/* 3757 */ typedef _ENCRYPTION_CERTIFICATE *PENCRYPTION_CERTIFICATE;

/* 3758 */ typedef tagABORTPATH *PEMRCLOSEFIGURE;

/* 3759 */ typedef tagCONVINFO *PCONVINFO;

/* 3760 */ typedef int (__stdcall *WINSTAENUMPROCA)(char *, int);

/* 3761 */ typedef tagGCP_RESULTSA *LPGCP_RESULTSA;

/* 3762 */ typedef tagEMRTRANSPARENTBLT *PEMRTRANSPARENTBLT;

/* 3763 */ typedef unsigned int *PUINT;

/* 3764 */ typedef int (__stdcall *LANGUAGEGROUP_ENUMPROCA)(unsigned int, char *, char *, unsigned int, int);

/* 3765 */ typedef _STARTUPINFOW *LPSTARTUPINFOW;

/* 3766 */ typedef tMIXERCONTROLDETAILS_BOOLEAN *LPMIXERCONTROLDETAILS_BOOLEAN;

/* 3767 */ typedef _IMAGE_VXD_HEADER *PIMAGE_VXD_HEADER;

/* 3768 */ typedef _FOCUS_EVENT_RECORD *PFOCUS_EVENT_RECORD;

/* 3769 */ typedef _CTL_VERIFY_USAGE_PARA *PCTL_VERIFY_USAGE_PARA;

/* 3770 */ typedef tagMCI_OVLY_OPEN_PARMSA *LPMCI_OVLY_OPEN_PARMS;

/* 3771 */ typedef HMIDIOUT__ **LPHMIDIOUT;

/* 3772 */ typedef tagMCI_SYSINFO_PARMSA *LPMCI_SYSINFO_PARMSA;

/* 3773 */ typedef int (__stdcall *LANGUAGEGROUP_ENUMPROCW)(unsigned int, unsigned __int16 *, unsigned __int16 *, unsigned int, int);

/* 3774 */ typedef _MINIDUMP_CALLBACK_INFORMATION *PMINIDUMP_CALLBACK_INFORMATION;

/* 3775 */ typedef int (__stdcall *WINSTAENUMPROCW)(unsigned __int16 *, int);

/* 3776 */ typedef _ACCESS_DENIED_ACE *PACCESS_DENIED_ACE;

/* 3777 */ typedef tagMCI_ANIM_WINDOW_PARMSA *PMCI_ANIM_WINDOW_PARMSA;

/* 3778 */ typedef tagPOINTS *LPPOINTS;

/* 3779 */ typedef tagWAVEINCAPS2A *PWAVEINCAPS2;

/* 3780 */ typedef __int64 INT64;

/* 3781 */ typedef _TAPE_SET_POSITION *PTAPE_SET_POSITION;

/* 3782 */ typedef tagBITMAPCOREINFO *PBITMAPCOREINFO;

/* 3783 */ typedef _NETINFOSTRUCT *LPNETINFOSTRUCT;

/* 3784 */ typedef tagMCI_STATUS_PARMS *PMCI_STATUS_PARMS;

/* 3785 */ typedef tagCHOOSEFONTW *LPCHOOSEFONTW;

/* 3786 */ typedef HCONVLIST__ *HCONVLIST;

/* 3787 */ typedef tagXFORM *PXFORM;

/* 3788 */ typedef tagMCI_SEEK_PARMS *LPMCI_SEEK_PARMS;

/* 3789 */ typedef unsigned __int16 FILEOP_FLAGS;

/* 3790 */ typedef unsigned __int16 *LPCLIPFORMAT;

/* 3791 */ typedef CM_Power_Data_s *PCM_POWER_DATA;

/* 3792 */ typedef _WSAServiceClassInfoW *LPWSASERVICECLASSINFOW;

/* 3793 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_FREE_FIND_CRL)(void *, _CRL_CONTEXT *, void *, unsigned int);

/* 3794 */ typedef tagMCI_ANIM_WINDOW_PARMSW *PMCI_ANIM_WINDOW_PARMSW;

/* 3795 */ typedef _NT_TIB *PNT_TIB;

/* 3796 */ typedef tagCHOOSEFONTA *LPCHOOSEFONTA;

/* 3797 */ typedef tagEMRFORMAT *PEMRFORMAT;

/* 3798 */ typedef tagMDICREATESTRUCTW *LPMDICREATESTRUCTW;

/* 3799 */ typedef int (__stdcall *LPTOP_LEVEL_EXCEPTION_FILTER)(_EXCEPTION_POINTERS *);

/* 3800 */ typedef tagMCI_OVLY_RECT_PARMS *PMCI_OVLY_RECT_PARMS;

/* 3801 */ typedef int (__stdcall *PFLS_SETVALUE_FUNCTION)(unsigned int, void *);

/* 3802 */ typedef tagSTATDATA *LPSTATDATA;

/* 3803 */ typedef IPropertyBag *LPPROPERTYBAG;

/* 3804 */ typedef int (__stdcall *GEO_ENUMPROC)(int);

/* 3805 */ typedef _PACKEDEVENTINFO *PPACKEDEVENTINFO;

/* 3806 */ typedef int (__stdcall *PROPENUMPROCEXW)(HWND__ *, unsigned __int16 *, void *, unsigned int);

/* 3807 */ typedef void (__stdcall *LPSERVICE_MAIN_FUNCTIONA)(unsigned int, char **);

/* 3808 */ typedef tagJOYCAPSA *PJOYCAPSA;

/* 3809 */ typedef _CERT_REVOCATION_CRL_INFO *PCERT_REVOCATION_CRL_INFO;

/* 3810 */ typedef IEnumOLEVERB *LPENUMOLEVERB;

/* 3811 */ typedef tagLOGCOLORSPACEA *LPLOGCOLORSPACEA;

/* 3812 */ typedef _ENCRYPTION_CERTIFICATE_LIST *PENCRYPTION_CERTIFICATE_LIST;

/* 3813 */ typedef unsigned __int16 *PUHALF_PTR;

/* 3814 */ typedef midihdr_tag *PMIDIHDR;

/* 3815 */ typedef tagRegion *PREGION;

/* 3816 */ typedef tagJOYCAPSW *PJOYCAPSW;

/* 3817 */ typedef _CMC_RESPONSE_INFO *PCMC_RESPONSE_INFO;

/* 3818 */ typedef char *(__stdcall *USER_MARSHAL_UNMARSHALLING_ROUTINE)(unsigned int *, char *, void *);

/* 3819 */ typedef int (__stdcall *PROPENUMPROCEXA)(HWND__ *, char *, void *, unsigned int);

/* 3820 */ typedef _OUTLINETEXTMETRICA *LPOUTLINETEXTMETRICA;

/* 3821 */ typedef _PROCESS_INFORMATION *LPPROCESS_INFORMATION;

/* 3822 */ typedef _OUTLINETEXTMETRICA *NPOUTLINETEXTMETRICA;

/* 3823 */ typedef tagWAVEINCAPS2A *PWAVEINCAPS2A;

/* 3824 */ typedef tagMCI_ANIM_WINDOW_PARMSA *PMCI_ANIM_WINDOW_PARMS;

/* 3825 */ typedef HMETAFILE__ *HMETAFILE;

/* 3826 */ typedef tagPRINTPAGERANGE *LPPRINTPAGERANGE;

/* 3827 */ typedef _SET_PARTITION_INFORMATION *PSET_PARTITION_INFORMATION;

/* 3828 */ typedef BITMAPV4HEADER *LPBITMAPV4HEADER;

/* 3829 */ typedef int (__stdcall *PFN_CERT_ENUM_PHYSICAL_STORE)(const void *, unsigned int, const unsigned __int16 *, _CERT_PHYSICAL_STORE_INFO *, void *, void *);

/* 3830 */ typedef unsigned __int16 UINT16;

/* 3831 */ typedef _OLESTREAMVTBL *LPOLESTREAMVTBL;

/* 3832 */ typedef void *RPC_AUTH_IDENTITY_HANDLE;

/* 3833 */ typedef _PRINTER_NOTIFY_OPTIONS_TYPE *PPRINTER_NOTIFY_OPTIONS_TYPE;

/* 3834 */ typedef DLGITEMTEMPLATE *LPDLGITEMTEMPLATEA;

/* 3835 */ typedef __int16 *PINT16;

/* 3836 */ typedef _CERT_POLICY_ID *PCERT_POLICY_ID;

/* 3837 */ typedef void *PMIDL_XMIT_TYPE;

/* 3838 */ typedef tagIDLDESC *LPIDLDESC;

/* 3839 */ typedef unsigned int __stdcall PM_OPEN_PROC(unsigned __int16 *);

/* 3840 */ typedef IServiceProvider *LPSERVICEPROVIDER;

/* 3841 */ typedef unsigned int KSPIN_LOCK;

/* 3842 */ typedef tagMCI_RECORD_PARMS *LPMCI_RECORD_PARMS;

/* 3843 */ typedef _OSVERSIONINFOEXA *LPOSVERSIONINFOEXA;

/* 3844 */ typedef int (__stdcall *PFN_CMSG_IMPORT_KEY_TRANS)(_CRYPT_ALGORITHM_IDENTIFIER *, _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA *, unsigned int, void *, unsigned int *);

/* 3845 */ typedef int (__stdcall *LPFN_WSARECVMSG)(unsigned int, _WSAMSG *, unsigned int *, _OVERLAPPED *, void (__stdcall *)(unsigned int, unsigned int, _OVERLAPPED *, unsigned int));

/* 3846 */ typedef _WSACMSGHDR *LPWSACMSGHDR;

/* 3847 */ typedef _EXCEPTION_RECORD32 *PEXCEPTION_RECORD32;

/* 3848 */ typedef tagWAVEINCAPS2W *PWAVEINCAPS2W;

/* 3849 */ typedef _IMAGEHLP_STACK_FRAME *PIMAGEHLP_STACK_FRAME;

/* 3850 */ typedef tagCHOOSEFONTA *LPCHOOSEFONT;

/* 3851 */ typedef _CERT_KEY_USAGE_RESTRICTION_INFO *PCERT_KEY_USAGE_RESTRICTION_INFO;

/* 3852 */ typedef _BIDI_REQUEST_CONTAINER *LPBIDI_REQUEST_CONTAINER;

/* 3853 */ typedef _CMSG_SIGNED_ENCODE_INFO *PCMSG_SIGNED_ENCODE_INFO;

/* 3854 */ typedef tagEMRMASKBLT *PEMRMASKBLT;

/* 3855 */ typedef void (__stdcall *RPC_AUTH_KEY_RETRIEVAL_FN)(void *, unsigned __int16 *, unsigned int, void **, int *);

/* 3856 */ typedef _CHANGER_PRODUCT_DATA *PCHANGER_PRODUCT_DATA;

/* 3857 */ typedef _AUDIT_EVENT_TYPE *PAUDIT_EVENT_TYPE;

/* 3858 */ typedef _IMAGE_THUNK_DATA64 *PIMAGE_THUNK_DATA64;

/* 3859 */ typedef sockaddr_in *LPSOCKADDR_IN;

/* 3860 */ typedef unsigned int (__stdcall *PFNRECONCILEPROFILEW)(const unsigned __int16 *, const unsigned __int16 *, unsigned int);

/* 3861 */ typedef tagJOYCAPSA *PJOYCAPS;

/* 3862 */ typedef _SESSION_HEADER *PSESSION_HEADER;

/* 3863 */ typedef _CERT_PRIVATE_KEY_VALIDITY *PCERT_PRIVATE_KEY_VALIDITY;

/* 3864 */ typedef tagEMRPOLYLINE16 *PEMRPOLYLINE16;

/* 3865 */ typedef _TOKEN_PRIMARY_GROUP *PTOKEN_PRIMARY_GROUP;

/* 3866 */ typedef _EFS_KEY_INFO *PEFS_KEY_INFO;

/* 3867 */ typedef tagFORMATETC *LPFORMATETC;

/* 3868 */ typedef tagWNDCLASSEXA *PWNDCLASSEXA;

/* 3869 */ typedef _SCARD_IO_REQUEST *LPCSCARD_IO_REQUEST;

/* 3870 */ typedef int lzo_int;

/* 3871 */ typedef tagPIXELFORMATDESCRIPTOR *PPIXELFORMATDESCRIPTOR;

/* 3872 */ typedef _MODEMSETTINGS *PMODEMSETTINGS;

/* 3873 */ typedef _SERVICE_DESCRIPTIONA *LPSERVICE_DESCRIPTIONA;

/* 3874 */ typedef _numberfmtA *LPNUMBERFMTA;

/* 3875 */ typedef int (__stdcall *PROPENUMPROCEX)(HWND__ *, char *, void *, unsigned int);

/* 3876 */ typedef tagMCI_ANIM_WINDOW_PARMSA *LPMCI_ANIM_WINDOW_PARMS;

/* 3877 */ typedef tagJOYCAPS2A *PJOYCAPS2;

/* 3878 */ typedef char *PSZ;

/* 3879 */ typedef _PORT_INFO_3A *LPPORT_INFO_3;

/* 3880 */ typedef _PORT_INFO_2A *LPPORT_INFO_2;

/* 3881 */ typedef _CRYPT_SEQUENCE_OF_ANY *PCRYPT_SEQUENCE_OF_ANY;

/* 3882 */ typedef _PORT_INFO_1A *LPPORT_INFO_1;

/* 3883 */ typedef _CERT_SYSTEM_STORE_INFO *PCERT_SYSTEM_STORE_INFO;

/* 3884 */ typedef tagMSGBOXPARAMSA *PMSGBOXPARAMS;

/* 3885 */ typedef _TOKEN_USER *PTOKEN_USER;

/* 3886 */ typedef _DISCDLGSTRUCTW *LPDISCDLGSTRUCTW;

/* 3887 */ typedef char *PCH;

/* 3888 */ typedef __int64 USN;

/* 3889 */ typedef _MINIDUMP_EXCEPTION_INFORMATION *PMINIDUMP_EXCEPTION_INFORMATION;

/* 3890 */ typedef IStorage *LPSTORAGE;

/* 3891 */ typedef HSZ__ *HSZ;

/* 3892 */ typedef unsigned int HELPPOLY;

/* 3893 */ typedef int (__stdcall *LPFN_CONNECTEX)(unsigned int, sockaddr *, int, void *, unsigned int, unsigned int *, _OVERLAPPED *);

/* 3894 */ typedef _CTL_INFO *PCTL_INFO;

/* 3895 */ typedef int (__stdcall *LPOCNCHKPROC)(unsigned int, unsigned int, void *);

/* 3896 */ typedef HDDEDATA__ *HDDEDATA;

/* 3897 */ typedef _DISPLAY_DEVICEA *PDISPLAY_DEVICEA;

/* 3898 */ typedef tagTTPOLYGONHEADER *LPTTPOLYGONHEADER;

/* 3899 */ typedef unsigned int SIZE_T;

/* 3900 */ typedef tagTOGGLEKEYS *LPTOGGLEKEYS;

/* 3901 */ typedef _QUERY_SERVICE_CONFIGA *LPQUERY_SERVICE_CONFIGA;

/* 3902 */ typedef _SOCKET_ADDRESS *LPSOCKET_ADDRESS;

/* 3903 */ typedef _CMSG_ENCRYPTED_ENCODE_INFO *PCMSG_ENCRYPTED_ENCODE_INFO;

/* 3904 */ typedef tMIXERCONTROLDETAILS *PMIXERCONTROLDETAILS;

/* 3905 */ typedef _PRINTER_NOTIFY_OPTIONS_TYPE *LPPRINTER_NOTIFY_OPTIONS_TYPE;

/* 3906 */ typedef RPC_IMPORT_CONTEXT_P *PRPC_IMPORT_CONTEXT_P;

/* 3907 */ typedef tagMCI_OVLY_LOAD_PARMSW *LPMCI_OVLY_LOAD_PARMSW;

/* 3908 */ typedef _LUID_AND_ATTRIBUTES *PLUID_AND_ATTRIBUTES;

/* 3909 */ typedef _LUID_AND_ATTRIBUTES (*PLUID_AND_ATTRIBUTES_ARRAY)[1];

/* 3910 */ typedef _CRYPT_ATTRIBUTES *PCRYPT_ATTRIBUTES;

/* 3911 */ typedef _SHNAMEMAPPINGA *LPSHNAMEMAPPINGA;

/* 3912 */ typedef unsigned __int16 *LPPATCHARRAY;

/* 3913 */ typedef joyinfo_tag *PJOYINFO;

/* 3914 */ typedef _CLASS_MEDIA_CHANGE_CONTEXT *PCLASS_MEDIA_CHANGE_CONTEXT;

/* 3915 */ typedef tagABORTPATH *PEMRSAVEDC;

/* 3916 */ typedef _QUERY_SERVICE_CONFIGW *LPQUERY_SERVICE_CONFIGW;

/* 3917 */ typedef _PROVIDOR_INFO_1A *LPPROVIDOR_INFO_1;

/* 3918 */ typedef _PROCESS_HEAP_ENTRY *PPROCESS_HEAP_ENTRY;

/* 3919 */ typedef _PRINTER_ENUM_VALUESA *LPPRINTER_ENUM_VALUES;

/* 3920 */ typedef tagLAYERPLANEDESCRIPTOR *LPLAYERPLANEDESCRIPTOR;

/* 3921 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_WRITE_CRL)(void *, _CRL_CONTEXT *, unsigned int);

/* 3922 */ typedef tagMCI_SAVE_PARMSA *PMCI_SAVE_PARMSA;

/* 3923 */ typedef _PROVIDOR_INFO_2A *LPPROVIDOR_INFO_2;

/* 3924 */ typedef __int16 VARIANT_BOOL;

/* 3925 */ typedef tagMULTIKEYHELPA *PMULTIKEYHELPA;

/* 3926 */ typedef tagCOMPAREITEMSTRUCT *LPCOMPAREITEMSTRUCT;

/* 3927 */ typedef void (__cdecl *unexpected_function)();

/* 3928 */ typedef OPENCARDNAMEA *POPENCARDNAMEA;

/* 3929 */ typedef _RemotableHandle *wireHBRUSH;

/* 3930 */ typedef _COMMTIMEOUTS *LPCOMMTIMEOUTS;

/* 3931 */ typedef _PRINTER_INFO_6 *LPPRINTER_INFO_6;

/* 3932 */ typedef tagEMRSETTEXTCOLOR *PEMRSETTEXTCOLOR;

/* 3933 */ typedef IOleInPlaceObject *LPOLEINPLACEOBJECT;

/* 3934 */ typedef _FORMAT_EX_PARAMETERS *PFORMAT_EX_PARAMETERS;

/* 3935 */ typedef _CERT_CHAIN_PARA *PCERT_CHAIN_PARA;

/* 3936 */ typedef _IMAGE_ARCHIVE_MEMBER_HEADER *PIMAGE_ARCHIVE_MEMBER_HEADER;

/* 3937 */ typedef _ACTIVATION_CONTEXT_QUERY_INDEX *PACTIVATION_CONTEXT_QUERY_INDEX;

/* 3938 */ typedef _FILETIME *PFILETIME;

/* 3939 */ typedef _CMS_DH_KEY_INFO *PCMS_DH_KEY_INFO;

/* 3940 */ typedef void __stdcall TIMECALLBACK(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);

/* 3941 */ typedef _CRYPTOAPI_BLOB *PCRYPT_OBJID_BLOB;

/* 3942 */ typedef unsigned int _TINT;

/* 3943 */ typedef _QUERY_SERVICE_CONFIGA *LPQUERY_SERVICE_CONFIG;

/* 3944 */ typedef tagGCP_RESULTSA *LPGCP_RESULTS;

/* 3945 */ typedef int HFILE;

/* 3946 */ typedef _CMSG_SP3_COMPATIBLE_AUX_INFO *PCMSG_SP3_COMPATIBLE_AUX_INFO;

/* 3947 */ typedef unsigned __int64 *PDWORD64;

/* 3948 */ typedef void (__stdcall *XMIT_HELPER_ROUTINE)(_MIDL_STUB_MESSAGE *);

/* 3949 */ typedef _JOBOBJECT_SECURITY_LIMIT_INFORMATION *PJOBOBJECT_SECURITY_LIMIT_INFORMATION;

/* 3950 */ typedef unsigned int *PUINT_PTR;

/* 3951 */ typedef tagEMRSELECTCLIPPATH *PEMRSETROP2;

/* 3952 */ typedef tagMCI_OVLY_OPEN_PARMSA *LPMCI_OVLY_OPEN_PARMSA;

/* 3953 */ typedef FLASHWINFO *PFLASHWINFO;

/* 3954 */ typedef const char *PCCH;

/* 3955 */ typedef fd_set *LPFD_SET;

/* 3956 */ typedef tagTEXTMETRICW *PTEXTMETRICW;

/* 3957 */ typedef int (__stdcall *PFN_CMSG_IMPORT_ENCRYPT_KEY)(unsigned int, unsigned int, _CRYPT_ALGORITHM_IDENTIFIER *, _CRYPT_ALGORITHM_IDENTIFIER *, char *, unsigned int, unsigned int *);

/* 3958 */ typedef int (__stdcall *ICMENUMPROCW)(unsigned __int16 *, int);

/* 3959 */ typedef _CSADDR_INFO *LPCSADDR_INFO;

/* 3960 */ typedef void __stdcall RPC_OBJECT_INQ_FN(_GUID *, _GUID *, int *);

/* 3961 */ typedef unsigned __int16 *PUINT16;

/* 3962 */ typedef _CRYPT_ATTRIBUTE *PCRYPT_ATTRIBUTE;

/* 3963 */ typedef int (__stdcall *PFN_CMSG_GEN_ENCRYPT_KEY)(unsigned int *, _CRYPT_ALGORITHM_IDENTIFIER *, void *, _CERT_PUBLIC_KEY_INFO *, void *(__stdcall *)(unsigned int), unsigned int *, char **, unsigned int *);

/* 3964 */ typedef int (__stdcall *LPFN_ACCEPTEX)(unsigned int, unsigned int, void *, unsigned int, unsigned int, unsigned int, unsigned int *, _OVERLAPPED *);

/* 3965 */ typedef _IMAGE_DEBUG_MISC *PIMAGE_DEBUG_MISC;

/* 3966 */ typedef tagMENUITEMINFOA *LPCMENUITEMINFOA;

/* 3967 */ typedef int (__stdcall *FONTENUMPROC)(tagLOGFONTA *, tagTEXTMETRICA *, unsigned int, int);

/* 3968 */ typedef int DBROWOFFSET;

/* 3969 */ typedef char SECURITY_CONTEXT_TRACKING_MODE;

/* 3970 */ typedef tagLOGBRUSH *NPLOGBRUSH;

/* 3971 */ typedef _CRYPT_RETRIEVE_AUX_INFO *PCRYPT_RETRIEVE_AUX_INFO;

/* 3972 */ typedef _JOBOBJECT_BASIC_UI_RESTRICTIONS *PJOBOBJECT_BASIC_UI_RESTRICTIONS;

/* 3973 */ typedef tagLOGBRUSH *LPLOGBRUSH;

/* 3974 */ typedef tagLC_ID *LPLC_ID;

/* 3975 */ typedef _CONTEXT *LPCONTEXT;

/* 3976 */ typedef IMoniker *LPMONIKER;

/* 3977 */ typedef tagMCI_GETDEVCAPS_PARMS *LPMCI_GETDEVCAPS_PARMS;

/* 3978 */ typedef tagEMRSELECTCLIPPATH *PEMRSETBKMODE;

/* 3979 */ typedef _wireSAFEARRAY *wireSAFEARRAY;

/* 3980 */ typedef _REMOTE_NAME_INFOA *LPREMOTE_NAME_INFO;

/* 3981 */ typedef _WSANSClassInfoW *PWSANSCLASSINFOW;

/* 3982 */ typedef tagCOLORMATCHTOTARGET *PEMRCOLORMATCHTOTARGET;

/* 3983 */ typedef tagEMRFILLPATH *PEMRSTROKEANDFILLPATH;

/* 3984 */ typedef HIMC__ *HIMC;

/* 3985 */ typedef __int16 SHORT;

/* 3986 */ typedef tagPARAMDATA *LPPARAMDATA;

/* 3987 */ typedef _DATATYPES_INFO_1W *LPDATATYPES_INFO_1W;

/* 3988 */ typedef tagEXTLOGPEN *PEXTLOGPEN;

/* 3989 */ typedef ISupportErrorInfo *LPSUPPORTERRORINFO;

/* 3990 */ typedef _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO *PCRYPT_ENCRYPTED_PRIVATE_KEY_INFO;

/* 3991 */ typedef tagEMRPOLYTEXTOUTA *PEMRPOLYTEXTOUTW;

/* 3992 */ typedef _WSAPROTOCOL_INFOA *LPWSAPROTOCOL_INFO;

/* 3993 */ typedef tagMCI_SEQ_SET_PARMS *LPMCI_SEQ_SET_PARMS;

/* 3994 */ typedef wavehdr_tag *LPWAVEHDR;

/* 3995 */ typedef tagMETARECORD *LPMETARECORD;

/* 3996 */ typedef int (__stdcall *CODEPAGE_ENUMPROCA)(char *);

/* 3997 */ typedef wavehdr_tag *NPWAVEHDR;

/* 3998 */ typedef int (__stdcall *PHANDLER_ROUTINE)(unsigned int);

/* 3999 */ typedef _DATATYPES_INFO_1A *LPDATATYPES_INFO_1A;

/* 4000 */ typedef _UNIVERSAL_NAME_INFOW *LPUNIVERSAL_NAME_INFOW;

/* 4001 */ typedef _BIDI_DATA *LPBIDI_DATA;

/* 4002 */ typedef unsigned int REGSAM;

/* 4003 */ typedef tagENHMETAHEADER *LPENHMETAHEADER;

/* 4004 */ typedef _CERT_PUBLIC_KEY_INFO *PCERT_PUBLIC_KEY_INFO;

/* 4005 */ typedef DLGITEMTEMPLATE *LPDLGITEMTEMPLATE;

/* 4006 */ typedef DLGTEMPLATE *PROPSHEETPAGE_RESOURCE;

/* 4007 */ typedef int (__stdcall *FONTENUMPROCA)(tagLOGFONTA *, tagTEXTMETRICA *, unsigned int, int);

/* 4008 */ typedef tagMETHODDATA *LPMETHODDATA;

/* 4009 */ typedef BITMAPV5HEADER *LPBITMAPV5HEADER;

/* 4010 */ typedef _tagADDRESS64 *LPADDRESS64;

/* 4011 */ typedef _REMOTE_NAME_INFOW *LPREMOTE_NAME_INFOW;

/* 4012 */ typedef _MMIOINFO *LPMMIOINFO;

/* 4013 */ typedef _MMIOINFO *NPMMIOINFO;

/* 4014 */ typedef int (__stdcall *IMCENUMPROC)(HIMC__ *, int);

/* 4015 */ typedef _WSANAMESPACE_INFOA *LPWSANAMESPACE_INFOA;

/* 4016 */ typedef int (__stdcall *FONTENUMPROCW)(tagLOGFONTW *, tagTEXTMETRICW *, unsigned int, int);

/* 4017 */ typedef int LONG32;

/* 4018 */ typedef _BY_HANDLE_FILE_INFORMATION *LPBY_HANDLE_FILE_INFORMATION;

/* 4019 */ typedef void *RPC_BINDING_HANDLE;

/* 4020 */ typedef tagMCI_SET_PARMS *LPMCI_SET_PARMS;

/* 4021 */ typedef tagALTTABINFO *LPALTTABINFO;

/* 4022 */ typedef tagENUMLOGFONTEXA *LPENUMLOGFONTEXA;

/* 4023 */ typedef int __stdcall MMIOPROC(char *, unsigned int, int, int);

/* 4024 */ typedef int (__stdcall *I_RpcProxyGetConnectionTimeoutFn)(unsigned int *);

/* 4025 */ typedef IInternetZoneManager *LPURLZONEMANAGER;

/* 4026 */ typedef _REMOTE_NAME_INFOA *LPREMOTE_NAME_INFOA;

/* 4027 */ typedef _OSVERSIONINFOEXA *LPOSVERSIONINFOEX;

/* 4028 */ typedef _CERT_TRUST_STATUS *PCERT_TRUST_STATUS;

/* 4029 */ typedef _CERT_CHAIN_CONTEXT *PCERT_CHAIN_CONTEXT;

/* 4030 */ typedef unsigned int CPFLAGS;

/* 4031 */ typedef _CRL_INFO *PCRL_INFO;

/* 4032 */ typedef IOleItemContainer *LPOLEITEMCONTAINER;

/* 4033 */ typedef _RPC_HTTP_TRANSPORT_CREDENTIALS_A *PRPC_HTTP_TRANSPORT_CREDENTIALS_A;

/* 4034 */ typedef _CTL_CONTEXT *PCCTL_CONTEXT;

/* 4035 */ typedef IHttpNegotiate2 *LPHTTPNEGOTIATE2;

/* 4036 */ typedef _WSAPROTOCOL_INFOW *LPWSAPROTOCOL_INFOW;

/* 4037 */ typedef tagTITLEBARINFO *PTITLEBARINFO;

/* 4038 */ typedef tagMIDIINCAPSA *PMIDIINCAPS;

/* 4039 */ typedef _EVENTLOGRECORD *PEVENTLOGRECORD;

/* 4040 */ typedef HIMCC__ *HIMCC;

/* 4041 */ typedef _TAPE_GET_STATISTICS *PTAPE_GET_STATISTICS;

/* 4042 */ typedef _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY *PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;

/* 4043 */ typedef tagEMRSELECTPALETTE *PEMRSELECTPALETTE;

/* 4044 */ typedef void *I_RPC_MUTEX;

/* 4045 */ typedef _SID_NAME_USE *PSID_NAME_USE;

/* 4046 */ typedef tagMONITORINFOEXA *LPMONITORINFOEXA;

/* 4047 */ typedef _SERVICE_DESCRIPTIONA *LPSERVICE_DESCRIPTION;

/* 4048 */ typedef _WSAPROTOCOL_INFOA *LPWSAPROTOCOL_INFOA;

/* 4049 */ typedef tagJOYCAPS2A *PJOYCAPS2A;

/* 4050 */ typedef _RPC_HTTP_TRANSPORT_CREDENTIALS_W *PRPC_HTTP_TRANSPORT_CREDENTIALS_W;

/* 4051 */ typedef IMarshal *LPMARSHAL;

/* 4052 */ typedef tagCANDIDATELIST *NPCANDIDATELIST;

/* 4053 */ typedef tagCANDIDATELIST *LPCANDIDATELIST;

/* 4054 */ typedef _DATATYPES_INFO_1A *LPDATATYPES_INFO_1;

/* 4055 */ typedef tagLOGBRUSH32 *NPLOGBRUSH32;

/* 4056 */ typedef tagLOGBRUSH32 *LPLOGBRUSH32;

/* 4057 */ typedef unsigned __int16 KEYARRAY[128];

/* 4058 */ typedef void (__stdcall *PFN_FREE_ENCODED_OBJECT_FUNC)(const char *, _CRYPT_BLOB_ARRAY *, void *);

/* 4059 */ typedef tagMCI_OVLY_SAVE_PARMSA *LPMCI_OVLY_SAVE_PARMS;

/* 4060 */ typedef tagEMRPOLYDRAW *PEMRPOLYDRAW;

/* 4061 */ typedef _strflt *STRFLT;

/* 4062 */ typedef _CERT_SIMPLE_CHAIN *PCERT_SIMPLE_CHAIN;

/* 4063 */ typedef int (__stdcall *GOBJENUMPROC)(void *, int);

/* 4064 */ typedef int (__stdcall *UILANGUAGE_ENUMPROCA)(char *, int);

/* 4065 */ typedef IMAGE_LOAD_CONFIG_DIRECTORY64 *PIMAGE_LOAD_CONFIG_DIRECTORY64;

/* 4066 */ typedef _PRINTER_INFO_9A *LPPRINTER_INFO_9A;

/* 4067 */ typedef _DRIVER_INFO_5A *LPDRIVER_INFO_5A;

/* 4068 */ typedef tagEMRANGLEARC *PEMRANGLEARC;

/* 4069 */ typedef tagEMRPLGBLT *PEMRPLGBLT;

/* 4070 */ typedef unsigned int (__stdcall *LPOCNCONNPROCW)(unsigned int, unsigned __int16 *, unsigned __int16 *, void *);

/* 4071 */ typedef _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA *PCMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;

/* 4072 */ typedef _CERT_EXTENSIONS *PCERT_EXTENSIONS;

/* 4073 */ typedef int RPC_STATUS;

/* 4074 */ typedef _PRINTER_INFO_9W *LPPRINTER_INFO_9W;

/* 4075 */ typedef tagTEXTMETRICA *PTEXTMETRIC;

/* 4076 */ typedef _RPC_ASYNC_STATE *PRPC_ASYNC_STATE;

/* 4077 */ typedef _TOKEN_SOURCE *PTOKEN_SOURCE;

/* 4078 */ typedef int (__stdcall *ENUMRESTYPEPROCA)(HINSTANCE__ *, char *, int);

/* 4079 */ typedef _HISTOGRAM_BUCKET *PHISTOGRAM_BUCKET;

/* 4080 */ typedef tagJOYCAPSA *LPJOYCAPSA;

/* 4081 */ typedef int (__stdcall *TIMEFMT_ENUMPROCA)(char *);

/* 4082 */ typedef tagJOYCAPSA *NPJOYCAPSA;

/* 4083 */ typedef IInternetSession *LPIINTERNETSESSION;

/* 4084 */ typedef _WSAQuerySetA *PWSAQUERYSETA;

/* 4085 */ typedef DRVCONFIGINFOEX *LPDRVCONFIGINFOEX;

/* 4086 */ typedef tagWNDCLASSA *LPWNDCLASS;

/* 4087 */ typedef value_entA *PVALENT;

/* 4088 */ typedef DRVCONFIGINFOEX *NPDRVCONFIGINFOEX;

/* 4089 */ typedef tagWNDCLASSA *NPWNDCLASS;

/* 4090 */ typedef _GRADIENT_RECT *LPGRADIENT_RECT;

/* 4091 */ typedef tagMIDIOUTCAPS2A *LPMIDIOUTCAPS2;

/* 4092 */ typedef _DRIVER_INFO_4A *LPDRIVER_INFO_4A;

/* 4093 */ typedef tagMIDIOUTCAPS2A *NPMIDIOUTCAPS2;

/* 4094 */ typedef _CERT_POLICIES_INFO *PCERT_POLICIES_INFO;

/* 4095 */ typedef _CERT_CONTEXT *(__stdcall *PFN_CRYPT_GET_SIGNER_CERTIFICATE)(void *, unsigned int, _CERT_INFO *, void *);

/* 4096 */ typedef RPC_CLIENT_INFORMATION1 *PRPC_CLIENT_INFORMATION1;

/* 4097 */ typedef int (__stdcall *TIMEFMT_ENUMPROCW)(unsigned __int16 *);

/* 4098 */ typedef _ADMINISTRATOR_POWER_POLICY *PADMINISTRATOR_POWER_POLICY;

/* 4099 */ typedef tagMCI_WAVE_SET_PARMS *PMCI_WAVE_SET_PARMS;

/* 4100 */ typedef _PSFEATURE_CUSTPAPER *PPSFEATURE_CUSTPAPER;

/* 4101 */ typedef _WSAServiceClassInfoA *PWSASERVICECLASSINFO;

/* 4102 */ typedef _devicemodeA *NPDEVMODEA;

/* 4103 */ typedef tagABORTPATH *PEMRENDPATH;

/* 4104 */ typedef _WSAQuerySetW *PWSAQUERYSETW;

/* 4105 */ typedef _devicemodeA *LPDEVMODEA;

/* 4106 */ typedef int (__stdcall *MONITORENUMPROC)(HMONITOR__ *, HDC__ *, tagRECT *, int);

/* 4107 */ typedef _SID_AND_ATTRIBUTES *PSID_AND_ATTRIBUTES;

/* 4108 */ typedef unsigned __int16 *NWPSTR;

/* 4109 */ typedef tagEMRSETPALETTEENTRIES *PEMRSETPALETTEENTRIES;

/* 4110 */ typedef void (__cdecl *_Prhand)(exception *);

/* 4111 */ typedef const unsigned __int16 *LPCOLESTR;

/* 4112 */ typedef int (__stdcall *PFN_CERT_ENUM_SYSTEM_STORE)(const void *, unsigned int, _CERT_SYSTEM_STORE_INFO *, void *, void *);

/* 4113 */ typedef _PRINTER_NOTIFY_OPTIONS *LPPRINTER_NOTIFY_OPTIONS;

/* 4114 */ typedef int (__stdcall *ENUMRESLANGPROCW)(HINSTANCE__ *, const unsigned __int16 *, const unsigned __int16 *, unsigned __int16, int);

/* 4115 */ typedef _PRINTER_INFO_9A *LPPRINTER_INFO_9;

/* 4116 */ typedef sockaddr_in *PSOCKADDR_IN;

/* 4117 */ typedef unsigned int HACCESSOR;

/* 4118 */ typedef tagMOUSEMOVEPOINT *PMOUSEMOVEPOINT;

/* 4119 */ typedef unsigned int UINT_PTR;

/* 4120 */ typedef tagABORTPATH *PEMRSETMETARGN;

/* 4121 */ typedef IPersistStorage *LPPERSISTSTORAGE;

/* 4122 */ typedef int *PINT_PTR;

/* 4123 */ typedef unsigned int *PDWORD_PTR;

/* 4124 */ typedef _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;

/* 4125 */ typedef tagCURSORINFO *LPCURSORINFO;

/* 4126 */ typedef unsigned __int16 *LPKEYARRAY;

/* 4127 */ typedef int (__stdcall *PFN_CMSG_EXPORT_KEY_TRANS)(_CMSG_CONTENT_ENCRYPT_INFO *, _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO *, _CMSG_KEY_TRANS_ENCRYPT_INFO *, unsigned int, void *);

/* 4128 */ typedef tagWNDCLASSA *LPWNDCLASSA;

/* 4129 */ typedef tagDEC *LPDECIMAL;

/* 4130 */ typedef _WSAQuerySetA *PWSAQUERYSET;

/* 4131 */ typedef tagOBJECTDESCRIPTOR *POBJECTDESCRIPTOR;

/* 4132 */ typedef _CERT_CHAIN_FIND_BY_ISSUER_PARA *PCERT_CHAIN_FIND_BY_ISSUER_PARA;

/* 4133 */ typedef tagWNDCLASSA *NPWNDCLASSA;

/* 4134 */ typedef _WSAServiceClassInfoW *PWSASERVICECLASSINFOW;

/* 4135 */ typedef tagENHMETARECORD *PENHMETARECORD;

/* 4136 */ typedef tagMIDIOUTCAPS2A *LPMIDIOUTCAPS2A;

/* 4137 */ typedef _CHAR_INFO *PCHAR_INFO;

/* 4138 */ typedef _DRIVER_INFO_6A *LPDRIVER_INFO_6A;

/* 4139 */ typedef tagMIDIOUTCAPS2A *NPMIDIOUTCAPS2A;

/* 4140 */ typedef _IMAGE_ROM_HEADERS *PIMAGE_ROM_HEADERS;

/* 4141 */ typedef _WSACOMPLETIONTYPE *LPWSACOMPLETIONTYPE;

/* 4142 */ typedef _CTL_USAGE_MATCH *PCTL_USAGE_MATCH;

/* 4143 */ typedef void (__cdecl *terminate_function)();

/* 4144 */ typedef _XMIT_ROUTINE_QUINTUPLE *PXMIT_ROUTINE_QUINTUPLE;

/* 4145 */ typedef tagSIZE *PSIZEL;

/* 4146 */ typedef _tagCODEBASEHOLD *LPCODEBASEHOLD;

/* 4147 */ typedef tagEMRINVERTRGN *PEMRPAINTRGN;

/* 4148 */ typedef tagMIDIOUTCAPS2W *NPMIDIOUTCAPS2W;

/* 4149 */ typedef unsigned int *PACCESS_MASK;

/* 4150 */ typedef tagMIDIOUTCAPS2W *LPMIDIOUTCAPS2W;

/* 4151 */ typedef OPENCARD_SEARCH_CRITERIAA *POPENCARD_SEARCH_CRITERIAA;

/* 4152 */ typedef char _TSCHAR;

/* 4153 */ typedef tagWNDCLASSW *NPWNDCLASSW;

/* 4154 */ typedef _WSAServiceClassInfoA *PWSASERVICECLASSINFOA;

/* 4155 */ typedef int (__stdcall *I_RpcProxyGetClientAddressFn)(void *, char *, unsigned int *);

/* 4156 */ typedef tagWNDCLASSW *LPWNDCLASSW;

/* 4157 */ typedef _MINIDUMP_USER_STREAM_INFORMATION *PMINIDUMP_USER_STREAM_INFORMATION;

/* 4158 */ typedef _RemotableHandle *wireHWND;

/* 4159 */ typedef _WIN32_FIND_DATAA *PWIN32_FIND_DATA;

/* 4160 */ typedef tagWNDCLASSEXA *NPWNDCLASSEXA;

/* 4161 */ typedef tagWNDCLASSEXA *LPWNDCLASSEXA;

/* 4162 */ typedef _DRIVER_INFO_1A *LPDRIVER_INFO_1A;

/* 4163 */ typedef unsigned int (__stdcall *PFNGETPROFILEPATHW)(const unsigned __int16 *, unsigned __int16 *, unsigned int);

/* 4164 */ typedef tagEMRSELECTCLIPPATH *PEMRSETPOLYFILLMODE;

/* 4165 */ typedef _tagSOFTDISTINFO *LPSOFTDISTINFO;

/* 4166 */ typedef void (__stdcall *LPHANDLER_FUNCTION)(unsigned int);

/* 4167 */ typedef tagENUMLOGFONTA *LPENUMLOGFONT;

/* 4168 */ typedef int (__stdcall *PFN_CRYPT_ENUM_KEYID_PROP)(_CRYPTOAPI_BLOB *, unsigned int, void *, void *, unsigned int, unsigned int *, void **, unsigned int *);

/* 4169 */ typedef tagWNDCLASSEXW *LPWNDCLASSEXW;

/* 4170 */ typedef _FULL_PTR_XLAT_TABLES *PFULL_PTR_XLAT_TABLES;

/* 4171 */ typedef tagWNDCLASSEXW *NPWNDCLASSEXW;

/* 4172 */ typedef _DRIVER_INFO_2A *PDRIVER_INFO_2;

/* 4173 */ typedef char INT8;

/* 4174 */ typedef tagREGISTERWORDA *PREGISTERWORDA;

/* 4175 */ typedef unsigned int CALTYPE;

/* 4176 */ typedef _CRYPT_ENCRYPT_MESSAGE_PARA *PCRYPT_ENCRYPT_MESSAGE_PARA;

/* 4177 */ typedef _MONITOR_INFO_1A *PMONITOR_INFO_1;

/* 4178 */ typedef void (__cdecl *_PVFV)();

/* 4179 */ typedef _MONITOR_INFO_2A *PMONITOR_INFO_2;

/* 4180 */ typedef tagMCI_GENERIC_PARMS *PMCI_GENERIC_PARMS;

/* 4181 */ typedef tagPROPVARIANT *LPPROPVARIANT;

/* 4182 */ typedef tagENHMETARECORD *LPENHMETARECORD;

/* 4183 */ typedef _PRINTPROCESSOR_INFO_1A *LPPRINTPROCESSOR_INFO_1A;

/* 4184 */ typedef protoent *PPROTOENT;

/* 4185 */ typedef IStdMarshalInfo *LPSTDMARSHALINFO;

/* 4186 */ typedef _MIDL_STUBLESS_PROXY_INFO *PMIDL_STUBLESS_PROXY_INFO;

/* 4187 */ typedef IPersistStream *LPPERSISTSTREAM;

/* 4188 */ typedef tagWNDCLASSA *PWNDCLASSA;

/* 4189 */ typedef tagEMREXTESCAPE *PEMRDRAWESCAPE;

/* 4190 */ typedef _SCARD_ATRMASK *LPSCARD_ATRMASK;

/* 4191 */ typedef tagMONITORINFO *LPMONITORINFO;

/* 4192 */ typedef timecaps_tag *NPTIMECAPS;

/* 4193 */ typedef _VOLUME_DISK_EXTENTS *PVOLUME_DISK_EXTENTS;

/* 4194 */ typedef unsigned int DWORD;

/* 4195 */ typedef timecaps_tag *LPTIMECAPS;

/* 4196 */ typedef tagAUXCAPS2W *PAUXCAPS2W;

/* 4197 */ typedef int (__stdcall *NAMEENUMPROCA)(char *, int);

/* 4198 */ typedef _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS;

/* 4199 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_SET_CERT_PROPERTY)(void *, _CERT_CONTEXT *, unsigned int, unsigned int, const void *);

/* 4200 */ typedef tagEMRARC *PEMRARC;

/* 4201 */ typedef unsigned int KAFFINITY;

/* 4202 */ typedef int (__stdcall *NAMEENUMPROCW)(unsigned __int16 *, int);

/* 4203 */ typedef char _TUCHAR;

/* 4204 */ typedef unsigned __int16 *PWORD;

/* 4205 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_GET_CERT_PROPERTY)(void *, _CERT_CONTEXT *, unsigned int, unsigned int, void *, unsigned int *);

/* 4206 */ typedef unsigned __int16 UWORD;

/* 4207 */ typedef _SERVICE_FAILURE_ACTIONSW *LPSERVICE_FAILURE_ACTIONSW;

/* 4208 */ typedef void (__cdecl *_secerr_handler_func)(int, void *);

/* 4209 */ typedef tagDEBUGHOOKINFO *PDEBUGHOOKINFO;

/* 4210 */ typedef _DRIVER_INFO_2W *PDRIVER_INFO_2W;

/* 4211 */ typedef _WIN32_FIND_DATAA *PWIN32_FIND_DATAA;

/* 4212 */ typedef HGLRC__ *HGLRC;

/* 4213 */ typedef tagWNDCLASSEXA *NPWNDCLASSEX;

/* 4214 */ typedef _WGLSWAP *PWGLSWAP;

/* 4215 */ typedef _NLA_BLOB *LPNLA_BLOB;

/* 4216 */ typedef tagWNDCLASSEXA *LPWNDCLASSEX;

/* 4217 */ typedef pcmwaveformat_tag *NPPCMWAVEFORMAT;

/* 4218 */ typedef tagMIXERLINECONTROLSA *LPMIXERLINECONTROLS;

/* 4219 */ typedef pcmwaveformat_tag *LPPCMWAVEFORMAT;

/* 4220 */ typedef _DRIVER_INFO_3A *LPDRIVER_INFO_3A;

/* 4221 */ typedef void (__stdcall *PFN_EXIT_PROCESS)(unsigned int);

/* 4222 */ typedef _NT_TIB64 *PNT_TIB64;

/* 4223 */ typedef _GUID *LPFMTID;

/* 4224 */ typedef _FIND_NAME_HEADER *PFIND_NAME_HEADER;

/* 4225 */ typedef _NLA_INTERNET *PNLA_INTERNET;

/* 4226 */ typedef _WIN32_FIND_DATAW *PWIN32_FIND_DATAW;

/* 4227 */ typedef _DRIVER_INFO_2A *PDRIVER_INFO_2A;

/* 4228 */ typedef _CERT_POLICY_QUALIFIER_USER_NOTICE *PCERT_POLICY_QUALIFIER_USER_NOTICE;

/* 4229 */ typedef _flowspec *PFLOWSPEC;

/* 4230 */ typedef _PSHNOTIFY *LPPSHNOTIFY;

/* 4231 */ typedef HUMPD__ *HUMPD;

/* 4232 */ typedef _ACCESS_DENIED_OBJECT_ACE *PACCESS_DENIED_OBJECT_ACE;

/* 4233 */ typedef _PROPSHEETHEADERA *LPCPROPSHEETHEADERA;

/* 4234 */ typedef unsigned int HROW;

/* 4235 */ typedef tagFINDREPLACEA *LPFINDREPLACEA;

/* 4236 */ typedef _CRYPT_BLOB_ARRAY *PCRYPT_BLOB_ARRAY;

/* 4237 */ typedef _PROPSHEETPAGEA *LPCPROPSHEETPAGEA_V2;

/* 4238 */ typedef int DBROWCOUNT;

/* 4239 */ typedef MENUITEMTEMPLATE *PMENUITEMTEMPLATE;

/* 4240 */ typedef int (__stdcall *ABORTPROC)(HDC__ *, int);

/* 4241 */ typedef _DRIVER_INFO_2A *LPDRIVER_INFO_2A;

/* 4242 */ typedef tagEMRROUNDRECT *PEMRROUNDRECT;

/* 4243 */ typedef _TOKEN_STATISTICS *PTOKEN_STATISTICS;

/* 4244 */ typedef tagMIXERCAPSA *LPMIXERCAPS;

/* 4245 */ typedef _PROPSHEETHEADERW *LPCPROPSHEETHEADERW;

/* 4246 */ typedef _CERT_X942_DH_PARAMETERS *PCERT_X942_DH_PARAMETERS;

/* 4247 */ typedef tagMCI_LOAD_PARMSW *PMCI_LOAD_PARMSW;

/* 4248 */ typedef IRunnableObject *LPRUNNABLEOBJECT;

/* 4249 */ typedef void (__cdecl *RPC_SETFILTER_FUNC)(void (__cdecl *)(void *, unsigned int, int));

/* 4250 */ typedef int (__stdcall *LPFN_DISCONNECTEX)(unsigned int, _OVERLAPPED *, unsigned int, unsigned int);

/* 4251 */ typedef _CERT_REVOCATION_STATUS *PCERT_REVOCATION_STATUS;

/* 4252 */ typedef _PROPSHEETPAGEW *LPCPROPSHEETPAGEW_V2;

/* 4253 */ typedef HINSTANCE__ *HMODULE;

/* 4254 */ typedef _CRYPT_OBJID_TABLE *PCRYPT_OBJID_TABLE;

/* 4255 */ typedef _IMAGE_RESOURCE_DATA_ENTRY *PIMAGE_RESOURCE_DATA_ENTRY;

/* 4256 */ typedef int (__stdcall *ENUMRESNAMEPROCW)(HINSTANCE__ *, const unsigned __int16 *, unsigned __int16 *, int);

/* 4257 */ typedef tagEMRRESIZEPALETTE *PEMRRESIZEPALETTE;

/* 4258 */ typedef tagMCI_WAVE_DELETE_PARMS *LPMCI_WAVE_DELETE_PARMS;

/* 4259 */ typedef _PRINTER_INFO_8A *LPPRINTER_INFO_8A;

/* 4260 */ typedef tagMCI_OVLY_SAVE_PARMSA *LPMCI_OVLY_SAVE_PARMSA;

/* 4261 */ typedef timeval *LPTIMEVAL;

/* 4262 */ typedef _ADDJOB_INFO_1A *PADDJOB_INFO_1A;

/* 4263 */ typedef _PROPSHEETPAGEA_V1 *LPPROPSHEETPAGEA_V1;

/* 4264 */ typedef IAuthenticate *LPAUTHENTICATION;

/* 4265 */ typedef _PROPSHEETPAGEA_V3 *LPPROPSHEETPAGEA_V3;

/* 4266 */ typedef unsigned int (__stdcall *LPTHREAD_START_ROUTINE)(void *);

/* 4267 */ typedef _PROPSHEETPAGEA *LPPROPSHEETPAGEA_V2;

/* 4268 */ typedef tagEMRARC *PEMRCHORD;

/* 4269 */ typedef tagEMRCREATECOLORSPACEW *PEMRCREATECOLORSPACEW;

/* 4270 */ typedef _SEC_WINNT_AUTH_IDENTITY_A *PSEC_WINNT_AUTH_IDENTITY_A;

/* 4271 */ typedef char _TXCHAR;

/* 4272 */ typedef _ADDJOB_INFO_1W *PADDJOB_INFO_1W;

/* 4273 */ typedef _SYSTEM_POWER_STATE *PSYSTEM_POWER_STATE;

/* 4274 */ typedef _PRINTER_INFO_8W *LPPRINTER_INFO_8W;

/* 4275 */ typedef tagPSDA *LPPAGESETUPDLG;

/* 4276 */ typedef linger *LPLINGER;

/* 4277 */ typedef _IMAGE_COFF_SYMBOLS_HEADER *PIMAGE_COFF_SYMBOLS_HEADER;

/* 4278 */ typedef tagJOYCAPSA *LPJOYCAPS;

/* 4279 */ typedef tagJOYCAPSA *NPJOYCAPS;

/* 4280 */ typedef unsigned int *PULONG_PTR;

/* 4281 */ typedef _JOB_INFO_2W *PJOB_INFO_2W;

/* 4282 */ typedef tagCOMPOSITIONFORM *PCOMPOSITIONFORM;

/* 4283 */ typedef const char *PCSTR;

/* 4284 */ typedef _FLOATING_SAVE_AREA *PFLOATING_SAVE_AREA;

/* 4285 */ typedef _devicemodeA *NPDEVMODE;

/* 4286 */ typedef unsigned int *PLCID;

/* 4287 */ typedef _devicemodeA *LPDEVMODE;

/* 4288 */ typedef _CERT_KEYGEN_REQUEST_INFO *PCERT_KEYGEN_REQUEST_INFO;

/* 4289 */ typedef _STORAGE_PREDICT_FAILURE *PSTORAGE_PREDICT_FAILURE;

/* 4290 */ typedef void *PIMAGEHLP_CONTEXT;

/* 4291 */ typedef char u_char;

/* 4292 */ typedef void *RPC_NS_HANDLE;

/* 4293 */ typedef _CERT_POLICY_INFO *PCERT_POLICY_INFO;

/* 4294 */ typedef tagEMRCREATECOLORSPACE *PEMRCREATECOLORSPACE;

/* 4295 */ typedef _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO *PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;

/* 4296 */ typedef _PRINTER_INFO_8A *LPPRINTER_INFO_8;

/* 4297 */ typedef unsigned int DBPART;

/* 4298 */ typedef _ADDJOB_INFO_1A *PADDJOB_INFO_1;

/* 4299 */ typedef tagMONHSZSTRUCTW *PMONHSZSTRUCTW;

/* 4300 */ typedef _JOB_INFO_1W *PJOB_INFO_1W;

/* 4301 */ typedef _SMALL_RECT *PSMALL_RECT;

/* 4302 */ typedef _PROPSHEETPAGEW *LPPROPSHEETPAGEW;

/* 4303 */ typedef _EXCEPTION_DEBUG_INFO *LPEXCEPTION_DEBUG_INFO;

/* 4304 */ typedef _WIN32_FILE_ATTRIBUTE_DATA *LPWIN32_FILE_ATTRIBUTE_DATA;

/* 4305 */ typedef IInternetThreadSwitch *LPIINTERNETTHREADSWITCH;

/* 4306 */ typedef tagCHARSETINFO *PCHARSETINFO;

/* 4307 */ typedef int (__stdcall *LANGGROUPLOCALE_ENUMPROCW)(unsigned int, unsigned int, unsigned __int16 *, int);

/* 4308 */ typedef tagPSDA *LPPAGESETUPDLGA;

/* 4309 */ typedef char TBYTE;

/* 4310 */ typedef _CRYPT_SMIME_CAPABILITIES *PCRYPT_SMIME_CAPABILITIES;

/* 4311 */ typedef IHttpSecurity *LPHTTPSECURITY;

/* 4312 */ typedef char *PBYTE;

/* 4313 */ typedef tagEMRELLIPSE *PEMRRECTANGLE;

/* 4314 */ typedef tagEMRPOLYPOLYLINE16 *PEMRPOLYPOLYLINE16;

/* 4315 */ typedef unsigned __int16 UHALF_PTR;

/* 4316 */ typedef IPersistMoniker *LPPERSISTMONIKER;

/* 4317 */ typedef _IMAGE_OS2_HEADER *PIMAGE_OS2_HEADER;

/* 4318 */ typedef tagMCI_WAVE_OPEN_PARMSW *LPMCI_WAVE_OPEN_PARMSW;

/* 4319 */ typedef _GUID *LPCLSID;

/* 4320 */ typedef OPENCARD_SEARCH_CRITERIAA *POPENCARD_SEARCH_CRITERIA;

/* 4321 */ typedef __int16 *PHALF_PTR;

/* 4322 */ typedef _SYSTEM_LOGICAL_PROCESSOR_INFORMATION *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION;

/* 4323 */ typedef _ACTIVATION_CONTEXT_DETAILED_INFORMATION *PACTIVATION_CONTEXT_DETAILED_INFORMATION;

/* 4324 */ typedef tagLOGBRUSH *PPATTERN;

/* 4325 */ typedef _WSANSClassInfoA *PWSANSCLASSINFO;

/* 4326 */ typedef tagEMRFRAMERGN *PEMRFRAMERGN;

/* 4327 */ typedef _PARTITION_INFORMATION *PPARTITION_INFORMATION;

/* 4328 */ typedef _REMSECURITY_ATTRIBUTES *LPREMSECURITY_ATTRIBUTES;

/* 4329 */ typedef int (__stdcall *LANGGROUPLOCALE_ENUMPROCA)(unsigned int, unsigned int, char *, int);

/* 4330 */ typedef tagPSDW *LPPAGESETUPDLGW;

/* 4331 */ typedef int (__stdcall *PFN_CRYPT_CANCEL_RETRIEVAL)(unsigned int, void *);

/* 4332 */ typedef _CERT_BASIC_CONSTRAINTS2_INFO *PCERT_BASIC_CONSTRAINTS2_INFO;

/* 4333 */ typedef tagMINIMIZEDMETRICS *LPMINIMIZEDMETRICS;

/* 4334 */ typedef tagDROPSTRUCT *LPDROPSTRUCT;

/* 4335 */ typedef _CMSG_CMS_SIGNER_INFO *PCMSG_CMS_SIGNER_INFO;

/* 4336 */ typedef tagENUMLOGFONTA *LPENUMLOGFONTA;

/* 4337 */ typedef _CRYPT_ATTRIBUTE_TYPE_VALUE *PCRYPT_ATTRIBUTE_TYPE_VALUE;

/* 4338 */ typedef unsigned int *LPDWORD;

/* 4339 */ typedef int (__stdcall *LPFN_TRANSMITPACKETS)(unsigned int, _TRANSMIT_PACKETS_ELEMENT *, unsigned int, unsigned int, _OVERLAPPED *, unsigned int);

/* 4340 */ typedef _LIST_ENTRY *PLIST_ENTRY;

/* 4341 */ typedef _CRYPT_DECRYPT_MESSAGE_PARA *PCRYPT_DECRYPT_MESSAGE_PARA;

/* 4342 */ typedef tagREGISTERWORDA *PREGISTERWORD;

/* 4343 */ typedef _WSANAMESPACE_INFOA *PWSANAMESPACE_INFO;

/* 4344 */ typedef HCOLORSPACE__ *HCOLORSPACE;

/* 4345 */ typedef _DRIVER_INFO_3A *PDRIVER_INFO_3;

/* 4346 */ typedef _PRINTER_NOTIFY_INFO_DATA *PPRINTER_NOTIFY_INFO_DATA;

/* 4347 */ typedef _CRYPTOAPI_BLOB *PCERT_NAME_BLOB;

/* 4348 */ typedef _SECURITY_DESCRIPTOR_RELATIVE *PISECURITY_DESCRIPTOR_RELATIVE;

/* 4349 */ typedef tagICONMETRICSA *PICONMETRICS;

/* 4350 */ typedef OPENCARDNAME_EXA *POPENCARDNAME_EX;

/* 4351 */ typedef _TIME_ZONE_INFORMATION *PTIME_ZONE_INFORMATION;

/* 4352 */ typedef unsigned __int64 ULONG64;

/* 4353 */ typedef unsigned int DWORD_PTR;

/* 4354 */ typedef __int64 *PLONG64;

/* 4355 */ typedef tagWNDCLASSA *PWNDCLASS;

/* 4356 */ typedef tagTPMPARAMS *LPTPMPARAMS;

/* 4357 */ typedef unsigned int *intrnman;

/* 4358 */ typedef SCARD_READERSTATEA *LPSCARD_READERSTATE;

/* 4359 */ typedef _SERVICE_TABLE_ENTRYW *LPSERVICE_TABLE_ENTRYW;

/* 4360 */ typedef tagBITMAPINFO *LPBITMAPINFO;

/* 4361 */ typedef _EXCEPTION_POINTERS *PEXCEPTION_POINTERS;

/* 4362 */ typedef _BYTE_BLOB *UP_BYTE_BLOB;

/* 4363 */ typedef mmtime_tag *PMMTIME;

/* 4364 */ typedef void **RPC_EP_INQ_HANDLE;

/* 4365 */ typedef _RemotableHandle *wireHMENU;

/* 4366 */ typedef void (__stdcall *CS_TAG_GETTING_ROUTINE)(void *, int, unsigned int *, unsigned int *, unsigned int *, unsigned int *);

/* 4367 */ typedef tagPELARRAY *PPELARRAY;

/* 4368 */ typedef _IMAGEHLP_LINE64 *PIMAGEHLP_LINE64;

/* 4369 */ typedef int (__stdcall *PFN_CMSG_EXPORT_ENCRYPT_KEY)(unsigned int, unsigned int, _CERT_PUBLIC_KEY_INFO *, char *, unsigned int *);

/* 4370 */ typedef _DRIVER_INFO_3W *PDRIVER_INFO_3W;

/* 4371 */ typedef tagEMRSETPIXELV *PEMRSETPIXELV;

/* 4372 */ typedef _WSANAMESPACE_INFOW *PWSANAMESPACE_INFOW;

/* 4373 */ typedef void (__stdcall *PFN_CRYPT_ASYNC_PARAM_FREE_FUNC)(char *, void *);

/* 4374 */ typedef _CERT_SIGNED_CONTENT_INFO *PCERT_SIGNED_CONTENT_INFO;

/* 4375 */ typedef _CRYPT_CONTENT_INFO *PCRYPT_CONTENT_INFO;

/* 4376 */ typedef _FLAGGED_WORD_BLOB *wireBSTR;

/* 4377 */ typedef _TOKEN_AUDIT_POLICY *PTOKEN_AUDIT_POLICY;

/* 4378 */ typedef _WSANAMESPACE_INFOA *PWSANAMESPACE_INFOA;

/* 4379 */ typedef tagBIND_OPTS2 *LPBIND_OPTS2;

/* 4380 */ typedef void *(__stdcall *PFN_CRYPT_ALLOC)(unsigned int);

/* 4381 */ typedef _DRIVER_INFO_3A *PDRIVER_INFO_3A;

/* 4382 */ typedef _QUOTA_LIMITS_EX *PQUOTA_LIMITS_EX;

/* 4383 */ typedef tagEMREXTCREATEFONTINDIRECTW *PEMREXTCREATEFONTINDIRECTW;

/* 4384 */ typedef _wireBRECORD *wireBRECORD;

/* 4385 */ typedef tagFINDREPLACEA *LPFINDREPLACE;

/* 4386 */ typedef tagMCI_PLAY_PARMS *PMCI_PLAY_PARMS;

/* 4387 */ typedef tagBITMAPCOREINFO *LPBITMAPCOREINFO;

/* 4388 */ typedef tagICONMETRICSA *PICONMETRICSA;

/* 4389 */ typedef OPENCARDNAME_EXA *POPENCARDNAME_EXA;

/* 4390 */ typedef _PROPSHEETPAGEA_V3 *LPCPROPSHEETPAGEA_V3;

/* 4391 */ typedef _RPC_POLICY *PRPC_POLICY;

/* 4392 */ typedef _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA *PCMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;

/* 4393 */ typedef HMMIO__ *HMMIO;

/* 4394 */ typedef tagMIXERLINEA *LPMIXERLINE;

/* 4395 */ typedef tagEMREXCLUDECLIPRECT *PEMRINTERSECTCLIPRECT;

/* 4396 */ typedef tagEMRSCALEVIEWPORTEXTEX *PEMRSCALEWINDOWEXTEX;

/* 4397 */ typedef _SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[1];

/* 4398 */ typedef unsigned int lzo_ptr_t;

/* 4399 */ typedef tagEMRSETVIEWPORTEXTEX *PEMRSETWINDOWEXTEX;

/* 4400 */ typedef _DEVICE_MEDIA_INFO *PDEVICE_MEDIA_INFO;

/* 4401 */ typedef _IMAGE_SECTION_HEADER *PIMAGE_SECTION_HEADER;

/* 4402 */ typedef unsigned int DBCOUNTITEM;

/* 4403 */ typedef __GENERIC_BINDING_INFO *PGENERIC_BINDING_INFO;

/* 4404 */ typedef _SYSTEM_AUDIT_OBJECT_ACE *PSYSTEM_AUDIT_OBJECT_ACE;

/* 4405 */ typedef _MEMORY_BASIC_INFORMATION32 *PMEMORY_BASIC_INFORMATION32;

/* 4406 */ typedef _MINIDUMP_CALLBACK_INPUT *PMINIDUMP_CALLBACK_INPUT;

/* 4407 */ typedef _CMC_TAGGED_OTHER_MSG *PCMC_TAGGED_OTHER_MSG;

/* 4408 */ typedef tagICONMETRICSW *PICONMETRICSW;

/* 4409 */ typedef unsigned int (__stdcall *LPPRINTHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 4410 */ typedef OPENCARDNAME_EXW *POPENCARDNAME_EXW;

/* 4411 */ typedef _PROPSHEETPAGEW_V3 *LPCPROPSHEETPAGEW_V3;

/* 4412 */ typedef unsigned int *PSCARDCONTEXT;

/* 4413 */ typedef _SESSION_BUFFER *PSESSION_BUFFER;

/* 4414 */ typedef tagMCI_OPEN_PARMSA *PMCI_OPEN_PARMSA;

/* 4415 */ typedef tagEMROFFSETCLIPRGN *PEMROFFSETCLIPRGN;

/* 4416 */ typedef _WSAESETSERVICEOP *LPWSAESETSERVICEOP;

/* 4417 */ typedef _PRINTER_ENUM_VALUESA *PPRINTER_ENUM_VALUESA;

/* 4418 */ typedef _CMSG_KEY_TRANS_ENCRYPT_INFO *PCMSG_KEY_TRANS_ENCRYPT_INFO;

/* 4419 */ typedef _CERT_TEMPLATE_EXT *PCERT_TEMPLATE_EXT;

/* 4420 */ typedef _CRYPTOAPI_BLOB *PCRYPT_DIGEST_BLOB;

/* 4421 */ typedef _PRINTER_NOTIFY_INFO *LPPRINTER_NOTIFY_INFO;

/* 4422 */ typedef tagNONCLIENTMETRICSW *PNONCLIENTMETRICSW;

/* 4423 */ typedef int INT;

/* 4424 */ typedef _RPC_SERVER_INTERFACE *PRPC_SERVER_INTERFACE;

/* 4425 */ typedef _MINIDUMP_CALLBACK_OUTPUT *PMINIDUMP_CALLBACK_OUTPUT;

/* 4426 */ typedef _ENUM_SERVICE_STATUS_PROCESSA *LPENUM_SERVICE_STATUS_PROCESS;

/* 4427 */ typedef unsigned __int16 **SNB;

/* 4428 */ typedef tagMCI_OVLY_OPEN_PARMSA *PMCI_OVLY_OPEN_PARMS;

/* 4429 */ typedef _PRINTER_ENUM_VALUESW *PPRINTER_ENUM_VALUESW;

/* 4430 */ typedef tagEMRPOLYLINE *PEMRPOLYGON;

/* 4431 */ typedef _NOTIFYICONDATAW *PNOTIFYICONDATAW;

/* 4432 */ typedef linger *PLINGER;

/* 4433 */ typedef tagMETAFILEPICT *LPMETAFILEPICT;

/* 4434 */ typedef midiproptempo_tag *LPMIDIPROPTEMPO;

/* 4435 */ typedef _MINIDUMP_USER_STREAM *PMINIDUMP_USER_STREAM;

/* 4436 */ typedef unsigned int LCID;

/* 4437 */ typedef HICON__ *HICON;

/* 4438 */ typedef IOleInPlaceFrame *LPOLEINPLACEFRAME;

/* 4439 */ typedef tagACCEL *LPACCEL;

/* 4440 */ typedef char *HPSTR;

/* 4441 */ typedef tagMIDIOUTCAPSA *NPMIDIOUTCAPS;

/* 4442 */ typedef char *LPSTR;

/* 4443 */ typedef tagBITMAP *PBITMAP;

/* 4444 */ typedef tagMIDIOUTCAPSA *LPMIDIOUTCAPS;

/* 4445 */ typedef char *NPSTR;

/* 4446 */ typedef _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO *PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;

/* 4447 */ typedef HWINEVENTHOOK__ *HWINEVENTHOOK;

/* 4448 */ typedef struct _NDR_ASYNC_MESSAGE *PNDR_ASYNC_MESSAGE;

/* 4449 */ typedef tagMONLINKSTRUCT *PMONLINKSTRUCT;

/* 4450 */ typedef HBITMAP__ *HBITMAP;

/* 4451 */ typedef void *PSID;

/* 4452 */ typedef _ELEMENT_TYPE *PELEMENT_TYPE;

/* 4453 */ typedef _BY_HANDLE_FILE_INFORMATION *PBY_HANDLE_FILE_INFORMATION;

/* 4454 */ typedef IMalloc *LPMALLOC;

/* 4455 */ typedef IMallocSpy *LPMALLOCSPY;

/* 4456 */ typedef _JOB_SET_ARRAY *PJOB_SET_ARRAY;

/* 4457 */ typedef IOleInPlaceActiveObject *LPOLEINPLACEACTIVEOBJECT;

/* 4458 */ typedef _TOKEN_AUDIT_POLICY_ELEMENT *PTOKEN_AUDIT_POLICY_ELEMENT;

/* 4459 */ typedef _nlsversioninfo *LPNLSVERSIONINFO;

/* 4460 */ typedef _CRYPT_PKCS8_EXPORT_PARAMS *PCRYPT_PKCS8_EXPORT_PARAMS;

/* 4461 */ typedef _PRINTER_ENUM_VALUESA *PPRINTER_ENUM_VALUES;

/* 4462 */ typedef _CERT_POLICY_MAPPINGS_INFO *PCERT_POLICY_MAPPINGS_INFO;

/* 4463 */ typedef tagEMRSETICMPROFILE *PEMRSETICMPROFILE;

/* 4464 */ typedef _CRYPT_VERIFY_MESSAGE_PARA *PCRYPT_VERIFY_MESSAGE_PARA;

/* 4465 */ typedef IStream *LPSTREAM;

/* 4466 */ typedef tagMCI_OVLY_OPEN_PARMSW *PMCI_OVLY_OPEN_PARMSW;

/* 4467 */ typedef int (__stdcall *PFN_CRYPT_ENUM_OID_FUNC)(unsigned int, const char *, const char *, unsigned int, const unsigned int *, const unsigned __int16 *const *, const char *const *, const unsigned int *, void *);

/* 4468 */ typedef tagMCI_OVLY_OPEN_PARMSA *PMCI_OVLY_OPEN_PARMSA;

/* 4469 */ typedef _WSAEcomparator *LPWSAECOMPARATOR;

/* 4470 */ typedef unsigned int (__stdcall *PFE_IMPORT_FUNC)(char *, void *, unsigned int *);

/* 4471 */ typedef _NETRESOURCEW *LPNETRESOURCEW;

/* 4472 */ typedef _RTL_CRITICAL_SECTION_DEBUG *LPCRITICAL_SECTION_DEBUG;

/* 4473 */ typedef _RGNDATA *PRGNDATA;

/* 4474 */ typedef _RTL_CRITICAL_SECTION *LPCRITICAL_SECTION;

/* 4475 */ typedef void __stdcall MIDICALLBACK(HDRVR__ *, unsigned int, unsigned int, unsigned int, unsigned int);

/* 4476 */ typedef _CMSG_STREAM_INFO *PCMSG_STREAM_INFO;

/* 4477 */ typedef IEnumContextProps *LPENUMCONTEXTPROPS;

/* 4478 */ typedef void (__stdcall *CS_TYPE_LOCAL_SIZE_ROUTINE)(void *, unsigned int, unsigned int, _IDL_CS_CONVERT *, unsigned int *, unsigned int *);

/* 4479 */ typedef HMIXER__ *HMIXER;

/* 4480 */ typedef tagWAVEOUTCAPSW *LPWAVEOUTCAPSW;

/* 4481 */ typedef tagEMRSETCOLORSPACE *PEMRSELECTCOLORSPACE;

/* 4482 */ typedef tagWAVEOUTCAPSW *NPWAVEOUTCAPSW;

/* 4483 */ typedef _QUERY_SERVICE_LOCK_STATUSA *LPQUERY_SERVICE_LOCK_STATUSA;

/* 4484 */ typedef _PROPSHEETPAGEW_V3 *LPPROPSHEETPAGEW_LATEST;

/* 4485 */ typedef unsigned __int16 *LPOLESTR;

/* 4486 */ typedef _CERT_GENERAL_SUBTREE *PCERT_GENERAL_SUBTREE;

/* 4487 */ typedef unsigned int (__stdcall *LPCCHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 4488 */ typedef tagEXTLOGFONTA *PEXTLOGFONTA;

/* 4489 */ typedef tagHELPWININFOW *LPHELPWININFOW;

/* 4490 */ typedef const char *LPCBYTE;

/* 4491 */ typedef unsigned __int64 u_int64;

/* 4492 */ typedef _QOS_SHAPING_RATE *LPQOS_SHAPING_RATE;

/* 4493 */ typedef _WSAESETSERVICEOP *PWSAESETSERVICEOP;

/* 4494 */ typedef _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY *PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;

/* 4495 */ typedef tagMCI_INFO_PARMSW *LPMCI_INFO_PARMSW;

/* 4496 */ typedef tagIMEMENUITEMINFOA *NPIMEMENUITEMINFOA;

/* 4497 */ typedef tagIMEMENUITEMINFOA *LPIMEMENUITEMINFOA;

/* 4498 */ typedef tagMIXERLINECONTROLSA *PMIXERLINECONTROLSA;

/* 4499 */ typedef _PRINTER_DEFAULTSA *PPRINTER_DEFAULTSA;

/* 4500 */ typedef IOleLink *LPOLELINK;

/* 4501 */ typedef _DISCDLGSTRUCTA *LPDISCDLGSTRUCT;

/* 4502 */ typedef void (__stdcall *NDR_RUNDOWN)(void *);

/* 4503 */ typedef _ACCESS_ALLOWED_CALLBACK_ACE *PACCESS_ALLOWED_CALLBACK_ACE;

/* 4504 */ typedef tagMIDIINCAPSW *PMIDIINCAPSW;

/* 4505 */ typedef _WORD_BLOB *UP_WORD_BLOB;

/* 4506 */ typedef _BIN_COUNT *PBIN_COUNT;

/* 4507 */ typedef tagMIDIOUTCAPS2W *PMIDIOUTCAPS2W;

/* 4508 */ typedef long double DATE;

/* 4509 */ typedef void (__stdcall *EXPR_EVAL)(_MIDL_STUB_MESSAGE *);

/* 4510 */ typedef tagMIXERLINECONTROLSW *PMIXERLINECONTROLSW;

/* 4511 */ typedef tagMCI_BREAK_PARMS *LPMCI_BREAK_PARMS;

/* 4512 */ typedef tagCWPRETSTRUCT *PCWPRETSTRUCT;

/* 4513 */ typedef tagMCI_INFO_PARMSA *LPMCI_INFO_PARMSA;

/* 4514 */ typedef unsigned int (__stdcall *PTHREAD_START_ROUTINE)(void *);

/* 4515 */ typedef _SYSTEMTIME *PSYSTEMTIME;

/* 4516 */ typedef _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER;

/* 4517 */ typedef _CRYPT_CSP_PROVIDER *PCRYPT_CSP_PROVIDER;

/* 4518 */ typedef tagSTYLEBUFA *NPSTYLEBUF;

/* 4519 */ typedef void (__stdcall *PFLS_CALLBACK_FUNCTION)(void *);

/* 4520 */ typedef tagSTYLEBUFA *LPSTYLEBUF;

/* 4521 */ typedef int (__stdcall *DESKTOPENUMPROCA)(char *, int);

/* 4522 */ typedef int (__stdcall *PFN_CMSG_IMPORT_KEY_AGREE)(_CRYPT_ALGORITHM_IDENTIFIER *, _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA *, unsigned int, void *, unsigned int *);

/* 4523 */ typedef void *HCRYPTMSG;

/* 4524 */ typedef _CTL_USAGE *PCTL_USAGE;

/* 4525 */ typedef IPropertySetStorage *LPPROPERTYSETSTORAGE;

/* 4526 */ typedef tagMCI_WAVE_OPEN_PARMSW *PMCI_WAVE_OPEN_PARMSW;

/* 4527 */ typedef tagOFNA *LPOPENFILENAME;

/* 4528 */ typedef HHOOK__ *HHOOK;

/* 4529 */ typedef void (__stdcall *PDRVCALLBACK)(HDRVR__ *, unsigned int, unsigned int, unsigned int, unsigned int);

/* 4530 */ typedef tagEMRSETCOLORSPACE *PEMRSETCOLORSPACE;

/* 4531 */ typedef tagMCI_WAVE_OPEN_PARMSA *PMCI_WAVE_OPEN_PARMSA;

/* 4532 */ typedef _CERT_CHAIN_ELEMENT *PCERT_CHAIN_ELEMENT;

/* 4533 */ typedef unsigned int GROUP;

/* 4534 */ typedef int SCODE;

/* 4535 */ typedef unsigned __int16 *PUWSTR;

/* 4536 */ typedef _STORAGE_BUS_TYPE *PSTORAGE_BUS_TYPE;

/* 4537 */ typedef _userHMETAFILEPICT *wireHMETAFILEPICT;

/* 4538 */ typedef tagMCI_ANIM_OPEN_PARMSA *LPMCI_ANIM_OPEN_PARMSA;

/* 4539 */ typedef __int64 fpos_t;

/* 4540 */ typedef IOleCacheControl *LPOLECACHECONTROL;

/* 4541 */ typedef tagEMR *PEMR;

/* 4542 */ typedef int (__stdcall *PTOP_LEVEL_EXCEPTION_FILTER)(_EXCEPTION_POINTERS *);

/* 4543 */ typedef void (__stdcall *LPMIDICALLBACK)(HDRVR__ *, unsigned int, unsigned int, unsigned int, unsigned int);

/* 4544 */ typedef tagMIXERLINECONTROLSA *PMIXERLINECONTROLS;

/* 4545 */ typedef tagCHOOSECOLORW *LPCHOOSECOLORW;

/* 4546 */ typedef pvalueA *PPVALUE;

/* 4547 */ typedef _CERT_INFO *PCERT_INFO;

/* 4548 */ typedef _WSAEcomparator *PWSAECOMPARATOR;

/* 4549 */ typedef tagSTYLEBUFW *LPSTYLEBUFW;

/* 4550 */ typedef tagSTYLEBUFW *NPSTYLEBUFW;

/* 4551 */ typedef _LANA_ENUM *PLANA_ENUM;

/* 4552 */ typedef tagANIMATIONINFO *LPANIMATIONINFO;

/* 4553 */ typedef tagCWPRETSTRUCT *NPCWPRETSTRUCT;

/* 4554 */ typedef _tagHIT_LOGGING_INFO *LPHIT_LOGGING_INFO;

/* 4555 */ typedef tagCWPRETSTRUCT *LPCWPRETSTRUCT;

/* 4556 */ typedef _VIDEOPARAMETERS *PVIDEOPARAMETERS;

/* 4557 */ typedef tagMENUINFO *LPCMENUINFO;

/* 4558 */ typedef _RTL_VERIFIER_THUNK_DESCRIPTOR *PRTL_VERIFIER_THUNK_DESCRIPTOR;

/* 4559 */ typedef tagMCI_INFO_PARMSA *LPMCI_INFO_PARMS;

/* 4560 */ typedef _JOBOBJECT_EXTENDED_LIMIT_INFORMATION *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION;

/* 4561 */ typedef char *PUTSTR;

/* 4562 */ typedef int s_long;

/* 4563 */ typedef tagSTYLEBUFA *NPSTYLEBUFA;

/* 4564 */ typedef unsigned int u_long;

/* 4565 */ typedef tagSTYLEBUFA *LPSTYLEBUFA;

/* 4566 */ typedef _GRADIENT_TRIANGLE *PGRADIENT_TRIANGLE;

/* 4567 */ typedef void (__stdcall *NDR_NOTIFY_ROUTINE)();

/* 4568 */ typedef tagCOMBOBOXINFO *LPCOMBOBOXINFO;

/* 4569 */ typedef tagOFNA *LPOPENFILENAMEA;

/* 4570 */ typedef char cs_byte;

/* 4571 */ typedef void *HCONTEXT;

/* 4572 */ typedef _ABCFLOAT *NPABCFLOAT;

/* 4573 */ typedef tagMOUSEHOOKSTRUCT *PMOUSEHOOKSTRUCT;

/* 4574 */ typedef unsigned int *PSCARDHANDLE;

/* 4575 */ typedef _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER32;

/* 4576 */ typedef _ABCFLOAT *LPABCFLOAT;

/* 4577 */ typedef _MEMORY_BASIC_INFORMATION *PMEMORY_BASIC_INFORMATION;

/* 4578 */ typedef unsigned int _dev_t;

/* 4579 */ typedef _ABCFLOAT *PABCFLOAT;

/* 4580 */ typedef ITypeInfo *LPTYPEINFO;

/* 4581 */ typedef tagMCI_ANIM_PLAY_PARMS *PMCI_ANIM_PLAY_PARMS;

/* 4582 */ typedef _CONTEXT *PCONTEXT;

/* 4583 */ typedef tagOFNW *LPOPENFILENAMEW;

/* 4584 */ typedef SCARD_T1_REQUEST *LPSCARD_T1_REQUEST;

/* 4585 */ typedef tagMCI_WAVE_OPEN_PARMSA *PMCI_WAVE_OPEN_PARMS;

/* 4586 */ typedef _MIDL_SYNTAX_INFO *PMIDL_SYNTAX_INFO;

/* 4587 */ typedef OPENCARDNAME_EXW *LPOPENCARDNAME_EXW;

/* 4588 */ typedef tagEMRSETMAPPERFLAGS *PEMRSETMAPPERFLAGS;

/* 4589 */ typedef SYSTEM_POWER_LEVEL *PSYSTEM_POWER_LEVEL;

/* 4590 */ typedef ITypeInfo2 *LPTYPEINFO2;

/* 4591 */ typedef void *HDWP;

/* 4592 */ typedef tagMCI_VD_STEP_PARMS *LPMCI_VD_STEP_PARMS;

/* 4593 */ typedef _ACL_REVISION_INFORMATION *PACL_REVISION_INFORMATION;

/* 4594 */ typedef _TRANSMIT_PACKETS_ELEMENT *PTRANSMIT_PACKETS_ELEMENT;

/* 4595 */ typedef tagOFN_NT4A *LPOPENFILENAME_NT4A;

/* 4596 */ typedef tagPELARRAY *LPPELARRAY;

/* 4597 */ typedef int (__cdecl *_onexit_t)();

/* 4598 */ typedef tagPELARRAY *NPPELARRAY;

/* 4599 */ typedef tagMOUSEKEYS *LPMOUSEKEYS;

/* 4600 */ typedef void (__stdcall *PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC)(void *, unsigned int, const char *, char *, void *);

/* 4601 */ typedef HRESULT (__stdcall *LPFNCANUNLOADNOW)();

/* 4602 */ typedef IEnumVARIANT *LPENUMVARIANT;

/* 4603 */ typedef int (__stdcall *I_RpcProxyIsValidMachineFn)(char *, char *, unsigned int);

/* 4604 */ typedef tagTEXTMETRICA *NPTEXTMETRIC;

/* 4605 */ typedef tagOFN_NT4W *LPOPENFILENAME_NT4W;

/* 4606 */ typedef int (__stdcall *RPC_MGMT_AUTHORIZATION_FN)(void *, unsigned int, int *);

/* 4607 */ typedef tagTEXTMETRICA *LPTEXTMETRIC;

/* 4608 */ typedef tagMCI_STATUS_PARMS *LPMCI_STATUS_PARMS;

/* 4609 */ typedef tagMETAHEADER *LPMETAHEADER;

/* 4610 */ typedef tagXFORM *LPXFORM;

/* 4611 */ typedef _ENUM_SERVICE_STATUS_PROCESSA *LPENUM_SERVICE_STATUS_PROCESSA;

/* 4612 */ typedef int SSIZE_T;

/* 4613 */ typedef unsigned int *PSIZE_T;

/* 4614 */ typedef _OFSTRUCT *POFSTRUCT;

/* 4615 */ typedef tagMINMAXINFO *PMINMAXINFO;

/* 4616 */ typedef tagMIDIOUTCAPSA *NPMIDIOUTCAPSA;

/* 4617 */ typedef tagMIDIOUTCAPSA *LPMIDIOUTCAPSA;

/* 4618 */ typedef _WSAVersion *PWSAVERSION;

/* 4619 */ typedef tagSERIALKEYSW *LPSERIALKEYSW;

/* 4620 */ typedef tagPDEXA *LPPRINTDLGEX;

/* 4621 */ typedef tagRECT *LPBORDERWIDTHS;

/* 4622 */ typedef tagJOYCAPS2A *NPJOYCAPS2;

/* 4623 */ typedef _LIST_ENTRY *PRLIST_ENTRY;

/* 4624 */ typedef tagJOYCAPS2A *LPJOYCAPS2;

/* 4625 */ typedef _DISK_RECORD *PDISK_RECORD;

/* 4626 */ typedef void *PACCESS_TOKEN;

/* 4627 */ typedef IEncodingFilterFactory *LPENCODINGFILTERFACTORY;

/* 4628 */ typedef tagMCI_OVLY_WINDOW_PARMSA *LPMCI_OVLY_WINDOW_PARMS;

/* 4629 */ typedef _WSANSClassInfoA *LPWSANSCLASSINFO;

/* 4630 */ typedef tagCOLORCORRECTPALETTE *PEMRCOLORCORRECTPALETTE;

/* 4631 */ typedef tagSERIALKEYSA *LPSERIALKEYSA;

/* 4632 */ typedef tagMDINEXTMENU *PMDINEXTMENU;

/* 4633 */ typedef int (__stdcall *DATEFMT_ENUMPROCEXA)(char *, unsigned int);

/* 4634 */ typedef tagEMRSETICMPROFILE *PEMRSETICMPROFILEA;

/* 4635 */ typedef _GET_MEDIA_TYPES *PGET_MEDIA_TYPES;

/* 4636 */ typedef _CONSOLE_CURSOR_INFO *PCONSOLE_CURSOR_INFO;

/* 4637 */ typedef tagTEXTMETRICW *LPTEXTMETRICW;

/* 4638 */ typedef _SYSTEM_ALARM_OBJECT_ACE *PSYSTEM_ALARM_OBJECT_ACE;

/* 4639 */ typedef tagTEXTMETRICW *NPTEXTMETRICW;

/* 4640 */ typedef tagMIXERCONTROLW *PMIXERCONTROLW;

/* 4641 */ typedef tagOFN_NT4A *LPOPENFILENAME_NT4;

/* 4642 */ typedef void *__stdcall RPC_CLIENT_ALLOC(unsigned int);

/* 4643 */ typedef tagBITMAPCOREHEADER *LPBITMAPCOREHEADER;

/* 4644 */ typedef _CERT_POLICY_QUALIFIER_INFO *PCERT_POLICY_QUALIFIER_INFO;

/* 4645 */ typedef tagTITLEBARINFO *LPTITLEBARINFO;

/* 4646 */ typedef unsigned __int16 VARTYPE;

/* 4647 */ typedef _IMAGE_RUNTIME_FUNCTION_ENTRY *PIMAGE_IA64_RUNTIME_FUNCTION_ENTRY;

/* 4648 */ typedef tagTEXTMETRICA *NPTEXTMETRICA;

/* 4649 */ typedef tagEMRCREATEPEN *PEMRCREATEPEN;

/* 4650 */ typedef tagOLEUPDATE *POLEUPDATE;

/* 4651 */ typedef tagTEXTMETRICA *LPTEXTMETRICA;

/* 4652 */ typedef _CRYPTOAPI_BLOB *PCRYPT_DER_BLOB;

/* 4653 */ typedef int (__stdcall *DATEFMT_ENUMPROCEXW)(unsigned __int16 *, unsigned int);

/* 4654 */ typedef int (__stdcall *PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY)(_CMSG_CONTENT_ENCRYPT_INFO *, unsigned int, void *);

/* 4655 */ typedef _MEDIA_TYPE *PMEDIA_TYPE;

/* 4656 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_DELETE_CERT)(void *, _CERT_CONTEXT *, unsigned int);

/* 4657 */ typedef tagBSTRBLOB *LPBSTRBLOB;

/* 4658 */ typedef void __stdcall DRVCALLBACK(HDRVR__ *, unsigned int, unsigned int, unsigned int, unsigned int);

/* 4659 */ typedef _CRYPT_BIT_BLOB *PCRYPT_BIT_BLOB;

/* 4660 */ typedef _WSAMSG *PWSAMSG;

/* 4661 */ typedef void (__stdcall *LPOCNDSCPROC)(unsigned int, unsigned int, void *);

/* 4662 */ typedef _CRYPTOAPI_BLOB *PCRYPT_DATA_BLOB;

/* 4663 */ typedef _CRL_FIND_ISSUED_FOR_PARA *PCRL_FIND_ISSUED_FOR_PARA;

/* 4664 */ typedef int (__cdecl *_PIFV)();

/* 4665 */ typedef HTASK__ *HTASK;

/* 4666 */ typedef _CRL_DIST_POINT *PCRL_DIST_POINT;

/* 4667 */ typedef tagEMRNAMEDESCAPE *PEMRNAMEDESCAPE;

/* 4668 */ typedef _RTL_VERIFIER_PROVIDER_DESCRIPTOR *PRTL_VERIFIER_PROVIDER_DESCRIPTOR;

/* 4669 */ typedef tagPDEXA *LPPRINTDLGEXA;

/* 4670 */ typedef _OSVERSIONINFOA *LPOSVERSIONINFO;

/* 4671 */ typedef tagJOYCAPS2A *NPJOYCAPS2A;

/* 4672 */ typedef _WSANSClassInfoW *LPWSANSCLASSINFOW;

/* 4673 */ typedef tagEMREXCLUDECLIPRECT *PEMREXCLUDECLIPRECT;

/* 4674 */ typedef tagJOYCAPS2A *LPJOYCAPS2A;

/* 4675 */ typedef _PRIVILEGE_SET *PPRIVILEGE_SET;

/* 4676 */ typedef tagEMRSETCOLORSPACE *PEMRDELETECOLORSPACE;

/* 4677 */ typedef _CRYPT_URL_ARRAY *PCRYPT_URL_ARRAY;

/* 4678 */ typedef _OLESTREAM *LPOLESTREAM;

/* 4679 */ typedef _STORAGE_BUS_RESET_REQUEST *PSTORAGE_BUS_RESET_REQUEST;

/* 4680 */ typedef _userCLIPFORMAT *wireCLIPFORMAT;

/* 4681 */ typedef __int16 s_short;

/* 4682 */ typedef unsigned __int16 u_short;

/* 4683 */ typedef void *RPC_AUTHZ_HANDLE;

/* 4684 */ typedef void *HDEVNOTIFY;

/* 4685 */ typedef tagJOYCAPS2W *LPJOYCAPS2W;

/* 4686 */ typedef tagRemFORMATETC *LPREMFORMATETC;

/* 4687 */ typedef tagJOYCAPS2W *NPJOYCAPS2W;

/* 4688 */ typedef _WSANSClassInfoA *LPWSANSCLASSINFOA;

/* 4689 */ typedef tagPDEXW *LPPRINTDLGEXW;

/* 4690 */ typedef tagSERIALKEYSA *LPSERIALKEYS;

/* 4691 */ typedef SCARD_T1_REQUEST *PSCARD_T1_REQUEST;

/* 4692 */ typedef SCARD_T0_REQUEST *PSCARD_T0_REQUEST;

/* 4693 */ typedef tagSTYLEBUFW *PSTYLEBUFW;

/* 4694 */ typedef tagPDA *LPPRINTDLGA;

/* 4695 */ typedef tagGUITHREADINFO *PGUITHREADINFO;

/* 4696 */ typedef void (__stdcall *PFN_CERT_STORE_PROV_CLOSE)(void *, unsigned int);

/* 4697 */ typedef unsigned __int16 *PBAD_TRACK_NUMBER;

/* 4698 */ typedef _SERVICE_STATUS *LPSERVICE_STATUS;

/* 4699 */ typedef tagIMEMENUITEMINFOA *NPIMEMENUITEMINFO;

/* 4700 */ typedef unsigned int _fsize_t;

/* 4701 */ typedef tagMCI_ANIM_STEP_PARMS *PMCI_ANIM_STEP_PARMS;

/* 4702 */ typedef tagIMEMENUITEMINFOA *LPIMEMENUITEMINFO;

/* 4703 */ typedef _PRINTPROCESSOR_INFO_1A *LPPRINTPROCESSOR_INFO_1;

/* 4704 */ typedef tagEMRPOLYLINE16 *PEMRPOLYLINETO16;

/* 4705 */ typedef tagMIXERCONTROLDETAILS_LISTTEXTA *LPMIXERCONTROLDETAILS_LISTTEXT;

/* 4706 */ typedef int mbstate_t;

/* 4707 */ typedef tagMULTIKEYHELPA *LPMULTIKEYHELPA;

/* 4708 */ typedef _PRINTER_DEFAULTSA *PPRINTER_DEFAULTS;

/* 4709 */ typedef tagEMRSETDIBITSTODEVICE *PEMRSETDIBITSTODEVICE;

/* 4710 */ typedef tagCBT_CREATEWNDA *LPCBT_CREATEWND;

/* 4711 */ typedef tagPDW *LPPRINTDLGW;

/* 4712 */ typedef tagRPCOLEMESSAGE *PRPCOLEMESSAGE;

/* 4713 */ typedef _CERT_NAME_INFO *PCERT_NAME_INFO;

/* 4714 */ typedef tMIXERCONTROLDETAILS *LPMIXERCONTROLDETAILS;

/* 4715 */ typedef _DRIVER_INFO_1A *PDRIVER_INFO_1;

/* 4716 */ typedef tagVersionedStream *LPVERSIONEDSTREAM;

/* 4717 */ typedef int INT_PTR;

/* 4718 */ typedef tagMCI_ANIM_WINDOW_PARMSW *LPMCI_ANIM_WINDOW_PARMSW;

/* 4719 */ typedef tagMULTIKEYHELPW *LPMULTIKEYHELPW;

/* 4720 */ typedef _DEBUG_EVENT *LPDEBUG_EVENT;

/* 4721 */ typedef servent *LPSERVENT;

/* 4722 */ typedef _MIDL_STUB_DESC *PMIDL_STUB_DESC;

/* 4723 */ typedef _CERT_DH_PARAMETERS *PCERT_DH_PARAMETERS;

/* 4724 */ typedef _DRIVER_INFO_1A *LPDRIVER_INFO_1;

/* 4725 */ typedef _DRIVER_INFO_2A *LPDRIVER_INFO_2;

/* 4726 */ typedef _COMSTAT *LPCOMSTAT;

/* 4727 */ typedef IEnumUnknown *LPENUMUNKNOWN;

/* 4728 */ typedef _DRIVER_INFO_3A *LPDRIVER_INFO_3;

/* 4729 */ typedef _DRIVER_INFO_4A *LPDRIVER_INFO_4;

/* 4730 */ typedef unsigned int ALG_ID;

/* 4731 */ typedef _DRIVER_INFO_5A *LPDRIVER_INFO_5;

/* 4732 */ typedef _DRIVER_INFO_6A *LPDRIVER_INFO_6;

/* 4733 */ typedef _CERT_PHYSICAL_STORE_INFO *PCERT_PHYSICAL_STORE_INFO;

/* 4734 */ typedef _tagSTACKFRAME *LPSTACKFRAME;

/* 4735 */ typedef _DISPLAY_DEVICEW *LPDISPLAY_DEVICEW;

/* 4736 */ typedef $3FA64165D15A4602C29B2D9B0DA4A5E9 *NDR_SCONTEXT;

/* 4737 */ typedef _PRINTER_DEFAULTSW *LPPRINTER_DEFAULTSW;

/* 4738 */ typedef tagNEWTEXTMETRICW *NPNEWTEXTMETRICW;

/* 4739 */ typedef void (__cdecl *terminate_handler)();

/* 4740 */ typedef tagMCI_ANIM_OPEN_PARMSA *LPMCI_ANIM_OPEN_PARMS;

/* 4741 */ typedef tagNEWTEXTMETRICW *LPNEWTEXTMETRICW;

/* 4742 */ typedef _CMSG_HASHED_ENCODE_INFO *PCMSG_HASHED_ENCODE_INFO;

/* 4743 */ typedef _MONITOR_INFO_1A *PMONITOR_INFO_1A;

/* 4744 */ typedef _PRINTER_DEFAULTSA *LPPRINTER_DEFAULTSA;

/* 4745 */ typedef HPALETTE__ *HPALETTE;

/* 4746 */ typedef int FXPT2DOT30;

/* 4747 */ typedef void *NDR_CCONTEXT;

/* 4748 */ typedef _DISPLAY_DEVICEA *LPDISPLAY_DEVICEA;

/* 4749 */ typedef unsigned int PROPID;

/* 4750 */ typedef const char *__exString;

/* 4751 */ typedef void *RPC_SS_THREAD_HANDLE;

/* 4752 */ typedef unsigned int DWORD32;

/* 4753 */ typedef _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS32;

/* 4754 */ typedef _DRIVER_INFO_1W *PDRIVER_INFO_1W;

/* 4755 */ typedef IOleInPlaceSite *LPOLEINPLACESITE;

/* 4756 */ typedef int (__stdcall *OLDFONTENUMPROCW)(tagLOGFONTW *, tagTEXTMETRICW *, unsigned int, int);

/* 4757 */ typedef tagPDA *LPPRINTDLG;

/* 4758 */ typedef _CERT_CHAIN *PCERT_CHAIN;

/* 4759 */ typedef _GLYPHMETRICSFLOAT *PGLYPHMETRICSFLOAT;

/* 4760 */ typedef _CMSG_MAIL_LIST_RECIPIENT_INFO *PCMSG_MAIL_LIST_RECIPIENT_INFO;

/* 4761 */ typedef tagMIXERCONTROLDETAILS_LISTTEXTA *LPMIXERCONTROLDETAILS_LISTTEXTA;

/* 4762 */ typedef tagMULTIKEYHELPA *LPMULTIKEYHELP;

/* 4763 */ typedef unsigned int (__stdcall *LPFRHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 4764 */ typedef _userSTGMEDIUM *wireSTGMEDIUM;

/* 4765 */ typedef _ACTION_HEADER *PACTION_HEADER;

/* 4766 */ typedef HENHMETAFILE__ *HENHMETAFILE;

/* 4767 */ typedef unsigned int error_status_t;

/* 4768 */ typedef _DRIVER_INFO_1A *PDRIVER_INFO_1A;

/* 4769 */ typedef void *HCERTCHAINENGINE;

/* 4770 */ typedef _MONITOR_INFO_2A *PMONITOR_INFO_2A;

/* 4771 */ typedef tagEMRSELECTCLIPPATH *PEMRSETMAPMODE;

/* 4772 */ typedef tagEMRMODIFYWORLDTRANSFORM *PEMRMODIFYWORLDTRANSFORM;

/* 4773 */ typedef _CERT_BASIC_CONSTRAINTS_INFO *PCERT_BASIC_CONSTRAINTS_INFO;

/* 4774 */ typedef tMIXERCONTROLDETAILS_UNSIGNED *LPMIXERCONTROLDETAILS_UNSIGNED;

/* 4775 */ typedef tagMIXERCONTROLDETAILS_LISTTEXTW *LPMIXERCONTROLDETAILS_LISTTEXTW;

/* 4776 */ typedef _FORM_INFO_1W *LPFORM_INFO_1W;

/* 4777 */ typedef _LUID *PLUID;

/* 4778 */ typedef tagEMREXTSELECTCLIPRGN *PEMREXTSELECTCLIPRGN;

/* 4779 */ typedef HDESK__ *HDESK;

/* 4780 */ typedef int socklen_t;

/* 4781 */ typedef _PROPSHEETPAGEA_V1 *LPCPROPSHEETPAGEA_V1;

/* 4782 */ typedef _RPC_CLIENT_INTERFACE *PRPC_CLIENT_INTERFACE;

/* 4783 */ typedef SCARD_T0_REQUEST *LPSCARD_T0_REQUEST;

/* 4784 */ typedef _CERT_PAIR *PCERT_PAIR;

/* 4785 */ typedef tagMCI_ANIM_UPDATE_PARMS *PMCI_ANIM_UPDATE_PARMS;

/* 4786 */ typedef void (__stdcall *STUB_THUNK)(_MIDL_STUB_MESSAGE *);

/* 4787 */ typedef IBindProtocol *LPBINDPROTOCOL;

/* 4788 */ typedef SERVICE_STATUS_HANDLE__ *SERVICE_STATUS_HANDLE;

/* 4789 */ typedef _PRINTER_DEFAULTSA *LPPRINTER_DEFAULTS;

/* 4790 */ typedef IEnumSTATSTG *LPENUMSTATSTG;

/* 4791 */ typedef _IMAGE_RESOURCE_DIRECTORY *PIMAGE_RESOURCE_DIRECTORY;

/* 4792 */ typedef tagMONCBSTRUCT *PMONCBSTRUCT;

/* 4793 */ typedef _DISPLAY_DEVICEA *LPDISPLAY_DEVICE;

/* 4794 */ typedef void (__cdecl *_PMFN)();

/* 4795 */ typedef _PROPSHEETPAGEW_V1 *LPCPROPSHEETPAGEW_V1;

/* 4796 */ typedef _RECTL *LPCRECTL;

/* 4797 */ typedef _OVERLAPPED *LPWSAOVERLAPPED;

/* 4798 */ typedef _WSACMSGHDR *PWSACMSGHDR;

/* 4799 */ typedef tagMCI_OPEN_PARMSW *PMCI_OPEN_PARMSW;

/* 4800 */ typedef _DOC_INFO_3W *LPDOC_INFO_3W;

/* 4801 */ typedef _CRYPTOAPI_BLOB *PCRYPT_ATTR_BLOB;

/* 4802 */ typedef tagLOCALESIGNATURE *LPLOCALESIGNATURE;

/* 4803 */ typedef HDRVR__ *HDRVR;

/* 4804 */ typedef tagEMRGLSBOUNDEDRECORD *PEMRGLSBOUNDEDRECORD;

/* 4805 */ typedef _IO_COUNTERS *PIO_COUNTERS;

/* 4806 */ typedef _DOC_INFO_3A *LPDOC_INFO_3A;

/* 4807 */ typedef _SYSTEM_POWER_STATUS *LPSYSTEM_POWER_STATUS;

/* 4808 */ typedef tagNONCLIENTMETRICSA *PNONCLIENTMETRICSA;

/* 4809 */ typedef tagTTPOLYCURVE *LPTTPOLYCURVE;

/* 4810 */ typedef MENUITEMTEMPLATEHEADER *PMENUITEMTEMPLATEHEADER;

/* 4811 */ typedef IOleAdviseHolder *LPOLEADVISEHOLDER;

/* 4812 */ typedef waveformat_tag *LPWAVEFORMAT;

/* 4813 */ typedef waveformat_tag *NPWAVEFORMAT;

/* 4814 */ typedef IMAGE_LOAD_CONFIG_DIRECTORY32 *PIMAGE_LOAD_CONFIG_DIRECTORY;

/* 4815 */ typedef IEnumSTATPROPSETSTG *LPENUMSTATPROPSETSTG;

/* 4816 */ typedef IRunningObjectTable *LPRUNNINGOBJECTTABLE;

/* 4817 */ typedef _NOTIFYICONDATAA *PNOTIFYICONDATAA;

/* 4818 */ typedef IEnumMoniker *LPENUMMONIKER;

/* 4819 */ typedef ICancelMethodCalls *LPCANCELMETHODCALLS;

/* 4820 */ typedef tagMCI_VD_STEP_PARMS *PMCI_VD_STEP_PARMS;

/* 4821 */ typedef HRESULT (__stdcall *LPFNGETCLASSOBJECT)(_GUID *, _GUID *, void **);

/* 4822 */ typedef _LARGE_INTEGER *PLARGE_INTEGER;

/* 4823 */ typedef int (__stdcall *CALINFO_ENUMPROCEXA)(char *, unsigned int);

/* 4824 */ typedef void __stdcall WAVECALLBACK(HDRVR__ *, unsigned int, unsigned int, unsigned int, unsigned int);

/* 4825 */ typedef HMIDISTRM__ **LPHMIDISTRM;

/* 4826 */ typedef int (__stdcall *CALINFO_ENUMPROCEXW)(unsigned __int16 *, unsigned int);

/* 4827 */ typedef unsigned int lzo_uint;

/* 4828 */ typedef int (__stdcall *GRAYSTRINGPROC)(HDC__ *, int, int);

/* 4829 */ typedef unsigned int SOCKET;

/* 4830 */ typedef _devicemodeA *PDEVMODE;

/* 4831 */ typedef void *RPC_IF_HANDLE;

/* 4832 */ typedef _IMAGE_OPTIONAL_HEADER64 *PIMAGE_OPTIONAL_HEADER64;

/* 4833 */ typedef tagMIXERCONTROLA *PMIXERCONTROL;

/* 4834 */ typedef unsigned int NLS_FUNCTION;

/* 4835 */ typedef _PSFEATURE_OUTPUT *PPSFEATURE_OUTPUT;

/* 4836 */ typedef tagCIEXYZ *LPCIEXYZ;

/* 4837 */ typedef HDDEDATA__ *(__stdcall *PFNCALLBACK)(unsigned int, unsigned int, HCONV__ *, HSZ__ *, HSZ__ *, HDDEDATA__ *, unsigned int, unsigned int);

/* 4838 */ typedef _DOC_INFO_3A *LPDOC_INFO_3;

/* 4839 */ typedef tagOBJECTDESCRIPTOR *PLINKSRCDESCRIPTOR;

/* 4840 */ typedef tagMCI_SAVE_PARMSA *PMCI_SAVE_PARMS;

/* 4841 */ typedef _PERF_OBJECT_TYPE *PPERF_OBJECT_TYPE;

/* 4842 */ typedef HINSTANCE__ *HINSTANCE;

/* 4843 */ typedef _DISK_PERFORMANCE *PDISK_PERFORMANCE;

/* 4844 */ typedef tagRemSNB *wireSNB;

/* 4845 */ typedef _RemotableHandle *wireHICON;

/* 4846 */ typedef _CERT_REGISTRY_STORE_ROAMING_PARA *PCERT_REGISTRY_STORE_ROAMING_PARA;

/* 4847 */ typedef _TAPE_WRITE_MARKS *PTAPE_WRITE_MARKS;

/* 4848 */ typedef _NETRESOURCEA *LPNETRESOURCEA;

/* 4849 */ typedef const char *LPCTSTR;

/* 4850 */ typedef _CMC_PEND_INFO *PCMC_PEND_INFO;

/* 4851 */ typedef _SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE;

/* 4852 */ typedef _devicemodeW *PDEVMODEW;

/* 4853 */ typedef unsigned int u_int;

/* 4854 */ typedef tagWAVEOUTCAPSA *NPWAVEOUTCAPSA;

/* 4855 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_FIND_CTL)(void *, _CERT_STORE_PROV_FIND_INFO *, _CTL_CONTEXT *, unsigned int, void **, _CTL_CONTEXT **);

/* 4856 */ typedef tWAVEFORMATEX *LPCWAVEFORMATEX;

/* 4857 */ typedef _QUERY_SERVICE_LOCK_STATUSW *LPQUERY_SERVICE_LOCK_STATUSW;

/* 4858 */ typedef unsigned int DBORDINAL;

/* 4859 */ typedef tagWAVEOUTCAPSA *LPWAVEOUTCAPSA;

/* 4860 */ typedef _userHBITMAP *wireHBITMAP;

/* 4861 */ typedef _PROPSHEETPAGEA_V3 *LPPROPSHEETPAGEA_LATEST;

/* 4862 */ typedef _JOB_INFO_2A *PJOB_INFO_2;

/* 4863 */ typedef tagEXTLOGFONTW *PEXTLOGFONTW;

/* 4864 */ typedef tagHELPWININFOA *LPHELPWININFOA;

/* 4865 */ typedef unsigned int HCRYPTKEY;

/* 4866 */ typedef _JOB_INFO_3 *PJOB_INFO_3;

/* 4867 */ typedef _MESSAGE_RESOURCE_DATA *PMESSAGE_RESOURCE_DATA;

/* 4868 */ typedef tagMCI_GETDEVCAPS_PARMS *PMCI_GETDEVCAPS_PARMS;

/* 4869 */ typedef _JOB_INFO_1A *PJOB_INFO_1;

/* 4870 */ typedef sockaddr_storage *PSOCKADDR_STORAGE;

/* 4871 */ typedef tagOBJECTDESCRIPTOR *LPLINKSRCDESCRIPTOR;

/* 4872 */ typedef _devicemodeA *PDEVMODEA;

/* 4873 */ typedef tagIMEMENUITEMINFOW *LPIMEMENUITEMINFOW;

/* 4874 */ typedef tagEMRSELECTCLIPPATH *PEMRSETLAYOUT;

/* 4875 */ typedef tagIMEMENUITEMINFOW *NPIMEMENUITEMINFOW;

/* 4876 */ typedef IOleCache *LPOLECACHE;

/* 4877 */ typedef _PRINTER_DEFAULTSW *PPRINTER_DEFAULTSW;

/* 4878 */ typedef unsigned int APARTMENTID;

/* 4879 */ typedef int _Mbstatet;

/* 4880 */ typedef _IMAGE_IMPORT_BY_NAME *PIMAGE_IMPORT_BY_NAME;

/* 4881 */ typedef _STORAGE_DEVICE_NUMBER *PSTORAGE_DEVICE_NUMBER;

/* 4882 */ typedef tagMIDIOUTCAPS2A *PMIDIOUTCAPS2A;

/* 4883 */ typedef unsigned int ACCESS_MASK;

/* 4884 */ typedef tagMIDIINCAPSA *PMIDIINCAPSA;

/* 4885 */ typedef tagSTYLEBUFA *PSTYLEBUF;

/* 4886 */ typedef tagNONCLIENTMETRICSA *LPNONCLIENTMETRICSA;

/* 4887 */ typedef int __ehstate_t;

/* 4888 */ typedef unsigned __int16 PATCHARRAY[128];

/* 4889 */ typedef IOleCache2 *LPOLECACHE2;

/* 4890 */ typedef _DRIVER_INFO_6A *PDRIVER_INFO_6;

/* 4891 */ typedef _MIDL_STUB_MESSAGE *PMIDL_STUB_MESSAGE;

/* 4892 */ typedef _SHQUERYRBINFO *LPSHQUERYRBINFO;

/* 4893 */ typedef tagNONCLIENTMETRICSW *LPNONCLIENTMETRICSW;

/* 4894 */ typedef HWAVEOUT__ *HWAVEOUT;

/* 4895 */ typedef tagMCI_SAVE_PARMSA *LPMCI_SAVE_PARMS;

/* 4896 */ typedef _CMC_STATUS_INFO *PCMC_STATUS_INFO;

/* 4897 */ typedef _JOB_INFO_2A *LPJOB_INFO_2;

/* 4898 */ typedef int (__stdcall *DESKTOPENUMPROCW)(unsigned __int16 *, int);

/* 4899 */ typedef IMAGE_AUX_SYMBOL_TOKEN_DEF *PIMAGE_AUX_SYMBOL_TOKEN_DEF;

/* 4900 */ typedef _SLIST_HEADER *PSLIST_HEADER;

/* 4901 */ typedef int *PLONG32;

/* 4902 */ typedef _FILE_SEGMENT_ELEMENT *PFILE_SEGMENT_ELEMENT;

/* 4903 */ typedef _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA *PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA;

/* 4904 */ typedef unsigned int (__stdcall *YIELDPROC)(unsigned int, unsigned int);

/* 4905 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_FIND_CRL)(void *, _CERT_STORE_PROV_FIND_INFO *, _CRL_CONTEXT *, unsigned int, void **, _CRL_CONTEXT **);

/* 4906 */ typedef unsigned int ULONG32;

/* 4907 */ typedef tagVARIANT *LPVARIANTARG;

/* 4908 */ typedef unsigned __int16 ino_t;

/* 4909 */ typedef _PERF_DATA_BLOCK *PPERF_DATA_BLOCK;

/* 4910 */ typedef _TOKEN_OWNER *PTOKEN_OWNER;

/* 4911 */ typedef tagMCI_ANIM_OPEN_PARMSW *LPMCI_ANIM_OPEN_PARMSW;

/* 4912 */ typedef IPropertyStorage *LPPROPERTYSTORAGE;

/* 4913 */ typedef _STORAGE_HOTPLUG_INFO *PSTORAGE_HOTPLUG_INFO;

/* 4914 */ typedef const unsigned __int16 *PCWSTR;

/* 4915 */ typedef _CERT_RDN *PCERT_RDN;

/* 4916 */ typedef tagPIXELFORMATDESCRIPTOR *LPPIXELFORMATDESCRIPTOR;

/* 4917 */ typedef _DRIVER_INFO_6W *PDRIVER_INFO_6W;

/* 4918 */ typedef _RASTERIZER_STATUS *LPRASTERIZER_STATUS;

/* 4919 */ typedef tagCHOOSECOLORA *LPCHOOSECOLORA;

/* 4920 */ typedef _CRYPT_ATTRIBUTES *PCMSG_ATTR;

/* 4921 */ typedef unsigned __int16 COLOR16;

/* 4922 */ typedef _JOB_INFO_2W *LPJOB_INFO_2W;

/* 4923 */ typedef tagMCI_SAVE_PARMSW *LPMCI_SAVE_PARMSW;

/* 4924 */ typedef _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA *PCRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;

/* 4925 */ typedef tagNONCLIENTMETRICSA *LPNONCLIENTMETRICS;

/* 4926 */ typedef _CRL_ISSUING_DIST_POINT *PCRL_ISSUING_DIST_POINT;

/* 4927 */ typedef int (__stdcall *PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC)(_CRYPT_ALGORITHM_IDENTIFIER *, _CRYPTOAPI_BLOB *, char *, unsigned int *, void *);

/* 4928 */ typedef _ACE_HEADER *PACE_HEADER;

/* 4929 */ typedef _FORM_INFO_1A *LPFORM_INFO_1;

/* 4930 */ typedef _DRIVER_INFO_6A *PDRIVER_INFO_6A;

/* 4931 */ typedef const char *PCTSTR;

/* 4932 */ typedef tagABORTPATH *PEMRREALIZEPALETTE;

/* 4933 */ typedef int (__stdcall *PFN_CANCEL_ASYNC_RETRIEVAL_FUNC)(void *);

/* 4934 */ typedef tagMCI_SAVE_PARMSA *LPMCI_SAVE_PARMSA;

/* 4935 */ typedef _CERT_DSS_PARAMETERS *PCERT_DSS_PARAMETERS;

/* 4936 */ typedef _JOB_INFO_2A *LPJOB_INFO_2A;

/* 4937 */ typedef void *(__stdcall *PFUNCTION_TABLE_ACCESS_ROUTINE)(void *, unsigned int);

/* 4938 */ typedef _CRYPT_ALGORITHM_IDENTIFIER *PCRYPT_ALGORITHM_IDENTIFIER;

/* 4939 */ typedef tagCANDIDATEFORM *LPCANDIDATEFORM;

/* 4940 */ typedef unsigned int DBPARAMIO;

/* 4941 */ typedef _CERT_AUTHORITY_INFO_ACCESS *PCERT_AUTHORITY_INFO_ACCESS;

/* 4942 */ typedef val_context *PVALCONTEXT;

/* 4943 */ typedef tagCANDIDATEFORM *NPCANDIDATEFORM;

/* 4944 */ typedef tagOIFI *LPOLEINPLACEFRAMEINFO;

/* 4945 */ typedef _CTL_FIND_USAGE_PARA *PCTL_FIND_USAGE_PARA;

/* 4946 */ typedef tagMDINEXTMENU *LPMDINEXTMENU;

/* 4947 */ typedef char *RPC_BUFPTR;

/* 4948 */ typedef tagEMRSETVIEWPORTORGEX *PEMRSETVIEWPORTORGEX;

/* 4949 */ typedef _BIDI_DATA *PBIDI_DATA;

/* 4950 */ typedef _EXIT_PROCESS_DEBUG_INFO *LPEXIT_PROCESS_DEBUG_INFO;

/* 4951 */ typedef void (__cdecl *unexpected_handler)();

/* 4952 */ typedef tagTYPEATTR *LPTYPEATTR;

/* 4953 */ typedef IMAGE_COR20_HEADER *PIMAGE_COR20_HEADER;

/* 4954 */ typedef tagHARDWAREHOOKSTRUCT *LPHARDWAREHOOKSTRUCT;

/* 4955 */ typedef _CRYPTPROTECT_PROMPTSTRUCT *PCRYPTPROTECT_PROMPTSTRUCT;

/* 4956 */ typedef OPENCARDNAME_EXA *LPOPENCARDNAME_EXA;

/* 4957 */ typedef unsigned int GEOTYPE;

/* 4958 */ typedef void (__stdcall *LPOVERLAPPED_COMPLETION_ROUTINE)(unsigned int, unsigned int, _OVERLAPPED *);

/* 4959 */ typedef int (__stdcall *PROC)();

/* 4960 */ typedef _ICONINFO *PICONINFO;

/* 4961 */ typedef void *HMETAFILEPICT;

/* 4962 */ typedef _MEMORY_BASIC_INFORMATION64 *PMEMORY_BASIC_INFORMATION64;

/* 4963 */ typedef tagWNDCLASSEXA *PWNDCLASSEX;

/* 4964 */ typedef _CERT_REGISTRY_STORE_CLIENT_GPT_PARA *PCERT_REGISTRY_STORE_CLIENT_GPT_PARA;

/* 4965 */ typedef _BIN_RESULTS *PBIN_RESULTS;

/* 4966 */ typedef tagLOGBRUSH *PLOGBRUSH;

/* 4967 */ typedef tagOLEVERB *LPOLEVERB;

/* 4968 */ typedef _DOC_INFO_2W *LPDOC_INFO_2W;

/* 4969 */ typedef unsigned __int16 **LPBSTR;

/* 4970 */ typedef _DOC_INFO_2A *LPDOC_INFO_2A;

/* 4971 */ typedef DLGITEMTEMPLATE *PDLGITEMTEMPLATE;

/* 4972 */ typedef tagMCI_SYSINFO_PARMSA *LPMCI_SYSINFO_PARMS;

/* 4973 */ typedef IEnumSTATDATA *LPENUMSTATDATA;

/* 4974 */ typedef _WIN32_STREAM_ID *LPWIN32_STREAM_ID;

/* 4975 */ typedef void __stdcall RPC_ADDRESS_CHANGE_FN(void *);

/* 4976 */ typedef _PERF_INSTANCE_DEFINITION *PPERF_INSTANCE_DEFINITION;

/* 4977 */ typedef _IMAGE_RESOURCE_DIRECTORY_STRING *PIMAGE_RESOURCE_DIRECTORY_STRING;

/* 4978 */ typedef tagMEASUREITEMSTRUCT *LPMEASUREITEMSTRUCT;

/* 4979 */ typedef int (__stdcall *LPFNADDPROPSHEETPAGE)(_PSP *, int);

/* 4980 */ typedef tagNONCLIENTMETRICSA *PNONCLIENTMETRICS;

/* 4981 */ typedef _ENUM_SERVICE_STATUS_PROCESSW *LPENUM_SERVICE_STATUS_PROCESSW;

/* 4982 */ typedef unsigned int LGRPID;

/* 4983 */ typedef _CPS_URLS *PCPS_URLS;

/* 4984 */ typedef tagMIDIOUTCAPSW *LPMIDIOUTCAPSW;

/* 4985 */ typedef _SYSTEM_ALARM_CALLBACK_ACE *PSYSTEM_ALARM_CALLBACK_ACE;

/* 4986 */ typedef tagCOMBOBOXINFO *PCOMBOBOXINFO;

/* 4987 */ typedef tagMIDIOUTCAPSW *NPMIDIOUTCAPSW;

/* 4988 */ typedef void (__cdecl *new_handler)();

/* 4989 */ typedef DLGTEMPLATE *LPCDLGTEMPLATE;

/* 4990 */ typedef HMIDIIN__ *HMIDIIN;

/* 4991 */ typedef unsigned __int16 *PWSTR;

/* 4992 */ typedef const char *LPCSTR;

/* 4993 */ typedef _TIME_ZONE_INFORMATION *LPTIME_ZONE_INFORMATION;

/* 4994 */ typedef tagLOGPALETTE *LPLOGPALETTE;

/* 4995 */ typedef _SID_IDENTIFIER_AUTHORITY *PSID_IDENTIFIER_AUTHORITY;

/* 4996 */ typedef unsigned __int16 CLIPFORMAT;

/* 4997 */ typedef tagLOGPALETTE *NPLOGPALETTE;

/* 4998 */ typedef _CMC_TAGGED_REQUEST *PCMC_TAGGED_REQUEST;

/* 4999 */ typedef _CERT_POLICY_MAPPING *PCERT_POLICY_MAPPING;

/* 5000 */ typedef _TAPE_CREATE_PARTITION *PTAPE_CREATE_PARTITION;

/* 5001 */ typedef int (__stdcall *PFN_CRYPT_ENUM_OID_INFO)(_CRYPT_OID_INFO *, void *);

/* 5002 */ typedef IHttpNegotiate *LPHTTPNEGOTIATE;

/* 5003 */ typedef tagEMRSETICMPROFILE *PEMRSETICMPROFILEW;

/* 5004 */ typedef tagEMRSELECTCLIPPATH *PEMRSETTEXTALIGN;

/* 5005 */ typedef int (__stdcall *LPFNADDPROPSHEETPAGES)(void *, int (__stdcall *)(_PSP *, int), int);

/* 5006 */ typedef tagDIBSECTION *PDIBSECTION;

/* 5007 */ typedef tagMIXERCONTROLA *PMIXERCONTROLA;

/* 5008 */ typedef IEnumFORMATETC *LPENUMFORMATETC;

/* 5009 */ typedef IOleInPlaceUIWindow *LPOLEINPLACEUIWINDOW;

/* 5010 */ typedef DLGITEMTEMPLATE *PDLGITEMTEMPLATEW;

/* 5011 */ typedef int LONG_PTR;

/* 5012 */ typedef _DISK_EXTENT *PDISK_EXTENT;

/* 5013 */ typedef SYSTEM_BATTERY_STATE *PSYSTEM_BATTERY_STATE;

/* 5014 */ typedef unsigned int (__stdcall *PTRANSLATE_ADDRESS_ROUTINE)(void *, void *, _tagADDRESS *);

/* 5015 */ typedef _DOC_INFO_2A *LPDOC_INFO_2;

/* 5016 */ typedef DLGITEMTEMPLATE *PDLGITEMTEMPLATEA;

/* 5017 */ typedef _CERT_TRUST_LIST_INFO *PCERT_TRUST_LIST_INFO;

/* 5018 */ typedef int (__stdcall *PVECTORED_EXCEPTION_HANDLER)(_EXCEPTION_POINTERS *);

/* 5019 */ typedef _CHANGER_MOVE_MEDIUM *PCHANGER_MOVE_MEDIUM;

/* 5020 */ typedef _EXIT_THREAD_DEBUG_INFO *LPEXIT_THREAD_DEBUG_INFO;

/* 5021 */ typedef tagBITMAPCOREHEADER *PBITMAPCOREHEADER;

/* 5022 */ typedef int (__stdcall *LPFN_TRANSMITFILE)(unsigned int, void *, unsigned int, unsigned int, _OVERLAPPED *, _TRANSMIT_FILE_BUFFERS *, unsigned int);

/* 5023 */ typedef unsigned int (__stdcall *LPPAGESETUPHOOK)(HWND__ *, unsigned int, unsigned int, int);

/* 5024 */ typedef _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE *PCERT_POLICY_QUALIFIER_NOTICE_REFERENCE;

/* 5025 */ typedef HDDEDATA__ *__stdcall FNCALLBACK(unsigned int, unsigned int, HCONV__ *, HSZ__ *, HSZ__ *, HDDEDATA__ *, unsigned int, unsigned int);

/* 5026 */ typedef const char *PFORMAT_STRING;

/* 5027 */ typedef tagWAVEOUTCAPSA *NPWAVEOUTCAPS;

/* 5028 */ typedef tagWAVEOUTCAPSA *LPWAVEOUTCAPS;

/* 5029 */ typedef tagPALETTEENTRY *PPALETTEENTRY;

/* 5030 */ typedef _CHANGER_EXCHANGE_MEDIUM *PCHANGER_EXCHANGE_MEDIUM;

/* 5031 */ typedef _NETRESOURCEA *LPNETRESOURCE;

/* 5032 */ typedef DLGTEMPLATE *LPCDLGTEMPLATEA;

/* 5033 */ typedef tagEMRPOLYPOLYLINE16 *PEMRPOLYPOLYGON16;

/* 5034 */ typedef tagHARDWAREHOOKSTRUCT *PHARDWAREHOOKSTRUCT;

/* 5035 */ typedef HWAVE__ *HWAVE;

/* 5036 */ typedef _SINGLE_LIST_ENTRY *PSINGLE_LIST_ENTRY;

/* 5037 */ typedef _CRYPTOAPI_BLOB *PCERT_RDN_VALUE_BLOB;

/* 5038 */ typedef tagMCI_BREAK_PARMS *PMCI_BREAK_PARMS;

/* 5039 */ typedef _TAPE_GET_DRIVE_PARAMETERS *PTAPE_GET_DRIVE_PARAMETERS;

/* 5040 */ typedef tagHELPWININFOA *LPHELPWININFO;

/* 5041 */ typedef _numberfmtA *LPNUMBERFMT;

/* 5042 */ typedef _MOUSE_EVENT_RECORD *PMOUSE_EVENT_RECORD;

/* 5043 */ typedef int intptr_t;

/* 5044 */ typedef tagRECT *LPCRECT;

/* 5045 */ typedef _VERIFY_INFORMATION *PVERIFY_INFORMATION;

/* 5046 */ typedef void (__stdcall *PFN_CRYPT_FREE)(void *);

/* 5047 */ typedef IBindCtx *LPBINDCTX;

/* 5048 */ typedef DLGTEMPLATE *LPCDLGTEMPLATEW;

/* 5049 */ typedef void *HANDLE;

/* 5050 */ typedef _CERT_RDN_ATTR *PCERT_RDN_ATTR;

/* 5051 */ typedef tagMIDIOUTCAPS2A *PMIDIOUTCAPS2;

/* 5052 */ typedef _CERT_AUTHORITY_KEY_ID_INFO *PCERT_AUTHORITY_KEY_ID_INFO;

/* 5053 */ typedef _CMSG_ENVELOPED_ENCODE_INFO *PCMSG_ENVELOPED_ENCODE_INFO;

/* 5054 */ typedef tagSTYLEBUFA *PSTYLEBUFA;

/* 5055 */ typedef int (__stdcall *WNDPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 5056 */ typedef _WSAMSG *LPWSAMSG;

/* 5057 */ typedef void (__stdcall *LPWAVECALLBACK)(HDRVR__ *, unsigned int, unsigned int, unsigned int, unsigned int);

/* 5058 */ typedef _PRINTER_NOTIFY_INFO_DATA *LPPRINTER_NOTIFY_INFO_DATA;

/* 5059 */ typedef _BLENDFUNCTION *PBLENDFUNCTION;

/* 5060 */ typedef _IMAGE_FILE_HEADER *PIMAGE_FILE_HEADER;

/* 5061 */ typedef _MODEMSETTINGS *LPMODEMSETTINGS;

/* 5062 */ typedef _userHENHMETAFILE *wireHENHMETAFILE;

/* 5063 */ typedef tagMCI_ANIM_WINDOW_PARMSA *LPMCI_ANIM_WINDOW_PARMSA;

/* 5064 */ typedef tagMIDIOUTCAPSA *PMIDIOUTCAPS;

/* 5065 */ typedef _BIDI_REQUEST_CONTAINER *PBIDI_REQUEST_CONTAINER;

/* 5066 */ typedef _BIDI_RESPONSE_DATA *LPBIDI_RESPONSE_DATA;

/* 5067 */ typedef tagPARAMDESCEX *LPPARAMDESCEX;

/* 5068 */ typedef _FLAGGED_WORD_BLOB *UP_FLAGGED_WORD_BLOB;

/* 5069 */ typedef _JOB_INFO_3 *LPJOB_INFO_3;

/* 5070 */ typedef _NDR_CORRELATION_INFO *PNDR_CORRELATION_INFO;

/* 5071 */ typedef tagMCI_VD_PLAY_PARMS *PMCI_VD_PLAY_PARMS;

/* 5072 */ typedef unsigned __int16 *PSECURITY_DESCRIPTOR_CONTROL;

/* 5073 */ typedef void (__stdcall *PFN_CMSG_FREE)(void *);

/* 5074 */ typedef tagEMRSTRETCHBLT *PEMRSTRETCHBLT;

/* 5075 */ typedef _GUID *LPGUID;

/* 5076 */ typedef _ULARGE_INTEGER *PULARGE_INTEGER;

/* 5077 */ typedef const char *PCUTSTR;

/* 5078 */ typedef sockaddr_storage *LPSOCKADDR_STORAGE;

/* 5079 */ typedef _CERT_AUTHORITY_KEY_ID2_INFO *PCERT_AUTHORITY_KEY_ID2_INFO;

/* 5080 */ typedef _cpinfoexA *LPCPINFOEXA;

/* 5081 */ typedef unsigned __int16 *LPWCH;

/* 5082 */ typedef tagNEWTEXTMETRICA *LPNEWTEXTMETRICA;

/* 5083 */ typedef unsigned __int16 *LPUWSTR;

/* 5084 */ typedef unsigned __int16 PRINTEROP_FLAGS;

/* 5085 */ typedef void *HCRYPTOIDFUNCSET;

/* 5086 */ typedef tagNEWTEXTMETRICA *NPNEWTEXTMETRICA;

/* 5087 */ typedef _CRYPT_TIME_STAMP_REQUEST_INFO *PCRYPT_TIME_STAMP_REQUEST_INFO;

/* 5088 */ typedef tagDELETEITEMSTRUCT *LPDELETEITEMSTRUCT;

/* 5089 */ typedef _MONITOR_INFO_1W *PMONITOR_INFO_1W;

/* 5090 */ typedef _cpinfoexW *LPCPINFOEXW;

/* 5091 */ typedef tagEMRFILLPATH *PEMRSTROKEPATH;

/* 5092 */ typedef _CERT_STORE_PROV_FIND_INFO *PCCERT_STORE_PROV_FIND_INFO;

/* 5093 */ typedef _CERT_CHAIN_POLICY_STATUS *PCERT_CHAIN_POLICY_STATUS;

/* 5094 */ typedef tagMIDIOUTCAPSW *PMIDIOUTCAPSW;

/* 5095 */ typedef int (__stdcall *OLDFONTENUMPROCA)(tagLOGFONTA *, tagTEXTMETRICA *, unsigned int, int);

/* 5096 */ typedef _IMAGE_CE_RUNTIME_FUNCTION_ENTRY *PIMAGE_CE_RUNTIME_FUNCTION_ENTRY;

/* 5097 */ typedef _TAPE_WMI_OPERATIONS *PTAPE_WMI_OPERATIONS;

/* 5098 */ typedef _IMAGE_RELOCATION *PIMAGE_RELOCATION;

/* 5099 */ typedef _NT_TIB32 *PNT_TIB32;

/* 5100 */ typedef tagCHOOSECOLORA *LPCHOOSECOLOR;

/* 5101 */ typedef _CHANGER_SEND_VOLUME_TAG_INFORMATION *PCHANGER_SEND_VOLUME_TAG_INFORMATION;

/* 5102 */ typedef tagDROPSTRUCT *PDROPSTRUCT;

/* 5103 */ typedef ILockBytes *LPLOCKBYTES;

/* 5104 */ typedef char *LPTCH;

/* 5105 */ typedef _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA *PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA;

/* 5106 */ typedef _MONITOR_INFO_2W *PMONITOR_INFO_2W;

/* 5107 */ typedef tagMIDIOUTCAPSA *PMIDIOUTCAPSA;

/* 5108 */ typedef tagENUMLOGFONTEXA *LPENUMLOGFONTEX;

/* 5109 */ typedef int (__stdcall *PCRYPT_DECRYPT_PRIVATE_KEY_FUNC)(_CRYPT_ALGORITHM_IDENTIFIER, _CRYPTOAPI_BLOB, char *, unsigned int *, void *);

/* 5110 */ typedef _OVERLAPPED *LPOVERLAPPED;

/* 5111 */ typedef _FORM_INFO_1A *LPFORM_INFO_1A;

/* 5112 */ typedef tagMONMSGSTRUCT *PMONMSGSTRUCT;

/* 5113 */ typedef _CERT_KEY_ATTRIBUTES_INFO *PCERT_KEY_ATTRIBUTES_INFO;

/* 5114 */ typedef tagRECT *PRECT;

/* 5115 */ typedef _JOBOBJECT_ASSOCIATE_COMPLETION_PORT *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT;

/* 5116 */ typedef int streamoff;

/* 5117 */ typedef tagMCI_PLAY_PARMS *LPMCI_PLAY_PARMS;

/* 5118 */ typedef HWAVEIN__ **LPHWAVEIN;

/* 5119 */ typedef _cpinfoexA *LPCPINFOEX;

/* 5120 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_READ_CERT)(void *, _CERT_CONTEXT *, unsigned int, _CERT_CONTEXT **);

/* 5121 */ typedef OPENCARDNAME_EXA *LPOPENCARDNAME_EX;

/* 5122 */ typedef _CERT_ALT_NAME_ENTRY *PCERT_ALT_NAME_ENTRY;

/* 5123 */ typedef int (__stdcall *WSPIAPI_PGETNAMEINFO)(sockaddr *, int, char *, unsigned int, char *, unsigned int, int);

/* 5124 */ typedef _NLA_CONNECTIVITY_TYPE *PNLA_CONNECTIVITY_TYPE;

/* 5125 */ typedef int clock_t;

/* 5126 */ typedef tagMONITORINFOEXA *LPMONITORINFOEX;

/* 5127 */ typedef _CRYPTOAPI_BLOB *PCRYPT_INTEGER_BLOB;

/* 5128 */ typedef _userHPALETTE *wireHPALETTE;

/* 5129 */ typedef _CRYPT_ASYNC_RETRIEVAL_COMPLETION *PCRYPT_ASYNC_RETRIEVAL_COMPLETION;

/* 5130 */ typedef _PATHNAME_BUFFER *PPATHNAME_BUFFER;

/* 5131 */ typedef _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA *PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA;

/* 5132 */ typedef unsigned int (__stdcall *LPFNDEVCAPS)(char *, char *, unsigned int, char *, _devicemodeA *);

/* 5133 */ typedef _DOC_INFO_1W *LPDOC_INFO_1W;

/* 5134 */ typedef _DRAWPATRECT *PDRAWPATRECT;

/* 5135 */ typedef tagCONVCONTEXT *PCONVCONTEXT;

/* 5136 */ typedef _GRADIENT_TRIANGLE *LPGRADIENT_TRIANGLE;

/* 5137 */ typedef int (__stdcall *UILANGUAGE_ENUMPROCW)(unsigned __int16 *, int);

/* 5138 */ typedef int (__stdcall *REGISTERWORDENUMPROCA)(const char *, unsigned int, const char *, void *);

/* 5139 */ typedef tagSCROLLINFO *LPCSCROLLINFO;

/* 5140 */ typedef IMAGE_LOAD_CONFIG_DIRECTORY32 *PIMAGE_LOAD_CONFIG_DIRECTORY32;

/* 5141 */ typedef _PROCESS_HEAP_ENTRY *LPPROCESS_HEAP_ENTRY;

/* 5142 */ typedef _DRIVER_INFO_5W *LPDRIVER_INFO_5W;

/* 5143 */ typedef _DOC_INFO_1A *LPDOC_INFO_1A;

/* 5144 */ typedef tagLOGBRUSH32 *PLOGBRUSH32;

/* 5145 */ typedef tagMETARECORD *PMETARECORD;

/* 5146 */ typedef unsigned int (__stdcall *LPOCNCONNPROCA)(unsigned int, char *, char *, void *);

/* 5147 */ typedef tagEMRPOLYDRAW16 *PEMRPOLYDRAW16;

/* 5148 */ typedef tWAVEFORMATEX *PWAVEFORMATEX;

/* 5149 */ typedef _SYSTEM_POWER_POLICY *PSYSTEM_POWER_POLICY;

/* 5150 */ typedef IDataObject *LPDATAOBJECT;

/* 5151 */ typedef tagEMRSCALEVIEWPORTEXTEX *PEMRSCALEVIEWPORTEXTEX;

/* 5152 */ typedef unsigned int HCRYPTPROV;

/* 5153 */ typedef int (__stdcall *REGISTERWORDENUMPROCW)(const unsigned __int16 *, unsigned int, const unsigned __int16 *, void *);

/* 5154 */ typedef _wireVARIANT *wireVARIANT;

/* 5155 */ typedef int (__stdcall *ENUMRESTYPEPROCW)(HINSTANCE__ *, unsigned __int16 *, int);

/* 5156 */ typedef void **PHCRYPTASYNC;

/* 5157 */ typedef hostent *PHOSTENT;

/* 5158 */ typedef tagJOYCAPSW *NPJOYCAPSW;

/* 5159 */ typedef tagJOYCAPSW *LPJOYCAPSW;

/* 5160 */ typedef _SID *PISID;

/* 5161 */ typedef unsigned int lzo_uint32;

/* 5162 */ typedef tagSCROLLINFO *LPSCROLLINFO;

/* 5163 */ typedef SC_HANDLE__ *SC_HANDLE;

/* 5164 */ typedef _DRIVER_INFO_4W *LPDRIVER_INFO_4W;

/* 5165 */ typedef char *PTSTR;

/* 5166 */ typedef QOS_OBJECT_HDR *LPQOS_OBJECT_HDR;

/* 5167 */ typedef tagMCI_OVLY_RECT_PARMS *LPMCI_OVLY_RECT_PARMS;

/* 5168 */ typedef _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE;

/* 5169 */ typedef _OFNOTIFYA *LPOFNOTIFY;

/* 5170 */ typedef _GUID *__rcGUID_t;

/* 5171 */ typedef HRSRC__ *HRSRC;

/* 5172 */ typedef tagCANDIDATEFORM *PCANDIDATEFORM;

/* 5173 */ typedef _devicemodeW *LPDEVMODEW;

/* 5174 */ typedef _devicemodeW *NPDEVMODEW;

/* 5175 */ typedef char *PSECURITY_CONTEXT_TRACKING_MODE;

/* 5176 */ typedef _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA *PAUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;

/* 5177 */ typedef _CERT_CHAIN_CONTEXT *PCCERT_CHAIN_CONTEXT;

/* 5178 */ typedef void *HOLEMENU;

/* 5179 */ typedef int (__stdcall *ENUMRESLANGPROCA)(HINSTANCE__ *, const char *, const char *, unsigned __int16, int);

/* 5180 */ typedef tagMENUBARINFO *PMENUBARINFO;

/* 5181 */ typedef _DOC_INFO_1A *LPDOC_INFO_1;

/* 5182 */ typedef _ABC *PABC;

/* 5183 */ typedef tagMONHSZSTRUCTA *PMONHSZSTRUCT;

/* 5184 */ typedef tagCOPYDATASTRUCT *PCOPYDATASTRUCT;

/* 5185 */ typedef tagMONERRSTRUCT *PMONERRSTRUCT;

/* 5186 */ typedef _OFNOTIFYW *LPOFNOTIFYW;

/* 5187 */ typedef _EH3_EXCEPTION_REGISTRATION *PEH3_EXCEPTION_REGISTRATION;

/* 5188 */ typedef tagEMRALPHABLEND *PEMRALPHABLEND;

/* 5189 */ typedef _CHANGER_ELEMENT_STATUS *PCHANGER_ELEMENT_STATUS;

/* 5190 */ typedef _TRANSMIT_FILE_BUFFERS *LPTRANSMIT_FILE_BUFFERS;

/* 5191 */ typedef _IMAGE_ROM_OPTIONAL_HEADER *PIMAGE_ROM_OPTIONAL_HEADER;

/* 5192 */ typedef _ABC *LPABC;

/* 5193 */ typedef _DRIVER_INFO_6W *LPDRIVER_INFO_6W;

/* 5194 */ typedef _MIDL_SERVER_INFO_ *PMIDL_SERVER_INFO;

/* 5195 */ typedef char *PUINT8;

/* 5196 */ typedef unsigned __int16 wctype_t;

/* 5197 */ typedef _ABC *NPABC;

/* 5198 */ typedef _SECURITY_DESCRIPTOR *PISECURITY_DESCRIPTOR;

/* 5199 */ typedef _NLA_BLOB_DATA_TYPE *PNLA_BLOB_DATA_TYPE;

/* 5200 */ typedef void *HCERTSTORE;

/* 5201 */ typedef _OFNOTIFYA *LPOFNOTIFYA;

/* 5202 */ typedef void (__stdcall *RTL_VERIFIER_DLL_LOAD_CALLBACK)(unsigned __int16 *, void *, unsigned int, void *);

/* 5203 */ typedef tagMOUSEMOVEPOINT *LPMOUSEMOVEPOINT;

/* 5204 */ typedef OPENCARD_SEARCH_CRITERIAW *POPENCARD_SEARCH_CRITERIAW;

/* 5205 */ typedef tagMCI_WAVE_OPEN_PARMSA *LPMCI_WAVE_OPEN_PARMS;

/* 5206 */ typedef _DWORD_BLOB *UP_DWORD_BLOB;

/* 5207 */ typedef int *PSSIZE_T;

/* 5208 */ typedef _MMIOINFO *LPCMMIOINFO;

/* 5209 */ typedef _IMAGE_BOUND_FORWARDER_REF *PIMAGE_BOUND_FORWARDER_REF;

/* 5210 */ typedef unsigned int (__stdcall *PFNGETPROFILEPATHA)(const char *, char *, unsigned int);

/* 5211 */ typedef _DRIVER_INFO_1W *LPDRIVER_INFO_1W;

/* 5212 */ typedef tagMCI_OVLY_WINDOW_PARMSA *PMCI_OVLY_WINDOW_PARMSA;

/* 5213 */ typedef _OFNOTIFYEXW *LPOFNOTIFYEXW;

/* 5214 */ typedef IInternetBindInfo *LPIINTERNETBINDINFO;

/* 5215 */ typedef _DRIVER_INFO_4A *PDRIVER_INFO_4;

/* 5216 */ typedef tagBITMAPFILEHEADER *LPBITMAPFILEHEADER;

/* 5217 */ typedef _KEY_TYPE_SUBTYPE *PKEY_TYPE_SUBTYPE;

/* 5218 */ typedef _OFNOTIFYEXA *LPOFNOTIFYEXA;

/* 5219 */ typedef _CMSG_KEY_TRANS_RECIPIENT_INFO *PCMSG_KEY_TRANS_RECIPIENT_INFO;

/* 5220 */ typedef unsigned int POINTER_64_INT;

/* 5221 */ typedef tagREGISTERWORDW *PREGISTERWORDW;

/* 5222 */ typedef tagMCI_OVLY_WINDOW_PARMSW *PMCI_OVLY_WINDOW_PARMSW;

/* 5223 */ typedef _TAPE_ERASE *PTAPE_ERASE;

/* 5224 */ typedef _PRINTPROCESSOR_INFO_1W *LPPRINTPROCESSOR_INFO_1W;

/* 5225 */ typedef tagWNDCLASSW *PWNDCLASSW;

/* 5226 */ typedef IDropTarget *LPDROPTARGET;

/* 5227 */ typedef tagDRAWITEMSTRUCT *LPDRAWITEMSTRUCT;

/* 5228 */ typedef unsigned int HREFTYPE;

/* 5229 */ typedef _FLAGGED_BYTE_BLOB *UP_FLAGGED_BYTE_BLOB;

/* 5230 */ typedef void *PSECURITY_DESCRIPTOR;

/* 5231 */ typedef const unsigned __int16 *PCUWSTR;

/* 5232 */ typedef tagAUXCAPS2A *PAUXCAPS2A;

/* 5233 */ typedef void *HLOCAL;

/* 5234 */ typedef HKEY__ *HKEY;

/* 5235 */ typedef const unsigned __int16 *PCWCH;

/* 5236 */ typedef tagMCI_ANIM_RECT_PARMS *PMCI_ANIM_RECT_PARMS;

/* 5237 */ typedef tagMCI_SET_PARMS *PMCI_SET_PARMS;

/* 5238 */ typedef char *LPUTSTR;

/* 5239 */ typedef int (__stdcall *PROPENUMPROC)(HWND__ *, const char *, void *);

/* 5240 */ typedef _DISPLAY_DEVICEA *PDISPLAY_DEVICE;

/* 5241 */ typedef _SERVICE_TABLE_ENTRYA *LPSERVICE_TABLE_ENTRY;

/* 5242 */ typedef unsigned __int64 DWORD64;

/* 5243 */ typedef _IMAGE_NT_HEADERS64 *PIMAGE_NT_HEADERS64;

/* 5244 */ typedef int *PLONG_PTR;

/* 5245 */ typedef _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION *PCACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

/* 5246 */ typedef _PSINJECTDATA *PPSINJECTDATA;

/* 5247 */ typedef _SERVICE_FAILURE_ACTIONSA *LPSERVICE_FAILURE_ACTIONSA;

/* 5248 */ typedef unsigned int ULONG_PTR;

/* 5249 */ typedef tagALTTABINFO *PALTTABINFO;

/* 5250 */ typedef tagWINDOWINFO *PWINDOWINFO;

/* 5251 */ typedef unsigned int MMRESULT;

/* 5252 */ typedef tagEVENTMSG *NPEVENTMSGMSG;

/* 5253 */ typedef _DRIVER_INFO_4W *PDRIVER_INFO_4W;

/* 5254 */ typedef tagEVENTMSG *LPEVENTMSGMSG;

/* 5255 */ typedef HWND__ *HWND;

/* 5256 */ typedef _SHNAMEMAPPINGA *LPSHNAMEMAPPING;

/* 5257 */ typedef _DRIVER_INFO_3W *LPDRIVER_INFO_3W;

/* 5258 */ typedef int _Once_t;

/* 5259 */ typedef tagINTERFACEINFO *LPINTERFACEINFO;

/* 5260 */ typedef tagMCI_OVLY_WINDOW_PARMSA *PMCI_OVLY_WINDOW_PARMS;

/* 5261 */ typedef void *I_RPC_HANDLE;

/* 5262 */ typedef tagSTGMEDIUM *LPSTGMEDIUM;

/* 5263 */ typedef int (__stdcall *WSPIAPI_PGETADDRINFO)(const char *, const char *, addrinfo *, addrinfo **);

/* 5264 */ typedef _DISK_HISTOGRAM *PDISK_HISTOGRAM;

/* 5265 */ typedef IOleWindow *LPOLEWINDOW;

/* 5266 */ typedef _SCHANNEL_ALG *PSCHANNEL_ALG;

/* 5267 */ typedef _DRIVER_INFO_4A *PDRIVER_INFO_4A;

/* 5268 */ typedef _OFNOTIFYEXA *LPOFNOTIFYEX;

/* 5269 */ typedef _TOKEN_CONTROL *PTOKEN_CONTROL;

/* 5270 */ typedef _SYSTEM_ALARM_ACE *PSYSTEM_ALARM_ACE;

/* 5271 */ typedef unsigned int DBROWSTATUS;

/* 5272 */ typedef _CMSG_RC4_AUX_INFO *PCMSG_RC4_AUX_INFO;

/* 5273 */ typedef tagWAVEINCAPSA *PWAVEINCAPS;

/* 5274 */ typedef tagMSG *NPMSG;

/* 5275 */ typedef _FORMAT_PARAMETERS *PFORMAT_PARAMETERS;

/* 5276 */ typedef int (__stdcall *PROPENUMPROCW)(HWND__ *, const unsigned __int16 *, void *);

/* 5277 */ typedef tagMSG *LPMSG;

/* 5278 */ typedef _CMSG_RC2_AUX_INFO *PCMSG_RC2_AUX_INFO;

/* 5279 */ typedef _DRIVER_INFO_2W *LPDRIVER_INFO_2W;

/* 5280 */ typedef tagFINDREPLACEW *LPFINDREPLACEW;

/* 5281 */ typedef tagMCI_VD_PLAY_PARMS *LPMCI_VD_PLAY_PARMS;

/* 5282 */ typedef int BOOL;

/* 5283 */ typedef in_addr *LPIN_ADDR;

/* 5284 */ typedef tagTLIBATTR *LPTLIBATTR;

/* 5285 */ typedef int (__stdcall *PROPENUMPROCA)(HWND__ *, const char *, void *);

/* 5286 */ typedef _MAT2 *LPMAT2;

/* 5287 */ typedef tagMCI_LOAD_PARMSA *PMCI_LOAD_PARMSA;

/* 5288 */ typedef void (__stdcall *RPC_HTTP_PROXY_FREE_STRING)(unsigned __int16 *);

/* 5289 */ typedef _flowspec *LPFLOWSPEC;

/* 5290 */ typedef tagOLEUPDATE *LPOLEUPDATE;

/* 5291 */ typedef _ImageArchitectureHeader *PIMAGE_ARCHITECTURE_HEADER;

/* 5292 */ typedef unsigned int MCIDEVICEID;

/* 5293 */ typedef _CERT_REVOCATION_PARA *PCERT_REVOCATION_PARA;

/* 5294 */ typedef tagBINDPTR *LPBINDPTR;

/* 5295 */ typedef int (__stdcall *ENUMRESNAMEPROCA)(HINSTANCE__ *, const char *, char *, int);

/* 5296 */ typedef tagPOINT *NPPOINT;

/* 5297 */ typedef tagMCI_OVLY_SAVE_PARMSW *LPMCI_OVLY_SAVE_PARMSW;

/* 5298 */ typedef int *LPBOOL;

/* 5299 */ typedef void (__cdecl *_PHNDLR)(int);

/* 5300 */ typedef tagPOINT *LPPOINT;

/* 5301 */ typedef _PERF_COUNTER_BLOCK *PPERF_COUNTER_BLOCK;

/* 5302 */ typedef HKL__ *HKL;

/* 5303 */ typedef _SC_ACTION *LPSC_ACTION;

/* 5304 */ typedef _PROPSHEETPAGEW_V3 *LPPROPSHEETPAGEW_V3;

/* 5305 */ typedef _PROPSHEETPAGEW *LPPROPSHEETPAGEW_V2;

/* 5306 */ typedef _PROPSHEETPAGEW_V1 *LPPROPSHEETPAGEW_V1;

/* 5307 */ typedef tMIXERCONTROLDETAILS_SIGNED *PMIXERCONTROLDETAILS_SIGNED;

/* 5308 */ typedef unsigned int DBLENGTH;

/* 5309 */ typedef _CRYPT_ENROLLMENT_NAME_VALUE_PAIR *PCRYPT_ENROLLMENT_NAME_VALUE_PAIR;

/* 5310 */ typedef tagRECT *LPRECT;

/* 5311 */ typedef tagRECT *NPRECT;

/* 5312 */ typedef _SEC_WINNT_AUTH_IDENTITY_W *PSEC_WINNT_AUTH_IDENTITY_W;

/* 5313 */ typedef _MODEMDEVCAPS *PMODEMDEVCAPS;

/* 5314 */ typedef _ACTIVATION_CONTEXT_QUERY_INDEX *PCACTIVATION_CONTEXT_QUERY_INDEX;

/* 5315 */ typedef tagLOGCOLORSPACEA *LPLOGCOLORSPACE;

/* 5316 */ typedef unsigned int SCARDHANDLE;

/* 5317 */ typedef ICreateTypeInfo2 *LPCREATETYPEINFO2;

/* 5318 */ typedef const char *LPCCH;

/* 5319 */ typedef tagWAVEOUTCAPS2A *LPWAVEOUTCAPS2A;

/* 5320 */ typedef tagWAVEOUTCAPS2A *NPWAVEOUTCAPS2A;

/* 5321 */ typedef tagMCI_OVLY_LOAD_PARMSW *PMCI_OVLY_LOAD_PARMSW;

/* 5322 */ typedef tagBITMAPINFO *PBITMAPINFO;

/* 5323 */ typedef tagABORTPATH *PEMRABORTPATH;

/* 5324 */ typedef _JOB_INFO_2A *PJOB_INFO_2A;

/* 5325 */ typedef tagWAVEOUTCAPS2W *NPWAVEOUTCAPS2W;

/* 5326 */ typedef _MMIOINFO *PMMIOINFO;

/* 5327 */ typedef tagWAVEOUTCAPS2W *LPWAVEOUTCAPS2W;

/* 5328 */ typedef ICreateTypeInfo *LPCREATETYPEINFO;

/* 5329 */ typedef tagEMRRESTOREDC *PEMRRESTOREDC;

/* 5330 */ typedef _WSANAMESPACE_INFOA *LPWSANAMESPACE_INFO;

/* 5331 */ typedef tagMCI_OVLY_LOAD_PARMSA *PMCI_OVLY_LOAD_PARMSA;

/* 5332 */ typedef char *PCHAR;

/* 5333 */ typedef SC_HANDLE__ **LPSC_HANDLE;

/* 5334 */ typedef IBindCtx *LPBC;

/* 5335 */ typedef __int64 __time64_t;

/* 5336 */ typedef char TCHAR;

/* 5337 */ typedef char UCHAR;

/* 5338 */ typedef timecaps_tag *PTIMECAPS;

/* 5339 */ typedef _CERT_LDAP_STORE_OPENED_PARA *PCERT_LDAP_STORE_OPENED_PARA;

/* 5340 */ typedef unsigned int (__stdcall *PFE_EXPORT_FUNC)(char *, void *, unsigned int);

/* 5341 */ typedef tagMONHSZSTRUCTA *PMONHSZSTRUCTA;

/* 5342 */ typedef type_info *__RTtypeidReturnType;

/* 5343 */ typedef _JOB_INFO_1A *PJOB_INFO_1A;

/* 5344 */ typedef _PROPSHEETPAGEA *LPPROPSHEETPAGEA;

/* 5345 */ typedef int (__stdcall *PSYM_ENUMERATESYMBOLS_CALLBACK)(_SYMBOL_INFO *, unsigned int, void *);

/* 5346 */ typedef char BCHAR;

/* 5347 */ typedef char CCHAR;

/* 5348 */ typedef _RECTL *LPRECTL;

/* 5349 */ typedef _CRYPT_CREDENTIALS *PCRYPT_CREDENTIALS;

/* 5350 */ typedef _CMSG_MAIL_LIST_ENCRYPT_INFO *PCMSG_MAIL_LIST_ENCRYPT_INFO;

/* 5351 */ typedef char FCHAR;

/* 5352 */ typedef _UNLOAD_DLL_DEBUG_INFO *LPUNLOAD_DLL_DEBUG_INFO;

/* 5353 */ typedef ICatalogFileInfo *LPCATALOGFILEINFO;

/* 5354 */ typedef tagEMRSETMITERLIMIT *PEMRSETMITERLIMIT;

/* 5355 */ typedef _PROPSHEETPAGEW *LPCPROPSHEETPAGEW;

/* 5356 */ typedef tagPANOSE *LPPANOSE;

/* 5357 */ typedef void *GLOBALHANDLE;

/* 5358 */ typedef const unsigned __int16 *LPCWSTR;

/* 5359 */ typedef tagWAVEOUTCAPS2A *LPWAVEOUTCAPS2;

/* 5360 */ typedef tagCOLORADJUSTMENT *LPCOLORADJUSTMENT;

/* 5361 */ typedef tagWAVEOUTCAPS2A *NPWAVEOUTCAPS2;

/* 5362 */ typedef int lzo_int32;

/* 5363 */ typedef _wireSAFEARRAY **wirePSAFEARRAY;

/* 5364 */ typedef _IMAGEHLP_LINE *PIMAGEHLP_LINE;

/* 5365 */ typedef tagCOLORADJUSTMENT *PCOLORADJUSTMENT;

/* 5366 */ typedef _CRYPT_HASH_INFO *PCRYPT_HASH_INFO;

/* 5367 */ typedef tagMENUITEMINFOA *LPCMENUITEMINFO;

/* 5368 */ typedef tagEMRBITBLT *PEMRBITBLT;

/* 5369 */ typedef tagMCI_WAVE_OPEN_PARMSA *LPMCI_WAVE_OPEN_PARMSA;

/* 5370 */ typedef unsigned int (__stdcall *LPCFHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 5371 */ typedef _PROPSHEETPAGEA *LPCPROPSHEETPAGEA;

/* 5372 */ typedef int (__stdcall *PFN_CMSG_EXPORT_MAIL_LIST)(_CMSG_CONTENT_ENCRYPT_INFO *, _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO *, _CMSG_MAIL_LIST_ENCRYPT_INFO *, unsigned int, void *);

/* 5373 */ typedef _GENERIC_MAPPING *PGENERIC_MAPPING;

/* 5374 */ typedef _CRYPT_PASSWORD_CREDENTIALSA *PCRYPT_PASSWORD_CREDENTIALS;

/* 5375 */ typedef tagLOGPALETTE *PLOGPALETTE;

/* 5376 */ typedef _CTL_CONTEXT *PCTL_CONTEXT;

/* 5377 */ typedef _FPO_DATA *PFPO_DATA;

/* 5378 */ typedef joyinfoex_tag *PJOYINFOEX;

/* 5379 */ typedef tagEMRPOLYPOLYLINE *PEMRPOLYPOLYLINE;

/* 5380 */ typedef _MEMORYSTATUSEX *LPMEMORYSTATUSEX;

/* 5381 */ typedef tagMCI_OVLY_LOAD_PARMSA *PMCI_OVLY_LOAD_PARMS;

/* 5382 */ typedef tagREGISTERWORDA *LPREGISTERWORD;

/* 5383 */ typedef tagMOUSEHOOKSTRUCT *LPMOUSEHOOKSTRUCT;

/* 5384 */ typedef tagREGISTERWORDA *NPREGISTERWORD;

/* 5385 */ typedef _PROCESSOR_POWER_POLICY *PPROCESSOR_POWER_POLICY;

/* 5386 */ typedef unsigned __int16 LANGID;

/* 5387 */ typedef char *PSTR;

/* 5388 */ typedef unsigned __int16 _ino_t;

/* 5389 */ typedef tagMIDIINCAPS2A *PMIDIINCAPS2;

/* 5390 */ typedef tagENUMLOGFONTW *LPENUMLOGFONTW;

/* 5391 */ typedef unsigned int (__stdcall *PFLS_ALLOC_FUNCTION)(void (__stdcall *)(void *));

/* 5392 */ typedef tagCHARSETINFO *LPCHARSETINFO;

/* 5393 */ typedef _CERT_ID *PCERT_ID;

/* 5394 */ typedef tagCHARSETINFO *NPCHARSETINFO;

/* 5395 */ typedef _CMC_TAGGED_CERT_REQUEST *PCMC_TAGGED_CERT_REQUEST;

/* 5396 */ typedef _DEVICE_POWER_STATE *PDEVICE_POWER_STATE;

/* 5397 */ typedef _MEMORYSTATUS *LPMEMORYSTATUS;

/* 5398 */ typedef void (__stdcall *LPWSAOVERLAPPED_COMPLETION_ROUTINE)(unsigned int, unsigned int, _OVERLAPPED *, unsigned int);

/* 5399 */ typedef _REMSECURITY_ATTRIBUTES *PREMSECURITY_ATTRIBUTES;

/* 5400 */ typedef unsigned __int16 *BSTR;

/* 5401 */ typedef _DRIVER_INFO_5A *PDRIVER_INFO_5;

/* 5402 */ typedef IWrappedProtocol *LPIWRAPPEDPROTOCOL;

/* 5403 */ typedef _SYSTEM_AUDIT_CALLBACK_ACE *PSYSTEM_AUDIT_CALLBACK_ACE;

/* 5404 */ typedef unsigned int *PKSPIN_LOCK;

/* 5405 */ typedef _CERT_ACCESS_DESCRIPTION *PCERT_ACCESS_DESCRIPTION;

/* 5406 */ typedef HSTR__ *HSTR;

/* 5407 */ typedef _KDHELP64 *PKDHELP64;

/* 5408 */ typedef _JOB_INFO_1A *LPJOB_INFO_1;

/* 5409 */ typedef IInternet *LPIINTERNET;

/* 5410 */ typedef _IMAGE_BOUND_IMPORT_DESCRIPTOR *PIMAGE_BOUND_IMPORT_DESCRIPTOR;

/* 5411 */ typedef tagMIXERLINEW *PMIXERLINEW;

/* 5412 */ typedef tagCREATESTRUCTW *LPCREATESTRUCTW;

/* 5413 */ typedef _WSAVersion *LPWSAVERSION;

/* 5414 */ typedef void MENUTEMPLATEA;

/* 5415 */ typedef unsigned __int16 *LPWSTR;

/* 5416 */ typedef tagAUXCAPS2A *PAUXCAPS2;

/* 5417 */ typedef void *LPMENUTEMPLATEA;

/* 5418 */ typedef _ADAPTER_STATUS *PADAPTER_STATUS;

/* 5419 */ typedef _OBJECT_TYPE_LIST *POBJECT_TYPE_LIST;

/* 5420 */ typedef unsigned int FLONG;

/* 5421 */ typedef _SERVICE_TABLE_ENTRYA *LPSERVICE_TABLE_ENTRYA;

/* 5422 */ typedef _SECURITY_QUALITY_OF_SERVICE *PSECURITY_QUALITY_OF_SERVICE;

/* 5423 */ typedef wavehdr_tag *PWAVEHDR;

/* 5424 */ typedef void *LPMENUTEMPLATEW;

/* 5425 */ typedef _SERVICE_FAILURE_ACTIONSA *LPSERVICE_FAILURE_ACTIONS;

/* 5426 */ typedef void MENUTEMPLATEW;

/* 5427 */ typedef tagMIXERLINEA *PMIXERLINEA;

/* 5428 */ typedef _JOBOBJECT_BASIC_PROCESS_ID_LIST *PJOBOBJECT_BASIC_PROCESS_ID_LIST;

/* 5429 */ typedef tagAUXCAPSA *PAUXCAPS;

/* 5430 */ typedef tagCREATESTRUCTA *LPCREATESTRUCTA;

/* 5431 */ typedef void __stdcall RPC_CLIENT_FREE(void *);

/* 5432 */ typedef int *PLONG;

/* 5433 */ typedef _PROCESS_INFORMATION *PPROCESS_INFORMATION;

/* 5434 */ typedef tagOBJECTDESCRIPTOR *LPOBJECTDESCRIPTOR;

/* 5435 */ typedef _CRYPT_OID_INFO *PCCRYPT_OID_INFO;

/* 5436 */ typedef _CRL_CONTEXT *PCRL_CONTEXT;

/* 5437 */ typedef unsigned int ULONG;

/* 5438 */ typedef IOleObject *LPOLEOBJECT;

/* 5439 */ typedef tagEMRPOLYLINE *PEMRPOLYLINETO;

/* 5440 */ typedef void *HCRYPTOIDFUNCADDR;

/* 5441 */ typedef tagREGISTERWORDA *LPREGISTERWORDA;

/* 5442 */ typedef _DRIVER_INFO_5W *PDRIVER_INFO_5W;

/* 5443 */ typedef tagREGISTERWORDA *NPREGISTERWORDA;

/* 5444 */ typedef tagMIDIINCAPS2A *PMIDIINCAPS2A;

/* 5445 */ typedef char *LPTSTR;

/* 5446 */ typedef _DCB *LPDCB;

/* 5447 */ typedef _JOB_INFO_1W *LPJOB_INFO_1W;

/* 5448 */ typedef int (__stdcall *PFN_CERT_ENUM_SYSTEM_STORE_LOCATION)(const unsigned __int16 *, unsigned int, void *, void *);

/* 5449 */ typedef tagMIDIINCAPS2W *PMIDIINCAPS2W;

/* 5450 */ typedef _CMSG_CMS_RECIPIENT_INFO *PCMSG_CMS_RECIPIENT_INFO;

/* 5451 */ typedef tagREGISTERWORDW *NPREGISTERWORDW;

/* 5452 */ typedef _OUTLINETEXTMETRICA *LPOUTLINETEXTMETRIC;

/* 5453 */ typedef void (__cdecl *PMFN)();

/* 5454 */ typedef tagREGISTERWORDW *LPREGISTERWORDW;

/* 5455 */ typedef _DRIVER_INFO_5A *PDRIVER_INFO_5A;

/* 5456 */ typedef _OUTLINETEXTMETRICA *NPOUTLINETEXTMETRIC;

/* 5457 */ typedef int ptrdiff_t;

/* 5458 */ typedef tagMCI_SEEK_PARMS *PMCI_SEEK_PARMS;

/* 5459 */ typedef _JOB_INFO_1A *LPJOB_INFO_1A;

/* 5460 */ typedef tagAUXCAPSW *PAUXCAPSW;

/* 5461 */ typedef void MENUTEMPLATE;

/* 5462 */ typedef void *LPMENUTEMPLATE;

/* 5463 */ typedef tagEMRSETVIEWPORTORGEX *PEMRSETBRUSHORGEX;

/* 5464 */ typedef _IMAGE_LINENUMBER *PIMAGE_LINENUMBER;

/* 5465 */ typedef char BOOLEAN;

/* 5466 */ typedef _tiddata *_ptiddata;

/* 5467 */ typedef HMIDISTRM__ *HMIDISTRM;

/* 5468 */ typedef _TOKEN_INFORMATION_CLASS *PTOKEN_INFORMATION_CLASS;

/* 5469 */ typedef _CRYPT_SIGN_MESSAGE_PARA *PCRYPT_SIGN_MESSAGE_PARA;

/* 5470 */ typedef tagAUXCAPSA *PAUXCAPSA;

/* 5471 */ typedef tagCREATESTRUCTA *LPCREATESTRUCT;

/* 5472 */ typedef tagMIXERLINEA *PMIXERLINE;

/* 5473 */ typedef void (__stdcall *SENDASYNCPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 5474 */ typedef _ZONEATTRIBUTES *LPZONEATTRIBUTES;

/* 5475 */ typedef HMENU__ *HMENU;

/* 5476 */ typedef int (__stdcall *DLGPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 5477 */ typedef _CTL_VERIFY_USAGE_STATUS *PCTL_VERIFY_USAGE_STATUS;

/* 5478 */ typedef _TAPE_SET_DRIVE_PARAMETERS *PTAPE_SET_DRIVE_PARAMETERS;

/* 5479 */ typedef HWAVEOUT__ **LPHWAVEOUT;

/* 5480 */ typedef ICreateTypeLib *LPCREATETYPELIB;

/* 5481 */
#pragma pack(push, 1)
struct _msExcept7
{
  int Magic;
  int Count;
  void *InfoPtr;
  int CountDtr;
  void *DtrPtr;
  int _unk[2];
};
#pragma pack(pop)

/* 5482 */
#pragma pack(push, 1)
struct _msExcInfo
{
  int Id;
  void *Proc;
};
#pragma pack(pop)

/* 5483 */
#pragma pack(push, 1)
struct _msExcExt
{
  int _unk[3];
  int Count;
  void *RttiBlkPtr;
};
#pragma pack(pop)

/* 5484 */
#pragma pack(push, 1)
struct _msRttiDscr
{
  int _unk;
  void *RttiPtr;
  int spoff;
  void *Dtr;
};
#pragma pack(pop)


/* End of file */
