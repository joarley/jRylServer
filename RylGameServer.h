/*
   This file has been generated by IDA Pro.
   It contains local type definitions from
     C:\Nova pasta\Server\server\RylGameServer.idb
*/

/*    1 */
enum SKILL::Const
{
  MAX_SKILL_LEVEL = 0x6,
  MAX_SLOT_NUM = 0x14,
};

/*    2 */
enum LOG_TYPE
{
  LOG_NORMAL = 0x0,
  LOG_RULE = 0x1,
  LOG_INFO = 0x2,
  LOG_DETAIL = 0x3,
  LOG_SYSERR = 0x4,
  LOG_ERROR = 0x5,
  LOG_DEBUG = 0x6,
  LOG_WARN = 0x7,
  MAX_LOG_TYPE = 0x8,
};

/*    3 */
enum std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed
{
  _Multi = 0x1,
};

/*    4 */
enum std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl
{
  _Red = 0x0,
  _Black = 0x1,
};

/*    5 */
enum std::basic_string<char,std::char_traits<char>,std::allocator<char> >::__unnamed
{
  _BUF_SIZE = 0x10,
};

/*    6 */
enum LogBuffer::__unnamed
{
  MAX_LOG_BUFFER = 0xFDE8,
};

/*    7 */
enum CExceptionReport::Features
{
  CATCH_EXCEPTION = 0x1,
  USE_MINIDUMP = 0x2,
  USE_REPORT = 0x4,
};

/*    8 */
enum BasicType
{
  btNoType = 0x0,
  btVoid = 0x1,
  btChar = 0x2,
  btWChar = 0x3,
  btInt = 0x6,
  btUInt = 0x7,
  btFloat = 0x8,
  btBCD = 0x9,
  btBool = 0xA,
  btLong = 0xD,
  btULong = 0xE,
  btCurrency = 0x19,
  btDate = 0x1A,
  btVariant = 0x1B,
  btComplex = 0x1C,
  btBit = 0x1D,
  btBSTR = 0x1E,
  btHresult = 0x1F,
};

/*    9 */
typedef LogBuffer::__unnamed CExceptionReport::__unnamed;

/*   10 */
enum PktBase::PktBaseErr
{
  NO_SERVER_ERR = 0x0,
  SERVER_ERROR = 0x1,
};

/*   11 */
enum OleDB::ConnType
{
  ConnType_ODBC = 0x0,
  ConnType_MSSQL = 0x1,
  ConnType_ORACLE = 0x2,
};

/*   12 */
enum OleDB::Rowset
{
  Rowset_Get = 0x0,
  Rowset_Update = 0x1,
};

/*   13 */
typedef $8C57D1DDA788D6050A7C554DBD1EB1AC ADDRESS_MODE;

/*   14 */
enum CServerSetup::DefaultPorts
{
  LoginServerLauncherListen = 0x2775,
  AuthServerClientListen = 0x277E,
  P1ChatServerClientListen = 0x277F,
  GameServerClientBaseListen = 0x27D8,
  MAX_ZONE = 0x14,
  MAX_CHANNEL = 0x5,
  P1GameServerClientUDPListen = 0x2904,
  P1AdminToolServerClientListen = 0x2B5D,
  P2AdminToolServerClientListen = 0x2B5E,
  LogServerLogClientListen = 0x2B5F,
  ManageServerManageToolListen = 0x2B60,
  ChatServerMonitoringToolListen = 0x2B61,
  StatServerManageServerListen = 0x2B62,
  UIDServerDBAgentServerListen = 0x2EE1,
  LoginServerDBAgentServerListen = 0x2EE2,
  DBAgentServerGameServerListen = 0x2EE3,
  DBAgentServerAuthServerListen = 0x2EE4,
  DBAgentServerChatServerListen = 0x2EE5,
  DBAgentAdminToolServerListen = 0x2EE6,
  ChatServerGameServerListen = 0x2EE7,
  ManageServerManageClientListen = 0x2EE8,
  LogServerOtherServerListen = 0x2EE9,
};

/*   15 */
enum CServerSetup::ServerType
{
  LoginServer = 0x0,
  AuthServer = 0x1,
  GameServer = 0x2,
  AgentServer = 0x3,
  UIDServer = 0x4,
  AdminToolServer = 0x5,
  LogServer = 0x6,
  ChatServer = 0x7,
  MaxType = 0x8,
};

/*   16 */
enum CServerSetup::BillingType
{
  GamaBilling = 0x0,
  GamaUnitedBilling = 0x1,
  YouxiLandBilling = 0x2,
  JapanBilling = 0x3,
  MaxBillingType = 0x4,
};

/*   17 */
enum CServerSetup::AuthType
{
  HangameAuth = 0x0,
  GamaAuth = 0x1,
  YouxiLandAuth = 0x2,
  JapanAuth = 0x3,
  MaxAuthType = 0x4,
};

/*   18 */
enum GameRYL::ServiceNation
{
  KOREA = 0x0,
  TAIWAN = 0x1,
  JAPAN = 0x2,
  CHINA = 0x3,
  THAILAND = 0x4,
  MALAYSIA = 0x5,
  USA = 0x6,
  INDONESIA = 0x7,
  VIETNAM = 0x8,
  MAX_NATION_TYPE = 0x9,
};

/*   19 */
enum UnifiedConst::AgentServerType
{
  Part1 = 0x14,
  Part1Unified = 0x15,
  Part2 = 0x16,
  Part2Unified = 0x17,
  Part2Selectable = 0x18,
};

/*   20 */
enum CServerSetup::DBInfo::Const
{
  MAX_BUFFER = 0x80,
};

/*   21 */
enum GameRYL::GameContents
{
  LEVEL_LIMIT_80 = 0x1,
  LEVEL_LIMIT_95 = 0x3,
  LEVEL_LIMIT_100 = 0x7,
  CAMP = 0x8,
  CAMP_UPGRADE = 0x18,
  SIEGE = 0x38,
  JUDGE_PROTOTYPE = 0x40,
  ACCESSORY = 0x100,
  RUNE = 0x200,
  RIDE = 0x400,
  BATTLE_LOHAN = 0x800,
  DARK_CAERNARVON = 0x1000,
};

/*   22 */
enum QUICKSLOT::Type
{
  NONE = 0x0,
  SKILL = 0x1,
  ITEM = 0x2,
};

/*   23 */
typedef SKILL::Const SKILLSLOT::__unnamed;

/*   24 */
enum ServerInfo::ServerState
{
  SS_SMOOTH = 0x0,
  SS_LOADED = 0x1,
  SS_BUSY = 0x2,
  SS_VERYBUSY = 0x3,
};

/*   25 */
enum CGameLog::__unnamed
{
  DEFAULT_FREE_LOG_BUFFER_NUM = 0x64,
};

/*   26 */
enum CLogSaveThread::__unnamed
{
  MAX_FILE_SIZE = 0x3200000,
};

/*   27 */
enum QUICK::__unnamed
{
  MAX_QUICK_NUM = 0x14,
};

/*   28 */
enum USER_INFO::__unnamed
{
  MAX_CHAR_NUM = 0x5,
};

/*   29 */
enum PARTY::__unnamed
{
  MAX_MEM = 0xA,
};

/*   30 */
enum FieldObject::CheckBit
{
  Gold = 0x80000000,
};

/*   31 */
enum EliteBonus::Const
{
  MAX_BONUS_LEVEL = 0xA,
  MAX_BONUS_DROP_ITEM = 0x3,
};

/*   32 */
enum CHAR_INFOST::__unnamed
{
  MAX_ACCOUNT_LEN = 0x10,
  MAX_NAME_LEN = 0x10,
};

/*   33 */
enum CThreat::Const
{
  MAX_THREAT_TARGET = 0xA,
  MAX_THREAT_REWARD = 0x3,
  FAME_CONSENT_GAP = 0x5,
  EXP_CONSENT_GAP = 0xE,
  EXP_BALANCE_HANDLE = 0xE,
  MOVING_ATTACK_TAUNT_RATE = 0x3,
  ATTACK_TAUNT_RATE = 0x6,
};

/*   34 */
enum CThreat::AffectThreatType
{
  TAUNT = 0x1,
  DETAUNT = 0x2,
};

/*   35 */
enum Creature::CreatureType
{
  CT_PC = 0x0,
  CT_NPC = 0x1,
  CT_MONSTER = 0x2,
  CT_SUMMON = 0x3,
  CT_STRUCT = 0x4,
  CT_SIEGE_OBJECT = 0x5,
  CT_NONE_TYPE = 0x63,
};

/*   36 */
enum CThreat::SaveEnemyInfo::__unnamed
{
  MAX_SAVING_ENEMY = 0x5,
  MAX_SAVING_TICKCOUNT = 0x493E0,
  MAX_SAVING_TICKCOUNT_FOR_US = 0xDBBA0,
};

/*   37 */
enum EnchantInfo::__unnamed
{
  ULONG_BIT = 0x20,
  MAX_ARRAY = 0x4,
};

/*   38 */
typedef QUICKSLOT::Type Skill::SpellType::Type;

/*   39 */
enum Skill::ProtoType::__unnamed
{
  MAX_LIMIT_NUM = 0x2,
  MAX_FILE_NAME = 0x20,
  MAX_SKILL_NAME = 0x20,
  MAX_SKILL_DESCRIBE = 0x100,
};

/*   40 */
typedef QUICKSLOT::Type Skill::Type::SkillType;

/*   41 */
typedef QUICKSLOT::Type Skill::Target::Type;

/*   42 */
typedef QUICKSLOT::Type Skill::UseLimit::Type;

/*   43 */
typedef _PaddingMode Skill::SpellID::Type;

/*   44 */
typedef QUICKSLOT::Type Skill::StatusLimit::Type;

/*   45 */
typedef QUICKSLOT::Type Skill::SpellTarget::Type;

/*   46 */
typedef QUICKSLOT::Type Skill::Disenchant::Type;

/*   47 */
enum Skill::Disenchant::Const
{
  INFINITE_NUM = 0xFF,
};

/*   48 */
typedef QUICKSLOT::Type Item::ItemType::Type;

/*   49 */
enum std::float_round_style
{
  round_indeterminate = 0xFFFFFFFF,
  round_toward_zero = 0x0,
  round_to_nearest = 0x1,
  round_toward_infinity = 0x2,
  round_toward_neg_infinity = 0x3,
};

/*   50 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::;

/*   51 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>::__unnamed;

/*   52 */
enum std::float_denorm_style
{
  denorm_indeterminate = 0xFFFFFFFF,
  denorm_absent = 0x0,
  denorm_present = 0x1,
};

/*   53 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::_Redbl;

/*   54 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Redbl;

/*   55 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0>::__unnamed;

/*   56 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>::__unnamed;

/*   57 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Redbl;

/*   58 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Redbl;

/*   59 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1>::__unnamed;

/*   60 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>::__unnamed;

/*   61 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>::__unnamed;

/*   62 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Redbl;

/*   63 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Redbl;

/*   64 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Redbl;

/*   65 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::_Redbl;

/*   66 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>::__unnamed;

/*   67 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1>::__unnamed;

/*   68 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>::__unnamed;

/*   69 */
enum CCMDAutoBalance::AutoBalanceCmd
{
  ERROR_CMD = 0x0,
  NOW_STATE = 0x1,
  AUTO_BALANCE_ON = 0x2,
  AUTO_BALANCE_OFF = 0x3,
};

/*   70 */
enum CCMDDropItem::__unnamed
{
  MAX_NAME = 0x10,
};

/*   71 */
enum AtNode::__unnamed
{
  MAX_MONSTER_DEFENDER_NUM = 0x5,
  MAX_DEFENDER_NUM = 0xA,
};

/*   72 */
enum CCMDNotify::__unnamed
{
  MAX_NOTIFY = 0x7D0,
};

/*   73 */
enum CRylServerDispatch::CreationResult
{
  S_CREATE_SUCCESS = 0x0,
  E_INVALID_STARTBIT = 0x1,
  E_ALLOCATE_BUFFER_FAILED = 0x2,
  E_DECOMPRESS_FAILED = 0x3,
};

/*   74 */
enum CClass::JobType
{
  NONE_JOB = 0x0,
  Fighter = 0x1,
  Rogue = 0x2,
  Mage = 0x3,
  Acolyte = 0x4,
  Defender = 0x5,
  Warrior = 0x6,
  Assassin = 0x7,
  Archer = 0x8,
  Sorcerer = 0x9,
  Enchanter = 0xA,
  Priest = 0xB,
  Cleric = 0xC,
  Combatant = 0x11,
  Officiator = 0x12,
  Templar = 0x13,
  Attacker = 0x14,
  Gunner = 0x15,
  RuneOff = 0x16,
  LifeOff = 0x17,
  ShadowOff = 0x18,
  MAX_CLASS = 0x19,
};

/*   75 */
enum CClass::StatusType
{
  NONE_STAT = 0x0,
  STR = 0x1,
  DEX = 0x2,
  CON = 0x3,
  INT = 0x4,
  WIS = 0x5,
  MAX_TYPE = 0x6,
};

/*   76 */
enum CClass::JobLevel
{
  NONE_CLASS = 0x0,
  DEFAULT_CLASS = 0x1,
  JOB_CHANGE_1ST = 0x2,
};

/*   77 */
enum CClass::RaceType
{
  HUMAN = 0x0,
  AKHAN = 0x1,
  MAX_RACE = 0x2,
};

/*   78 */
enum CCastingSpell::__unnamed
{
  MAX_ENCHANT_CASTING = 0x14,
  MAX_CHANT_CASTING = 0x1,
};

/*   79 */
enum CFriendList::__unnamed
{
  MAX_FRIENDS_NUM = 0x64,
};

/*   80 */
enum EnemyCheck::EnemyCheckRule
{
  RULE_HUNTING = 0x0,
  RULE_GUILD_WAR = 0x1,
  RULE_REALM_WAR = 0x2,
  RULE_STATUE_WAR = 0x3,
  MAX_RULE_NUM = 0x4,
};

/*   81 */
enum EnemyCheck::EnemyCheckType
{
  EC_CHECK_ENEMY = 0x0,
  EC_CHECK_NEUTRAL_EXCETION = 0x1,
  EC_CHECK_FRIEND = 0x2,
  EC_CHECK_FRIEND_2ND = 0x3,
  MAX_CHECK_TYPE = 0x4,
};

/*   82 */
enum Deposit::Const
{
  PASSWORD_LENGTH = 0x4,
};

/*   83 */
enum CCreatureManager::eAdminMonster
{
  NO_BLANK_UID = 0x8FFF,
  INIT_UID = 0x8FFE,
};

/*   84 */
enum CCreatureManager::FightResult
{
  WIN = 0x0,
  LOSE = 0x1,
};

/*   85 */
enum CCreatureManager::StatueConst
{
  STATUE_REST_TIME_1ST_START = 0x19,
  STATUE_REST_TIME_1ST_END = 0x1D,
  STATUE_REST_TIME_2ND_START = 0x37,
  STATUE_REST_TIME_2ND_END = 0x3B,
  STATUE_RESPAWN_TIME_1ST = 0x0,
  STATUE_RESPAWN_TIME_2ND = 0x1E,
};

/*   86 */
enum CCreatureManager::RespawnPoint
{
  POINT_HUMAN1 = 0x0,
  POINT_HUMAN2 = 0x1,
  POINT_HUMAN3 = 0x2,
  POINT_AKHAN1 = 0x3,
  POINT_AKHAN2 = 0x4,
  POINT_AKHAN3 = 0x5,
  MAX_POINT_NUM = 0x6,
};

/*   87 */
enum GiveItemInfo::GiveItemType
{
  MIN_DAMAGE = 0x0,
  MAX_DAMAGE = 0x1,
  ARMOR = 0x2,
  HIT_RATE = 0x3,
  EVADE = 0x4,
  MAX_HP = 0x5,
  HP_REGEN = 0x6,
  MAX_MP = 0x7,
  MP_REGEN = 0x8,
  CRITICAL = 0x9,
  BLOCK = 0xA,
  SPEED = 0xB,
  MAGIC_POWER = 0xC,
  MAGIC_RESIST = 0xD,
  MAX_GIVEITEM_ATTRIBUTE = 0xE,
};

/*   88 */
enum CSpell::EnchantError
{
  NO_ENCHANT_ERROR = 0x0,
  ENCHNAT_FAIL_ALREADY_AFFECTED = 0x1,
  ENCHANT_FAIL_BY_ENEMY_ENCHANT = 0x2,
  ENCHANT_FAIL_BY_RESIST = 0x3,
};

/*   89 */
enum CSpell::Const
{
  INFINITE_DURATION = 0xFFFF,
  REDUCE_MANA_TURN = 0x5,
  MAX_AFFECTED = 0xA,
};

/*   90 */
enum CSpell::OperateFlag
{
  DO_NOT_SEND = 0x1,
};

/*   91 */
enum CSpell::InternalFlags
{
  DISABLED = 0x1,
  DESTROYED = 0x2,
};

/*   92 */
typedef GiveItemInfo::GiveItemType Item::DetailData::Flags;

/*   93 */
enum Item::CShopContainer::__unnamed
{
  MAX_CUSTOMER_NUM = 0xA,
};

/*   94 */
typedef QUICKSLOT::Type Item::Attribute::Type;

/*   95 */
enum Item::EquipType::Grade
{
  AAA_GRADE = 0x0,
  AA_GRADE = 0x1,
  A_GRADE = 0x2,
  B_GRADE = 0x3,
  C_GRADE = 0x4,
  D_GRADE = 0x5,
  F_GRADE = 0x6,
  X_GRADE = 0x7,
  MAX_GRADE = 0x8,
};

/*   96 */
enum Item::CItemType::ArrayType
{
  EQUIP_TYPE = 0x0,
  USE_ITEM_TYPE = 0x1,
  WEAPON_TYPE = 0x2,
  SKILL_ARM_TYPE = 0x3,
  HELM_TYPE = 0x4,
  ARMOUR_TYPE = 0x5,
  DAGGER_TYPE = 0x6,
  ONEHANDED_TYPE = 0x7,
  LONGRANGE_TYPE = 0x8,
  TWOHANDED_TYPE = 0x9,
  STAFF_TYPE = 0xA,
  SHIELD_TYPE = 0xB,
  STANDARD_TYPE = 0xC,
  OVER_TYPE = 0xD,
  NO_TYPE = 0xE,
  ACCESSORY_TYPE = 0xF,
  MAX_ARRAY_TYPE = 0x10,
};

/*   97 */
typedef QUICKSLOT::Type Item::EquipType::OptionType;

/*   98 */
enum Item::StringData::__unnamed
{
  MAX_FIELD_MODEL_NAME = 0x20,
  MAX_EQUIP_MODEL_NAME = 0x20,
  MAX_EFFECT_SOUND_NAME = 0x20,
  MAX_TYPE_NAME = 0x20,
  MAX_ITEM_DESCRIBE = 0x100,
};

/*   99 */
typedef CCMDDropItem::__unnamed Item::CItemOwnerInfo::__unnamed;

/*  100 */
enum Item::CEquipment::EQUIPMENT_ERROR
{
  S_SUCCESS = 0x0,
  E_SERVER_ERROR = 0x1,
  E_GET_EQUIP_FAILED = 0x2,
  E_GET_GEM_FAILED = 0x3,
  E_NOT_EQUIP = 0x4,
  E_NOT_GEM = 0x5,
  E_REMOVE_GEM_FAILED = 0x6,
  E_SOCKET_IS_FULL = 0x7,
  E_OVER_MAX_SOCKET = 0x8,
  R_SUCCESS = 0x0,
  E_GET_RUNE_FAILED = 0x9,
  E_NOT_RUNE = 0xA,
  E_NOT_RUNE_SLOT = 0xB,
  E_NOT_RUNE_LEVEL_LIMIT = 0xC,
  E_USED_RUNE_SKILL_POINT = 0xD,
  E_NOT_RUNE_SCRIPT_INFO = 0xE,
  E_GET_MINERAL_FAILED = 0x3,
  E_NOT_MINERAL = 0x5,
  E_NOT_MATCH_MINERAL_TYPE = 0x6,
  E_NOT_ENOUGH_MINERAL = 0x7,
  E_REMOVE_EQUIP_FAILED = 0x8,
  E_CREATE_SCRAP_FAILED = 0x9,
  E_SET_SCRAP_FAILED = 0xA,
  E_REMOVE_MINERAL_FAILED = 0xB,
  E_UPGRADE_LEVEL_IS_FULL = 0xC,
  E_NOT_ENOUGH_MONEY = 0xD,
  S_BROKEN_EQUIP = 0xE,
  E_NOT_UPGRADE_LEVEL = 0xF,
  E_NOT_UPGRADE_AS_OVER = 0x10,
  E_WRONG_ATTRIBUTE = 0x2,
  E_NOT_EQUAL_KIND = 0x3,
  E_HIGH_GRADE_ORIGINAL = 0x4,
  E_WRONG_TYPE = 0x2,
  E_NEW_SEASON_EQUIP = 0x3,
  E_LOW_STATUS_EQUIP = 0x4,
};

/*  101 */
enum Item::CEquipment::PASSIVE_TYPE
{
  PASSIVE_ALWAYS = 0x0,
  PASSIVE_THIS_WEAPON = 0x1,
  NONE_PASSIVE_THIS_WEAPON = 0x2,
};

/*  102 */
enum Item::CEquipment::RuneApplyType
{
  RUNE_NONE = 0x0,
  RUNE_INDEX = 0x1,
  RUNE_ALL = 0x2,
  RUNE_APPLY = 0x4,
  RUNE_REMOVE = 0x8,
};

/*  103 */
enum Item::CEquipment::ApplyType
{
  APPLY = 0x1,
  REMOVE = 0xFFFFFFFF,
};

/*  104 */
typedef GameRYL::GameContents Item::EquipmentPos::Type;

/*  105 */
typedef CCMDDropItem::__unnamed Item::SpriteData::__unnamed;

/*  106 */
typedef QUICKSLOT::Type Item::StatusLimit::Type;

/*  107 */
enum Item::EquipmentInfo::__unnamed
{
  MAX_UPGRADE_LEVEL = 0xA,
  MAX_ATTRIBUTE_PER_GEM = 0x2,
  MAX_ATTRIBUTE_PER_UPGRADE_LEVEL = 0x2,
  MAX_UPGRADE_ATTRIBUTE = 0x6,
  MAX_MINSIZE_SOCKET_NUM = 0x6,
  MAX_MINSIZE_ATTRIBUTE_NUM = 0x6,
  MAX_SOCKET_NUM = 0x8,
  MAX_SOCKET_ATTRIBUTE_NUM = 0x10,
  MAX_ATTRIBUTE_NUM = 0xC,
  MAX_RUNE_SOCKET_NUM = 0x2,
  MAX_SOCKET_AND_ATTRIBUTE_MINISIZE = 0x12,
  MAX_SOCKET_AND_ATTRIBUTE_SIZE = 0x20,
};

/*  108 */
enum Item::UseLimit::DeactivatedType
{
  STATUS_LIMIT = 0x1,
  CLASS_LIMIT = 0x2,
  BROKEN_ITEM = 0x4,
};

/*  109 */
enum Item::EtcItemID::Type
{
  GEM_START_ID = 0x76D,
  GEM_END_ID = 0x77B,
  RUNE_START_ID = 0x9C40,
  RUNE_END_ID = 0xAC40,
  DESTRUCTION_RUNE = 0x9C40,
  MINERAL_START_ID = 0x7D1,
  MINERAL_END_ID = 0x7D3,
  SYLVINE = 0x7D1,
  MYTHRIL = 0x7D2,
  ETERNIUM = 0x7D3,
  RHATARIUM = 0x7D5,
  ANCIENTSTONE = 0x7D6,
  SCRAPS = 0x835,
  BREAD = 0xBCC,
  RARE_STEAK = 0xBCD,
  WELLDONE_STEAK = 0xBCE,
  BACON = 0xBD5,
  SKILL_COUPON_3 = 0xD49,
  SKILL_COUPON_4 = 0xD4A,
  CAMP_KIT_ID = 0x1BBC,
  SHORT_RANGE_ARMS_KIT_ID = 0x1BBD,
  LONG_RANGE_ARMS_KIT_ID = 0x1BBE,
  AIRSHIP_KIT_ID = 0x1BBF,
  WORLDWEAPON_K_KIT = 0x1BC1,
  WORLDWEAPON_M_KIT = 0x1BC2,
  MINERAL_KIT = 0x1BC3,
  SIEGE_MATERIAL_ID = 0x1BC0,
  OBLIVION_STONE = 0x26BA,
  BUCKLER = 0x6A5,
};

/*  110 */
enum Item::Compensation::SpeacialCase
{
  CASE1 = 0x45,
  CASE2 = 0x46,
  CASE3 = 0x47,
  CASE4 = 0x48,
  CASE5 = 0x49,
  CASE6 = 0x4A,
  CASE7 = 0x4B,
  CASE8 = 0x4C,
  CASE9 = 0x4D,
  MAX_CASE = 0x4E,
};

/*  111 */
enum Item::CCampShopContainer::Const
{
  UPDATE_COUNT = 0x1,
};

/*  112 */
enum Item::CCharacterShopContainer::__unnamed
{
  MAX_STALL_NAME_LEN = 0x20,
};

/*  113 */
enum Creature::AttackableCreatureType
{
  ACT_PC = 0x0,
  ACT_MONSTER = 0x1,
  ACT_EMBLEM = 0x3,
  ACT_GATE = 0x4,
  ACT_CAMP = 0x5,
  ACT_GUARD = 0x6,
  ACT_SHORT_RANGE_CASTLE_ARMS = 0x7,
  ACT_LONG_RANGE_CASTLE_ARMS = 0x8,
  ACT_SHORT_RANGE_SIEGE_ARMS = 0x9,
  ACT_LONG_RANGE_SIEGE_ARMS = 0xA,
  ACT_AIRSHIP = 0xB,
  ACT_NONE = 0xC,
  MAX_ATTACKABLE_CREATURE = 0xD,
};

/*  114 */
enum Creature::IdentifyCIDBit
{
  MONSTER_KIND_BIT = 0xFFFF,
  MONSTER_BIT = 0x80000000,
  NPC_BIT = 0x40000000,
  SIEGE_OBJECT_BIT = 0x10000000,
  SUMMON_MONSTER_BIT = 0xA0000000,
  NPC_LINK_BIT = 0x50000000,
  MIN_STATUE_KID = 0x40A,
  MAX_STATUE_KID = 0x427,
};

/*  115 */
enum Creature::Const
{
  PC_MAX_LEVEL = 0x63,
  MONSTER_MAX_LEVEL = 0x96,
  LEVEL_ABLE_WAR = 0x1E,
};

/*  116 */
enum Creature::StatusType
{
  RIGHT_PASSIVE_TYPE = 0x0,
  LEFT_PASSIVE_TYPE = 0x1,
  RIGHT_NON_PASSIVE_TYPE = 0x2,
  LEFT_NON_PASSIVE_TYPE = 0x3,
  MAX_STATUS_TYPE = 0x4,
};

/*  117 */
enum Creature::Nation
{
  STATELESS = 0x0,
  KARTERANT = 0x1,
  MERKADIA = 0x2,
  ALMIGHTY_PIRATE = 0x3,
  MAX_NATION = 0x4,
};

/*  118 */
enum CPulse::PulseConst
{
  DEFAULT_TICKS_PER_PULSE = 0x64,
};

/*  119 */
enum DBUpdateData::UpdateType
{
  LOGIN = 0x0,
  LOGOUT = 0x1,
  UPDATE = 0x2,
  ADMIN_LOGIN = 0x3,
  ZONEMOVE = 0x4,
  ABNORMAL_LOGOUT = 0x5,
  MAX_UPDATE_TYPE = 0x6,
};

/*  120 */
enum DBUpdateData::UpdateList
{
  STATUS_UPDATE = 0x0,
  POSITION_UPDATE = 0x1,
  SKILL_UPDATE = 0x2,
  QUICKSLOT_UPDATE = 0x3,
  ITEM_EQUIP_UPDATE = 0x4,
  ITEM_INVEN_UPDATE = 0x5,
  ITEM_EXTRA_UPDATE = 0x6,
  ITEM_EXCHANGE_UPDATE = 0x7,
  ITEM_TEMPINVEN_UPDATE = 0x8,
  MAX_UPDATE_DB = 0x9,
};

/*  121 */
typedef CClass::RaceType CHAR_VIEW::RaceType;

/*  122 */
enum CCreature::MoveInfo
{
  S_CELL_CHANGED = 0x1,
  S_CELL_UNCHANGED = 0x2,
  F_CELL_CANNOTCHANGE = 0x3,
  F_TOO_FAST = 0x4,
};

/*  123 */
enum EnemyCheck::EnemyType
{
  EC_ENEMY = 0x0,
  EC_NEUTRAL = 0x1,
  EC_FRIEND = 0x2,
  EC_ERROR = 0x3,
};

/*  124 */
enum Broadcast2nd::CSerializeCharacterData::__unnamed
{
  MAX_CHARACTER_DATA = 0xA0,
};

/*  125 */
typedef CCMDDropItem::__unnamed Broadcast2nd::CCharacterData::__unnamed;

/*  126 */
enum Broadcast2nd::CSerializeMonsterData::__unnamed
{
  MAX_MONSTER_DATA = 0x40,
};

/*  127 */
enum FriendInfo::StatusMask
{
  IS_LOGINED = 0x1,
  GROUP = 0xF0,
};

/*  128 */
typedef CCMDDropItem::__unnamed FriendInfo::__unnamed;

/*  129 */
typedef CCMDAutoBalance::AutoBalanceCmd CCMDLotteryEvent::LotteryEventCmd;

/*  130 */
enum Quest::eQeustType
{
  NPC_QUEST = 0x0,
  ITEM_QUEST = 0x1,
  AREA_QUEST = 0x2,
  PARTY_QUEST_BIT = 0xF000,
};

/*  131 */
enum Quest::Const
{
  ERROR_OF_DIST = 0x7,
  PARTY_QUEST_DIST = 0x20,
  MAX_HISTORY_QUEST = 0x64,
  MAX_EXECUTING_QUEST = 0x14,
  MAX_TRIGGER = 0xA,
  DISABLE_CANCEL_QUEST_BIT = 0xF000,
};

/*  132 */
enum CAffectedSpell::__unnamed
{
  MAX_CHANT = 0xA,
  MAX_ENCHANT = 0xA,
};

/*  133 */
typedef CCMDDropItem::__unnamed CCMDDropItemList::__unnamed;

/*  134 */
enum FightStatus::CalculateState
{
  CS_NONE = 0x0,
  CS_BASE_INFO = 0x1,
  CS_EQUIP_INFO = 0x2,
  CS_ENCHANT_INFO = 0x3,
};

/*  135 */
enum CBanList::__unnamed
{
  MAX_BAN_NUM = 0x64,
};

/*  136 */
enum TakeType::TakeSource
{
  TS_NONE = 0x0,
  TS_EQUIP = 0x1,
  TS_INVEN = 0x2,
  TS_QSLOT = 0x3,
  TS_SSLOT = 0x4,
  TS_TEMP = 0x6,
  TS_EXTRA = 0x7,
  TS_EXCHANGE = 0x8,
  TS_DEPOSIT = 0x9,
  TS_STALL = 0xA,
  TS_TEMPINVEN = 0xB,
  TS_CAMPSHOP = 0xC,
  TS_MAXTYPE = 0xD,
};

/*  137 */
typedef CCMDDropItem::__unnamed BanInfo::__unnamed;

/*  138 */
typedef Item::CEquipment::EQUIPMENT_ERROR CCell::ErrorCode;

/*  139 */
enum CCell::Const
{
  CONNECT_NUM = 0x9,
  CHECK_TIME = 0x64,
  ITEM_RIGHT_TIME = 0x640,
  ITEM_LIFE_TIME = 0x708,
  NO_OWNER_TIME = 0x5DC,
  BROADCASTING_TIME = 0xA,
  MONEY_BIT = 0x80000000,
  TYPE_CHECK_BIT = 0xF0000000,
  ITEM_PROTOTYPE_ID_BIT = 0xFFFF,
  MAX_MONEY_AMOUNT = 0xFFFFFFF,
};

/*  140 */
enum CCell::TurnConst
{
  TURN_OF_CHARACTER = 0x0,
  TURN_OF_SIEGE_OBJECT = 0x1,
  TURN_OF_MONSTER = 0x2,
  TURN_END = 0x3,
};

/*  141 */
enum CCell::Weather
{
  WEATHER_FINE = 0x0,
  WEATHER_RAIN = 0x1,
  WEATHER_SNOW = 0x2,
  MAX_WEATHER = 0x3,
};

/*  142 */
typedef QUICKSLOT::Type CCell::ItemAutoRouting;

/*  143 */
enum CCell::ConnectCell
{
  NO = 0x0,
  UP = 0x1,
  DOWN = 0x2,
  LEFT = 0x3,
  RIGHT = 0x4,
  UPPERLEFT = 0x5,
  UPPERRIGHT = 0x6,
  LOWERLEFT = 0x7,
  LOWERRIGHT = 0x8,
};

/*  144 */
enum CCell::CellSize
{
  CELL_SIZE_DEFAULT = 0x80,
  CELL_SIZE_BATTLE_SERVER = 0x46,
  CELL_DISTANCE = 0x20,
  CELL_RESOLUTION = 0x5,
};

/*  145 */
enum CCell::IDField::__unnamed
{
  MAX_UID = 0xFF,
};

/*  146 */
enum BattleInclination::Const
{
  IS_PEACEMODE = 0x1,
  IS_SAFETY_ZONE = 0x2,
  HAS_CAMP = 0x4,
  HAS_DEVELOPING_CAMP = 0x8,
  IS_CASTLE_OBJECT = 0x10,
  IS_CASTLE_NPC = 0x20,
  IS_GOD_MODE = 0x40,
  IS_TEAM_BATTLE = 0x80,
};

/*  147 */
enum AtType::__unnamed
{
  SKILL_BIT = 0x8000,
};

/*  148 */
enum AtType::AttackType
{
  RIGHT_MELEE = 0x0,
  LEFT_MELEE = 0x1,
  BOW = 0x3,
  CROSSBOW = 0x4,
  DEFENCE = 0x5,
  GUARD = 0x6,
};

/*  149 */
enum CCharacter::Const
{
  LOGOUT_PULSE = 0x5,
  LOGOUT_COUNT = 0x5,
  DBUPDATE_PULSE = 0xA,
  DBUPDATE_COUNT = 0xB4,
  BATTLE_GROUND_PULSE = 0x258,
  RESPAWN_PULSE = 0x64,
  MELEE_ATTACK_RANGE = 0xA,
  RANGE_ATTACK_RANGE = 0x32,
};

/*  150 */
enum CCharacter::OperationFlag
{
  CHAR_INFO_LOADED = 0x1,
  CHAR_ZONE_MOVED = 0x2,
  MOVEZONE_PROCESSED = 0x4,
  SERVERZONE_PROCESSED = 0x8,
};

/*  151 */
enum CCharacter::DURABILITY_DECRESE_PERCENTAGE
{
  WEAPON_DURABILITY_DECRESE_PERCENTAGE = 0xC8,
  ARMOUR_DURABILITY_DECRESE_PERCENTAGE = 0x32,
  SHIELD_DURABILITY_DECRESE_PERCENTAGE = 0x14,
};

/*  152 */
enum CCharacter::DURABILITY_DECRESE_PERSENT
{
  DURABILITY_DECREASE_PERSENT_BY_MONSTER = 0x14,
  DURABILITY_DECREASE_PERSENT_BY_SUICIDE = 0x3,
};

/*  153 */
enum CCharacter::LAST_DEAD_TYPE
{
  DEAD_BY_NONE = 0x0,
  DEAD_BY_SUICIDE = 0x1,
  DEAD_BY_MONSTER = 0x2,
  DEAD_BY_CHARACTER = 0x3,
};

/*  154 */
enum CCharacter::RESPAWN_HP_MP_RECOVERY_PERCENTAGE
{
  TOWN_RECOVERY_PERCENTAGE = 0x19,
  FORTRESS_RECOVERY_PERCENTAGE = 0x32,
  RESURRECTION_RECOVERY_PERCENTAGE = 0x4B,
};

/*  155 */
typedef Item::CEquipment::EQUIPMENT_ERROR Quest::ErrorCode;

/*  156 */
enum CCharacter::__unnamed
{
  MAX_USING_MASTERY = 0x2,
  PAD_BYTE = 0x3,
};

/*  157 */
enum PktDD::SubCommands
{
  SCmdUserLogin = 0x1,
  SCmdUserLogout = 0x2,
  SCmdUserMove = 0x3,
  SCmdSelectNation = 0x4,
  SCmdNationChangeResult = 0x5,
  SCmdCharCreate = 0x21,
  SCmdCharDelete = 0x22,
  SCmdCharCreateItem = 0x23,
  SCmdCharSelect = 0x24,
  SCmdCreateParty = 0x31,
  SCmdDeleteParty = 0x32,
  SCmdGetPartyInfo = 0x33,
  SCmdInsertPartyMem = 0x34,
  SCmdDeletePartyMem = 0x35,
  SCmdLoginPartyMem = 0x36,
  SCmdLogoutPartyMem = 0x37,
  SCmdTransferLeader = 0x38,
  SCmdAutoRoutingOn = 0x39,
  SCmdAutoRoutingOff = 0x3A,
  SCmdDeadPartyMem = 0x3C,
  SCmdMoveZonePartyMem = 0x3D,
  SCmdLevelUpPartyMem = 0x3E,
  SCmdChangeClassPartyMem = 0x3F,
  SCmdChangeGuildPartyMem = 0x40,
  SCmdStartSession = 0x50,
  SCmdServerZone = 0x51,
  SCmdCharMoveZone = 0x52,
  SCmdServerZoneEnd = 0x53,
};

/*  158 */
enum CAggresiveCreature::Const
{
  REGEN_TIME = 0x32,
  MAX_LEVEL_GAP = 0x14,
  AGGRAVATION_NUM = 0x29,
  MAX_CASTE = 0xA,
};

/*  159 */
enum CConsoleCMDFactory::__unnamed
{
  MAX_CMD_BUFFER = 0x200,
};

/*  160 */
enum Guild::Const
{
  MAX_GUILD_NAME_LEN = 0xB,
  MAX_GUILD_NAME_FOR_DB = 0x14,
  MAX_MEMBER_NAME_LEN = 0x10,
  MAX_MARK_SIZE = 0x1B1,
  MAX_RIGHT_SIZE = 0x32,
  MAX_MEMBER_NUM = 0x64,
  MAX_RELATION_NUM = 0xFF,
  MAX_HOSTILITY_APPLY_NUM = 0x31,
  MAX_HOSTILITY_NUM = 0x1,
  MAX_ALERT_NUM = 0x1,
  MAX_LEVEL = 0x5,
  CREATE_LEVEL = 0x1E,
  CREATE_LEVEL_FOR_CHINA = 0xF,
  SET_MARK_GOLD = 0x4C4B40,
  FAME_LEAVE_PENALTY = 0x3E8,
  MAX_SMALL_NODE_NUM = 0x1F4,
  MEMBER_INFO_UPDATE_COUNT = 0xA,
  DELETE_GUILD_MEMBER_NUM = 0x4,
  MINUTES_PER_HOUR = 0x3C,
  LEAVE_WAIT_TIME = 0x0,
  LEAVE_WAIT_TIME_FOR_CHINA = 0x2760,
  DELETE_GUILD_LOGOUT_TIME = 0xA8C0,
  MEMBER_NUM_DELETE_TIME = 0x5A0,
  TRANFER_MASTER_TIME = 0x4EC0,
  CHANGE_INCLINATION_TIME = 0x5A0,
  RELATION_WAIT_TIME = 0x5A0,
  MEMBER_WAIT_BIT = 0x80000000,
  TIME_GUILD_POINT = 0x1E,
  TACTICE_JON_LEVEL = 0x1E,
  TACTICS = 0x1,
  TACTICS_WAIT = 0x2,
};

/*  161 */
enum std::deque<CSpeedHackCheck::SkillHistory,std::allocator<CSpeedHackCheck::SkillHistory> >::__unnamed
{
  _DEQUEMAPSIZ = 0x8,
  _DEQUESIZ = 0x1,
};

/*  162 */
typedef std::deque<CSpeedHackCheck::SkillHistory,std::allocator<CSpeedHackCheck::SkillHistory> >::__unnamed std::deque<unsigned long,std::allocator<unsigned long> >::__unnamed;

/*  163 */
typedef std::deque<CSpeedHackCheck::SkillHistory,std::allocator<CSpeedHackCheck::SkillHistory> >::__unnamed std::deque<CSpeedHackCheck::AttackTime,std::allocator<CSpeedHackCheck::AttackTime> >::__unnamed;

/*  164 */
enum CGameClientDispatch::__unnamed
{
  MAX_PACKET_DISPATCH_PER_PULSE = 0xA,
};

/*  165 */
enum CCheckPing::__unnamed
{
  PING_INTERVAL = 0x2710,
};

/*  166 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Redbl;

/*  167 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0>::__unnamed;

/*  168 */
enum CConsoleWindow::Const
{
  MAX_MESSAGE_SIZE = 0x2000,
  MAX_WINDOW_NAME = 0x80,
};

/*  169 */
enum CSocketFactory::__unnamed
{
  MAX_BACKLOG = 0x3F,
};

/*  170 */
enum Filter::__unnamed
{
  LIMIT_STRING_NUM = 0xFA0,
  MAX_FILTER_LEN = 0xF,
};

/*  171 */
enum CCellManager::__unnamed
{
  BGM_TEXTURE_SIZE = 0x80,
  SECTOR_SIZE = 0x7B14,
};

/*  172 */
enum CCellManager::SafetyZoneInfo::EventKey
{
  EK_BGM_ONCE_SAFE = 0x0,
  EK_BGM_LOOP_SAFE = 0x1,
  EK_BGM_LOOP_UNSAFE = 0x2,
  EK_BGM_ONCE_UNSAFE = 0x3,
  EK_NOTBGM_SAFE = 0x4,
  EK_BGM_TURN_AMB_SAFE = 0x5,
  EK_BGM_TURN_AMB_UNSAFE = 0x6,
};

/*  173 */
enum CMineralVeinMgr::Const
{
  MAX_TYPE_STRING_LEN = 0x20,
  MAX_HEXA_COLOR_LEN = 0xA,
  COLOR_IMAGE_SIZE = 0x200,
};

/*  174 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::_Redbl;

/*  175 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::_Redbl;

/*  176 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0>::__unnamed;

/*  177 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Redbl;

/*  178 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0>::__unnamed;

/*  179 */
enum std::_Uninitialized
{
  _Noinit = 0x0,
};

/*  180 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0>::__unnamed;

/*  181 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1>::__unnamed;

/*  182 */
enum std::codecvt_base::__unnamed
{
  ok = 0x0,
  partial = 0x1,
  error = 0x2,
  noconv = 0x3,
};

/*  183 */
enum std::_Iosb<int>::_Dummy_enum
{
  _Dummy_enum_val = 0x1,
};

/*  184 */
enum std::_Iosb<int>::_Fmtflags
{
  _Fmtmask = 0xFFFF,
  _Fmtzero = 0x0,
};

/*  185 */
enum std::_Iosb<int>::_Iostate
{
  _Statmask = 0x17,
};

/*  186 */
enum std::_Iosb<int>::_Openmode
{
  _Openmask = 0xFF,
};

/*  187 */
enum std::_Iosb<int>::_Seekdir
{
  _Seekmask = 0x3,
};

/*  188 */
enum std::_Iosb<int>::__unnamed
{
  _Openprot = 0x1B6,
};

/*  189 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<C;

/*  190 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::_Redbl;

/*  191 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::;

/*  192 */
enum std::ctype_base::__unnamed
{
  alnum = 0x107,
  alpha = 0x103,
  cntrl = 0x20,
  digit = 0x4,
  graph = 0x117,
  lower = 0x2,
  print = 0x1D7,
  punct = 0x10,
  space = 0x48,
  upper = 0x1,
  xdigit = 0x80,
};

/*  193 */
enum std::ios_base::event
{
  erase_event = 0x0,
  imbue_event = 0x1,
  copyfmt_event = 0x2,
};

/*  194 */
enum MineralVeinInfo::Length
{
  MAX_VEIN_NAME_LEN = 0x20,
};

/*  195 */
enum CMonsterShout::Behavior
{
  NORMAL_ATTACK = 0x0,
  NORMAL_ATTACKED = 0x1,
  SKILL_ATTACK = 0x2,
  SKILL_ATTACKED = 0x3,
  CRITICAL_ATTACK = 0x4,
  CRITICAL_ATTACKED = 0x5,
  RESPAWN = 0x6,
  DEAD = 0x7,
};

/*  196 */
typedef SKILL::Const CSkillMgr::_Const;

/*  197 */
enum RylServerInfo::__unnamed
{
  GROUP_NAME_LENGTH = 0x78,
  PATCH_ADDRESS_LENGTH = 0x64,
};

/*  198 */
typedef CHAR_INFOST::__unnamed MonsterInfo::MaxNumber;

/*  199 */
enum MonsterInfo::MonsterPattern
{
  PATTERN_COMMON = 0x0,
  PATTERN_WARRIOR = 0x1,
  PATTERN_DEFENDER = 0x2,
  PATTERN_MAGE = 0x3,
  PATTERN_ACOLYTE = 0x4,
  PATTERN_BOSS = 0x5,
  PATTERN_BG = 0x6,
  PATTERN_SUMMON = 0x7,
  PATTERN_STRUCTURE = 0x8,
  PATTERN_NAMED = 0x9,
  PATTERN_CHIEF = 0xA,
  PATTERN_OBJECT = 0xB,
  PATTERN_GUARD = 0xC,
  MAX_PATTERN = 0xD,
};

/*  200 */
enum MonsterInfo::SkillPattern
{
  ATTACK_SKILL = 0x0,
  RECOVER_SKILL = 0x1,
  ENCHANT_SKILL = 0x2,
  EXTENT_SKILL = 0x3,
  BOSS_CHANT_SKILL = 0x4,
  MAX_SKILL_PATTERN = 0x5,
};

/*  201 */
enum MonsterInfo::HitBox
{
  X_PLUS = 0x0,
  X_MINUS = 0x1,
  Y_PLUS = 0x2,
  Y_MINUS = 0x3,
  MAX_HITBOX_NUM = 0x4,
};

/*  202 */
enum MonsterInfo::Z3D_CHR_ACTION
{
  Z3D_CA_RUN = 0x1,
  Z3D_CA_ATTACK = 0x2,
  Z3D_CA_WALK = 0x8,
  Z3D_CA_CASTING = 0x18,
};

/*  203 */
typedef QUICKSLOT::Type MonsterInfo::AwardKind;

/*  204 */
typedef Creature::IdentifyCIDBit MonsterInfo::SpeacialKindID;

/*  205 */
enum MonsterInfo::StatueEffectType
{
  SE_NONE = 0x0,
  SE_HP = 0x1,
  SE_MP = 0x2,
  SE_EXP = 0x3,
  SE_DROPRATE = 0x4,
  MAX_EFFECT_TYPE_NUM = 0x5,
};

/*  206 */
enum CDelimitedFile::__unnamed
{
  MAX_LINE_LENGTH = 0x4000,
  MAX_DELIMITER_NUM = 0x20,
  MAX_COLUMN_LENGHT = 0x40,
  DEFAULT_COLUMN_NUM = 0x20,
};

/*  207 */
enum CDelimitedFile::OpenFlags
{
  modeRead = 0x0,
  modeCreate = 0x1000,
};

/*  208 */
enum CCharRespawnMgr::Const
{
  RESPAWN_DELAY_SEC = 0x5,
  SEC_PER_HOUR = 0xE10,
  SEC_PER_MIN = 0x3C,
  MIN_PER_HOUR = 0x3C,
};

/*  209 */
enum CCharRespawnMgr::eReturn
{
  RET_FALSE = 0x0,
  RET_TRUE = 0x1,
  RET_TOWN = 0x2,
};

/*  210 */
enum CCharRespawnMgr::RespawnType
{
  RST_TOWN = 0x0,
  RST_FORTRESS = 0x1,
  RST_RESURRECTION = 0x2,
  RST_BATTLE = 0x3,
};

/*  211 */
enum SERVER_ID::Group
{
  GROUP_TEST = 0x0,
  GROUP_SOLPHISTIA = 0x1,
  GROUP_KARTERANT = 0x2,
  GROUP_IRANSA = 0x3,
  GROUP_HIGHLAND = 0x4,
  GROUP_ALDIA = 0x5,
  GROUP_UNITE = 0x6,
  GROUP_BATTLE_SERVER = 0x7,
  GROUP_US_TOURNAMENT = 0x8,
  MAX_GROUP_NUM = 0xA,
};

/*  212 */
typedef QUICKSLOT::Type SERVER_ID::Zone;

/*  213 */
enum SERVER_ID::Channel
{
  MAX_CHANNEL_NUM = 0x5,
};

/*  214 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0>::__unnamed;

/*  215 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Redbl;

/*  216 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList::Equipment;

/*  217 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::a;

/*  218 */
typedef Skill::ProtoType::__unnamed VirtualArea::Const;

/*  219 */
enum MONSTER_STATE_OR_INPUT
{
  STATE_ID_NULL = 0x0,
  STATE_ID_NORMAL = 0x1,
  STATE_ID_ATTACK = 0x2,
  STATE_ID_RETURN = 0x3,
  STATE_ID_ESCAPE = 0x4,
  STATE_ID_DIE = 0x5,
  INPUT_ID_SEEN_PLAYER = 0x64,
  INPUT_ID_LOW_HP = 0x65,
  INPUT_ID_ZERO_HP = 0x66,
  INPUT_ID_LEAVE_PLAYER = 0x67,
  INPUT_ID_ARRIVAL_SITE = 0x68,
  INPUT_ID_ATTACKED_PLAYER = 0x69,
  INPUT_ID_CMD_ATTACK = 0x6A,
  INPUT_ID_CMD_ESCAPE = 0x6B,
};

/*  220 */
enum SphereConst::eSphereNodeFlag
{
  SNF_ROOT_NODE = 0x1,
  SNF_SUPERSPHERE = 0x2,
  SNF_ACTOR_NODE = 0x4,
  SNF_ROOT_TREE = 0x8,
  SNF_LEAF_TREE = 0x10,
  SNF_RECOMPUTE = 0x20,
  SNF_INTEGRATE = 0x40,
};

/*  221 */
enum InstrumentsType
{
  INSTRUMENT_TOTAL_LOOP = 0x0,
  INSTRUMENT_CHECK_DELETE_ITEM = 0x1,
  INSTRUMENT_REGEN_HP_MP = 0x2,
  INSTRUMENT_DBUPDATE = 0x3,
  INSTRUMENT_CELLBROADCASTING = 0x4,
  INSTRUMENT_GLOBALSPELLMGR = 0x5,
  INSTRUMENT_PROCESS_ALL_MONSTER = 0x6,
  INSTRUMENT_CHARACTER_LOGOUT = 0x7,
  INSTRUMENT_PROCESS_RESPAWN_QUEUE = 0x8,
  INSTRUMENT_AUTO_RESPAWN = 0x9,
  INSTRUMENT_VIRTUALAREA = 0xA,
  INSTRUMENT_RESPAWN = 0xB,
  INSTRUMENT_CHAR_SPHERE_TREE = 0xC,
  INSTRUMENT_WORLDWEAPON_FIRE = 0xD,
  MAX_PERFORMANCE_INSTRUMENTS = 0xE,
};

/*  222 */
typedef QUICKSLOT::Type Guild::Title;

/*  223 */
enum Siege::CampConst
{
  CAMP_BUILDING_RADIUS = 0x13B,
  CAMP_REPAIR_GOLD_PER_HP = 0xA,
  CAMP_UPGRADE_MATERIAL_NUM = 0x1E,
  MINING_CAMP_UPGRADE_MATERIAL_NUM = 0x32,
  CAMP_SHOP_UPGRADE_MATERIAL_NUM = 0x28,
  WEAPON_CHARGE_MATERIAL_NUM = 0x32,
  CAMP_REPAIR_HP_PER_MATERIAL = 0x1388,
  FAME_FOR_CAMP_BUILDING_TEST = 0x3E8,
  FAME_FOR_CAMP_BUILDING = 0x1388,
  FAME_FOR_WEAPON_BUILDING_TEST = 0x3E8,
  FAME_FOR_WEAPON_BUILDING = 0x1388,
  FAME_FOR_SELF_DESTROY_CAMP_FOR_USA = 0xFFFFFFCE,
  FAME_FOR_SELF_DESTROY_CAMP = 0xFFFFFFCE,
  FAME_FOR_DESTROYED_CAMP = 0xFFFFFF9C,
  GOLD_FOR_SELF_DESTROY_CAMP = 0x7A120,
  GOLD_FOR_CANCEL_CAMP = 0xF4240,
  CAMP_ATTACK_RANGE = 0x2D,
  TYPE_REMAIN_TIME = 0x0,
  TYPE_LAST_USE_TIME = 0x1,
  ACCUMULATED_MINERAL = 0x1,
  TEMPORARY_MINERAL = 0x2,
  MAX_MINERAL_NUM = 0x3E8,
  MAX_TAX = 0x64,
  WEAPON_FIRE_WARNING_COUNT = 0xA,
  WEAPON_REBUILD_SIEGE_TIME_COUNT = 0x3,
  WEAPON_DAMAGE_RANGE = 0x100,
  WEAPON_DAMAGE = 0x2710,
};

/*  224 */
typedef GameRYL::GameContents Siege::SiegeObjectType;

/*  225 */
enum Siege::Const
{
  INSIDE = 0x0,
  OUTSIDE = 0x1,
  MAX_UPGRADE_NUM = 0x5,
  UPGRADE_KIND_NUM = 0x6,
  VIRTUAL_CID_START_NUM = 0x3E8,
  BROADCAST_CELL_SIZE = 0x5,
  BROADCAST_RADIUS = 0x96,
  BROADCAST_SQUARED_RADIUS = 0x57E4,
  MAX_HP_UPDATE_COUNT = 0x5,
  MAX_REPAIR_GOLD = 0x5F5E0FF,
};

/*  226 */
enum Siege::JewelType
{
  NO_JEWEL = 0x0,
  RUBY = 0x1,
  EMERALD = 0x2,
  SAPPHIRE = 0x3,
  DIAMOND = 0x4,
  BLACKMOON = 0x5,
  JEWEL_PROTOTYPE_ID = 0x76C,
  JEWEL_KIND = 0x5,
  JEWEL_TYPE_NUM = 0x6,
};

/*  227 */
enum PktFriendDB::CMD
{
  ADD_FRIEND = 0x0,
  REMOVE_FRIEND = 0x1,
  ADD_BAN = 0x2,
  REMOVE_BAN = 0x3,
  SETGROUP = 0x4,
  FRIEND_LIST = 0x5,
  BAN_LIST = 0x6,
  FRIEND_INFO_UPDATE = 0x7,
  FRIEND_INFO = 0x8,
  BAN_INFO = 0x9,
};

/*  228 */
typedef PktFriendDB::CMD PktFriendAck::CMD;

/*  229 */
typedef PktBase::PktBaseErr PktFriendAck::FriendERROR;

/*  230 */
typedef CCMDDropItem::__unnamed PktFriendAck::__unnamed;

/*  231 */
enum CFSM::__unnamed
{
  MAX_STATE = 0x8,
};

/*  232 */
enum PktPC::PartyCmd
{
  PC_INVITE = 0x0,
  PC_ACCEPT = 0x1,
  PC_REFUSE = 0x2,
  PC_BANISH = 0x3,
  PC_SECESSION = 0x4,
  PC_TRANSFER = 0x5,
  PC_DESTROY = 0x6,
  PC_LOGIN = 0x7,
  PC_LOGOUT = 0x8,
  PC_DELETE = 0x9,
  PC_RELOGIN = 0xA,
  PC_FINDPARTY = 0xB,
  PC_FINDMEMBER = 0xC,
  PC_AUTOROUTING_ON = 0xD,
  PC_AUTOROUTING_OFF = 0xE,
  PC_MOVEZONE = 0xF,
};

/*  233 */
enum CCharacterParty::ForeignConst
{
  ADDITIONAL_EXP_CAP_MIN_PARTY_MENMBER = 0x2,
  ADDITIONAL_EXP_CAP_PERCENTAGE = 0x28,
};

/*  234 */
enum PktDuC::DuelCmd
{
  DUC_PROPOSE = 0x0,
  DUC_READY = 0x1,
  DUC_REFUSE = 0x2,
  DUC_LOGOUT = 0x3,
  DUC_DEAD = 0x4,
  DUC_PARTY_PROPOSE = 0x5,
  DUC_PARTY_READY = 0x6,
  DUC_REQUEST_PARTY_INFO = 0x7,
  DUC_CANCEL = 0x8,
};

/*  235 */
typedef CGameClientDispatch::__unnamed CChatDispatch::Const;

/*  236 */
enum CGameServerProcessThread::__unnamed
{
  GAME_PROCESS_TICK = 0x64,
  TICKS_PER_SECOND = 0xA,
};

/*  237 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Redbl;

/*  238 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::_Redbl;

/*  239 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned char,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std;

/*  240 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned char,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_trait;

/*  241 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0>::__unnamed;

/*  242 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::_Redbl;

/*  243 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0>::__unnamed;

/*  244 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0>::__unnamed;

/*  245 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Redbl;

/*  246 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>::__unnamed;

/*  247 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::_Redbl;

/*  248 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0>::__unnamed;

/*  249 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>::__unnamed;

/*  250 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::_Redbl;

/*  251 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::_Redbl;

/*  252 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::_Redbl;

/*  253 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::_Redbl;

/*  254 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0>::__unnamed;

/*  255 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0>::__unnamed;

/*  256 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0>::__unnamed;

/*  257 */
enum CMonsterParty::Const
{
  DEFAULT_HELP_RANGE = 0x24,
  ERROR_OF_LEVEL_GAP = 0xA,
};

/*  258 */
enum CastleRight::Index
{
  CONTROL_CASTLE_EMBLEM = 0x0,
  CONTROL_CASTLE_GATE = 0x1,
  USE_CASTLE_GATE = 0x2,
  CONTROL_CASTLE_ARMS = 0x3,
  USE_CASTLE_ARMS = 0x4,
  MAX_RIGHT_NUM = 0xA,
};

/*  259 */
enum Siege::SiegeArmsConst
{
  SIEGE_ARMS_REPAIR_MIN_PER_HP = 0x1,
  SIEGE_ARMS_UPGRADE_MATERIAL_NUM = 0xA,
  SIEGE_ARMS_REPAIR_HP_PER_MATERIAL = 0xA,
  AIRSHIP_RIDER_NUM = 0xA,
  AIRSHIP_PASSENGER_NUM = 0x9,
};

/*  260 */
enum CLimitUserByIP::AllowMode_t
{
  ALLOW_ALL = 0x0,
  DENY_ALL = 0x1,
  ALLOW_SOME = 0x2,
};

/*  261 */
typedef CastleRight::Index CampRight::Index;

/*  262 */
enum VirtualArea::MapType
{
  FRAG = 0x0,
  STATUE = 0x1,
  MAX_MAP_TYPE = 0x2,
};

/*  263 */
enum VirtualArea::CVirtualAreaMgr::Const
{
  VIRTUALAREA_PULSE = 0x14,
};

/*  264 */
enum CSession::SendResult
{
  SEND_SUCCEEDED = 0x0,
  SEND_FAILED = 0x1,
  SEND_NEXT_TURN = 0x2,
};

/*  265 */
enum CPartySpellMgr::__unnamed
{
  MAX_MEMBER = 0xA,
};

/*  266 */
enum CMonster::MovingPattern
{
  AREA = 0x0,
  FIXED = 0x1,
  ROUTE = 0x2,
  NONAREA = 0x3,
};

/*  267 */
enum CMonster::_Const
{
  MONSTER_SEARCH_RANGE = 0x8,
  BOSS_SEARCH_RANGE = 0xF,
  NAMED_SEARCH_RANGE = 0xF,
  CHIEF_SEARCH_RANGE = 0xF,
  MAGE_SEARCH_RANGE = 0x12,
  ACOLYTE_SEARCH_RANGE = 0x12,
  GUARD_SEARCH_RANGE = 0xF,
  GOLD_INC_LEVEL_LIMIT = 0x14,
  RUN_ANI_LIMIT_MAX = 0x3,
  RUN_ANI_LIMIT_MIN = 0x1,
  RATE_MOVING_AND_PLAYER = 0xA,
  MAX_MONSTER_UID = 0x3FFF,
  MONSTER_PARTY_BIT = 0x80000000,
};

/*  268 */
enum CMonster::_Timing
{
  FPS = 0x1E,
};

/*  269 */
enum Castle::TaxType
{
  TRADE_TAX = 0x0,
  REPAIR_TAX = 0x1,
  RESMELT_TAX = 0x2,
  CAMP_GOLD_TAX = 0x3,
  CAMP_MINERAL_TAX = 0x4,
  MAX_TAX_TYPE = 0x5,
};

/*  270 */
enum Castle::Const
{
  MAX_CASTLE_NUM = 0xA,
  MAX_CASTLE_MINERAL_NUM = 0xC8,
  MAX_CASTLE_OBJECT_NUM = 0xFA,
  MAX_TEMP_TAX_UPDATE_COUNT = 0xA,
  MAX_TEMP_TAX_AMOUNT = 0xC350,
  EMBLEM_UPGRADE_JEWEL_NUM = 0x5A,
  EMBLEM_UPGRADE_JEWEL_NUM_PER_POS = 0xA,
  EMBLEM_UPGRADE_JEWEL_POS_NUM = 0x9,
  FAME_FOR_CAPTURE_CASTLE = 0x2710,
  FAME_FOR_FRIENDLY_GUILD = 0x1388,
  INVINCIBLE_COUNT = 0x0,
  TEMP_TAX_GAIN_COUNT = 0x1,
  DAY_END_TIME = 0x0,
};

/*  271 */
enum PartyMemberData::ChangedData
{
  CHANGED_XPOS = 0x1,
  CHANGED_YPOS = 0x2,
  CHANGED_ZPOS = 0x4,
  CHANGED_MAX_HP = 0x8,
  CHANGED_MAX_MP = 0x10,
  CHANGED_CUR_HP = 0x20,
  CHANGED_CUR_MP = 0x40,
  CHANGED_LEVEL = 0x80,
  CHANGED_CLASS = 0x100,
  CHANGED_ENCHANT_INFO_0 = 0x200,
  CHANGED_ENCHANT_INFO_1 = 0x400,
  CHANGED_ENCHANT_INFO_2 = 0x800,
  CHANGED_ENCHANT_INFO_3 = 0x1000,
};

/*  272 */
enum PartyMemberData::Const
{
  MAX_ENCHANT_INFO_NUM = 0x4,
};

/*  273 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1>::__unnamed;

/*  274 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Redbl;

/*  275 */
enum CChatPacket::__unnamed
{
  MAX_CHAT_DATA_LEN = 0x400,
};

/*  276 */
enum PktChat::PktChatCmd
{
  NORMAL = 0x0,
  PARTY = 0x1,
  FRIEND = 0x2,
  GUILD = 0x3,
  CLIENT_LOG = 0x5,
  STALL = 0x6,
  SHOUT = 0x7,
  ADMIN_NORMAL_CHAT = 0x8,
  ADMIN_SHOUT = 0x9,
  WHISPER = 0xA,
  TRADE = 0xB,
  CAMP_SHOP = 0xC,
  NOTIFY_CHAR_INFO = 0xD,
  FIND_PARTY = 0xE,
  ENEMY_CHECK = 0xF,
  NOTICE = 0xFF,
  PktChatMaxSize = 0xB4,
};

/*  277 */
typedef CChatPacket::__unnamed CServerChatPacket::__unnamed;

/*  278 */
enum CCommunityListSend::__unnamed
{
  FRIEND_BUFFER_SIZE = 0xDAC,
  BAN_BUFFER_SIZE = 0xC1C,
  LIST_BUFFER_SIZE = 0x1BBC,
};

/*  279 */
typedef $091388B5486C38E232712F2AD090397D POWER_INFORMATION_LEVEL;

/*  280 */
typedef $C76430121188DB029AABDFCFE322BAEC WELL_KNOWN_SID_TYPE;

/*  281 */
typedef $0FC989869F227A36D749990E523E5F04 POWER_ACTION;

/*  282 */
typedef $0FA2438F6DACE86812761B9F903D20EE $449F4C83174DB40EB4FD9C7BF2927223;

/*  283 */
typedef $536385C8F382172408CEC3CAC70F99E4 SYM_TYPE;

/*  284 */
typedef $C9C41CE7F7AB140BE1C872069B92FC11 LATENCY_TIME;

/*  285 */
typedef CGameClientDispatch::__unnamed CLogDispatch::Const;

/*  286 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1>::__unnamed;

/*  287 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::_Redbl;

/*  288 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Redbl;

/*  289 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0>::__unnamed;

/*  290 */
enum CTempCharacter::Const
{
  SLOT_INFO_SET = 0x1,
  CHAR_DATA_SET = 0x2,
  SLOT_INFO_REQ = 0x4,
  CHAR_DATA_REQ = 0x8,
};

/*  291 */
enum _STORE_INFO::__unnamed
{
  MAX_PASS_LEN = 0x5,
};

/*  292 */
enum _CONFIG::__unnamed
{
  MAX_CONFIG_SIZE = 0x32,
};

/*  293 */
enum _QUEST::__unnamed
{
  MAX_QUEST_SIZE = 0x82,
};

/*  294 */
enum CThreadMgr::__unnamed
{
  MAX_THREAD_NUM = 0x3F,
};

/*  295 */
enum CDBComponent::DBClass
{
  Class_AuthDB = 0x1,
  Class_GameDB = 0x2,
  Class_KeeperDB = 0x3,
  Class_AdminDB = 0x4,
};

/*  296 */
enum CDBComponent::__unnamed
{
  MAX_QUERY_LENGTH = 0x8000,
  QUERY_BUFFER_LEN = 0x400,
};

/*  297 */
enum _HISTORY::__unnamed
{
  MAX_HISTORY_SIZE = 0xC8,
};

/*  298 */
typedef CGameClientDispatch::__unnamed CRegularAgentDispatch::Const;

/*  299 */
enum ServerWindowFrameworkConst::Const
{
  INITIALIZE_SUCCESS = 0x1,
  DESTROY_CALLED = 0x2,
  DEFAULT_PROCESS_TICK = 0x64,
};

/*  300 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Redbl;

/*  301 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Redbl;

/*  302 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0>::__unnamed;

/*  303 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0>::__unnamed;

/*  304 */
enum ServerManage::ManageCommand::AutoPatchFlag
{
  AUTOPATCH_OPENFILE = 0x1,
  AUTOPATCH_DATA = 0x2,
};

/*  305 */
typedef _VDS_MAINTENANCE_OPERATION ServerManage::CMD::CMDType;

/*  306 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1>::__unnamed;

/*  307 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Redbl;

/*  308 */
enum CXORCrypt::__unnamed
{
  PAGE_VERSION = 0x1,
  BIT_COUNT = 0x28,
  CODE_PAGE = 0xA,
};

/*  309 */
enum RylServerDispatchFlags
{
  PROCESS_PACKET_NOW = 0x1,
  SUSPEND_RECV = 0x2,
};

/*  310 */
enum SendStreamConst
{
  DEFAULT_BUFFER_SIZE = 0x4000,
};

/*  311 */
typedef $2A6324B8E10DEE2666A6A5498DFC667B XLAT_SIDE;

/*  312 */
typedef $0AEECC1A63E1B2F73D11FBA74082B60B PROXY_PHASE;

/*  313 */
typedef PARTY::__unnamed _PARTY_INFO::__unnamed;

/*  314 */
enum _RE_USPGRoomCurrent_DisConn::__unnamed
{
  ClientIDLen = 0x14,
};

/*  315 */
typedef __MIDL_IInternetSecurityManager_0003 __MIDL_IInternetSecurityManager_0002;

/*  316 */
typedef $B2CD58BB5E151C37D855099D3E2FDD5A STUB_PHASE;

/*  317 */
typedef CClass::RaceType CHAR_CREATE::RaceType;

/*  318 */
enum _BAN::__unnamed
{
  MAX_BAN_SIZE = 0x7D0,
  MAX_BANINFO_SIZE = 0x2BC,
};

/*  319 */
enum _EVENTITEM::__unnamed
{
  MAX_ITEM_NAME = 0x20,
};

/*  320 */
enum _EQUIP::__unnamed
{
  MAX_EQUIP_SIZE = 0x59C,
};

/*  321 */
enum TEMPINVEN::__unnamed
{
  MAX_TEMPINVEN_SIZE = 0x59C,
};

/*  322 */
enum PAY_AUTH::__unnamed
{
  AccountLen = 0x14,
};

/*  323 */
typedef PARTY::__unnamed _PARTY_USER_INFO::__unnamed;

/*  324 */
typedef $13CC20D9AD0BBA5D63681FE6203B0C08 BIDI_TYPE;

/*  325 */
enum _FRIEND::__unnamed
{
  MAX_FRIEND_SIZE = 0x960,
  MAX_FRIENDINFO_SIZE = 0x2BC,
};

/*  326 */
enum _INVEN::__unnamed
{
  MAX_INVEN_SIZE = 0x13FC,
};

/*  327 */
enum PktUnifiedCharSelectReq::__unnamed
{
  MAX_PASSWORD_LEN = 0x21,
};

/*  328 */
enum _ADMIN::__unnamed
{
  MAX_IP_LEN = 0x10,
};

/*  329 */
enum _EXTRA::__unnamed
{
  MAX_EXTRA_SIZE = 0x1FC,
};

/*  330 */
enum GameRYL::ServerType
{
  SERVER_TEST = 0x0,
  SERVER_REGULAR = 0x1,
  SERVER_BATTLE_LOHAN = 0x2,
  MAX_SERVER_TYPE = 0x3,
};

/*  331 */
enum PktUnifiedCharInfo::__unnamed
{
  MAX_STORE_INFO = 0xA,
  MAX_CHAR_DATA = 0x1E,
};

/*  332 */
enum PktUnifiedCharInfo::ErrorCode
{
  STORE_READ_ERROR = 0x1,
  CHARINFO_READ_ERROR = 0x2,
};

/*  333 */
enum UnifiedConst::StoreSelected
{
  NONE_SELECTED = 0x0,
  SELECTED_PART1 = 0x1,
  SELECTED_PART2 = 0x2,
};

/*  334 */
enum _STORE::__unnamed
{
  MAX_STORE_SIZE = 0x1C80,
};

/*  335 */
typedef PktBase::PktBaseErr PktUnifiedCharSelectAck::ErrorCode;

/*  336 */
enum _EXCHANGE::__unnamed
{
  MAX_EXCHANGE_SIZE = 0x500,
};

/*  337 */
enum tagDBPROMPTOPTIONSENUM
{
  DBPROMPTOPTIONS_NONE = 0x0,
  DBPROMPTOPTIONS_WIZARDSHEET = 0x1,
  DBPROMPTOPTIONS_PROPERTYSHEET = 0x2,
  DBPROMPTOPTIONS_BROWSEONLY = 0x8,
  DBPROMPTOPTIONS_DISABLE_PROVIDER_SELECTION = 0x10,
  DBPROMPTOPTIONS_DISABLESAVEPASSWORD = 0x20,
};

/*  338 */
enum _COMPUTER_NAME_TYPE
{
  PrimaryComputerName = 0x0,
  AlternateComputerNames = 0x1,
  AllComputerNames = 0x2,
  ComputerNameTypeMax = 0x3,
};

/*  339 */
enum std::basic_filebuf<char,std::char_traits<char> >::_Initfl
{
  _Newfl = 0x0,
  _Openfl = 0x1,
  _Closefl = 0x2,
};

/*  340 */
enum SymTagEnum
{
  SymTagNull = 0x0,
  SymTagExe = 0x1,
  SymTagCompiland = 0x2,
  SymTagCompilandDetails = 0x3,
  SymTagCompilandEnv = 0x4,
  SymTagFunction = 0x5,
  SymTagBlock = 0x6,
  SymTagData = 0x7,
  SymTagAnnotation = 0x8,
  SymTagLabel = 0x9,
  SymTagPublicSymbol = 0xA,
  SymTagUDT = 0xB,
  SymTagEnum = 0xC,
  SymTagFunctionType = 0xD,
  SymTagPointerType = 0xE,
  SymTagArrayType = 0xF,
  SymTagBaseType = 0x10,
  SymTagTypedef = 0x11,
  SymTagBaseClass = 0x12,
  SymTagFriend = 0x13,
  SymTagFunctionArgType = 0x14,
  SymTagFuncDebugStart = 0x15,
  SymTagFuncDebugEnd = 0x16,
  SymTagUsingNamespace = 0x17,
  SymTagVTableShape = 0x18,
  SymTagVTable = 0x19,
  SymTagCustom = 0x1A,
  SymTagThunk = 0x1B,
  SymTagCustomType = 0x1C,
  SymTagManagedType = 0x1D,
  SymTagDimension = 0x1E,
  SymTagMax = 0x1F,
};

/*  341 */
typedef LogBuffer::__unnamed LOG_CONSTANT;

/*  342 */
enum _NLA_BLOB_DATA_TYPE
{
  NLA_RAW_DATA = 0x0,
  NLA_INTERFACE = 0x1,
  NLA_802_1X_LOCATION = 0x2,
  NLA_CONNECTIVITY = 0x3,
  NLA_ICS = 0x4,
};

/*  343 */
enum boost::STATIC_ASSERTION_FAILURE<1>::__unnamed
{
  value = 0x1,
};

/*  344 */
enum _NLA_CONNECTIVITY_TYPE
{
  NLA_NETWORK_AD_HOC = 0x0,
  NLA_NETWORK_MANAGED = 0x1,
  NLA_NETWORK_UNMANAGED = 0x2,
  NLA_NETWORK_UNKNOWN = 0x3,
};

/*  345 */
enum _NLA_INTERNET
{
  NLA_INTERNET_UNKNOWN = 0x0,
  NLA_INTERNET_NO = 0x1,
  NLA_INTERNET_YES = 0x2,
};

/*  346 */
enum SessionState::Type
{
  CONNECTED = 0x0,
  DISCONNECTED = 0x1,
  MAX_SESSION_STATE = 0x2,
};

/*  347 */
typedef RylServerDispatchFlags SessionFlag::Type;

/*  348 */
enum SessionConst::Data
{
  MAX_RECV_BUFFER = 0x8000,
};

/*  349 */
enum LISTENER_CONSTANT
{
  DEFAULT_PENDING_NUM = 0xA,
};

/*  350 */
enum IOCPInternalFlag
{
  INITIALIZED_IOCP = 0x1,
  DESTROYED_IOCP = 0x2,
};

/*  351 */
enum RequestConst
{
  CANNOT_ADD_REQUEST = 0x1,
};

/*  352 */
enum Item::Grade::TableType
{
  DROP_MIN_VALUE = 0x0,
  DROP_MAX_VALUE = 0x1,
  VALUE_GRADE = 0x2,
  MAX_TABLE_TYPE = 0x3,
};

/*  353 */
enum Item::Const
{
  MAX_GEM_KIND = 0x5,
  MAX_LEVEL_OPTION_UPGRADE = 0x5,
  MAX_OPTION_BASE_NUM = 0x6,
  MAX_TEMP_INVEN_ITEM_NUM = 0x14,
  PRICE_AGGRAVATION = 0x7,
  GM_MODEL_ITEM = 0xC34F,
  MAX_UPGRADE_COUNT = 0x3,
};

/*  354 */
typedef $BA5933F1975D916FB246D1EEDB0FAC50 ASSOCKEY;

/*  355 */
enum tagDOCHOSTUIDBLCLKDispatch
{
  docHostUIDblClkDEFAULT = 0x0,
  docHostUIDblClkSHOWPROPERTIES = 0x1,
  docHostUIDblClkSHOWCODE = 0x2,
};

/*  356 */
typedef $204D9DB0479990E1799BA37F02894952 URL_SCHEME;

/*  357 */
typedef $9F5DEC71A9715652613D7AC79A3DFB57 ASSOCENUM;

/*  358 */
typedef $24B7ECD4AC03C444748AD3E8BD37C202 ASSOCDATA;

/*  359 */
enum tagDocHostUIFlagDispatch
{
  docHostUIFlagDIALOG = 0x1,
  docHostUIFlagDISABLE_HELP_MENU = 0x2,
  docHostUIFlagNO3DBORDER = 0x4,
  docHostUIFlagSCROLL_NO = 0x8,
  docHostUIFlagDISABLE_SCRIPT_INACTIVE = 0x10,
  docHostUIFlagOPENNEWWIN = 0x20,
  docHostUIFlagDISABLE_OFFSCREEN = 0x40,
  docHostUIFlagFLAT_SCROLLBAR = 0x80,
  docHostUIFlagDIV_BLOCKDEFAULT = 0x100,
  docHostUIFlagACTIVATE_CLIENTHIT_ONLY = 0x200,
};

/*  360 */
typedef $2CD99A42A273050CD294312F877025C7 URL_PART;

/*  361 */
typedef $F258A75C985B6E15DF6E997DEEA0897F ASSOCSTR;

/*  362 */
typedef $6FB945646DCDC979B45A0864DF90F90A SHREGDEL_FLAGS;

/*  363 */
typedef $72442BC1633A72B4A848039868482DB7 OLE_TRISTATE;

/*  364 */
typedef $3B2A1EAD1C50A2BC68F8CFAB6412CACA URLIS;

/*  365 */
typedef $4218CD2CD980A290FF820393F4F33E3B SHREGENUM_FLAGS;

/*  366 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<c;

/*  367 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0>;

/*  368 */
typedef CDelimitedFile::__unnamed CTokenlizedFile::__unnamed;

/*  369 */
typedef Item::CEquipment::EQUIPMENT_ERROR Item::Chemical::Result;

/*  370 */
enum ClientConstants::Judge
{
  Judge_Front = 0x0,
  Judge_Side = 0x1,
  Judge_Back = 0x2,
  Judge_Guard = 0x3,
  Judge_Critical = 0x4,
  Judge_Heal = 0x5,
  Judge_ManaHeal = 0x6,
  Judge_Chant = 0x7,
  Judge_Enchant = 0x8,
  Judge_Disenchant = 0x9,
  Judge_Evade = 0xA,
  Judge_Resist = 0xB,
  Judge_ManaShell = 0xC,
  Judge_Poisoned = 0xD,
  Judge_NonShow = 0xE,
  Judge_Miss = 0xF,
  Judge_Counter = 0x10,
  Judge_FireCracker = 0x11,
  Judge_ChinaFireCracker = 0x12,
  Judge_SkillItem = 0x13,
};

/*  371 */
enum Creature::WarFlag
{
  WAR_OFF = 0x0,
  WAR_ON = 0x1,
  WAR_INSTANCE = 0x2,
};

/*  372 */
enum GAMELOG::sCharLoginOut::LOGINOUT_ERROR
{
  CANNOT_UPDATE_LOGOUT = 0x1,
};

/*  373 */
enum GAMELOG::sItemDump::__unnamed
{
  EQUIP_DUMP = 0x0,
  INVEN_DUMP = 0x1,
  EXTRA_DUMP = 0x2,
  EXCHANGE_DUMP = 0x3,
  MAX_DUMP = 0x4,
};

/*  374 */
enum GAMELOG::sStallRegisterRemoveItemLog::StallMode
{
  STALL_UNKNOWN = 0x0,
  STALL_REGISTERITEM = 0x1,
  STALL_REMOVEITEM = 0x2,
  STALL_CHANGEPRICE = 0x3,
  STALL_CAMP_REGISTER = 0x4,
  STALL_CAMP_REMOVE = 0x5,
};

/*  375 */
enum GAMELOG::sStallOpenCloseLog::__unnamed
{
  MAX_STALL_NAME = 0x20,
};

/*  376 */
enum GAMELOG::sStallOpenCloseLog::StallMode
{
  STALL_OPEN = 0x0,
  STALL_CLOSE = 0x1,
};

/*  377 */
enum GAMELOG::sStallEnterLeaveLog::StallMode
{
  STALL_ENTER = 0x0,
  STALL_LEAVE = 0x1,
};

/*  378 */
enum Item::CEquipment::UpgradeItem::__l2::ArrayType
{
  PERSENT_SUCCESS_SYLVINE = 0x0,
  PERSENT_SUCCESS_MYTHRIL = 0x1,
  PERSENT_SUCCESS_ETERNIUM = 0x2,
  PERSENT_SUCCESS_SOLMETAL = 0x3,
  PERSENT_SUCCESS_RHATARIUM = 0x4,
  PERSENT_SUCCESS_ANCIENTSTONE = 0x5,
  PERSENT_FAIL_LEVEL_KEEP = 0x6,
  PERSENT_FAIL_LEVEL1_DOWN = 0x7,
  PERSENT_FAIL_LEVEL2_DOWN = 0x8,
  MINERAL_NUM = 0x9,
  MAX_ROW = 0xA,
};

/*  379 */
typedef Item::CItemType::ArrayType Item::EquipType::Type;

/*  380 */
enum PktDepositUpdateDB::TabFlag
{
  ITEM_TAB1 = 0x1,
  ITEM_TAB2 = 0x2,
  ITEM_TAB3 = 0x4,
  ITEM_TAB4 = 0x8,
  USED_DEPOSIT = 0x40000000,
  SAVED_PASSWORD = 0x80000000,
};

/*  381 */
enum PktDepositUpdateDB::TabNum
{
  TAB_12 = 0x0,
  TAB_34 = 0x1,
};

/*  382 */
enum Quest::Trigger
{
  TRIGGER_START = 0x0,
  TRIGGER_PUTON = 0x1,
  TRIGGER_GETON = 0x2,
  TRIGGER_TALK = 0x3,
  TRIGGER_KILL = 0x4,
  TRIGGER_PICK = 0x5,
  TRIGGER_FAME = 0x6,
  TRIGGER_LEVEL_TALK = 0x7,
};

/*  383 */
enum ContainerConstant::Const
{
  QUEST_INVENTORY_TAB = 0x3,
};

/*  384 */
enum BroadCastSiege::Const
{
  MAX_SIEGEOBJECT_DATA_SIZE = 0x78,
  MAX_SIEGEBROADCAST_BUFFER_SIZE = 0xA0,
};

/*  385 */
enum ContainerConstant::Size
{
  INVENTORY_WIDTH = 0x6,
  INVENTORY_HEIGHT = 0x6,
  MAX_INVENTORY_TAB = 0x4,
  EXCHANGE_WIDTH = 0x8,
  EXCHANGE_HEIGHT = 0x4,
  DEPOSIT_WIDTH = 0x8,
  DEPOSIT_HEIGHT = 0xC,
  MAX_DEPOSIT_TAB = 0x4,
  STALL_WIDTH = 0xA,
  STALL_HEIGHT = 0x8,
  CAMPSHOP_WIDTH = 0xA,
  CAMPSHOP_HEIGHT = 0x8,
};

/*  386 */
enum Guild::RelationActor
{
  BY_MINE = 0x0,
  BY_TARGET = 0x1,
  MAX_RELATION_ACTOR = 0x2,
};

/*  387 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0>::__unnamed;

/*  388 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Guild::CGuild *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_tra;

/*  389 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0>::__unnamed;

/*  390 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Guild::CGuild *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,s;

/*  391 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Redbl;

/*  392 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0>::__unnamed;

/*  393 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::_Redbl;

/*  394 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::_Redbl;

/*  395 */
enum Siege::eUpdateHPType
{
  NOW_HP = 0x0,
  UPGRADE_HP = 0x1,
  REPAIR_HP = 0x2,
  FULL_HP = 0x3,
};

/*  396 */
enum GuildRight::Index
{
  PUT_STOREHOUSE = 0x0,
  GET_STOREHOUSE = 0x1,
  USE_SAFE = 0x2,
  INVITE_MEMBER = 0x3,
  PERMIT_JOIN = 0x4,
  CHANGE_PASSWORD = 0x5,
  REGULATE_TEX = 0x6,
  KICK_MEMBER = 0x7,
  BOARD_ADMIN = 0x8,
  SETUP_MARK_N_LEVEL = 0x9,
  SETUP_MIDDLE = 0xA,
  DIVIDE_GOLD = 0xB,
  SETUP_POLICY = 0xC,
  MAX_USING_RIGHT = 0xD,
};

/*  397 */
enum PktStRI::PktStRICmd
{
  SC_REGISTER = 0x0,
  SC_CANCEL = 0x1,
  SC_CAMP_REGISTER = 0x2,
  SC_CAMP_CANCEL = 0x3,
  SC_CAMP_SELL = 0x4,
};

/*  398 */
enum PktStRI::PktStRIEErr
{
  FAIL_NOT_ITEM = 0x2,
};

/*  399 */
enum CSummonMonster::__unnamed
{
  SUPPORT_DISTANCE = 0x3,
  SUMMON_TIME = 0x78,
};

/*  400 */
typedef Item::CCharacterShopContainer::__unnamed PktStO::__unnamed;

/*  401 */
typedef Siege::Const CStatue::__unnamed;

/*  402 */
typedef MACRO_SUCCESS_0 PktStE::PktStEErr;

/*  403 */
typedef MonsterInfo::SkillPattern CSkillMonster::SkillPattern;

/*  404 */
enum CSkillMonster::EnemyFindType
{
  TYPE_LV = 0x0,
  TYPE_HP = 0x1,
  TYPE_HIGHEST = 0x0,
  TYPE_LOWEST = 0x1,
};

/*  405 */
enum CSkillMonster::Const
{
  USE_SKILL_MIN_LEVEL = 0x4,
  USE_SKILL_LEVEL = 0x5,
};

/*  406 */
typedef Item::CShopContainer::__unnamed PktStIInfo::__unnamed;

/*  407 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Redbl;

/*  408 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0>::__unnamed;

/*  409 */
typedef PktChat::PktChatCmd GameTime::TimeType;

/*  410 */
enum PktStatueCmd::SubCmd
{
  CMD_INFO = 0x0,
  CMD_UPDATE_LOST_HP = 0x1,
  CMD_UPDATE_KID = 0x2,
  CMD_DISPLAY_INFO = 0x3,
};

/*  411 */
enum PktStatueCmd::Const
{
  MAX_STATUE_NUM = 0x10,
};

/*  412 */
typedef CSpell::InternalFlags Siege::State;

/*  413 */
enum Creature::eReturnACT
{
  RET_NONE = 0x0,
  RET_ALLWAYS = 0x1,
  RET_DEVELOPING = 0x2,
};

/*  414 */
enum PktRsWaitQueueAck::__unnamed
{
  MAX_POINT_NUM_PER_RACE = 0x3,
};

/*  415 */
enum CNPC::Const
{
  MAX_CONTACT_RANGE = 0xF,
  DISPLAY_CYCLE = 0x1B7740,
};

/*  416 */
enum BattleInclination::VSType
{
  VS_CHARACTER = 0x1,
  VS_PARTY = 0x2,
  VS_GUILD = 0x4,
};

/*  417 */
enum Siege::eReturn
{
  RET_OK = 0x0,
  RET_DESTROY_CAMP = 0x1,
  RET_DESTROY_SIEGE_ARMS = 0x2,
  RET_CHANGE_TYPE = 0x3,
};

/*  418 */
enum Siege::CastleArmsConst
{
  CASTLE_ARMS_REPAIR_MIN_PER_HP = 0x1,
  CASTLE_ARMS_REPAIR_HP_UNIT = 0xA,
  CASTLE_ARMS_REPAIR_GOLD_PER_UNIT = 0x64,
  FAME_FOR_DESTROY_CASTLE_ARMS = 0xFFFFFE0C,
};

/*  419 */
enum Siege::TimeValue
{
  DEFAULT_TIME_VALUE = 0xA,
  DEFAULT_REPAIR_TIME = 0x1E,
  CAMP_ENCAMPING_TIME = 0x1E,
  CAMP_CANCELING_TIME = 0x14,
  CAMP_REPAIR_TIME = 0x1E,
  CAMP_TO_STARTKIT_TIME = 0xA,
  CAMP_CHANGING_TIME = 0xA,
  CAMP_LEAST_USE_TIME = 0x7,
  CAMP_ENCAMPING_INTERVAL = 0xA,
  CAMP_ATTACKED_INTERVAL = 0xEA60,
  MINING_CAMP_GAIN_COUNT = 0x1,
  CAMP_SHOP_TRANSFER_COUNT = 0x1,
  WEAPON_CHARGE_TIME = 0xA,
  EMBLEM_SUMMON_TIME = 0x1,
  SIEGE_ARMS_BUILDING_TIME = 0x1,
  SIEGE_ARMS_TO_STARTKIT_TIME = 0x1,
  SIEGE_ARMS_LEAST_USE_TIME = 0xA,
};

/*  420 */
enum Siege::EmblemConst
{
  MAX_EMBLEM_UPGRADE = 0x3,
  EMBLEM_ATTACK_HEIGHT_ERROR = 0x5,
};

/*  421 */
enum Siege::RiderValue
{
  NOT_RIDER = 0x0,
  RIDER_FOR_OWNER = 0x1,
  RIDER_FOR_PASSENGER = 0x2,
};

/*  422 */
enum Siege::GateConst
{
  GATE_REPAIR_MIN_PER_HP = 0x1,
};

/*  423 */
enum EnemyCheck::CFunctions::ResultType
{
  EN_COMMON_PVP = 0x1,
  EN_COMMON_STATELESS_MONSTER = 0x2,
  EN_HUNTING_VSPARTY_VSGUILD = 0x3,
  EN_GUILDWAR_HOSTILITY_GUILD = 0x4,
  EN_REALMWAR_ENEMY_PC_MONSTER_NPC = 0x5,
  EN_STATUEWAR_ENEMY_PC_MONSTER_STRUCT = 0x6,
  EN_STATUEWAR_STATELESS_STRUCT = 0x7,
  NE_COMMON_GMODE = 0x15,
  NE_COMMON_ENEMY_NPC = 0x16,
  NE_HUNTING_NON_BATTLER = 0x17,
  NE_HUNTING_OTHER_BATTLER = 0x18,
  NE_HUNTING_BATTLER = 0x19,
  NE_GUILDWAR_IN_SAFETYZONE = 0x1A,
  NE_GUILDWAR_NON_BATTLER = 0x1B,
  NE_GUILDWAR_OTHER_BATTLER = 0x1C,
  NE_GUILDWAR_BATTLER = 0x1D,
  NE_GUILDWAR_MYGUILD = 0x1E,
  NE_REALMWAR_ENEMY_STRUCT = 0x1F,
  FR_COMMON_MYPARTY = 0x29,
  FR_COMMON_MYGUILD = 0x2A,
  FR_COMMON_MYSELF = 0x2B,
  FR_GUILDWAR_MYGUILD = 0x2C,
  FR_REALMWAR_MYNATION_PC_NPC_MONSTER_STRUCT = 0x2D,
  FR_STATUEWAR_MYNATION_PC_NPC_MONSTER_STRUCT = 0x2E,
  FR2_COMMON_MYNATION_PC_NPC = 0x3D,
  FR2_COMMON_STATELESS_NPC = 0x3E,
};

/*  424 */
enum AwardTable::Const
{
  MAX_DROP_ITEM = 0xA,
  MAX_MONSTER_LEVEL = 0x63,
  SKILL_KIND = 0x53,
  GEM_DROP_TABLE_COLUMN = 0xA,
  GEM_DROP_TABLE_ROW = 0x3,
  METAL_DROP_TABLE_COLUMN = 0xA,
  METAL_DROP_TABLE_ROW = 0x3,
  POTION_DROP_TABLE_COLUMN = 0xA,
  POTION_DROP_TABLE_ROW = 0x4,
  SKILLBOOK_DROP_TABLE_COLUMN = 0xA,
  EQUIP_MAX_NUM_PER_LEVEL = 0x10,
  BLACK_MARKET_TABLE_COLUMN = 0xE4,
  BLACK_MARKET_TABLE_ROW = 0xD,
  PRIMARY_EQUIP_TABLE_ROW = 0x9,
  HUMAN_EQUIP_TYPE_NUM = 0x13,
  AKHAN_EQUIP_TYPE_NUM = 0x13,
};

/*  425 */
typedef CCreatureManager::eAdminMonster CVirtualMonsterMgr::eAdminMonster;

/*  426 */
enum Item::ExtraSpacePos::Type
{
  UPGRADE_EQUIPMENT_POS = 0x0,
  UPGRADE_MATERIAL_POS = 0x1,
  HOLDITEM_POS = 0x2,
  KIT_MATERIAL_POS = 0x3,
  CAMP_MATERIAL_POS = 0x4,
  EMBLEM_JEWEL_POS1 = 0x5,
  EMBLEM_JEWEL_POS2 = 0x6,
  EMBLEM_JEWEL_POS3 = 0x7,
  EMBLEM_JEWEL_POS4 = 0x8,
  EMBLEM_JEWEL_POS5 = 0x9,
  EMBLEM_JEWEL_POS6 = 0xA,
  EMBLEM_JEWEL_POS7 = 0xB,
  EMBLEM_JEWEL_POS8 = 0xC,
  EMBLEM_JEWEL_POS9 = 0xD,
  GRAFT_ORIGINAL_POS = 0xE,
  GRAFT_SACRIFICE_POS = 0xF,
  GRAFT_RESULT_POS = 0x10,
  COMPENSATION_POS = 0x11,
  MAX_EXTRA_SPACE_NUM = 0x12,
  EMBLEM_JEWEL_POS_NUM = 0x9,
};

/*  427 */
enum Guild::MemberInfoUpdateType
{
  TYPE_LEVEL = 0x0,
  TYPE_CLASS = 0x1,
  TYPE_FAME = 0x2,
  TYPE_GOLD = 0x3,
  TYPE_WARFLAG = 0x4,
};

/*  428 */
enum Skill::MasteryType
{
  NONE_MASTERY = 0x0,
  SWORD_MASTERY = 0x1,
  AXE_MASTERY = 0x2,
  BLUNT_MASTERY = 0x3,
  DAGGER_MASTERY = 0x4,
  CRUSH_WEAPON = 0x5,
  BLADE = 0x6,
  CLAW_MASTERY = 0x7,
};

/*  429 */
enum CharCreate::Const
{
  START_GOLD = 0x0,
  MAX_START_POS_NUM = 0x6,
  MAX_LOBBY_RESPAWN_POS = 0x2,
};

/*  430 */
enum DBUpdateData::Limit
{
  MAX_DBUPDATE_SIZE = 0x275C,
};

/*  431 */
typedef CGameClientDispatch::__unnamed CChatGameServerDispatch::__unnamed;

/*  432 */
typedef DBUpdateData::UpdateType PktChatData::__unnamed;

/*  433 */
enum Skill::Const
{
  SKILL_MASK = 0x8000,
  ERROR_OF_DISTANCE = 0xA,
};

/*  434 */
enum PktRsAck::Error
{
  ERR_NOT_EXIST_CAMP = 0x2,
};

/*  435 */
typedef Creature::StatusType VirtualArea::Status;

/*  436 */
enum VirtualArea::VirtualAreaType
{
  BGSERVERMAP = 0x8000,
  DUELMAP = 0x4000,
  DUNGEON = 0x2000,
};

/*  437 */
enum PktAtAck::PktAtAckErr
{
  FAIL_ALREADY_DEAD = 0x2,
  FAIL_TOO_FAR = 0x3,
  FAIL_SUICIDE = 0x4,
  FAIL_PEACE_TO_WAR = 0x5,
  FAIL_SPELL = 0x6,
  FAIL_TO_SIEGE_OBJECT = 0x7,
  FAIL_TO_MONSTER = 0x8,
  FAIL_FRIENDLY_ATTACK = 0x9,
  FAIL_NOT_SIEGE_ATTACK = 0xA,
  FAIL_NOT_STEALTH = 0xB,
};

/*  438 */
enum GameTime::GuildTime
{
  GT_NORMAL = 0x0,
  GT_PREPARE_START_30 = 0x1,
  GT_PREPARE_START_5 = 0x2,
  GT_GUILD_WAR = 0x3,
  GT_PREPARE_END_30 = 0x4,
};

/*  439 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long>,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_allocator_;

/*  440 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long>,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_allocator_new_delete,;

/*  441 */
enum PktServerLog::LogType
{
  ITEM_DUPLICATED_LOG = 0x1,
};

/*  442 */
typedef CCMDDropItem::__unnamed PktItemDuplicated::__unnamed;

/*  443 */
enum Quest::Event
{
  EVENT_DISAPPEAR = 0x0,
  EVENT_GET = 0x1,
  EVENT_SPAWN = 0x2,
  EVENT_MONSTERDROP = 0x3,
  EVENT_END = 0x4,
  EVENT_AWARD = 0x5,
  EVENT_MSGBOX = 0x6,
  EVENT_PHASE = 0x7,
  EVENT_ADDQUEST = 0x8,
  EVENT_AWARDITEM = 0x9,
  EVENT_MOVE = 0xA,
  EVENT_THEATERMODE = 0xB,
};

/*  444 */
enum Castle::IndentifyBit
{
  STATUE_BIT = 0x80000000,
  CASTLE_BIT = 0x40000000,
  CAMP_BIT = 0x20000000,
  TOWN_BIT = 0x10000000,
  CASTLE_NAME_BIT_SHIFT = 0xC,
};

/*  445 */
enum PktRsInfoAck::Const
{
  MAX_RESPAWN_POINT = 0x32,
};

/*  446 */
enum SphereConst::eConst
{
  CHAR_RADIUS = 0x2,
  MAX_SPHERE_NODE = 0x7D0,
  DEFAULT_ROOT_SIZE = 0x100,
  DEFAULT_LEAF_SIZE = 0x40,
  DEFAULT_GRAVY = 0xF,
};

/*  447 */
enum PktDisappearItem::PktDICmd
{
  DIC_DEFAULT = 0x0,
  DIC_LINKED_QUEST = 0x1,
};

/*  448 */
typedef FieldObject::CheckBit PktPUAck::ObjectType;

/*  449 */
typedef PktBase::PktBaseErr PktPUAck::PktPUAckError;

/*  450 */
typedef PktFriendDB::CMD PktFriendEtc::CMD;

/*  451 */
typedef PktBase::PktBaseErr PktSpItAck::PktSpltAckError;

/*  452 */
enum Skill::Type::DRCType
{
  MAGIC = 0x0,
  RIGHT_WEAPON = 0x1,
  LEFT_WEAPON = 0x2,
};

/*  453 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>::__unnamed;

/*  454 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::;

/*  455 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Redbl;

/*  456 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>::__unnamed;

/*  457 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1>::__unnamed;

/*  458 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::;

/*  459 */
typedef DBUpdateData::UpdateType PktDeposit::CMD;

/*  460 */
enum PktDeposit::DepositError
{
  INSUFFICIENT_MONEY = 0x2,
  AUTH_FAILED = 0x3,
  INVALID_ARGUMENT = 0x4,
};

/*  461 */
enum PktDeposit::__unnamed
{
  MIN_DATA_SIZE = 0x8,
};

/*  462 */
enum PktUI::PktUIAck
{
  USE_FAILED = 0x2,
  NOT_SIEGE_TIME = 0x3,
  NOT_EXIST_GUILD = 0x4,
  NOT_MASTER = 0x5,
  NOT_ENOUGH_FAME = 0x6,
  ANOTHER_DEV_CAMP = 0x7,
  INNER_RADIUS = 0x8,
  OUTER_RADIUS = 0x9,
  NOT_ENOUGH_MATERIAL = 0xA,
  IN_SAFETYZONE = 0xB,
  FAIL_PEACE_GUILD = 0xC,
  FAIL_ALMIGHTY_GROUND = 0xD,
  FAIL_DARK_CAERNARVON = 0xE,
  FAIL_EXIST_ANOTHER_WEAPON = 0xF,
  FAIL_ALMIGHTY_PIRATE = 0x10,
  FAIL_REMAIN_3_DAY = 0x11,
  FAIL_REMAIN_2_DAY = 0x12,
  FAIL_REMAIN_1_DAY = 0x13,
  FAIL_POSITION = 0x14,
  NOT_EXIST_QUEST = 0x15,
  FAIL_HAS_QUEST = 0x16,
  FAIL_FULL_QUEST = 0x17,
  FAIL_QUEST_LEVEL = 0x18,
  FAIL_NOT_GT_GUILD_WAR_TIME = 0x19,
};

/*  463 */
enum PktRpAI::Err
{
  NOT_ENOUGH_GOLD = 0x2,
};

/*  464 */
typedef FieldObject::CheckBit PktExI::Type;

/*  465 */
typedef CCMDDropItem::__unnamed DBBan::__unnamed;

/*  466 */
enum PktRs::RespawnCmd
{
  RS_NORMAL = 0x0,
  RS_SELECT = 0x1,
  RS_FORMER_PLACE = 0x2,
  RS_BG_HUMAN1 = 0x3,
  RS_BG_HUMAN2 = 0x4,
  RS_BG_HUMAN3 = 0x5,
  RS_BG_AKHAN1 = 0x6,
  RS_BG_AKHAN2 = 0x7,
  RS_BG_AKHAN3 = 0x8,
  RS_BGSERVER_RANDOM = 0x9,
  RS_BG_EXIT = 0xA,
};

/*  467 */
typedef PktBase::PktBaseErr PktPDAck::PktPDAckError;

/*  468 */
typedef PktBase::PktBaseErr PktTI::PktTIError;

/*  469 */
typedef PktBase::PktBaseErr PktSwI::PktSwlError;

/*  470 */
enum PktIRSAck::__unnamed
{
  RUNE_INSTALL = 0x2,
  RUNE_UNINSTALL = 0x3,
};

/*  471 */
typedef CMonsterShout::Behavior CellCommand::Type;

/*  472 */
enum PktTr::PktTrError
{
  FAIL_DROP_INVEN = 0x2,
  FAIL_WRONG_NPC = 0x3,
  FAIL_ITEM_BUY = 0x4,
  FAIL_PUT_INVEN = 0x5,
  FAIL_FULL_INVEN = 0x6,
  FAIL_ENEMY_ITEM = 0x7,
  FAIL_GOLD_OVERFLOW = 0x8,
};

/*  473 */
enum PktTr::PktTrCmd
{
  TRC_BUY_WITH_GOLD = 0x0,
  TRC_BUY_WITH_MILEAGE = 0x1,
  TRC_SELL = 0x2,
  TRC_BUY_EQUIP = 0x3,
  TRC_BUY_WITH_SKILL_COUPON = 0x4,
};

/*  474 */
enum PktLotteryResult::PktLRErr
{
  FAIL_BLANK = 0x2,
};

/*  475 */
enum PktRpI::Pos
{
  EQUIPMENT = 0x1,
  INVENTORY = 0x2,
  EQUIPMENT_ALL = 0x3,
  INVENTORY_ALL = 0x4,
};

/*  476 */
enum Guild::GuildSort
{
  GUILD_FAME = 0x0,
  GUILD_NAME = 0x1,
  GUILD_HOSTILITY = 0x2,
  GUILD_NEUTRALITY = 0x3,
  GUILD_MINE = 0x4,
  GUILD_REQUEST = 0x5,
};

/*  477 */
enum Guild::MemberSort
{
  MEMBER_TITLE = 0x0,
  MEMBER_CLASS = 0x1,
  MEMBER_LEVEL = 0x2,
  MEMBER_FAME = 0x3,
  MEMBER_NAME = 0x4,
  MEMBER_GOLD = 0x5,
  MEMBER_POSITION = 0x6,
  MEMBER_JOIN_WAIT = 0x7,
  MEMBER_WAR_ON = 0x8,
  MEMBER_WAR_OFF = 0x9,
  TACTICS_JOIN_WAIT = 0xA,
  TACTICS_ACTIVE = 0xB,
};

/*  478 */
typedef Item::CEquipment::EQUIPMENT_ERROR Guild::ErrType;

/*  479 */
enum Guild::AddFameType
{
  TYPE_VALUE = 0x0,
  TYPE_HALF = 0x1,
  TYPE_QUARTER = 0x2,
};

/*  480 */
enum Guild::Relation
{
  NEUTRALITY = 0x0,
  HOSTILITY = 0x1,
  COUNTER_HOSTILITY = 0x2,
  ALERT_HOSTILITY = 0x3,
  MINE = 0x4,
  ALL_HOSTILITY = 0x5,
};

/*  481 */
enum Guild::TimeUpdateType
{
  LAST_LOGOUT = 0x0,
  MEMBER_NUM_DOWN = 0x1,
  MASTER_LOGOUT = 0x2,
};

/*  482 */
enum Guild::MemberType
{
  TYPE_MEMBER = 0x0,
  TYPE_TACTICS = 0x1,
};

/*  483 */
typedef PktBase::PktBaseErr PktTG::PktTGError;

/*  484 */
typedef PktDuC::DuelCmd PktTBInfo::DuelCmd;

/*  485 */
enum SphereConst::eViewState
{
  VS_INSIDE = 0x0,
  VS_PARTIAL = 0x1,
  VS_OUTSIDE = 0x2,
};

/*  486 */
typedef PktBase::PktBaseErr PktQSM::PktQSMError;

/*  487 */
enum Item::Attribute::Trend
{
  Aggressive = 0x1,
  Defensive = 0x2,
};

/*  488 */
enum Item::Attribute::CriticalType
{
  NONE_TYPE = 0x0,
  SWORD_TYPE = 0x1,
  AXE_TYPE = 0x2,
  BLUNT_TYPE = 0x3,
};

/*  489 */
enum Item::GiveItem::ExceptionUID
{
  PENDING_ITEM_UID = 0xFFFFFFFF,
};

/*  490 */
enum PktAutoRouting::PktARCmd
{
  ARC_ORDER = 0x0,
  ARC_POSSIBLE = 0x1,
  ARC_IMPOSSIBLE = 0x2,
};

/*  491 */
enum Broadcast2nd::DataFlag
{
  CHARDATA_CHANGED = 0x1,
};

/*  492 */
enum Broadcast2nd::DeltaInfo
{
  CHAR_DELTA_EQUIPMENT = 0x1,
  CHAR_DELTA_CHAR_NAME = 0x100,
  CHAR_DELTA_STALL_NAME = 0x200,
  CHAR_DELTA_GUILD_ID = 0x400,
  CHAR_DELTA_PARTY_ID = 0x800,
  CHAR_DELTA_FAME = 0x1000,
  CHAR_DELTA_BODYINFO = 0x2000,
  CHAR_DELTA_CLASS = 0x4000,
  CHAR_DELTA_LEVEL = 0x8000,
  CHAR_DELTA_ENCHANT_INFO = 0x10000,
  CHAR_DELTA_NETWORK_POS = 0x100000,
  CHAR_DELTA_HP = 0x200000,
  CHAR_DELTA_EQUIP_GRADE = 0x400000,
  CHAR_DELTA_WAR_FLAG = 0x800000,
  CHAR_DELTA_REALM_POINT = 0x1000000,
};

/*  493 */
enum Broadcast2nd::MonsterDelta
{
  MON_DELTA_ENCHANT_INFO = 0x1,
  MON_DELTA_NETWORK_POS = 0x10,
  MON_DELTA_HP = 0x20,
  MON_DELTA_MASTERCID = 0x40,
};

/*  494 */
typedef GAMELOG::sStallOpenCloseLog::__unnamed Broadcast2nd::StallNode::__unnamed;

/*  495 */
enum PktBGRsAck::PktBGRsAckErr
{
  FAIL_PERSONNEL_OVER = 0x2,
};

/*  496 */
enum PktPeace::PktPeaceErr
{
  FAIL_WRONG_SYNC = 0x2,
  FAIL_BATTLE_GROUND = 0x3,
  FAIL_GUILD_MEMBER = 0x4,
};

/*  497 */
typedef CMonsterShout::Behavior PktDeadInfo::TypeCode;

/*  498 */
typedef PktIRSAck::__unnamed PktIRS::__unnamed;

/*  499 */
typedef CCMDDropItem::__unnamed PktFriendAddReq::__unnamed;

/*  500 */
enum PktFriendAddReq::CMD
{
  ADD_FRIEND_REQ = 0x0,
  BAN_FRIEND_REQ = 0x1,
  ADDED_INFO = 0x2,
};

/*  501 */
typedef PktBase::PktBaseErr PktDuC::PktDuCError;

/*  502 */
enum PktSummonCmd::SummonCmd
{
  SUC_ATTACK = 0x0,
  SUC_RETURN = 0x1,
  SUC_DIE = 0x2,
  SUC_GUARD_ON = 0x3,
  SUC_GUARD_OFF = 0x4,
};

/*  503 */
enum PktExC::ExchageCmd
{
  EXC_PROPOSE = 0x0,
  EXC_ACCEPT = 0x1,
  EXC_REFUSE = 0x2,
  EXC_OK = 0x3,
  EXC_CANCEL = 0x4,
  EXC_EXCHANGE = 0x5,
  EXC_QUIT = 0x6,
  EXC_LOCK = 0x7,
  EXC_UNLOCK = 0x8,
};

/*  504 */
enum PktExC::PktExCError
{
  FAIL_EXCHANGING_CHAR = 0x2,
  FAIL_NOT_ALL_OK = 0x3,
  FAIL_REJECT = 0x4,
  FAIL_EXCHANGING_ID = 0x5,
};

/*  505 */
typedef PktBase::PktBaseErr PktTIs::PktTlsError;

/*  506 */
enum ChatData::DeltaInfo
{
  DELTA_NAME = 0x1,
  DELTA_PID = 0x2,
  DELTA_GID = 0x4,
  DELTA_CASTLEID = 0x8,
  DELTA_SIEGESTATE = 0x10,
  DELTA_NATION = 0x20,
  DELTA_ETCFLAGS = 0x40,
  DELTA_REJECTOPTION = 0x80,
  DELTA_ADMINLEVEL = 0x100,
  DELTA_ACCOUNTNAME = 0x200,
  DELTA_CREATURETYPE = 0x400,
  DELTA_OBJECTTYPE = 0x800,
  DELTA_KID = 0x1000,
  DELTA_WARFLAG = 0x2000,
};

/*  507 */
enum PktFriendRemoveReq::CMD
{
  REMOVE_FRIEND_REQ = 0x0,
  REMOVE_BAN_REQ = 0x1,
};

/*  508 */
typedef CCMDDropItem::__unnamed DBFriend::__unnamed;

/*  509 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0>::__unnamed;

/*  510 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::_Redbl;

/*  511 */
enum CAcolyteMonster::Distance
{
  NEAR_DIST_TO_TARGET = 0xA,
  FAR_DIST_TO_TARGET = 0xF,
};

/*  512 */
typedef CAcolyteMonster::Distance CMageMonster::Distance;

/*  513 */
enum eDataType
{
  T_VOID = 0x0,
  T_BOOL = 0x1,
  T_INT = 0x2,
  T_FLOAT = 0x3,
  T_STRING = 0x4,
};

/*  514 */
typedef MonsterInfo::MonsterPattern CDefenderMonster::SkillAttack::__l11::__unnamed;

/*  515 */
typedef MonsterInfo::MonsterPattern CWarriorMonster::SkillAttack::__l11::__unnamed;

/*  516 */
typedef MonsterInfo::MonsterPattern CAcolyteMonster::SkillAttack::__l11::__unnamed;

/*  517 */
typedef MonsterInfo::MonsterPattern CChiefMonster::SkillAttack::__l11::__unnamed;

/*  518 */
typedef MonsterInfo::MonsterPattern CNamedMonster::SkillAttack::__l10::__unnamed;

/*  519 */
typedef MonsterInfo::MonsterPattern CGuardMonster::SkillAttack::__l11::__unnamed;

/*  520 */
typedef MonsterInfo::MonsterPattern CMageMonster::SkillAttack::__l11::__unnamed;

/*  521 */
typedef MonsterInfo::MonsterPattern CBossMonster::SkillAttack::__l11::__unnamed;

/*  522 */
enum NPC::NPCFlag
{
  BELONG_TO_CASTLE = 0x1,
  REPAIRABLE = 0x2,
  BLACK_MARKETEER = 0x4,
  MUST_SELL_WITH_MILEAGE = 0x8,
  MUST_SELL_WITH_SKILLCOUPON = 0x10,
  DISPLAY_EQUIP = 0x20,
};

/*  523 */
enum BroadCastSiege::SiegeDeltaInfo
{
  DELTA_OWNERSHIP = 0x1,
  DELTA_STATE = 0x2,
  DELTA_HP = 0x4,
  DELTA_POS = 0x8,
  DELTA_MATERIAL = 0x10,
  DELTA_RIDER = 0x20,
};

/*  524 */
typedef GameRYL::GameContents PktCampCmd::SubCmd;

/*  525 */
enum PktCampCmd::Error
{
  FAIL_NOT_EXIST_GUILD = 0x2,
  FAIL_NOT_EXIST_CAMP = 0x3,
  FAIL_NOT_CAMP = 0x4,
  FAIL_CAMP_STATE = 0x5,
  FAIL_DIFFERENT_GUILD = 0x6,
  FAIL_NOT_MASTER = 0x7,
  FAIL_CAMP_RIGHT = 0x8,
  FAIL_NOT_ENOUGH_MATERIAL = 0x9,
  FAIL_DIFFERENT_GOLD = 0xA,
  FAIL_NOT_ENOUGH_GOLD = 0xB,
  FAIL_NOT_MINING_CAMP = 0xC,
  FAIL_NOT_COMPLETE_STATE = 0xD,
  FAIL_NOW_MINING = 0xE,
  FAIL_UPGRADE_STEP = 0xF,
  FAIL_NOT_ENOUGH_MINERAL = 0x10,
  FAIL_NOT_CAMP_SHOP = 0x11,
  FAIL_NOT_ZERO_CUSTOMER = 0x12,
  FAIL_TOO_MANY_TAX = 0x13,
  FAIL_NOT_WORLDWEAPON = 0x14,
  FAIL_NOT_EMPTY_WEAPON = 0x15,
  FAIL_NOT_READY_WEAPON = 0x16,
  FAIL_NOW_CHARGING = 0x17,
  FAIL_NOW_FIRING = 0x18,
  FAIL_MAX_UPGRADE = 0x19,
  FAIL_HAS_MINERAL = 0x1A,
  FAIL_HAS_ITEM = 0x1B,
};

/*  526 */
typedef PktCampCmd::Error PktCampRight::eError;

/*  527 */
enum Castle::CCastleBlessMgr::Const
{
  MAX_BLESS_INFO_NUM = 0x6,
};

/*  528 */
enum PktGuildPosition::PktErr
{
  FAIL_GUILD = 0x1,
  FAIL_CONNECT_CHAR = 0x2,
  FAIL_DB_UPDATE = 0x3,
  FAIL_MEMBER_DELETE = 0x4,
};

/*  529 */
enum PktGuildPosition::Const
{
  TYPE_POSITION = 0x0,
  TYPE_MEMBERDELETE = 0x1,
};

/*  530 */
enum PktSiegeArmsCmd::SubCmd
{
  SIEGE_NO_CMD = 0x0,
  SIEGE_CREATE_ARMS = 0x1,
  SIEGE_CREATE_ARMS_COMPLETE = 0x2,
  SIEGE_CANCEL = 0x3,
  SIEGE_RIDE_ARMS = 0x4,
  SIEGE_GETOFF_ARMS = 0x5,
  SIEGE_REPAIR_ARMS = 0x6,
  SIEGE_REPAIR_ARMS_COMPLETE = 0x7,
  SIEGE_TO_STARTKIT = 0x8,
  SIEGE_TO_STARTKIT_COMPLETE = 0x9,
  SIEGE_DESTROY_ARMS = 0xA,
  SIEGE_UPDATE_HP = 0xC,
};

/*  531 */
typedef PktCampCmd::Error PktSiegeArmsCmd::Error;

/*  532 */
enum PktGuildInclination::PktGIErr
{
  FAIL_SO_FAST = 0x2,
  FAIL_WRONG_NATION_KARTERANT = 0x3,
  FAIL_WRONG_NATION_MERKADIA = 0x4,
};

/*  533 */
typedef PktBase::PktBaseErr PktPMD::PktPMDErr;

/*  534 */
enum PktTakeCastleJewel::SubCmd
{
  SC_TAKE_IN = 0x1,
  SC_TAKE_OUT = 0x2,
};

/*  535 */
enum PktTakeCastleJewel::eError
{
  FAIL_NOT_EXIST_CASTLE = 0x2,
  FAIL_NOT_EXIST_EMBLEM = 0x3,
  FAIL_WRONG_JEWEL = 0x4,
  FAIL_DIFFERENT_JEWEL = 0x5,
  FAIL_NOT_EXIST_ITEM_PROTOTYPE = 0x6,
  FAIL_OVER_STACK = 0x7,
  FAIL_NOT_EXIST_ITEM = 0x8,
  FAIL_ITEM_NUMBER = 0x9,
  FAIL_CREATE_ITEM = 0xA,
};

/*  536 */
typedef PktBase::PktBaseErr PktPC::PktPCError;

/*  537 */
enum PktCreateGuild::PktCreateGuildErr
{
  FAIL_ALREADY_NAME = 0x2,
  FAIL_DISSOLVE_GUILD = 0x3,
  FAIL_INVALID_NAME = 0x4,
};

/*  538 */
enum PktCreateGuild::DissolveReason
{
  NONE_LOGIN = 0x1,
  MIN_MEMBER_TIMEOUT = 0x2,
  NONE_NEXT_GUILDMASTER_BY_NONE_LOGIN = 0x3,
  NONE_NEXT_GUILDMASTER_BY_GUILDMASTER_OUT = 0x4,
  NONE_NEXT_GUILDMASTER_BY_GUILDMASTER_DELETED = 0x5,
};

/*  539 */
enum PktProcessMining::__unnamed
{
  TEMPORARY_PROCESS = 0x1,
  ACCUMULATED_PROCESS = 0x2,
};

/*  540 */
typedef PktCampCmd::Error PktCastleRight::eError;

/*  541 */
enum PktWarOnOff::Error
{
  E_WAR_OFF = 0x2,
  E_WAR_ON = 0x3,
  E_WAR_INSTANCE = 0x4,
  E_INVALID_TYPE = 0x5,
};

/*  542 */
enum PktRealmPoint::__unnamed
{
  REALM_JOIN = 0x1,
  REALM_OUT = 0x2,
};

/*  543 */
enum PktChat::ERR
{
  SHOUT_TIMEOUT = 0x2,
  CHAT_BAN = 0x3,
};

/*  544 */
typedef PktTakeCastleJewel::SubCmd PktTakeMaterial::SubCmd;

/*  545 */
typedef PktTakeCastleJewel::eError PktTakeMaterial::eError;

/*  546 */
enum PktGuildCmd::GuildCmd
{
  GC_INVITE = 0x0,
  GC_JOIN = 0x1,
  GC_REFUSE = 0x2,
  GC_ASK_ENTER = 0x3,
  GC_ASK_LEAVE = 0x4,
  GC_KICK = 0x5,
  GC_SETUP_TITLE = 0x6,
  GC_LOGINOUT = 0x7,
  GC_RANK_UP = 0x8,
  GC_RANK_DOWN = 0x9,
  GC_TACTICS = 0xA,
  GC_TACTICS_JOIN = 0xB,
  GC_TACTICS_TITLE = 0xC,
  GC_TACTICS_KICK = 0xD,
  GC_TACTICS_LEAVE = 0xE,
  GC_TACTICS_REQUEST = 0xF,
};

/*  547 */
enum PktGuildCmd::PktGuildCmdErr
{
  FAIL_NOT_MEMBER = 0x2,
  FAIL_NOT_RIGHT = 0x3,
  FAIL_ALREADY_MEMBER = 0x4,
  FAIL_OVER_MEMBER = 0x5,
  FAIL_NATION = 0x6,
  FAIL_DIFFERENCE_TITLE = 0x7,
  FAIL_OVER_MEMBER_NUM = 0x8,
  FAIL_GUILDWAR_TIME_KICK = 0x9,
  FAIL_TACTICS_LIMITLEVEL = 0xA,
  FAIL_TACTICS_NATION = 0xB,
  FAIL_TACTICS_GUILDJOIN = 0xC,
  FAIL_TACTICS_OVER_MEMBER = 0xD,
  FAIL_TACTICS_LOGOUT = 0xE,
};

/*  548 */
enum PktCastleCmd::SubCmd
{
  CASTLE_NO_CMD = 0x0,
  CASTLE_SET_TAX = 0x1,
  CASTLE_UPGRADE_EMBLEM = 0x3,
  CASTLE_UPGRADE_EMBLEM_COMPLETE = 0x4,
  CASTLE_UPGRADE_ITEM_INFO = 0x5,
  CASTLE_UPDATE_EMBLEM = 0x6,
  CASTLE_SUMMON_EMBLEM_COMPLETE = 0x7,
  CASTLE_CHANGE_MASTER = 0x8,
  CASTLE_TAKE_TAXMONEY = 0x9,
  CASTLE_LOSE_OWNERSHIP = 0xA,
  CASTLE_SHOW_MINERAL = 0xB,
  CASTLE_GAIN_MINERAL = 0xC,
  CASTLE_GATE_OPEN = 0xD,
  CASTLE_GATE_CLOSE = 0xE,
  CASTLE_GATE_PROTECT = 0xF,
  CASTLE_GATE_PROTECT_CANCEL = 0x10,
  CASTLE_GATE_PROTECT_INFO = 0x11,
  CASTLE_UPGRADE_GATE = 0x12,
  CASTLE_UPGRADE_GATE_COMPLETE = 0x13,
  CASTLE_REPAIR_GATE = 0x14,
  CASTLE_REPAIR_GATE_COMPLETE = 0x15,
  CASTLE_RESTORE_GATE = 0x16,
  CASTLE_RESTORE_GATE_COMPLETE = 0x17,
  CASTLE_DESTROY_GATE = 0x18,
  CASTLE_BACKDOOR = 0x19,
  CASTLE_CREATE_ARMS = 0x1A,
  CASTLE_CREATE_ARMS_COMPLETE = 0x1B,
  CASTLE_RIDE_ARMS = 0x1C,
  CASTLE_GETOFF_ARMS = 0x1D,
  CASTLE_UPGRADE_ARMS = 0x1E,
  CASTLE_UPGRADE_ARMS_COMPLETE = 0x1F,
  CASTLE_REPAIR_ARMS = 0x20,
  CASTLE_REPAIR_ARMS_COMPLETE = 0x21,
  CASTLE_DESTROY_ARMS = 0x22,
  CASTLE_ARMS_CHANGE_MASTER = 0x23,
  CASTLE_UPDATE_HP = 0x24,
};

/*  549 */
enum PktCastleCmd::Const
{
  DESTROY = 0x0,
  TO_NPC = 0x1,
};

/*  550 */
typedef PktTakeCastleJewel::eError PktCastleCmd::Error;

/*  551 */
typedef PktExC::PktExCError PktWh::__unnamed;

/*  552 */
enum BroadCastSiege::BroadCastType
{
  BROADCAST_ALL_DATA = 0x1,
  BROADCAST_DELTA_DATA = 0x2,
};

/*  553 */
enum PktGuildHostilityList::__unnamed
{
  MAX_NUM_PER_PAGE = 0x5,
};

/*  554 */
enum PktGuildHostilityList::PageState
{
  PAGE_CURRENT = 0x0,
  PAGE_PREV = 0x1,
  PAGE_NEXT = 0x2,
};

/*  555 */
typedef PktGuildHostilityList::__unnamed PktGuildMemberList::__unnamed;

/*  556 */
typedef CHAR_INFOST::__unnamed PktCampMessage::__unnamed;

/*  557 */
enum CampShopInfoDB::__unnamed
{
  MAX_CONTAINER_SIZE = 0x1F3B,
};

/*  558 */
enum PktGuildRelation::eSubCmd
{
  GR_HOSTILITY = 0x0,
  GR_PEACE = 0x1,
  GR_ALERT = 0x2,
  GR_COUNTER = 0x3,
  GR_REQUEST = 0x4,
};

/*  559 */
typedef PktGuildCmd::PktGuildCmdErr PktGuildRelation::eError;

/*  560 */
enum PktPFAck::__unnamed
{
  MAX_LIST = 0x1E,
  MAX_DIFF_LEVEL_VIEW = 0xA,
};

/*  561 */
typedef PktGuildHostilityList::__unnamed PktGuildList::__unnamed;

/*  562 */
enum PktGuildSafe::PktGuildSafeErr
{
  FAIL_NOT_ENOUGH_MONEY = 0x2,
};

/*  563 */
enum PktGuildSafe::SafeCmd
{
  SC_WITHDRAWAL = 0x0,
  SC_DEPOSIT = 0x1,
  SC_RELEASE = 0x2,
  SC_REFER = 0x3,
  SC_CAMPSHOP = 0x4,
};

/*  564 */
typedef PktCampCmd::Error PktGuildMark::eError;

/*  565 */
typedef CHAR_INFOST::__unnamed PktFIAck::__unnamed;

/*  566 */
enum PktFIAck::FIAckCmd
{
  FAME_INFO = 0x0,
  FAME_LOSE_DUEL = 0x1,
  FAME_LOSE_CONTINUE = 0x2,
  FAME_LOSE = 0x3,
  FAME_LOSE_MEMBER = 0x4,
  FAME_WIN_DUEL = 0x5,
  FAME_WIN_LARGE_GAP = 0x6,
  FAME_WIN_CONTINUE = 0x7,
  FAME_WIN = 0x8,
  FAME_WIN_MEMBER_DUEL = 0x9,
  FAME_WIN_MEMBER_LARGE_GAP = 0xA,
  FAME_WIN_MEMBER_CONTINUE = 0xB,
  FAME_WIN_MEMBER = 0xC,
};

/*  567 */
enum PktCreateCamp::Error
{
  ERROR_EXIST_ANOTHER_WEAPON = 0x2,
};

/*  568 */
enum PktAP::PktAPCmd
{
  AP_RESURRECTION = 0x1,
  AP_RECALL = 0x2,
};

/*  569 */
enum Castle::CastleTitle
{
  TITLE_NEW = 0x0,
  TITLE_SETTLED = 0x1,
  TITLE_FLOURISHED = 0x2,
  TITLE_HONORABLE = 0x3,
  TITLE_GLORIOUS = 0x4,
  MAX_TITLE_NUM = 0x5,
};

/*  570 */
enum Castle::CastleName
{
  TEMP_CASTLE_NAME_0 = 0x0,
  TEMP_CASTLE_NAME_1 = 0x1,
  TEMP_CASTLE_NAME_2 = 0x2,
  TEMP_CASTLE_NAME_3 = 0x3,
  TEMP_CASTLE_NAME_4 = 0x4,
  MAX_CASTLE_NAME_NUM = 0x5,
  MAX_CASTLE_NAME_LEN = 0x20,
};

/*  571 */
typedef QUICKSLOT::Type Castle::Type;

/*  572 */
enum Castle::TaxChangable
{
  TAX_DISABLE = 0x0,
  TAX_ENABLE = 0x1,
};

/*  573 */
typedef Siege::CampConst Castle::MineralType;

/*  574 */
typedef MonsterInfo::MonsterPattern CSiegeObject::SkillAttack::__l5::__unnamed;

/*  575 */
typedef Guild::Const GAMELOG::sGuildLog::__unnamed;

/*  576 */
enum GAMELOG::sTakeGoldLogV2::Purpose
{
  MOVE_GOLD = 0x0,
  STORE_USE = 0x1,
  BUY_STORE_TAB = 0x2,
  USE_CASHBAG = 0x3,
  QUEST_AWARD = 0x4,
  QUEST_DEDUCT = 0x5,
  ADMIN_GIVEGOLD = 0x6,
  BATTLE_DEPOSIT = 0x7,
  STATE_REDISTRIBUTE = 0x8,
  STARTERKIT_AWARD = 0x9,
};

/*  577 */
typedef DBUpdateData::UpdateType Broadcast2nd::PktBroadcast::BroadcastType;

/*  578 */
enum Broadcast2nd::PktBroadcast::DataType
{
  CHAR_DATA = 0x0,
  CHAR_CID = 0x1,
  ITEM_DATA = 0x2,
  NONE_DATA = 0x3,
};

/*  579 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1>::__unnamed;

/*  580 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::_Redbl;

/*  581 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::_Redbl;

/*  582 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0>::__unnamed;

/*  583 */
enum VirtualArea::MoveType
{
  TYPE_PLAYER = 0x0,
  TYPE_SPECTATOR = 0x1,
  MAX_ENTER_TYPE = 0x2,
};

/*  584 */
enum VirtualArea::Score
{
  FRAG_SCORE = 0x1,
  HOSTILITY_STATUE_SCORE = 0x0,
  NEUTRALITY_STATUE_SCORE = 0x0,
  FRIENDLY_STATUE_SCORE = 0x2,
  FRIENDLY_LOADING_STATUE_SCORE = 0x1,
};

/*  585 */
enum PktBGServerMapList::Const
{
  MAX_MAP_NUM = 0xA,
};

/*  586 */
typedef PktBGServerMapList::Const PktBGServerResultList::Const;

/*  587 */
typedef VirtualArea::MapType BGServerMapInfoNode::MapType;

/*  588 */
typedef QUICKSLOT::Type VirtualArea::CBGServerMap::InitializeGameObject::__l12::__unnamed;

/*  589 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Redbl;

/*  590 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>::__unnamed;

/*  591 */
enum PktAdminCommandLog::Const
{
  MAX_COMMAND_SIZE = 0x80,
};

/*  592 */
typedef CHAR_INFOST::__unnamed PktAdmin::__unnamed;

/*  593 */
typedef QUICKSLOT::Type PktAdmin::CMD;

/*  594 */
enum PktAdmin::eError
{
  E_LOGOUT_CHAR = 0x2,
};

/*  595 */
typedef MACRO_TTFMFP PktCharNameChange::Error;

/*  596 */
typedef VirtualArea::MoveType PktBGServerMoveZone::MoveType;

/*  597 */
enum PktBGServerMoveZone::Error
{
  FAIL_FULL_MAP = 0x2,
  FAIL_FIX_RATE = 0x3,
};

/*  598 */
enum PktBGServerMileageChange::PktBGSMCCmd
{
  MC_REQUEST = 0x0,
  MC_INFO = 0x1,
  MC_CHANGE = 0x2,
  MC_RESULT = 0x3,
};

/*  599 */
typedef PktBase::PktBaseErr PktBGServerMileageChange::PktErr;

/*  600 */
typedef PktGuildHostilityList::__unnamed PktRankingInfo::Const;

/*  601 */
enum PktRankingInfo::PktRankingInfoErr
{
  FAIL_INVALID_PAGE = 0x2,
};

/*  602 */
enum PktBP::PktBPCmd
{
  BP_SAVE_POSITION = 0x0,
  BP_WARP = 0x1,
  BP_RECALL = 0x2,
};

/*  603 */
enum CRankingMgr::Const
{
  MAX_DECLARE_RANK_NUM = 0x64,
};

/*  604 */
typedef CCMDDropItem::__unnamed RankingNode::__unnamed;

/*  605 */
enum PktOperateTrigger::PktOperateTriggerError
{
  FAIL_WRONG_QUEST = 0x2,
  FAIL_WRONG_PHASE = 0x3,
  FAIL_WRONG_TRIGGER = 0x4,
  FAIL_EVENT_ERROR = 0x5,
  FAIL_EVENT_GET_ERROR = 0x6,
};

/*  606 */
enum PktCancelQuest::PktOperateTriggerError
{
  FAIL_NOT_HAVE_QUEST = 0x2,
  FAIL_DISABLE_CANCEL = 0x3,
};

/*  607 */
typedef PktCancelQuest::PktOperateTriggerError PktStartQuest::PktStartQuestError;

/*  608 */
enum PktSk::PktSkError
{
  FAIL_NOT_SKILL = 0x2,
  FAIL_ERASE_CLASS_SKILL = 0x5,
  FAIL_MAX_LEVEL = 0x2,
  FAIL_NOT_CURRENT_LOCK_COUNT = 0x3,
  FAIL_NOT_ENOUGH_SLOT = 0x4,
  FAIL_NOT_CURRENT_CLASS = 0x5,
  FAIL_NOT_ENOUGH_STATUS = 0x6,
  FAIL_NOT_ENOUGH_SKILL_POINT = 0x7,
  FAIL_NON_LEVEL = 0x3,
  FAIL_ALREADY_LOCK = 0x4,
  FAIL_FULL_LOCK = 0x3,
  FAIL_NOT_ENOUGH_LEVEL = 0x4,
  FAIL_NON_LOCK = 0x3,
};

/*  609 */
enum PktConfigInfo::__unnamed
{
  MAX_BUFFER_SIZE = 0x32,
};

/*  610 */
typedef PktCampCmd::Error PktSRTAck::PktSRTAckErr;

/*  611 */
enum PktSRTAck::Const
{
  MAX_STATUS_RETRAIN = 0x4,
};

/*  612 */
enum PktSRAck::PktSRAckErr
{
  FAIL_NO_CHANCE = 0x2,
};

/*  613 */
enum PktCLiAck::__unnamed
{
  MAX_ADDRESS_LEN = 0x10,
};

/*  614 */
typedef SERVER_ID::Channel PktSZMvAck::__unnamed;

/*  615 */
typedef Quest::Const PktQuestDB::Const;

/*  616 */
enum GameTime::RealmTime
{
  RT_NORMAL = 0x0,
  RT_PREPARE_START_30 = 0x1,
  RT_PREPARE_START_15 = 0x2,
  RT_PREPARE_START_10 = 0x3,
  RT_PREPARE_START_5 = 0x4,
  RT_REALM_WAR = 0x5,
};

/*  617 */
enum GameTime::GameTimeInfoType
{
  TYPE_GAMESERVER_LOGIN = 0x0,
  TYPE_CHARACTER_LOGIN = 0x1,
  TYPE_CHANGE_GAME_TIME = 0x2,
  TYPE_ENABLE_CASTLE_SIEGE = 0x3,
  TYPE_UPDATE_TIME = 0x4,
};

/*  618 */
enum $DD71A8652E4CF507CBECB1D61E4F218A
{
  MAX_DBAGENT_PACKET_DISPATCH_PER_PULSE = 0xC8,
};

/*  619 */
enum PktGiveItemToTempInven::Const
{
  MAX_GIVE_ITEM = 0xA,
};

/*  620 */
typedef RylServerInfo::__unnamed PktSLAck::__unnamed;

/*  621 */
typedef SERVER_ID::Channel PktSCInfo::__unnamed;

/*  622 */
typedef PktBase::PktBaseErr PktSAAck::PktSAAckErr;

/*  623 */
typedef SERVER_ID::Channel PktSZMvDAck::__unnamed;

/*  624 */
typedef PktBGRsAck::PktBGRsAckErr PktSZMvDAck::PktSZMvDAckErr;

/*  625 */
typedef RylServerInfo::__unnamed PktSVU::__unnamed;

/*  626 */
enum PktAdminToolSetData::SetDataType
{
  CHAR_BASIC_DATA = 0xA,
  CHAR_EXTRA_DATA = 0xB,
  CHAR_FRIEND_DATA = 0xC,
  CHAR_BAN_DATA = 0xD,
  STORE_12_DATA = 0xE,
  STORE_34_DATA = 0xF,
  OPEN_UPDATE_DATA = 0x14,
  FINISH_UPDATE_DATA = 0x15,
  RELOAD_ADMINLIST = 0x1E,
};

/*  627 */
enum PktAdminToolSetData::SetError
{
  UNKNOWN_ERROR = 0x1,
  INVALID_UID_CID_ERROR = 0x2,
  LOGIN_ANOTHER_GAMESERVER = 0x3,
  SESSION_OPEN_FAILED = 0x4,
  ALREADY_LOGIN_USER_SESSION_OPEN = 0x5,
  ANOTHER_CHAR_LOAD_FAILED = 0x6,
  SETTING_DATA_FAILED = 0x7,
  SESSION_START_FAILED = 0x8,
};

/*  628 */
typedef PktAdminToolSetData::SetDataType PktAdminToolGetData::GetDataType;

/*  629 */
typedef PktAdminToolSetData::SetError PktAdminToolGetData::GetError;

/*  630 */
enum PktBGServerCharSlotAck::PktCharSlotAckErr
{
  FAIL_NOT_USER = 0x2,
  FAIL_NOT_CHAR = 0x3,
};

/*  631 */
typedef LOG_TYPE GAMELOG::CMD::LogType;

/*  632 */
typedef Item::EquipmentInfo::__unnamed GAMELOG::PACKET::__unnamed;

/*  633 */
enum GAMELOG::CMD::Packet
{
  DefaultInfo = 0x1,
  ItemInfo = 0x2,
  EquipInfo = 0x3,
};

/*  634 */
typedef std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Redbl std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Redbl;

/*  635 */
typedef std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>::__unnamed std::_Tset_traits<int,std::less<int>,std::allocator<int>,0>::__unnamed;

/*  636 */
enum GameTime::Week
{
  WEEK_NONE = 0x0,
  SUNDAY = 0x1,
  MONDAY = 0x2,
  TUESDAY = 0x3,
  WEDNESDAY = 0x4,
  THURSDAY = 0x5,
  FRIDAY = 0x6,
  SATURDAY = 0x7,
};

/*  637 */
enum GameTime::SiegeTime
{
  ST_NORMAL = 0x0,
  ST_SIEGE_WAR = 0x1,
};

/*  638 */
enum GameTime::Cycle
{
  CYCLE_NONE = 0x0,
  WEEKLY = 0x1,
  DAILY = 0x2,
  MONTHLY = 0x3,
  DATE = 0x4,
  MAX_TIME_CYCLE_TYPE = 0x5,
};

/*  639 */
enum GameTime::MiningTime
{
  MT_NORMAL = 0x0,
  MT_MINING = 0x1,
};

/*  640 */
enum SERVER_LIST::__unnamed
{
  SERVER_NUM = 0xA,
};

/*  641 */
enum SERVER_GROUP::__unnamed
{
  CHANNEL_NUM = 0x2,
  SERVER_NAME = 0xF,
};

/*  642 */
enum PCCheckAgreement::__unnamed
{
  ID_LEN = 0x10,
};

/*  643 */
typedef PCCheckAgreement::__unnamed GamaGetUIDByAccount::__unnamed;

/*  644 */
typedef PCCheckAgreement::__unnamed HanLoginData::__unnamed;

/*  645 */
typedef PCCheckAgreement::__unnamed GamaLoginData::__unnamed;

/*  646 */
typedef PCCheckAgreement::__unnamed GamaGetAccountByUID::__unnamed;

/*  647 */
enum inflate_block_mode
{
  TYPE = 0x0,
  LENS = 0x1,
  STORED = 0x2,
  TABLE = 0x3,
  BTREE = 0x4,
  DTREE = 0x5,
  CODES = 0x6,
  DRY = 0x7,
  DONE = 0x8,
  BAD = 0x9,
};

/*  648 */
typedef inflate_block_mode inflate_mode;

/*  649 */
enum inflate_codes_mode
{
  START = 0x0,
  LEN = 0x1,
  LENEXT = 0x2,
  DIST = 0x3,
  DISTEXT = 0x4,
  COPY = 0x5,
  LIT = 0x6,
  WASH = 0x7,
  END = 0x8,
  BADCODE = 0x9,
};

/*  650 */
enum block_state
{
  need_more = 0x0,
  block_done = 0x1,
  finish_started = 0x2,
  finish_done = 0x3,
};

/*  651 */
typedef std::ctype_base::__unnamed std::money_base::__unnamed;

/*  652 */
enum std::time_base::dateorder
{
  no_order = 0x0,
  dmy = 0x1,
  mdy = 0x2,
  ymd = 0x3,
  ydm = 0x4,
};

/*  653 */
enum _FPIEEE_FORMAT
{
  _FpFormatFp32 = 0x0,
  _FpFormatFp64 = 0x1,
  _FpFormatFp80 = 0x2,
  _FpFormatFp128 = 0x3,
  _FpFormatI16 = 0x4,
  _FpFormatI32 = 0x5,
  _FpFormatI64 = 0x6,
  _FpFormatU16 = 0x7,
  _FpFormatU32 = 0x8,
  _FpFormatU64 = 0x9,
  _FpFormatBcd80 = 0xA,
  _FpFormatCompare = 0xB,
  _FpFormatString = 0xC,
};

/*  654 */
enum _FP_OPERATION_CODE
{
  _FpCodeUnspecified = 0x0,
  _FpCodeAdd = 0x1,
  _FpCodeSubtract = 0x2,
  _FpCodeMultiply = 0x3,
  _FpCodeDivide = 0x4,
  _FpCodeSquareRoot = 0x5,
  _FpCodeRemainder = 0x6,
  _FpCodeCompare = 0x7,
  _FpCodeConvert = 0x8,
  _FpCodeRound = 0x9,
  _FpCodeTruncate = 0xA,
  _FpCodeFloor = 0xB,
  _FpCodeCeil = 0xC,
  _FpCodeAcos = 0xD,
  _FpCodeAsin = 0xE,
  _FpCodeAtan = 0xF,
  _FpCodeAtan2 = 0x10,
  _FpCodeCabs = 0x11,
  _FpCodeCos = 0x12,
  _FpCodeCosh = 0x13,
  _FpCodeExp = 0x14,
  _FpCodeFabs = 0x15,
  _FpCodeFmod = 0x16,
  _FpCodeFrexp = 0x17,
  _FpCodeHypot = 0x18,
  _FpCodeLdexp = 0x19,
  _FpCodeLog = 0x1A,
  _FpCodeLog10 = 0x1B,
  _FpCodeModf = 0x1C,
  _FpCodePow = 0x1D,
  _FpCodeSin = 0x1E,
  _FpCodeSinh = 0x1F,
  _FpCodeTan = 0x20,
  _FpCodeTanh = 0x21,
  _FpCodeY0 = 0x22,
  _FpCodeY1 = 0x23,
  _FpCodeYn = 0x24,
  _FpCodeLogb = 0x25,
  _FpCodeNextafter = 0x26,
  _FpCodeNegate = 0x27,
  _FpCodeFmin = 0x28,
  _FpCodeFmax = 0x29,
  _FpCodeConvertTrunc = 0x2A,
  _XMMIAddps = 0x2B,
  _XMMIAddss = 0x2C,
  _XMMISubps = 0x2D,
  _XMMISubss = 0x2E,
  _XMMIMulps = 0x2F,
  _XMMIMulss = 0x30,
  _XMMIDivps = 0x31,
  _XMMIDivss = 0x32,
  _XMMISqrtps = 0x33,
  _XMMISqrtss = 0x34,
  _XMMIMaxps = 0x35,
  _XMMIMaxss = 0x36,
  _XMMIMinps = 0x37,
  _XMMIMinss = 0x38,
  _XMMICmpps = 0x39,
  _XMMICmpss = 0x3A,
  _XMMIComiss = 0x3B,
  _XMMIUComiss = 0x3C,
  _XMMICvtpi2ps = 0x3D,
  _XMMICvtsi2ss = 0x3E,
  _XMMICvtps2pi = 0x3F,
  _XMMICvtss2si = 0x40,
  _XMMICvttps2pi = 0x41,
  _XMMICvttss2si = 0x42,
  _XMMI2Addpd = 0x43,
  _XMMI2Addsd = 0x44,
  _XMMI2Subpd = 0x45,
  _XMMI2Subsd = 0x46,
  _XMMI2Mulpd = 0x47,
  _XMMI2Mulsd = 0x48,
  _XMMI2Divpd = 0x49,
  _XMMI2Divsd = 0x4A,
  _XMMI2Sqrtpd = 0x4B,
  _XMMI2Sqrtsd = 0x4C,
  _XMMI2Maxpd = 0x4D,
  _XMMI2Maxsd = 0x4E,
  _XMMI2Minpd = 0x4F,
  _XMMI2Minsd = 0x50,
  _XMMI2Cmppd = 0x51,
  _XMMI2Cmpsd = 0x52,
  _XMMI2Comisd = 0x53,
  _XMMI2UComisd = 0x54,
  _XMMI2Cvtpd2pi = 0x55,
  _XMMI2Cvtsd2si = 0x56,
  _XMMI2Cvttpd2pi = 0x57,
  _XMMI2Cvttsd2si = 0x58,
  _XMMI2Cvtps2pd = 0x59,
  _XMMI2Cvtss2sd = 0x5A,
  _XMMI2Cvtpd2ps = 0x5B,
  _XMMI2Cvtsd2ss = 0x5C,
  _XMMI2Cvtdq2ps = 0x5D,
  _XMMI2Cvttps2dq = 0x5E,
  _XMMI2Cvtps2dq = 0x5F,
  _XMMI2Cvttpd2dq = 0x60,
  _XMMI2Cvtpd2dq = 0x61,
};

/*  655 */
enum _FPIEEE_ROUNDING_MODE
{
  _FpRoundNearest = 0x0,
  _FpRoundMinusInfinity = 0x1,
  _FpRoundPlusInfinity = 0x2,
  _FpRoundChopped = 0x3,
};

/*  656 */
enum _FPIEEE_PRECISION
{
  _FpPrecisionFull = 0x0,
  _FpPrecision53 = 0x1,
  _FpPrecision24 = 0x2,
};

/*  657 */
enum error_types
{
  logl_zero = 0x0,
  logl_negative = 0x1,
  log_zero = 0x2,
  log_negative = 0x3,
  logf_zero = 0x4,
  logf_negative = 0x5,
  log10l_zero = 0x6,
  log10l_negative = 0x7,
  log10_zero = 0x8,
  log10_negative = 0x9,
  log10f_zero = 0xA,
  log10f_negative = 0xB,
  expl_overflow = 0xC,
  expl_underflow = 0xD,
  exp_overflow = 0xE,
  exp_underflow = 0xF,
  expf_overflow = 0x10,
  expf_underflow = 0x11,
  powl_overflow = 0x12,
  powl_underflow = 0x13,
  powl_zero_to_zero = 0x14,
  powl_zero_to_negative = 0x15,
  powl_neg_to_non_integer = 0x16,
  powl_nan_to_zero = 0x17,
  pow_overflow = 0x18,
  pow_underflow = 0x19,
  pow_zero_to_zero = 0x1A,
  pow_zero_to_negative = 0x1B,
  pow_neg_to_non_integer = 0x1C,
  pow_nan_to_zero = 0x1D,
  powf_overflow = 0x1E,
  powf_underflow = 0x1F,
  powf_zero_to_zero = 0x20,
  powf_zero_to_negative = 0x21,
  powf_neg_to_non_integer = 0x22,
  powf_nan_to_zero = 0x23,
  atan2l_zero = 0x24,
  atan2_zero = 0x25,
  atan2f_zero = 0x26,
  expm1l_overflow = 0x27,
  expm1l_underflow = 0x28,
  expm1_overflow = 0x29,
  expm1_underflow = 0x2A,
  expm1f_overflow = 0x2B,
  expm1f_underflow = 0x2C,
  hypotl_overflow = 0x2D,
  hypot_overflow = 0x2E,
  hypotf_overflow = 0x2F,
  sqrtl_negative = 0x30,
  sqrt_negative = 0x31,
  sqrtf_negative = 0x32,
  scalbl_overflow = 0x33,
  scalbl_underflow = 0x34,
  scalb_overflow = 0x35,
  scalb_underflow = 0x36,
  scalbf_overflow = 0x37,
  scalbf_underflow = 0x38,
  acosl_gt_one = 0x39,
  acos_gt_one = 0x3A,
  acosf_gt_one = 0x3B,
  asinl_gt_one = 0x3C,
  asin_gt_one = 0x3D,
  asinf_gt_one = 0x3E,
  coshl_overflow = 0x3F,
  cosh_overflow = 0x40,
  coshf_overflow = 0x41,
  y0l_zero = 0x42,
  y0l_negative = 0x43,
  y0l_gt_loss = 0x44,
  y0_zero = 0x45,
  y0_negative = 0x46,
  y0_gt_loss = 0x47,
  y0f_zero = 0x48,
  y0f_negative = 0x49,
  y0f_gt_loss = 0x4A,
  y1l_zero = 0x4B,
  y1l_negative = 0x4C,
  y1l_gt_loss = 0x4D,
  y1_zero = 0x4E,
  y1_negative = 0x4F,
  y1_gt_loss = 0x50,
  y1f_zero = 0x51,
  y1f_negative = 0x52,
  y1f_gt_loss = 0x53,
  ynl_zero = 0x54,
  ynl_negative = 0x55,
  ynl_gt_loss = 0x56,
  yn_zero = 0x57,
  yn_negative = 0x58,
  yn_gt_loss = 0x59,
  ynf_zero = 0x5A,
  ynf_negative = 0x5B,
  ynf_gt_loss = 0x5C,
  j0l_gt_loss = 0x5D,
  j0_gt_loss = 0x5E,
  j0f_gt_loss = 0x5F,
  j1l_gt_loss = 0x60,
  j1_gt_loss = 0x61,
  j1f_gt_loss = 0x62,
  jnl_gt_loss = 0x63,
  jn_gt_loss = 0x64,
  jnf_gt_loss = 0x65,
  lgammal_overflow = 0x66,
  lgammal_negative = 0x67,
  lgammal_reserve = 0x68,
  lgamma_overflow = 0x69,
  lgamma_negative = 0x6A,
  lgamma_reserve = 0x6B,
  lgammaf_overflow = 0x6C,
  lgammaf_negative = 0x6D,
  lgammaf_reserve = 0x6E,
  gammal_overflow = 0x6F,
  gammal_negative = 0x70,
  gammal_reserve = 0x71,
  gamma_overflow = 0x72,
  gamma_negative = 0x73,
  gamma_reserve = 0x74,
  gammaf_overflow = 0x75,
  gammaf_negative = 0x76,
  gammaf_reserve = 0x77,
  fmodl_by_zero = 0x78,
  fmod_by_zero = 0x79,
  fmodf_by_zero = 0x7A,
  remainderl_by_zero = 0x7B,
  remainder_by_zero = 0x7C,
  remainderf_by_zero = 0x7D,
  sinhl_overflow = 0x7E,
  sinh_overflow = 0x7F,
  sinhf_overflow = 0x80,
  atanhl_gt_one = 0x81,
  atanhl_eq_one = 0x82,
  atanh_gt_one = 0x83,
  atanh_eq_one = 0x84,
  atanhf_gt_one = 0x85,
  atanhf_eq_one = 0x86,
  acoshl_lt_one = 0x87,
  acosh_lt_one = 0x88,
  acoshf_lt_one = 0x89,
  log1pl_zero = 0x8A,
  log1pl_negative = 0x8B,
  log1p_zero = 0x8C,
  log1p_negative = 0x8D,
  log1pf_zero = 0x8E,
  log1pf_negative = 0x8F,
  ldexpl_overflow = 0x90,
  ldexpl_underflow = 0x91,
  ldexp_overflow = 0x92,
  ldexp_underflow = 0x93,
  ldexpf_overflow = 0x94,
  ldexpf_underflow = 0x95,
  logbl_zero = 0x96,
  logb_zero = 0x97,
  logbf_zero = 0x98,
  nextafterl_overflow = 0x99,
  nextafter_overflow = 0x9A,
  nextafterf_overflow = 0x9B,
  ilogbl_zero = 0x9C,
  ilogb_zero = 0x9D,
  ilogbf_zero = 0x9E,
  exp2l_overflow = 0x9F,
  exp2l_underflow = 0xA0,
  exp2_overflow = 0xA1,
  exp2_underflow = 0xA2,
  exp2f_overflow = 0xA3,
  exp2f_underflow = 0xA4,
  exp10l_overflow = 0xA5,
  exp10_overflow = 0xA6,
  exp10f_overflow = 0xA7,
  log2l_zero = 0xA8,
  log2l_negative = 0xA9,
  log2_zero = 0xAA,
  log2_negative = 0xAB,
  log2f_zero = 0xAC,
  log2f_negative = 0xAD,
  log_nan = 0x3E8,
  log10_nan = 0x3E9,
  exp_nan = 0x3EA,
  atan_nan = 0x3EB,
  ceil_nan = 0x3EC,
  floor_nan = 0x3ED,
  pow_nan = 0x3EE,
  modf_nan = 0x3EF,
};

/*  658 */
enum INTRNCVT_STATUS
{
  INTRNCVT_OK = 0x0,
  INTRNCVT_OVERFLOW = 0x1,
  INTRNCVT_UNDERFLOW = 0x2,
};

/*  659 */
enum state_t
{
  S_INIT = 0x0,
  S_EAT0L = 0x1,
  S_SIGNM = 0x2,
  S_GETL = 0x3,
  S_GETR = 0x4,
  S_POINT = 0x5,
  S_E = 0x6,
  S_SIGNE = 0x7,
  S_EAT0E = 0x8,
  S_GETE = 0x9,
  S_END = 0xA,
  S_E_IMPLICIT = 0xB,
};

/*  660 */
typedef GameTime::SiegeTime STATE;

/*  661 */
enum CHARTYPE
{
  CH_OTHER = 0x0,
  CH_PERCENT = 0x1,
  CH_DOT = 0x2,
  CH_STAR = 0x3,
  CH_ZERO = 0x4,
  CH_DIGIT = 0x5,
  CH_FLAG = 0x6,
  CH_SIZE = 0x7,
  CH_TYPE = 0x8,
};

/*  662 */
enum $1DD7A03358E0D01DD359262876E6A0F0
{
  lkNormal = 0x0,
  lkPrealloc = 0x1,
  lkDeleted = 0x2,
};

/*  663 */
enum _RTC_ErrorNumber
{
  _RTC_CHKSTK = 0x0,
  _RTC_CVRT_LOSS_INFO = 0x1,
  _RTC_CORRUPT_STACK = 0x2,
  _RTC_UNINIT_LOCAL_USE = 0x3,
  _RTC_ILLEGAL = 0x4,
};

/*  664 */
enum ATL::CComEnumFlags
{
  AtlFlagNoCopy = 0x0,
  AtlFlagTakeOwnership = 0x2,
  AtlFlagCopy = 0x3,
};

/*  665 */
enum ATL::CWindowImplRoot<ATL::CWindow>::__unnamed
{
  WINSTATE_DESTROYED = 0x1,
};

/*  666 */
enum ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::FlagBits
{
  BitCopy = 0x1,
  BitOwn = 0x2,
};

/*  667 */
struct $983F061E0B702DD8AE0B4B955735A6A3
{
  unsigned int Lo;
  int Hi;
};

/*  668 */
union tagCY
{
  $983F061E0B702DD8AE0B4B955735A6A3 _s0;
  __int64 int64;
};

/*  669 */
const struct _GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  char Data4[8];
};

/*  670 */
struct IUnknown
{
  IUnknownVtbl *vfptr;
};

/*  671 */
struct IUnknownVtbl
{
  HRESULT (__stdcall *QueryInterface)(IUnknown *this, _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
};

/*  672 */
struct IDispatch
{
  IUnknown baseclass_0;
};

/*  673 */
struct tagSAFEARRAYBOUND
{
  unsigned int cElements;
  int lLbound;
};

/*  674 */
struct tagSAFEARRAY
{
  unsigned __int16 cDims;
  unsigned __int16 fFeatures;
  unsigned int cbElements;
  unsigned int cLocks;
  void *pvData;
  tagSAFEARRAYBOUND rgsabound[1];
};

/*  675 */
struct tagVARIANT
{
  $D699BDA12206F1B45FD8016D91A4CD08 ___u0;
};

/*  676 */
struct $5CC4D6FD2BF4E5B80FE1FD714DCA0CFA
{
  char scale;
  char sign;
};

/*  677 */
union $E294B167D23538DCC3BE1837261F2391
{
  $5CC4D6FD2BF4E5B80FE1FD714DCA0CFA _s0;
  unsigned __int16 signscale;
};

/*  678 */
struct $A04CD8C0331024E133CCEC4B0AB36956
{
  unsigned int Lo32;
  unsigned int Mid32;
};

/*  679 */
union $50F6A00E3DEF305947FD3CBC524F699E
{
  $A04CD8C0331024E133CCEC4B0AB36956 _s0;
  unsigned __int64 Lo64;
};

/*  680 */
struct tagDEC
{
  unsigned __int16 wReserved;
  $E294B167D23538DCC3BE1837261F2391 ___u1;
  unsigned int Hi32;
  $50F6A00E3DEF305947FD3CBC524F699E ___u3;
};

/*  681 */
struct IRecordInfo
{
  IUnknown baseclass_0;
};

/*  682 */
struct $E2F13C0D8C7A5E44CBEA2DDC2BADB614
{
  unsigned __int16 vt;
  unsigned __int16 wReserved1;
  unsigned __int16 wReserved2;
  unsigned __int16 wReserved3;
  __int64 llVal;
};

/*  683 */
struct $E701744295D875378F57CE6B3DEB926E
{
  _BYTE gap0[8];
  int lVal;
  IRecordInfo *pRecInfo;
};

/*  684 */
struct $F28A51B4B40B0D33C72915D739D42B4B
{
  _BYTE gap0[8];
  char bVal;
};

/*  685 */
struct $31126B8528A05AF3606C6D495FD178E8
{
  _BYTE gap0[8];
  __int16 iVal;
};

/*  686 */
struct $50230A970D9734D4E9774CFC619DF0F6
{
  _BYTE gap0[8];
  float fltVal;
};

/*  687 */
struct $4C0EC2258454B893CE739DAE89D8DB7B
{
  _BYTE gap0[8];
  long double dblVal;
};

/*  688 */
struct $6DB36323059316E675433BB10D285009
{
  _BYTE gap0[8];
  __int16 boolVal;
};

/*  689 */
struct $8E3C8731874D1B3BC66617C4DD3163A6
{
  _BYTE gap0[8];
  int scode;
};

/*  690 */
struct $82ED792A70CC87F3084D369E38F3A3B1
{
  _BYTE gap0[8];
  tagCY cyVal;
};

/*  691 */
struct $E94952165EEA9EEA990FEB33603E1B19
{
  _BYTE gap0[8];
  long double date;
};

/*  692 */
struct $C854646156F6772BF5D6F8470C9CCFAF
{
  _BYTE gap0[8];
  unsigned __int16 *bstrVal;
};

/*  693 */
struct $A4F2B486CAB1C58504E1ADB43F63A13A
{
  _BYTE gap0[8];
  IUnknown *punkVal;
};

/*  694 */
struct $64C6939DAE315A454270827E3299D2C0
{
  _BYTE gap0[8];
  IDispatch *pdispVal;
};

/*  695 */
struct $B65B0966FEEA4A8AB96879B8BFD4D0B6
{
  _BYTE gap0[8];
  tagSAFEARRAY *parray;
};

/*  696 */
struct $166B1F81F6EA96F97683A65F38FB1A59
{
  _BYTE gap0[8];
  char *pbVal;
};

/*  697 */
struct $76732A64405C0E287FCB302687644550
{
  _BYTE gap0[8];
  __int16 *piVal;
};

/*  698 */
struct $E5FC128E66C26C95254032BA69D36E74
{
  _BYTE gap0[8];
  int *plVal;
};

/*  699 */
struct $E9CDCC48CD0BB58E8F361AA17BFDA76E
{
  _BYTE gap0[8];
  __int64 *pllVal;
};

/*  700 */
struct $BF8CC88CDF129BD6E4FA4ABA13F521AD
{
  _BYTE gap0[8];
  float *pfltVal;
};

/*  701 */
struct $2CABE618CF1C2625A4479554E4967E0A
{
  _BYTE gap0[8];
  long double *pdblVal;
};

/*  702 */
struct $AAA92DA1D6E1B0E8462F69216B62027C
{
  _BYTE gap0[8];
  __int16 *pboolVal;
};

/*  703 */
struct $F7167AE7A8ABA03C094C204FB1564A28
{
  _BYTE gap0[8];
  int *pscode;
};

/*  704 */
struct $A0C3C097A7A1C69CF723E6E79760AEE5
{
  _BYTE gap0[8];
  tagCY *pcyVal;
};

/*  705 */
struct $6857AE69DB7C952EEFD665431A7B503A
{
  _BYTE gap0[8];
  long double *pdate;
};

/*  706 */
struct $0878F16B0390542D20060EB711608720
{
  _BYTE gap0[8];
  unsigned __int16 **pbstrVal;
};

/*  707 */
struct $B571394016D930A8A23D06F70773B6CC
{
  _BYTE gap0[8];
  IUnknown **ppunkVal;
};

/*  708 */
struct $7ED6DEA95580E4C28BD44F4A3975253B
{
  _BYTE gap0[8];
  IDispatch **ppdispVal;
};

/*  709 */
struct $E08FA03BA2A6EC159A1883B5B2FA14AE
{
  _BYTE gap0[8];
  tagSAFEARRAY **pparray;
};

/*  710 */
struct $120A5B5D802F828A478C7631955F62CF
{
  _BYTE gap0[8];
  tagVARIANT *pvarVal;
};

/*  711 */
struct $6C39A09D97B880131B2C5BB4943CBB45
{
  _BYTE gap0[8];
  void *byref;
};

/*  712 */
struct $E898A5260D8380431CCAA47FCC291563
{
  _BYTE gap0[8];
  char cVal;
};

/*  713 */
struct $48802A31D3D0701BC13CEF9CEA041E7B
{
  _BYTE gap0[8];
  unsigned __int16 uiVal;
};

/*  714 */
struct $B644145F46FF1F932B106BFA6CC3F6D9
{
  _BYTE gap0[8];
  unsigned int ulVal;
};

/*  715 */
struct $EA00B0D50EAA1933F67C45009B664198
{
  _BYTE gap0[8];
  unsigned __int64 ullVal;
};

/*  716 */
struct $5CA90CF57237397281FB12BFD52C1905
{
  _BYTE gap0[8];
  int intVal;
};

/*  717 */
struct $E7F48E2F4EAA3149E57D87E5D1B2C6B8
{
  _BYTE gap0[8];
  unsigned int uintVal;
};

/*  718 */
struct $DBCE5BEBC11A9A6FB10BE4EFD703EDDB
{
  _BYTE gap0[8];
  tagDEC *pdecVal;
};

/*  719 */
struct $E1D71D20C3D01115E20D79FAE9629CE8
{
  _BYTE gap0[8];
  char *pcVal;
};

/*  720 */
struct $5669F5A4AD19EF2CB42A5602080CB0A6
{
  _BYTE gap0[8];
  unsigned __int16 *puiVal;
};

/*  721 */
struct $886F8AE9D7C8B1B861B6CA58D67B682A
{
  _BYTE gap0[8];
  unsigned int *pulVal;
};

/*  722 */
struct $ADBB94A21537A8461C6168A5B871A740
{
  _BYTE gap0[8];
  unsigned __int64 *pullVal;
};

/*  723 */
struct $CDA73A427DD2A30CDA26CA3394C33CF0
{
  _BYTE gap0[8];
  int *pintVal;
};

/*  724 */
struct $2516E53E690D8CC5659AAB7EDC49E664
{
  _BYTE gap0[8];
  unsigned int *puintVal;
};

/*  725 */
struct $17B4421FDC73B39569D8A12F584CB67F
{
  _BYTE gap0[8];
  void *pvRecord;
};

/*  726 */
union $D699BDA12206F1B45FD8016D91A4CD08
{
  $E2F13C0D8C7A5E44CBEA2DDC2BADB614 _s0;
  tagDEC decVal;
  $E701744295D875378F57CE6B3DEB926E _s2;
  $F28A51B4B40B0D33C72915D739D42B4B _s3;
  $31126B8528A05AF3606C6D495FD178E8 _s4;
  $50230A970D9734D4E9774CFC619DF0F6 _s5;
  $4C0EC2258454B893CE739DAE89D8DB7B _s6;
  $6DB36323059316E675433BB10D285009 _s7;
  $8E3C8731874D1B3BC66617C4DD3163A6 _s8;
  $82ED792A70CC87F3084D369E38F3A3B1 _s9;
  $E94952165EEA9EEA990FEB33603E1B19 _s10;
  $C854646156F6772BF5D6F8470C9CCFAF _s11;
  $A4F2B486CAB1C58504E1ADB43F63A13A _s12;
  $64C6939DAE315A454270827E3299D2C0 _s13;
  $B65B0966FEEA4A8AB96879B8BFD4D0B6 _s14;
  $166B1F81F6EA96F97683A65F38FB1A59 _s15;
  $76732A64405C0E287FCB302687644550 _s16;
  $E5FC128E66C26C95254032BA69D36E74 _s17;
  $E9CDCC48CD0BB58E8F361AA17BFDA76E _s18;
  $BF8CC88CDF129BD6E4FA4ABA13F521AD _s19;
  $2CABE618CF1C2625A4479554E4967E0A _s20;
  $AAA92DA1D6E1B0E8462F69216B62027C _s21;
  $F7167AE7A8ABA03C094C204FB1564A28 _s22;
  $A0C3C097A7A1C69CF723E6E79760AEE5 _s23;
  $6857AE69DB7C952EEFD665431A7B503A _s24;
  $0878F16B0390542D20060EB711608720 _s25;
  $B571394016D930A8A23D06F70773B6CC _s26;
  $7ED6DEA95580E4C28BD44F4A3975253B _s27;
  $E08FA03BA2A6EC159A1883B5B2FA14AE _s28;
  $120A5B5D802F828A478C7631955F62CF _s29;
  $6C39A09D97B880131B2C5BB4943CBB45 _s30;
  $E898A5260D8380431CCAA47FCC291563 _s31;
  $48802A31D3D0701BC13CEF9CEA041E7B _s32;
  $B644145F46FF1F932B106BFA6CC3F6D9 _s33;
  $EA00B0D50EAA1933F67C45009B664198 _s34;
  $5CA90CF57237397281FB12BFD52C1905 _s35;
  $E7F48E2F4EAA3149E57D87E5D1B2C6B8 _s36;
  $DBCE5BEBC11A9A6FB10BE4EFD703EDDB _s37;
  $E1D71D20C3D01115E20D79FAE9629CE8 _s38;
  $5669F5A4AD19EF2CB42A5602080CB0A6 _s39;
  $886F8AE9D7C8B1B861B6CA58D67B682A _s40;
  $ADBB94A21537A8461C6168A5B871A740 _s41;
  $CDA73A427DD2A30CDA26CA3394C33CF0 _s42;
  $2516E53E690D8CC5659AAB7EDC49E664 _s43;
  $17B4421FDC73B39569D8A12F584CB67F _s44;
};

/*  727 */
struct tagPARAMDESCEX
{
  unsigned int cBytes;
  tagVARIANT varDefaultValue;
};

/*  728 */
struct tagPARAMDESC
{
  tagPARAMDESCEX *pparamdescex;
  unsigned __int16 wParamFlags;
};

/*  729 */
struct tagVS_FIXEDFILEINFO
{
  unsigned int dwSignature;
  unsigned int dwStrucVersion;
  unsigned int dwFileVersionMS;
  unsigned int dwFileVersionLS;
  unsigned int dwProductVersionMS;
  unsigned int dwProductVersionLS;
  unsigned int dwFileFlagsMask;
  unsigned int dwFileFlags;
  unsigned int dwFileOS;
  unsigned int dwFileType;
  unsigned int dwFileSubtype;
  unsigned int dwFileDateMS;
  unsigned int dwFileDateLS;
};

/*  730 */
struct tagTYPEDESC
{
  $8CE9D10C62FE4A0D7BEB16A32091431A ___u0;
  unsigned __int16 vt;
};

/*  731 */
#pragma pack(push, 4)
struct tagARRAYDESC
{
  tagTYPEDESC tdescElem;
  unsigned __int16 cDims;
  tagSAFEARRAYBOUND rgbounds[1];
};
#pragma pack(pop)

/*  732 */
union $8CE9D10C62FE4A0D7BEB16A32091431A
{
  tagTYPEDESC *lptdesc;
  tagARRAYDESC *lpadesc;
  unsigned int hreftype;
};

/*  733 */
struct tagIDLDESC
{
  unsigned int dwReserved;
  unsigned __int16 wIDLFlags;
};

/*  734 */
union $0E5714FDA4C713A4E55EFF616105EB5A
{
  tagIDLDESC idldesc;
  tagPARAMDESC paramdesc;
};

/*  735 */
struct tagELEMDESC
{
  tagTYPEDESC tdesc;
  $0E5714FDA4C713A4E55EFF616105EB5A ___u1;
};

/*  736 */
struct tagFUNCDESC
{
  int memid;
  int *lprgscode;
  tagELEMDESC *lprgelemdescParam;
  tagFUNCKIND funckind;
  tagINVOKEKIND invkind;
  tagCALLCONV callconv;
  __int16 cParams;
  __int16 cParamsOpt;
  __int16 oVft;
  __int16 cScodes;
  tagELEMDESC elemdescFunc;
  unsigned __int16 wFuncFlags;
};

/*  737 */
union $76C305E841A1F19BE860087D232FB8AB
{
  unsigned int oInst;
  tagVARIANT *lpvarValue;
};

/*  738 */
struct tagVARDESC
{
  int memid;
  unsigned __int16 *lpstrSchema;
  $76C305E841A1F19BE860087D232FB8AB ___u2;
  tagELEMDESC elemdescVar;
  unsigned __int16 wVarFlags;
  tagVARKIND varkind;
};

/*  739 */
struct ITypeComp
{
  IUnknown baseclass_0;
};

/*  740 */
union tagBINDPTR
{
  tagFUNCDESC *lpfuncdesc;
  tagVARDESC *lpvardesc;
  ITypeComp *lptcomp;
};

/*  741 */
struct _MINIDUMP_INCLUDE_THREAD_CALLBACK
{
  unsigned int ThreadId;
};

/*  742 */
union $DD82D2F84ECA88824B89F98F568C2145
{
  unsigned int ModuleWriteFlags;
  unsigned int ThreadWriteFlags;
};

/*  743 */
struct _MINIDUMP_CALLBACK_OUTPUT
{
  $DD82D2F84ECA88824B89F98F568C2145 ___u0;
};

/*  744 */
struct _FLOATING_SAVE_AREA
{
  unsigned int ControlWord;
  unsigned int StatusWord;
  unsigned int TagWord;
  unsigned int ErrorOffset;
  unsigned int ErrorSelector;
  unsigned int DataOffset;
  unsigned int DataSelector;
  char RegisterArea[80];
  unsigned int Cr0NpxState;
};

/*  745 */
struct _CONTEXT
{
  unsigned int ContextFlags;
  unsigned int Dr0;
  unsigned int Dr1;
  unsigned int Dr2;
  unsigned int Dr3;
  unsigned int Dr6;
  unsigned int Dr7;
  _FLOATING_SAVE_AREA FloatSave;
  unsigned int SegGs;
  unsigned int SegFs;
  unsigned int SegEs;
  unsigned int SegDs;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Ebx;
  unsigned int Edx;
  unsigned int Ecx;
  unsigned int Eax;
  unsigned int Ebp;
  unsigned int Eip;
  unsigned int SegCs;
  unsigned int EFlags;
  unsigned int Esp;
  unsigned int SegSs;
  char ExtendedRegisters[512];
};

/*  746 */
struct _MINIDUMP_THREAD_EX_CALLBACK
{
  unsigned int ThreadId;
  void *ThreadHandle;
  _CONTEXT Context;
  unsigned int SizeOfContext;
  unsigned __int64 StackBase;
  unsigned __int64 StackEnd;
  unsigned __int64 BackingStoreBase;
  unsigned __int64 BackingStoreEnd;
};

/*  747 */
struct HWND__
{
  int unused;
};

/*  748 */
struct HINSTANCE__
{
  int unused;
};

/*  749 */
struct HICON__
{
  int unused;
};

/*  750 */
struct HBRUSH__
{
  int unused;
};

/*  751 */
struct tagWNDCLASSA
{
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const char *lpszMenuName;
  const char *lpszClassName;
};

/*  752 */
struct tagTLIBATTR
{
  _GUID guid;
  unsigned int lcid;
  tagSYSKIND syskind;
  unsigned __int16 wMajorVerNum;
  unsigned __int16 wMinorVerNum;
  unsigned __int16 wLibFlags;
};

/*  753 */
struct _MINIDUMP_THREAD_CALLBACK
{
  unsigned int ThreadId;
  void *ThreadHandle;
  _CONTEXT Context;
  unsigned int SizeOfContext;
  unsigned __int64 StackBase;
  unsigned __int64 StackEnd;
};

/*  754 */
struct _MINIDUMP_INCLUDE_MODULE_CALLBACK
{
  unsigned __int64 BaseOfImage;
};

/*  755 */
#pragma pack(push, 1)
struct _MINIDUMP_MODULE_CALLBACK
{
  unsigned __int16 *FullPath;
  unsigned __int64 BaseOfImage;
  unsigned int SizeOfImage;
  unsigned int CheckSum;
  unsigned int TimeDateStamp;
  tagVS_FIXEDFILEINFO VersionInfo;
  void *CvRecord;
  unsigned int SizeOfCvRecord;
  void *MiscRecord;
  unsigned int SizeOfMiscRecord;
};
#pragma pack(pop)

/*  756 */
struct _LIST_ENTRY
{
  _LIST_ENTRY *Flink;
  _LIST_ENTRY *Blink;
};

/*  757 */
union tagDBID::__unnamed
{
  _GUID guid;
  _GUID *pguid;
};

/*  758 */
union $6FBA3A5351EB9D6990269AD0E1B3D5D0
{
  _MINIDUMP_THREAD_CALLBACK Thread;
  _MINIDUMP_THREAD_EX_CALLBACK ThreadEx;
  _MINIDUMP_MODULE_CALLBACK Module;
  _MINIDUMP_INCLUDE_THREAD_CALLBACK IncludeThread;
  _MINIDUMP_INCLUDE_MODULE_CALLBACK IncludeModule;
};

/*  759 */
#pragma pack(push, 1)
struct _MINIDUMP_CALLBACK_INPUT
{
  unsigned int ProcessId;
  void *ProcessHandle;
  unsigned int CallbackType;
  $6FBA3A5351EB9D6990269AD0E1B3D5D0 ___u3;
};
#pragma pack(pop)

/*  760 */
struct tagEXCEPINFO
{
  unsigned __int16 wCode;
  unsigned __int16 wReserved;
  unsigned __int16 *bstrSource;
  unsigned __int16 *bstrDescription;
  unsigned __int16 *bstrHelpFile;
  unsigned int dwHelpContext;
  void *pvReserved;
  HRESULT (__stdcall *pfnDeferredFillIn)(tagEXCEPINFO *);
  int scode;
};

/*  761 */
struct _ULARGE_INTEGER::__unnamed
{
  unsigned int LowPart;
  unsigned int HighPart;
};

/*  762 */
struct $B950AFB169DC87688B328897744C612F
{
  unsigned int LowPart;
  unsigned int HighPart;
};

/*  763 */
union _ULARGE_INTEGER
{
  $B950AFB169DC87688B328897744C612F _s0;
  _ULARGE_INTEGER::__unnamed u;
  unsigned __int64 QuadPart;
};

/*  764 */
struct _FILETIME
{
  unsigned int dwLowDateTime;
  unsigned int dwHighDateTime;
};

/*  765 */
struct tagSTATSTG
{
  unsigned __int16 *pwcsName;
  unsigned int type;
  _ULARGE_INTEGER cbSize;
  _FILETIME mtime;
  _FILETIME ctime;
  _FILETIME atime;
  unsigned int grfMode;
  unsigned int grfLocksSupported;
  _GUID clsid;
  unsigned int grfStateBits;
  unsigned int reserved;
};

/*  766 */
struct _KDHELP
{
  unsigned int Thread;
  unsigned int ThCallbackStack;
  unsigned int NextCallback;
  unsigned int FramePointer;
  unsigned int KiCallUserMode;
  unsigned int KeUserCallbackDispatcher;
  unsigned int SystemRangeStart;
  unsigned int ThCallbackBStore;
  unsigned int Reserved[8];
};

/*  767 */
struct _tagADDRESS64
{
  unsigned __int64 Offset;
  unsigned __int16 Segment;
  ADDRESS_MODE Mode;
};

/*  768 */
struct _EXCEPTION_RECORD
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  void *ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int ExceptionInformation[15];
};

/*  769 */
struct tagCABSTR
{
  unsigned int cElems;
  unsigned __int16 **pElems;
};

/*  770 */
union SKILLSLOT
{
  SKILLSLOT::__unnamed SKILLINFO;
  unsigned int dwSkillSlot;
};

/*  771 */
struct SKILL
{
  unsigned __int16 wSkillNum;
  unsigned __int16 wSlotNum;
  SKILLSLOT SSlot[20];
};

/*  772 */
struct tagCACLSID
{
  unsigned int cElems;
  _GUID *pElems;
};

/*  773 */
struct tagCADBL
{
  unsigned int cElems;
  long double *pElems;
};

/*  774 */
struct sockaddr
{
  unsigned __int16 sa_family;
  char sa_data[14];
};

/*  775 */
struct _SYMBOL_INFO
{
  unsigned int SizeOfStruct;
  unsigned int TypeIndex;
  unsigned __int64 Reserved[2];
  unsigned int info;
  unsigned int Size;
  unsigned __int64 ModBase;
  unsigned int Flags;
  unsigned __int64 Value;
  unsigned __int64 Address;
  unsigned int Register;
  unsigned int Scope;
  unsigned int Tag;
  unsigned int NameLen;
  unsigned int MaxNameLen;
  char Name[1];
};

/*  776 */
struct tagCAUB
{
  unsigned int cElems;
  char *pElems;
};

/*  777 */
struct std::binary_function<unsigned long,unsigned long,bool>
{
  char dummy[1];
};

/*  778 */
struct std::less<unsigned long>
{
  std::binary_function<unsigned long,unsigned long,bool> baseclass_0;
};

/*  779 */
struct std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1>
{
  std::less<unsigned long> comp;
};

/*  780 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Node>
{
  char dummy[1];
};

/*  781 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Node> baseclass_0;
};

/*  782 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >
{
  std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Node> _Alnod;
};

/*  783 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Node *_Right;
  std::pair<unsigned long const ,CPerformanceCheck::Instrument> _Myval;
  char _Color;
  char _Isnil;
};

/*  784 */
struct CPerformanceCheck::Instrument
{
  long double m_fProcessTime;
  long double m_fMinTime;
  long double m_fMaxTime;
  unsigned int m_dwHashKey;
  unsigned int m_dwCalled;
  const char *m_szFunctionName;
};

/*  785 */
struct std::pair<unsigned long const ,CPerformanceCheck::Instrument>
{
  const unsigned int first;
  CPerformanceCheck::Instrument second;
};

/*  786 */
struct std::_Allocator_base<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >
{
  char dummy[1];
};

/*  787 */
struct std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >
{
  std::_Allocator_base<std::pair<unsigned long const ,CPerformanceCheck::Instrument> > baseclass_0;
};

/*  788 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Node *>
{
  char dummy[1];
};

/*  789 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Node *> baseclass_0;
};

/*  790 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Node *> _Alptr;
};

/*  791 */
struct std::input_iterator_tag
{
  char dummy[1];
};

/*  792 */
struct std::_Allocator_base<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node>
{
  char dummy[1];
};

/*  793 */
struct std::allocator<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node>
{
  std::_Allocator_base<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node> baseclass_0;
};

/*  794 */
struct std::_List_nod<CThread *,std::allocator<CThread *> >
{
  std::allocator<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node> _Alnod;
};

/*  795 */
struct std::_List_nod<CThread *,std::allocator<CThread *> >::_Node
{
  std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *_Next;
  std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *_Prev;
  CThread *_Myval;
};

/*  796 */
struct CThread
{
  CThreadVtbl *vfptr;
  void *m_hThreadHandle;
};

/*  797 */
struct CThreadVtbl
{
  void *(__thiscall *__vecDelDtor)(CThread *this, unsigned int);
  unsigned int (__thiscall *Run)(CThread *this);
  int (__thiscall *End)(CThread *this);
};

/*  798 */
struct std::_Allocator_base<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *>
{
  char dummy[1];
};

/*  799 */
struct std::allocator<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *> baseclass_0;
};

/*  800 */
struct std::_List_ptr<CThread *,std::allocator<CThread *> >
{
  std::_List_nod<CThread *,std::allocator<CThread *> > baseclass_0;
  std::allocator<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *> _Alptr;
};

/*  801 */
struct std::_Allocator_base<CThread *>
{
  char dummy[1];
};

/*  802 */
struct std::allocator<CThread *>
{
  std::_Allocator_base<CThread *> baseclass_0;
};

/*  803 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> > _Alval;
};

/*  804 */
struct std::forward_iterator_tag
{
  std::input_iterator_tag baseclass_0;
};

/*  805 */
struct std::_List_nod<LogBuffer *,std::allocator<LogBuffer *> >::_Node
{
  std::_List_nod<LogBuffer *,std::allocator<LogBuffer *> >::_Node *_Next;
  std::_List_nod<LogBuffer *,std::allocator<LogBuffer *> >::_Node *_Prev;
  LogBuffer *_Myval;
};

/*  806 */
struct LogBuffer
{
  int m_nUsage;
  char m_Buffer[65000];
};

/*  807 */
struct std::_Allocator_base<std::_List_nod<LogBuffer *,std::allocator<LogBuffer *> >::_Node>
{
  char dummy[1];
};

/*  808 */
struct std::_Allocator_base<unsigned long>
{
  char dummy[1];
};

/*  809 */
struct std::_List_val<CThread *,std::allocator<CThread *> >
{
  std::_List_ptr<CThread *,std::allocator<CThread *> > baseclass_0;
  std::allocator<CThread *> _Alval;
};

/*  810 */
struct std::_Allocator_base<LogBuffer *>
{
  char dummy[1];
};

/*  811 */
struct std::bidirectional_iterator_tag
{
  std::forward_iterator_tag baseclass_0;
};

/*  812 */
struct std::allocator<std::_List_nod<LogBuffer *,std::allocator<LogBuffer *> >::_Node>
{
  std::_Allocator_base<std::_List_nod<LogBuffer *,std::allocator<LogBuffer *> >::_Node> baseclass_0;
};

/*  813 */
struct std::_List_nod<LogBuffer *,std::allocator<LogBuffer *> >
{
  std::allocator<std::_List_nod<LogBuffer *,std::allocator<LogBuffer *> >::_Node> _Alnod;
};

/*  814 */
struct std::_Allocator_base<std::_List_nod<LogBuffer *,std::allocator<LogBuffer *> >::_Node *>
{
  char dummy[1];
};

/*  815 */
struct std::allocator<std::_List_nod<LogBuffer *,std::allocator<LogBuffer *> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<LogBuffer *,std::allocator<LogBuffer *> >::_Node *> baseclass_0;
};

/*  816 */
struct std::_List_ptr<LogBuffer *,std::allocator<LogBuffer *> >
{
  std::_List_nod<LogBuffer *,std::allocator<LogBuffer *> > baseclass_0;
  std::allocator<std::_List_nod<LogBuffer *,std::allocator<LogBuffer *> >::_Node *> _Alptr;
};

/*  817 */
struct std::allocator<LogBuffer *>
{
  std::_Allocator_base<LogBuffer *> baseclass_0;
};

/*  818 */
struct exception
{
  exceptionVtbl *vfptr;
  const char *_m_what;
  int _m_doFree;
};

/*  819 */
struct exceptionVtbl
{
  void *(__thiscall *__vecDelDtor)(exception *this, unsigned int);
  const char *(__thiscall *what)(exception *this);
};

/*  820 */
struct std::_String_base
{
  char dummy[1];
};

/*  821 */
struct std::_Allocator_base<char>
{
  char dummy[1];
};

/*  822 */
struct std::allocator<char>
{
  std::_Allocator_base<char> baseclass_0;
};

/*  823 */
union $FA432B9EB5F15D7A63B66682E655FA72
{
  std::_String_base baseclass_0;
  std::allocator<char> _Alval;
};

/*  824 */
struct std::_String_val<char,std::allocator<char> >
{
  $FA432B9EB5F15D7A63B66682E655FA72 ___u0;
};

/*  825 */
union std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Bxty
{
  char _Buf[16];
  char *_Ptr;
};

/*  826 */
struct std::basic_string<char,std::char_traits<char>,std::allocator<char> >
{
  std::_String_val<char,std::allocator<char> > baseclass_0;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Bxty _Bx;
  unsigned int _Mysize;
  unsigned int _Myres;
};

/*  827 */
struct std::logic_error
{
  exception baseclass_0;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Str;
};

/*  828 */
struct std::length_error
{
  std::logic_error baseclass_0;
};

/*  829 */
struct std::runtime_error
{
  exception baseclass_0;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Str;
};

/*  830 */
struct std::allocator<void>
{
  char dummy[1];
};

/*  831 */
struct std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >::rebind<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >
{
  char dummy[1];
};

/*  832 */
struct std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::In
{
  char dummy[1];
};

/*  833 */
struct std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >::rebind<unsigned long>
{
  char dummy[1];
};

/*  834 */
struct std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >::rebind<char>
{
  char dummy[1];
};

/*  835 */
struct std::allocator<unsigned long>
{
  std::_Allocator_base<unsigned long> baseclass_0;
};

/*  836 */
struct std::allocator<char>::rebind<char>
{
  char dummy[1];
};

/*  837 */
struct std::allocator<CThread *>::rebind<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node>
{
  char dummy[1];
};

/*  838 */
struct std::allocator<CThread *>::rebind<std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *>
{
  char dummy[1];
};

/*  839 */
struct std::allocator<CThread *>::rebind<CThread *>
{
  char dummy[1];
};

/*  840 */
struct std::_Vector_val<unsigned long,std::allocator<unsigned long> >
{
  std::allocator<unsigned long> _Alval;
};

/*  841 */
struct std::fpos<int>
{
  int _Myoff;
  __int64 _Fpos;
  int _Mystate;
};

/*  842 */
struct std::char_traits<char>
{
  char dummy[1];
};

/*  843 */
struct std::_List_val<LogBuffer *,std::allocator<LogBuffer *> >
{
  std::_List_ptr<LogBuffer *,std::allocator<LogBuffer *> > baseclass_0;
  std::allocator<LogBuffer *> _Alval;
};

/*  844 */
struct std::invalid_argument
{
  std::logic_error baseclass_0;
};

/*  845 */
struct std::allocator<unsigned long>::rebind<unsigned long>
{
  char dummy[1];
};

/*  846 */
struct std::list<CThread *,std::allocator<CThread *> >
{
  std::_List_val<CThread *,std::allocator<CThread *> > baseclass_0;
  std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/*  847 */
struct std::iterator<std::bidirectional_iterator_tag,CThread *,int,CThread * const *,CThread * const &>
{
  char dummy[1];
};

/*  848 */
struct std::_Bidit<CThread *,int,CThread * const *,CThread * const &>
{
  std::iterator<std::bidirectional_iterator_tag,CThread *,int,CThread * const *,CThread * const &> baseclass_0;
};

/*  849 */
union $F3E2B1697125B5E46841B9D2E964E62D
{
  std::_Bidit<CThread *,int,CThread * const *,CThread * const &> baseclass_0;
  std::_List_nod<CThread *,std::allocator<CThread *> >::_Node *_Ptr;
};

/*  850 */
struct std::list<CThread *,std::allocator<CThread *> >::const_iterator
{
  $F3E2B1697125B5E46841B9D2E964E62D ___u0;
};

/*  851 */
struct std::list<CThread *,std::allocator<CThread *> >::iterator
{
  std::list<CThread *,std::allocator<CThread *> >::const_iterator baseclass_0;
};

/*  852 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/*  853 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CPerformanceCheck::Instrument>,int,std::pair<unsigned long const ,CPerformanceCheck::Instrument> const *,std::pair<unsigned long const ,CPerformanceCheck::Instrument> const &>
{
  char dummy[1];
};

/*  854 */
struct std::_Bidit<std::pair<unsigned long const ,CPerformanceCheck::Instrument>,int,std::pair<unsigned long const ,CPerformanceCheck::Instrument> const *,std::pair<unsigned long const ,CPerformanceCheck::Instrument> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CPerformanceCheck::Instrument>,int,std::pair<unsigned long const ,CPerformanceCheck::Instrument> const *,std::pair<unsigned long const ,CPerformanceCheck::Instrument> const &> baseclass_0;
};

/*  855 */
union $2C630F72F576F893C14F4497A15D1DB6
{
  std::_Bidit<std::pair<unsigned long const ,CPerformanceCheck::Instrument>,int,std::pair<unsigned long const ,CPerformanceCheck::Instrument> const *,std::pair<unsigned long const ,CPerformanceCheck::Instrument> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::_Node *_Ptr;
};

/*  856 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::const_iterator
{
  $2C630F72F576F893C14F4497A15D1DB6 ___u0;
};

/*  857 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::const_iterator baseclass_0;
};

/*  858 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::iterator first;
  bool second;
};

/*  859 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CPerformanc
{
  std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::iterator first;
  std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> >::iterator second;
};

/*  860 */
struct std::underflow_error
{
  std::runtime_error baseclass_0;
};

/*  861 */
struct std::bad_exception
{
  exception baseclass_0;
};

/*  862 */
struct std::random_access_iterator_tag
{
  std::bidirectional_iterator_tag baseclass_0;
};

/*  863 */
struct std::iterator<std::random_access_iterator_tag,char,int,char const *,char const &>
{
  char dummy[1];
};

/*  864 */
struct std::allocator<LogBuffer *>::rebind<std::_List_nod<LogBuffer *,std::allocator<LogBuffer *> >::_Node>
{
  char dummy[1];
};

/*  865 */
struct std::allocator<LogBuffer *>::rebind<std::_List_nod<LogBuffer *,std::allocator<LogBuffer *> >::_Node *>
{
  char dummy[1];
};

/*  866 */
struct std::allocator<LogBuffer *>::rebind<LogBuffer *>
{
  char dummy[1];
};

/*  867 */
struct std::multimap<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> >,1> > baseclass_0;
};

/*  868 */
struct std::char_traits<unsigned short>
{
  char dummy[1];
};

/*  869 */
struct std::domain_error
{
  std::logic_error baseclass_0;
};

/*  870 */
struct std::vector<unsigned long,std::allocator<unsigned long> >
{
  std::_Vector_val<unsigned long,std::allocator<unsigned long> > baseclass_0;
  unsigned int *_Myfirst;
  unsigned int *_Mylast;
  unsigned int *_Myend;
};

/*  871 */
struct std::iterator<std::random_access_iterator_tag,unsigned long,int,unsigned long const *,unsigned long const &>
{
  char dummy[1];
};

/*  872 */
struct std::_Ranit<unsigned long,int,unsigned long const *,unsigned long const &>
{
  std::iterator<std::random_access_iterator_tag,unsigned long,int,unsigned long const *,unsigned long const &> baseclass_0;
};

/*  873 */
union $0A1C46AFA470D24F88CFE71A24EB182B
{
  std::_Ranit<unsigned long,int,unsigned long const *,unsigned long const &> baseclass_0;
  unsigned int *_Myptr;
};

/*  874 */
struct std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator
{
  $0A1C46AFA470D24F88CFE71A24EB182B ___u0;
};

/*  875 */
struct std::vector<unsigned long,std::allocator<unsigned long> >::iterator
{
  std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator baseclass_0;
};

/*  876 */
struct std::overflow_error
{
  std::runtime_error baseclass_0;
};

/*  877 */
struct std::range_error
{
  std::runtime_error baseclass_0;
};

/*  878 */
struct std::out_of_range
{
  std::logic_error baseclass_0;
};

/*  879 */
struct std::_Ranit<char,int,char const *,char const &>
{
  std::iterator<std::random_access_iterator_tag,char,int,char const *,char const &> baseclass_0;
};

/*  880 */
union $7CC8C6F2363F2AE3FC0A7456E05B0CB4
{
  std::_Ranit<char,int,char const *,char const &> baseclass_0;
  const char *_Myptr;
};

/*  881 */
struct std::basic_string<char,std::char_traits<char>,std::allocator<char> >::const_iterator
{
  $7CC8C6F2363F2AE3FC0A7456E05B0CB4 ___u0;
};

/*  882 */
struct std::basic_string<char,std::char_traits<char>,std::allocator<char> >::iterator
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> >::const_iterator baseclass_0;
};

/*  883 */
struct std::bad_alloc
{
  exception baseclass_0;
};

/*  884 */
struct std::list<LogBuffer *,std::allocator<LogBuffer *> >
{
  std::_List_val<LogBuffer *,std::allocator<LogBuffer *> > baseclass_0;
  std::_List_nod<LogBuffer *,std::allocator<LogBuffer *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/*  885 */
struct std::iterator<std::bidirectional_iterator_tag,LogBuffer *,int,LogBuffer * const *,LogBuffer * const &>
{
  char dummy[1];
};

/*  886 */
struct std::_Bidit<LogBuffer *,int,LogBuffer * const *,LogBuffer * const &>
{
  std::iterator<std::bidirectional_iterator_tag,LogBuffer *,int,LogBuffer * const *,LogBuffer * const &> baseclass_0;
};

/*  887 */
union $27498A0CB4684ED12716456FC36A3455
{
  std::_Bidit<LogBuffer *,int,LogBuffer * const *,LogBuffer * const &> baseclass_0;
  std::_List_nod<LogBuffer *,std::allocator<LogBuffer *> >::_Node *_Ptr;
};

/*  888 */
struct std::list<LogBuffer *,std::allocator<LogBuffer *> >::const_iterator
{
  $27498A0CB4684ED12716456FC36A3455 ___u0;
};

/*  889 */
struct std::list<LogBuffer *,std::allocator<LogBuffer *> >::iterator
{
  std::list<LogBuffer *,std::allocator<LogBuffer *> >::const_iterator baseclass_0;
};

/*  890 */
struct std::_Scalar_ptr_iterator_tag
{
  char dummy[1];
};

/*  891 */
struct tagCACY
{
  unsigned int cElems;
  tagCY *pElems;
};

/*  892 */
struct _tagADDRESS
{
  unsigned int Offset;
  unsigned __int16 Segment;
  ADDRESS_MODE Mode;
};

/*  893 */
struct _tagSTACKFRAME
{
  _tagADDRESS AddrPC;
  _tagADDRESS AddrReturn;
  _tagADDRESS AddrFrame;
  _tagADDRESS AddrStack;
  void *FuncTableEntry;
  unsigned int Params[4];
  int Far;
  int Virtual;
  unsigned int Reserved[3];
  _KDHELP KdHelp;
  _tagADDRESS AddrBStore;
};

/*  894 */
struct CLock<CCSLock>
{
  char dummy[1];
};

/*  895 */
struct _RTL_CRITICAL_SECTION
{
  _RTL_CRITICAL_SECTION_DEBUG *DebugInfo;
  int LockCount;
  int RecursionCount;
  void *OwningThread;
  void *LockSemaphore;
  unsigned int SpinCount;
};

/*  896 */
struct _RTL_CRITICAL_SECTION_DEBUG
{
  unsigned __int16 Type;
  unsigned __int16 CreatorBackTraceIndex;
  _RTL_CRITICAL_SECTION *CriticalSection;
  _LIST_ENTRY ProcessLocksList;
  unsigned int EntryCount;
  unsigned int ContentionCount;
  unsigned int Spare[2];
};

/*  897 */
union $50E80ED5640E202800053E0C99B74150
{
  CLock<CCSLock> baseclass_0;
  _RTL_CRITICAL_SECTION m_CSLock;
};

/*  898 */
struct CCSLock
{
  $50E80ED5640E202800053E0C99B74150 ___u0;
};

/*  899 */
struct $FAF74743FBE1C8632047CFB668F7028A
{
  unsigned int LowPart;
  int HighPart;
};

/*  900 */
union _LARGE_INTEGER
{
  $FAF74743FBE1C8632047CFB668F7028A _s0;
  $FAF74743FBE1C8632047CFB668F7028A u;
  __int64 QuadPart;
};

/*  901 */
struct _iobuf
{
  char *_ptr;
  int _cnt;
  char *_base;
  int _flag;
  int _file;
  int _charbuf;
  int _bufsiz;
  char *_tmpfname;
};

/*  902 */
struct CPerformanceCheck
{
  CCSLock m_TableLock;
  char PerformanceCheckLockPad[8];
  _LARGE_INTEGER m_Frequency;
  long double m_fFrequency;
  std::multimap<unsigned long,CPerformanceCheck::Instrument,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPerformanceCheck::Instrument> > > m_InstrumentTable;
  void (__cdecl *m_fnPreFix)(_iobuf *);
  void (__cdecl *m_fnPostFix)(_iobuf *);
};

/*  903 */
struct _BLOB
{
  unsigned int cbSize;
  char *pBlobData;
};

/*  904 */
struct _EXCEPTION_POINTERS
{
  _EXCEPTION_RECORD *ExceptionRecord;
  _CONTEXT *ContextRecord;
};

/*  905 */
struct _MINIDUMP_EXCEPTION_INFORMATION
{
  unsigned int ThreadId;
  _EXCEPTION_POINTERS *ExceptionPointers;
  int ClientPointers;
};

/*  906 */
struct CServerWindowFramework
{
  CServerWindowFrameworkVtbl *vfptr;
  HINSTANCE__ *m_hInstance;
  HWND__ *m_hWnd;
  int m_nMenuID;
  unsigned int m_dwInternalFlags;
  unsigned int m_dwServerStatus;
  CSysTray *m_lpSysTray;
  CConsoleWindow *m_lpConsoleWindow;
  CCommandProcess *m_lpCommandProcess;
  CConsoleCMDFactory *m_lpCommandFactory;
  CIOCPNet *m_lpIOCPNet;
  CMsgProcessMgr *m_lpMsgProcessMgr;
  CTimerProcMgr *m_lpTimerProcessMgr;
  CBufferFactory *m_lpBufferFactory;
  std::list<CThread *,std::allocator<CThread *> > m_ProcessThreadList;
  char m_szAppName[260];
};

/*  907 */
struct CServerWindowFrameworkVtbl
{
  void *(__thiscall *__vecDelDtor)(CServerWindowFramework *this, unsigned int);
  bool (__thiscall *ApplicationSpecificInit)(CServerWindowFramework *this, const char *);
};

/*  908 */
struct _NOTIFYICONDATAA
{
  unsigned int cbSize;
  HWND__ *hWnd;
  unsigned int uID;
  unsigned int uFlags;
  unsigned int uCallbackMessage;
  HICON__ *hIcon;
  char szTip[64];
};

/*  909 */
struct CSysTray
{
  _NOTIFYICONDATAA m_IconData;
  HWND__ *m_hWnd;
  HINSTANCE__ *m_hInstance;
  unsigned int m_uIconCount;
};

/*  910 */
struct CConsoleWindow
{
  CConsoleWindowVtbl *vfptr;
  CCSLock m_ConsoleWindowLock;
  char Padding[8];
  HWND__ *m_hParentWnd;
  HWND__ *m_hWnd;
  HWND__ *m_hWndInfo;
  HWND__ *m_hWndInput;
  HWND__ *m_hWndOutput;
  HFONT__ *m_hFont;
  HINSTANCE__ *m_hInstance;
  int m_fOldProc;
  char m_szWindowName[128];
  CCommandProcess *m_CMDProcess;
  CConsoleCMDFactory *m_CMDFactory;
  boost::pool<boost::default_user_allocator_new_delete> m_MsgPool;
};

/*  911 */
struct CConsoleWindowVtbl
{
  void *(__thiscall *__vecDelDtor)(CConsoleWindow *this, unsigned int);
};

/*  912 */
struct HFONT__
{
  int unused;
};

/*  913 */
struct std::_Allocator_base<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node>
{
  char dummy[1];
};

/*  914 */
struct std::allocator<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node>
{
  std::_Allocator_base<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node> baseclass_0;
};

/*  915 */
struct std::_List_nod<CCommand *,std::allocator<CCommand *> >
{
  std::allocator<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node> _Alnod;
};

/*  916 */
struct std::_Allocator_base<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *>
{
  char dummy[1];
};

/*  917 */
struct std::allocator<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *> baseclass_0;
};

/*  918 */
struct std::_List_ptr<CCommand *,std::allocator<CCommand *> >
{
  std::_List_nod<CCommand *,std::allocator<CCommand *> > baseclass_0;
  std::allocator<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *> _Alptr;
};

/*  919 */
struct std::_Allocator_base<CCommand *>
{
  char dummy[1];
};

/*  920 */
struct std::allocator<CCommand *>
{
  std::_Allocator_base<CCommand *> baseclass_0;
};

/*  921 */
struct std::_List_val<CCommand *,std::allocator<CCommand *> >
{
  std::_List_ptr<CCommand *,std::allocator<CCommand *> > baseclass_0;
  std::allocator<CCommand *> _Alval;
};

/*  922 */
struct std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node
{
  std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *_Next;
  std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *_Prev;
  CCommand *_Myval;
};

/*  923 */
struct CCommand
{
  CCommandVtbl *vfptr;
};

/*  924 */
struct CCommandVtbl
{
  bool (__thiscall *DoProcess)(CCommand *this);
  bool (__thiscall *Destroy)(CCommand *this);
};

/*  925 */
struct std::list<CCommand *,std::allocator<CCommand *> >
{
  std::_List_val<CCommand *,std::allocator<CCommand *> > baseclass_0;
  std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/*  926 */
struct CCommandProcess
{
  CCSLock m_CMDLock;
  std::list<CCommand *,std::allocator<CCommand *> > m_CMDList;
};

/*  927 */
struct CConsoleCMDFactory
{
  CConsoleCMDFactoryVtbl *vfptr;
  std::vector<CConsoleCMDFactory::StringCMD,std::allocator<CConsoleCMDFactory::StringCMD> > m_CMDVector;
};

/*  928 */
struct CConsoleCMDFactoryVtbl
{
  void *(__thiscall *__vecDelDtor)(CConsoleCMDFactory *this, unsigned int);
};

/*  929 */
struct std::_Allocator_base<CConsoleCMDFactory::StringCMD>
{
  char dummy[1];
};

/*  930 */
struct std::allocator<CConsoleCMDFactory::StringCMD>
{
  std::_Allocator_base<CConsoleCMDFactory::StringCMD> baseclass_0;
};

/*  931 */
struct std::_Vector_val<CConsoleCMDFactory::StringCMD,std::allocator<CConsoleCMDFactory::StringCMD> >
{
  std::allocator<CConsoleCMDFactory::StringCMD> _Alval;
};

/*  932 */
struct CConsoleCommand
{
  CCommand baseclass_0;
};

/*  933 */
struct CConsoleCMDFactory::StringCMD
{
  unsigned int m_dwHashValue;
  const char *m_szCommand;
  CConsoleCommand *m_lpCMD;
};

/*  934 */
struct std::vector<CConsoleCMDFactory::StringCMD,std::allocator<CConsoleCMDFactory::StringCMD> >
{
  std::_Vector_val<CConsoleCMDFactory::StringCMD,std::allocator<CConsoleCMDFactory::StringCMD> > baseclass_0;
  CConsoleCMDFactory::StringCMD *_Myfirst;
  CConsoleCMDFactory::StringCMD *_Mylast;
  CConsoleCMDFactory::StringCMD *_Myend;
};

/*  935 */
struct boost::simple_segregated_storage<unsigned int>
{
  void *first;
};

/*  936 */
struct boost::details::PODptr<unsigned int>
{
  char *ptr;
  unsigned int sz;
};

/*  937 */
struct boost::pool<boost::default_user_allocator_new_delete>
{
  boost::simple_segregated_storage<unsigned int> baseclass_0;
  boost::details::PODptr<unsigned int> list;
  const unsigned int requested_size;
  unsigned int next_size;
};

/*  938 */
struct CCompletionHandler
{
  CCompletionHandlerVtbl *vfptr;
  void *m_hIOCP;
  unsigned int m_nThread;
  unsigned int m_nTimeOutMS;
};

/*  939 */
struct CCompletionHandlerVtbl
{
  void *(__thiscall *__vecDelDtor)(CCompletionHandler *this, unsigned int);
};

/*  940 */
struct CThreadMgr
{
  CThreadMgrVtbl *vfptr;
  CThread *m_lpThreads[63];
  void *m_hThreads[63];
  CCSLock m_ThreadLock;
  unsigned int m_nThreadNum;
  unsigned int m_bJoinStarted;
};

/*  941 */
struct CThreadMgrVtbl
{
  void *(__thiscall *__vecDelDtor)(CThreadMgr *this, unsigned int);
};

/*  942 */
struct std::_Allocator_base<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node>
{
  char dummy[1];
};

/*  943 */
struct std::allocator<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node>
{
  std::_Allocator_base<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node> baseclass_0;
};

/*  944 */
struct std::_List_nod<CSession *,std::allocator<CSession *> >
{
  std::allocator<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node> _Alnod;
};

/*  945 */
struct std::_Allocator_base<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *>
{
  char dummy[1];
};

/*  946 */
struct std::allocator<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *> baseclass_0;
};

/*  947 */
struct std::_List_ptr<CSession *,std::allocator<CSession *> >
{
  std::_List_nod<CSession *,std::allocator<CSession *> > baseclass_0;
  std::allocator<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *> _Alptr;
};

/*  948 */
struct std::_Allocator_base<CSession *>
{
  char dummy[1];
};

/*  949 */
struct std::allocator<CSession *>
{
  std::_Allocator_base<CSession *> baseclass_0;
};

/*  950 */
struct std::_List_val<CSession *,std::allocator<CSession *> >
{
  std::_List_ptr<CSession *,std::allocator<CSession *> > baseclass_0;
  std::allocator<CSession *> _Alval;
};

/*  951 */
struct std::_List_nod<CSession *,std::allocator<CSession *> >::_Node
{
  std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *_Next;
  std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *_Prev;
  CSession *_Myval;
};

/*  952 */
struct CSocketFactory
{
  CSocketFactoryVtbl *vfptr;
  int m_nSockFamily;
  int m_nSockType;
  int m_nSockProtocol;
  int m_nAddressLen;
};

/*  953 */
struct CSocketFactoryVtbl
{
  void *(__thiscall *__vecDelDtor)(CSocketFactory *this, unsigned int);
  unsigned int (__thiscall *CreateSocket)(CSocketFactory *this);
  bool (__thiscall *GetNetworkInfo)(CSocketFactory *this, char *, int);
  bool (__thiscall *SetAddr)(CSocketFactory *this, sockaddr *, const char *, unsigned __int16);
};

/*  954 */
struct CBufferFactory
{
  CBufferFactoryVtbl *vfptr;
};

/*  955 */
struct CBuffer
{
  char *internal_buffer_;
  char *rd_ptr_;
  char *wr_ptr_;
  unsigned int buffer_size_;
  CBuffer *next_;
  CBuffer *prev_;
  INET_Addr address_;
  CBufferFactory *bufferfactory_;
};

/*  956 */
struct INET_Addr
{
  sockaddr m_SockAddr;
  int m_iAddrLen;
};

/*  957 */
struct CBufferFactoryVtbl
{
  void *(__thiscall *__vecDelDtor)(CBufferFactory *this, unsigned int);
  CBuffer *(__thiscall *Create)(CBufferFactory *this, unsigned int);
  void (__thiscall *Release)(CBufferFactory *this, CBuffer *);
};

/*  958 */
struct CDispatchFactory
{
  CDispatchFactoryVtbl *vfptr;
};

/*  959 */
struct CPacketDispatch
{
  CPacketDispatchVtbl *vfptr;
  CSession *m_Session;
};

/*  960 */
struct CPacketDispatchVtbl
{
  void *(__thiscall *__vecDelDtor)(CPacketDispatch *this, unsigned int);
  bool (__thiscall *ParsePacket)(CPacketDispatch *this, char *const , unsigned int *);
  bool (__thiscall *Dispatch)(CPacketDispatch *this);
  void (__thiscall *Connected)(CPacketDispatch *this);
  void (__thiscall *Disconnected)(CPacketDispatch *this);
};

/*  961 */
struct CSession
{
  CCSLock m_SessionLock;
  char LockPadding[8];
  CSessionPolicy *m_SessionPolicy;
  CPacketDispatch *m_lpDispatch;
  unsigned int m_hSocket;
  INET_Addr m_RemoteAddr;
  INET_Addr m_LocalAddr;
  CBuffer *m_lpRecvBuffer;
  CBufferQueue m_SendQueue;
  unsigned int m_dwRecvPending;
  unsigned int m_dwSendPending;
  int m_nRefCount;
  SessionStatistics m_Statistics;
  char m_cCurrentStatus;
  char m_cFlags;
  unsigned __int16 m_usPadding;
};

/*  962 */
struct CDispatchFactoryVtbl
{
  void *(__thiscall *__vecDelDtor)(CDispatchFactory *this, unsigned int);
  CPacketDispatch *(__thiscall *CreateDispatch)(CDispatchFactory *this, CSession *);
  void (__thiscall *DeleteDispatch)(CDispatchFactory *this, CPacketDispatch *);
};

/*  963 */
struct COverlappedFactory
{
  COverlappedFactoryVtbl *vfptr;
};

/*  964 */
union $A5A483E05FC9B52B872A8DCFA58CFF52
{
  unsigned int Offset;
  void *Pointer;
};

/*  965 */
struct _OVERLAPPED
{
  unsigned int Internal;
  unsigned int InternalHigh;
  $A5A483E05FC9B52B872A8DCFA58CFF52 ___u2;
  unsigned int OffsetHigh;
  void *hEvent;
};

/*  966 */
struct COverlapped
{
  COverlappedVtbl *vfptr;
  _OVERLAPPED baseclass_4;
  COverlappedFactory *m_ovlFactory;
  CBuffer *m_lpBuffer;
};

/*  967 */
struct COverlappedVtbl
{
  void *(__thiscall *__vecDelDtor)(COverlapped *this, unsigned int);
  void (__thiscall *Dispatch)(COverlapped *this, int, unsigned int, unsigned int);
};

/*  968 */
struct CListener
{
  CListenerVtbl *vfptr;
  CCSLock m_ListenerLock;
  char ListenerLockPad[8];
  unsigned int m_hListen;
  INET_Addr m_ListenAddr;
  CCompletionHandler *m_SocketHandler;
  CSessionPolicy *m_SessionPolicy;
  CSessionMgr *m_SessionMgr;
  unsigned int m_dwMaxPending;
  unsigned int m_dwCurrentPending;
  unsigned int m_dwTotalPendingCount;
  unsigned int m_dwTotalAcceptCompleteCount;
  CValidateConnection *m_lpValidateConnection;
};

/*  969 */
struct CListenerVtbl
{
  void *(__thiscall *__vecDelDtor)(CListener *this, unsigned int);
};

/*  970 */
struct CSessionPolicy
{
  CSocketFactory *m_lpSocketFactory;
  CBufferFactory *m_lpBufferFactory;
  CDispatchFactory *m_lpDispatchFactory;
  COverlappedFactory *m_lpOverlappedFactory;
  int m_nRefCount;
};

/*  971 */
struct CSessionMgr
{
  CCSLock m_AddLock;
  std::list<CSession *,std::allocator<CSession *> > m_to_be_added;
  char AddLockPad[20];
  CCSLock m_ProcessLock;
  std::list<CSession *,std::allocator<CSession *> > m_current;
  char ProcessLockPad[20];
  CCSLock m_CreationLock;
  boost::pool<boost::default_user_allocator_new_delete> *m_lpSessionPool;
};

/*  972 */
struct CValidateConnection
{
  CValidateConnectionVtbl *vfptr;
  int m_nRefCount;
};

/*  973 */
struct CValidateConnectionVtbl
{
  bool (__thiscall *operator())(CValidateConnection *this, INET_Addr *, INET_Addr *);
  void *(__thiscall *__vecDelDtor)(CValidateConnection *this, unsigned int);
};

/*  974 */
struct COverlappedFactoryVtbl
{
  void *(__thiscall *__vecDelDtor)(COverlappedFactory *this, unsigned int);
  COverlapped *(__thiscall *CreateSend)(COverlappedFactory *this, CSession *, CBuffer *);
  COverlapped *(__thiscall *CreateRecv)(COverlappedFactory *this, CSession *, CBuffer *);
  COverlapped *(__thiscall *CreateAccept)(COverlappedFactory *this, CListener *, unsigned int, CBuffer *);
  void (__thiscall *DeleteOverlapped)(COverlappedFactory *this, COverlapped *);
};

/*  975 */
struct CBufferQueue
{
  CBufferQueueVtbl *vfptr;
  CBuffer *m_lpHead;
  CBuffer *m_lpTail;
  unsigned int m_bufferNum;
  unsigned int m_queueSize;
  unsigned int m_maxQueueSize;
};

/*  976 */
struct CBufferQueueVtbl
{
  void *(__thiscall *__vecDelDtor)(CBufferQueue *this, unsigned int);
};

/*  977 */
struct SessionStatistics
{
  unsigned int m_dwTotalReceived;
  unsigned int m_dwTotalSendPending;
  unsigned int m_dwTotalSendCompleted;
  int m_ConnectedTime;
  int m_DisconnectedTime;
};

/*  978 */
struct std::list<CSession *,std::allocator<CSession *> >
{
  std::_List_val<CSession *,std::allocator<CSession *> > baseclass_0;
  std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/*  979 */
struct std::_Allocator_base<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node>
{
  char dummy[1];
};

/*  980 */
struct std::allocator<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node>
{
  std::_Allocator_base<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node> baseclass_0;
};

/*  981 */
struct std::_List_nod<CListener *,std::allocator<CListener *> >
{
  std::allocator<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node> _Alnod;
};

/*  982 */
struct std::_Allocator_base<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *>
{
  char dummy[1];
};

/*  983 */
struct std::allocator<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *> baseclass_0;
};

/*  984 */
struct std::_List_ptr<CListener *,std::allocator<CListener *> >
{
  std::_List_nod<CListener *,std::allocator<CListener *> > baseclass_0;
  std::allocator<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *> _Alptr;
};

/*  985 */
struct std::_Allocator_base<CListener *>
{
  char dummy[1];
};

/*  986 */
struct std::allocator<CListener *>
{
  std::_Allocator_base<CListener *> baseclass_0;
};

/*  987 */
struct std::_List_val<CListener *,std::allocator<CListener *> >
{
  std::_List_ptr<CListener *,std::allocator<CListener *> > baseclass_0;
  std::allocator<CListener *> _Alval;
};

/*  988 */
struct std::_List_nod<CListener *,std::allocator<CListener *> >::_Node
{
  std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *_Next;
  std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *_Prev;
  CListener *_Myval;
};

/*  989 */
struct std::list<CListener *,std::allocator<CListener *> >
{
  std::_List_val<CListener *,std::allocator<CListener *> > baseclass_0;
  std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/*  990 */
struct std::binary_function<CSessionPolicy *,CSessionPolicy *,bool>
{
  char dummy[1];
};

/*  991 */
struct std::less<CSessionPolicy *>
{
  std::binary_function<CSessionPolicy *,CSessionPolicy *,bool> baseclass_0;
};

/*  992 */
struct std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0>
{
  std::less<CSessionPolicy *> comp;
};

/*  993 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node>
{
  char dummy[1];
};

/*  994 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node> baseclass_0;
};

/*  995 */
struct std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >
{
  std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node> _Alnod;
};

/*  996 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *>
{
  char dummy[1];
};

/*  997 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *> baseclass_0;
};

/*  998 */
struct std::_Tree_ptr<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *> _Alptr;
};

/*  999 */
struct std::_Allocator_base<std::pair<CSessionPolicy * const,unsigned int> >
{
  char dummy[1];
};

/* 1000 */
struct std::allocator<std::pair<CSessionPolicy * const,unsigned int> >
{
  std::_Allocator_base<std::pair<CSessionPolicy * const,unsigned int> > baseclass_0;
};

/* 1001 */
struct std::_Tree_val<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> > baseclass_0;
  std::allocator<std::pair<CSessionPolicy * const,unsigned int> > _Alval;
};

/* 1002 */
struct std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *_Right;
  std::pair<CSessionPolicy * const,unsigned int> _Myval;
  char _Color;
  char _Isnil;
};

/* 1003 */
struct std::pair<CSessionPolicy * const,unsigned int>
{
  CSessionPolicy *const first;
  unsigned int second;
};

/* 1004 */
struct std::_Tree<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1005 */
struct std::map<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> > >
{
  std::_Tree<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> > baseclass_0;
};

/* 1006 */
struct CIOCPNet
{
  CCSLock m_IOCPLock;
  char SessionLockPad[8];
  CCompletionHandler *m_lpSocketHandler;
  CThreadMgr *m_lpThreadMgr;
  CSessionMgr *m_lpSessionMgr;
  std::list<CListener *,std::allocator<CListener *> > m_ListenerList;
  std::map<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> > > m_SessionPolicyMap;
  unsigned int m_dwFlags;
};

/* 1007 */
struct std::binary_function<unsigned int,unsigned int,bool>
{
  char dummy[1];
};

/* 1008 */
struct std::less<unsigned int>
{
  std::binary_function<unsigned int,unsigned int,bool> baseclass_0;
};

/* 1009 */
struct std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0>
{
  std::less<unsigned int> comp;
};

/* 1010 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node>
{
  char dummy[1];
};

/* 1011 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node> baseclass_0;
};

/* 1012 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >
{
  std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node> _Alnod;
};

/* 1013 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 1014 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *> baseclass_0;
};

/* 1015 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *> _Alptr;
};

/* 1016 */
struct std::_Allocator_base<std::pair<unsigned int const ,CMsgProc *> >
{
  char dummy[1];
};

/* 1017 */
struct std::allocator<std::pair<unsigned int const ,CMsgProc *> >
{
  std::_Allocator_base<std::pair<unsigned int const ,CMsgProc *> > baseclass_0;
};

/* 1018 */
struct std::_Tree_val<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned int const ,CMsgProc *> > _Alval;
};

/* 1019 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *_Right;
  std::pair<unsigned int const ,CMsgProc *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1020 */
struct CMsgProc
{
  CMsgProcVtbl *vfptr;
};

/* 1021 */
struct CMsgProcVtbl
{
  void *(__thiscall *__vecDelDtor)(CMsgProc *this, unsigned int);
  int (__thiscall *operator())(CMsgProc *this, HWND__ *, unsigned int, unsigned int, int);
};

/* 1022 */
struct std::pair<unsigned int const ,CMsgProc *>
{
  const unsigned int first;
  CMsgProc *second;
};

/* 1023 */
struct std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1024 */
struct std::map<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> > >
{
  std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> > baseclass_0;
};

/* 1025 */
struct CMsgProcessMgr
{
  std::map<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> > > m_MessageProcessMap;
};

/* 1026 */
struct std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0>
{
  std::less<unsigned int> comp;
};

/* 1027 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node>
{
  char dummy[1];
};

/* 1028 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node> baseclass_0;
};

/* 1029 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >
{
  std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node> _Alnod;
};

/* 1030 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *>
{
  char dummy[1];
};

/* 1031 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *> baseclass_0;
};

/* 1032 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *> _Alptr;
};

/* 1033 */
struct std::_Allocator_base<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >
{
  char dummy[1];
};

/* 1034 */
struct std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >
{
  std::_Allocator_base<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> > baseclass_0;
};

/* 1035 */
struct std::_Tree_val<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> > _Alval;
};

/* 1036 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *_Right;
  std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> _Myval;
  char _Color;
  char _Isnil;
};

/* 1037 */
struct std::_Allocator_base<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node>
{
  char dummy[1];
};

/* 1038 */
struct std::allocator<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node>
{
  std::_Allocator_base<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node> baseclass_0;
};

/* 1039 */
struct std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >
{
  std::allocator<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node> _Alnod;
};

/* 1040 */
struct std::_Allocator_base<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *>
{
  char dummy[1];
};

/* 1041 */
struct std::allocator<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *> baseclass_0;
};

/* 1042 */
struct std::_List_ptr<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >
{
  std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> > baseclass_0;
  std::allocator<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *> _Alptr;
};

/* 1043 */
struct std::_Allocator_base<CTimerProcMgr::InternalProcessData>
{
  char dummy[1];
};

/* 1044 */
struct std::allocator<CTimerProcMgr::InternalProcessData>
{
  std::_Allocator_base<CTimerProcMgr::InternalProcessData> baseclass_0;
};

/* 1045 */
struct std::_List_val<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >
{
  std::_List_ptr<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> > baseclass_0;
  std::allocator<CTimerProcMgr::InternalProcessData> _Alval;
};

/* 1046 */
struct std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node
{
  std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *_Next;
  std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *_Prev;
  CTimerProcMgr::InternalProcessData _Myval;
};

/* 1047 */
struct CTimerProc
{
  CTimerProcVtbl *vfptr;
};

/* 1048 */
struct CTimerProcVtbl
{
  void *(__thiscall *__vecDelDtor)(CTimerProc *this, unsigned int);
  void (__thiscall *operator())(CTimerProc *this, HWND__ *, unsigned int, unsigned int, unsigned int);
};

/* 1049 */
struct CTimerProcMgr::InternalProcessData
{
  unsigned int m_nProcessID;
  CTimerProc *m_lpTimerProc;
};

/* 1050 */
struct std::list<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >
{
  std::_List_val<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> > baseclass_0;
  std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1051 */
struct CTimerProcMgr::InternalTimerData
{
  HWND__ *m_hOwnerWnd;
  unsigned int m_dwInterval;
  std::list<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> > m_timerProcessList;
};

/* 1052 */
struct std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData>
{
  const unsigned int first;
  CTimerProcMgr::InternalTimerData second;
};

/* 1053 */
struct std::_Tree<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1054 */
struct std::map<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> > >
{
  std::_Tree<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> > baseclass_0;
};

/* 1055 */
struct CTimerProcMgr
{
  std::map<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> > > m_TimerMap;
  unsigned int m_nProcIDCounter;
  unsigned int m_nTimerIDCounter;
};

/* 1056 */
struct CProcessThread
{
  CThread baseclass_0;
  volatile int m_bExit;
  int m_nProcessTick;
  CServerWindowFramework *m_ServerWindowFramework;
};

/* 1057 */
struct CPulse
{
  unsigned int m_dwPulse;
  unsigned int m_dwLastTick;
  unsigned int m_dwHeavyTrafficCount;
  int m_nTicksPerPulse;
  int m_nTicksPerSec;
  int m_bTPPOverTwoTime;
};

/* 1058 */
struct tagCAUL
{
  unsigned int cElems;
  unsigned int *pElems;
};

/* 1059 */
struct tagBSTRBLOB
{
  unsigned int cbSize;
  char *pData;
};

/* 1060 */
struct tagCAH
{
  unsigned int cElems;
  _LARGE_INTEGER *pElems;
};

/* 1061 */
struct in_addr::__unnamed::__unnamed
{
  char s_b1;
  char s_b2;
  char s_b3;
  char s_b4;
};

/* 1062 */
union in_addr::__unnamed
{
  in_addr::__unnamed::__unnamed S_un_b;
  in_addr::__unnamed::__unnamed S_un_w;
  unsigned int S_addr;
};

/* 1063 */
struct in_addr
{
  in_addr::__unnamed S_un;
};

/* 1064 */
struct sockaddr_in
{
  __int16 sin_family;
  unsigned __int16 sin_port;
  in_addr sin_addr;
  char sin_zero[8];
};

/* 1065 */
struct ITypeInfo
{
  IUnknown baseclass_0;
};

/* 1066 */
struct tagCAUI
{
  unsigned int cElems;
  unsigned __int16 *pElems;
};

/* 1067 */
struct tagCAFILETIME
{
  unsigned int cElems;
  _FILETIME *pElems;
};

/* 1068 */
struct CDLLModule
{
  CDLLModuleVtbl *vfptr;
  HINSTANCE__ *m_hDLL;
};

/* 1069 */
struct CDLLModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(CDLLModule *this, unsigned int);
  int (__thiscall *Init)(CDLLModule *this, const char *);
};

/* 1070 */
struct _MINIDUMP_USER_STREAM
{
  unsigned int Type;
  unsigned int BufferSize;
  void *Buffer;
};

/* 1071 */
struct _MINIDUMP_USER_STREAM_INFORMATION
{
  unsigned int UserStreamCount;
  _MINIDUMP_USER_STREAM *UserStreamArray;
};

/* 1072 */
struct _MINIDUMP_CALLBACK_INFORMATION
{
  int (__stdcall *CallbackRoutine)(void *, _MINIDUMP_CALLBACK_INPUT *const , _MINIDUMP_CALLBACK_OUTPUT *);
  void *CallbackParam;
};

/* 1073 */
struct _IMAGEHLP_STACK_FRAME
{
  unsigned __int64 InstructionOffset;
  unsigned __int64 ReturnOffset;
  unsigned __int64 FrameOffset;
  unsigned __int64 StackOffset;
  unsigned __int64 BackingStoreOffset;
  unsigned __int64 FuncTableEntry;
  unsigned __int64 Params[4];
  unsigned __int64 Reserved[5];
  int Virtual;
  unsigned int Reserved2;
};

/* 1074 */
struct _IMAGEHLP_LINE
{
  unsigned int SizeOfStruct;
  void *Key;
  unsigned int LineNumber;
  char *FileName;
  unsigned int Address;
};

/* 1075 */
struct _IMAGEHLP_LINE64
{
  unsigned int SizeOfStruct;
  void *Key;
  unsigned int LineNumber;
  char *FileName;
  unsigned __int64 Address;
};

/* 1076 */
struct CDBGFuncClass
{
  CDLLModule baseclass_0;
  int (__stdcall *MiniDumpWriteDump)(void *, unsigned int, void *, _MINIDUMP_TYPE, _MINIDUMP_EXCEPTION_INFORMATION *const , _MINIDUMP_USER_STREAM_INFORMATION *const , _MINIDUMP_CALLBACK_INFORMATION *const );
  int (__stdcall *SymEnumSymbols)(void *, unsigned __int64, const char *, int (__stdcall *)(_SYMBOL_INFO *, unsigned int, void *), void *);
  unsigned int (__stdcall *SymSetContext)(void *, _IMAGEHLP_STACK_FRAME *, void *);
  int (__stdcall *SymFromAddr)(void *, unsigned __int64, unsigned __int64 *, _SYMBOL_INFO *);
  int (__stdcall *StackWalk)(unsigned int, void *, void *, _tagSTACKFRAME *, void *, int (__stdcall *)(void *, unsigned int, void *, unsigned int, unsigned int *), void *(__stdcall *)(void *, unsigned int), unsigned int (__stdcall *)(void *, unsigned int), unsigned int (__stdcall *)(void *, void *, _tagADDRESS *));
  int (__stdcall *SymGetLineFromAddr)(void *, unsigned int, unsigned int *, _IMAGEHLP_LINE *);
  int (__stdcall *SymGetLineFromAddr64)(void *, unsigned __int64, unsigned int *, _IMAGEHLP_LINE64 *);
  void *(__stdcall *SymFunctionTableAccess)(void *, unsigned int);
  unsigned __int64 (__stdcall *SymGetModuleBase64)(void *, unsigned __int64);
  int (__stdcall *SymInitialize)(void *, char *, int);
  unsigned int (__stdcall *SymSetOptions)(unsigned int);
  int (__stdcall *SymCleanup)(void *);
  unsigned int (__stdcall *SymGetModuleBase)(void *, unsigned int);
  int (__stdcall *SymGetTypeInfo)(void *, unsigned __int64, unsigned int, _IMAGEHLP_SYMBOL_TYPE_INFO, void *);
};

/* 1077 */
struct _SYSTEMTIME
{
  unsigned __int16 wYear;
  unsigned __int16 wMonth;
  unsigned __int16 wDayOfWeek;
  unsigned __int16 wDay;
  unsigned __int16 wHour;
  unsigned __int16 wMinute;
  unsigned __int16 wSecond;
  unsigned __int16 wMilliseconds;
};

/* 1078 */
struct CExceptionReport
{
  CDBGFuncClass m_DBGHELP;
  int (__stdcall *m_lpUserFunc)(char *, const int);
  int (__stdcall *m_OldFilter)(_EXCEPTION_POINTERS *);
  char m_szLogPrefixName[260];
  char m_szModuleName[260];
  char m_szTempBuffer[260];
  char m_szLogBuffer[65535];
  _CONTEXT m_tempContext;
  _SYSTEMTIME m_tempSystemTime;
  _MINIDUMP_EXCEPTION_INFORMATION m_miniDumpInfo;
  _iobuf *m_logFile;
  int m_bHasSymbol;
  unsigned int m_dwFeaturesFlag;
  _MINIDUMP_TYPE m_eMiniDumpType;
};

/* 1079 */
struct tagDISPPARAMS
{
  tagVARIANT *rgvarg;
  int *rgdispidNamedArgs;
  unsigned int cArgs;
  unsigned int cNamedArgs;
};

/* 1080 */
struct tagCLIPDATA
{
  unsigned int cbSize;
  int ulClipFmt;
  char *pClipData;
};

/* 1081 */
struct ISequentialStream
{
  IUnknown baseclass_0;
};

/* 1082 */
struct IStream
{
  ISequentialStream baseclass_0;
};

/* 1083 */
struct IStorage
{
  IUnknown baseclass_0;
};

/* 1084 */
struct tagVersionedStream
{
  _GUID guidVersion;
  IStream *pStream;
};

/* 1085 */
struct tagCAC
{
  unsigned int cElems;
  char *pElems;
};

/* 1086 */
struct tagCAI
{
  unsigned int cElems;
  __int16 *pElems;
};

/* 1087 */
struct tagCAL
{
  unsigned int cElems;
  int *pElems;
};

/* 1088 */
struct tagCAUH
{
  unsigned int cElems;
  _ULARGE_INTEGER *pElems;
};

/* 1089 */
struct tagCAFLT
{
  unsigned int cElems;
  float *pElems;
};

/* 1090 */
struct tagCABOOL
{
  unsigned int cElems;
  __int16 *pElems;
};

/* 1091 */
struct tagCASCODE
{
  unsigned int cElems;
  int *pElems;
};

/* 1092 */
struct tagCADATE
{
  unsigned int cElems;
  long double *pElems;
};

/* 1093 */
struct tagCACLIPDATA
{
  unsigned int cElems;
  tagCLIPDATA *pElems;
};

/* 1094 */
struct tagCABSTRBLOB
{
  unsigned int cElems;
  tagBSTRBLOB *pElems;
};

/* 1095 */
struct tagCALPSTR
{
  unsigned int cElems;
  char **pElems;
};

/* 1096 */
struct tagCALPWSTR
{
  unsigned int cElems;
  unsigned __int16 **pElems;
};

/* 1097 */
struct tagCAPROPVARIANT
{
  unsigned int cElems;
  tagPROPVARIANT *pElems;
};

/* 1098 */
struct tagPROPVARIANT
{
  $D3F1F3477C2F2666195337EFD0AFE78F ___u0;
  _BYTE gapffffffff[17];
};

/* 1099 */
struct $22B9CCDF2105F7147677E0F90F2D292B
{
  unsigned __int16 vt;
  unsigned __int16 wReserved1;
  unsigned __int16 wReserved2;
  unsigned __int16 wReserved3;
  char cVal;
};

/* 1100 */
struct $6D336DA143C556260FF80C12817B08DB
{
  _BYTE gap0[8];
  int lVal;
};

/* 1101 */
struct $B79B401714725CAB95A1643813EC6BDD
{
  _BYTE gap0[8];
  _LARGE_INTEGER hVal;
};

/* 1102 */
struct $522103F8769D1783287F92EF3E2A9846
{
  _BYTE gap0[8];
  _ULARGE_INTEGER uhVal;
};

/* 1103 */
struct $A9B3A6CA4716A00C4F17C666DE6DDECF
{
  _BYTE gap0[8];
  _FILETIME filetime;
};

/* 1104 */
struct $147BB0BCFABD0FF4DA45EA3AD3B53ABC
{
  _BYTE gap0[8];
  _GUID *puuid;
};

/* 1105 */
struct $92068A6E34835840DCFDCFC1CE9217BA
{
  _BYTE gap0[8];
  tagCLIPDATA *pclipdata;
};

/* 1106 */
struct $F2D2955529E5432C8FFD9900B93CB44A
{
  _BYTE gap0[8];
  tagBSTRBLOB bstrblobVal;
};

/* 1107 */
struct $658A3141231244EA32A3BA05BEAA5380
{
  _BYTE gap0[8];
  _BLOB blob;
};

/* 1108 */
struct $17BA733FE6B8BEB3CC80B954432F0727
{
  _BYTE gap0[8];
  char *pszVal;
};

/* 1109 */
struct $EBA1CD9B4FB6C45FF9EDB12F2AB230DE
{
  _BYTE gap0[8];
  unsigned __int16 *pwszVal;
};

/* 1110 */
struct $BD9B269593C996DDF925E4201E4DA583
{
  _BYTE gap0[8];
  IStream *pStream;
};

/* 1111 */
struct $105A86E69A43D0D1CE92CB4EA7759595
{
  _BYTE gap0[8];
  IStorage *pStorage;
};

/* 1112 */
struct $9C9F0666E5154292BF902C4893F283B6
{
  _BYTE gap0[8];
  tagVersionedStream *pVersionedStream;
};

/* 1113 */
struct $97E2F4EE706FF603D3F719FAA4698D04
{
  _BYTE gap0[8];
  tagCAC cac;
};

/* 1114 */
struct $1B523C4253130F023C1AF0180A893AA8
{
  _BYTE gap0[8];
  tagCAUB caub;
};

/* 1115 */
struct $5CDEBF9448585A99621948225718FD27
{
  _BYTE gap0[8];
  tagCAI cai;
};

/* 1116 */
struct $D4E6DAF5CA33188F1A020C2FD652704F
{
  _BYTE gap0[8];
  tagCAUI caui;
};

/* 1117 */
struct $C76BAC4DAEADC8B53430A0FC598BC161
{
  _BYTE gap0[8];
  tagCAL cal;
};

/* 1118 */
struct $9CFFE20A4067C1A9968A2E2C189D9503
{
  _BYTE gap0[8];
  tagCAUL caul;
};

/* 1119 */
struct $E0E0A9C3EC0738612571F8BDE610CCD2
{
  _BYTE gap0[8];
  tagCAH cah;
};

/* 1120 */
struct $0477A1B66C7CDA412E54CF66B254233F
{
  _BYTE gap0[8];
  tagCAUH cauh;
};

/* 1121 */
struct $DD7FA4C648B7232600F9F4443E64BF0A
{
  _BYTE gap0[8];
  tagCAFLT caflt;
};

/* 1122 */
struct $189FD88253269F446F876AECEAC29EC2
{
  _BYTE gap0[8];
  tagCADBL cadbl;
};

/* 1123 */
struct $ADA525106FD0EEC40EC4AA0CA346E268
{
  _BYTE gap0[8];
  tagCABOOL cabool;
};

/* 1124 */
struct $1E8D58782529F04468B994A586AFA1B8
{
  _BYTE gap0[8];
  tagCASCODE cascode;
};

/* 1125 */
struct $1A618566CD90A28A77DD151441FE7E1B
{
  _BYTE gap0[8];
  tagCACY cacy;
};

/* 1126 */
struct $90360FDD3B870BA135C80BB14DC84913
{
  _BYTE gap0[8];
  tagCADATE cadate;
};

/* 1127 */
struct $CADF342CFFA08B6D28584B6A0CC86260
{
  _BYTE gap0[8];
  tagCAFILETIME cafiletime;
};

/* 1128 */
struct $81B0813472F94703527EAA3264BBC504
{
  _BYTE gap0[8];
  tagCACLSID cauuid;
};

/* 1129 */
struct $A0D0FE70220DDE9A3F344F673F7C8A40
{
  _BYTE gap0[8];
  tagCACLIPDATA caclipdata;
};

/* 1130 */
struct $609C16BBF5C7E11508FB5219E911DD0F
{
  _BYTE gap0[8];
  tagCABSTR cabstr;
};

/* 1131 */
struct $21568916C9135DD4497B58F0382CAEA3
{
  _BYTE gap0[8];
  tagCABSTRBLOB cabstrblob;
};

/* 1132 */
struct $A3F7CB77E90D350B4ED16D962E91A91A
{
  _BYTE gap0[8];
  tagCALPSTR calpstr;
};

/* 1133 */
struct $1A58503C1090A7E56588CAA647980A5F
{
  _BYTE gap0[8];
  tagCALPWSTR calpwstr;
};

/* 1134 */
struct $1D1A86368E0D6FAC71E045D37930450F
{
  _BYTE gap0[8];
  tagCAPROPVARIANT capropvar;
};

/* 1135 */
struct $76451EAD8C8BD975495853209BA91F14
{
  _BYTE gap0[8];
  tagPROPVARIANT *pvarVal;
};

/* 1136 */
union $D3F1F3477C2F2666195337EFD0AFE78F
{
  $22B9CCDF2105F7147677E0F90F2D292B _s0;
  tagDEC decVal;
  $F28A51B4B40B0D33C72915D739D42B4B _s2;
  $31126B8528A05AF3606C6D495FD178E8 _s3;
  $48802A31D3D0701BC13CEF9CEA041E7B _s4;
  $6D336DA143C556260FF80C12817B08DB _s5;
  $B644145F46FF1F932B106BFA6CC3F6D9 _s6;
  $5CA90CF57237397281FB12BFD52C1905 _s7;
  $E7F48E2F4EAA3149E57D87E5D1B2C6B8 _s8;
  $B79B401714725CAB95A1643813EC6BDD _s9;
  $522103F8769D1783287F92EF3E2A9846 _s10;
  $50230A970D9734D4E9774CFC619DF0F6 _s11;
  $4C0EC2258454B893CE739DAE89D8DB7B _s12;
  $6DB36323059316E675433BB10D285009 _s13;
  $8E3C8731874D1B3BC66617C4DD3163A6 _s14;
  $82ED792A70CC87F3084D369E38F3A3B1 _s15;
  $E94952165EEA9EEA990FEB33603E1B19 _s16;
  $A9B3A6CA4716A00C4F17C666DE6DDECF _s17;
  $147BB0BCFABD0FF4DA45EA3AD3B53ABC _s18;
  $92068A6E34835840DCFDCFC1CE9217BA _s19;
  $C854646156F6772BF5D6F8470C9CCFAF _s20;
  $F2D2955529E5432C8FFD9900B93CB44A _s21;
  $658A3141231244EA32A3BA05BEAA5380 _s22;
  $17BA733FE6B8BEB3CC80B954432F0727 _s23;
  $EBA1CD9B4FB6C45FF9EDB12F2AB230DE _s24;
  $A4F2B486CAB1C58504E1ADB43F63A13A _s25;
  $64C6939DAE315A454270827E3299D2C0 _s26;
  $BD9B269593C996DDF925E4201E4DA583 _s27;
  $105A86E69A43D0D1CE92CB4EA7759595 _s28;
  $9C9F0666E5154292BF902C4893F283B6 _s29;
  $B65B0966FEEA4A8AB96879B8BFD4D0B6 _s30;
  $97E2F4EE706FF603D3F719FAA4698D04 _s31;
  $1B523C4253130F023C1AF0180A893AA8 _s32;
  $5CDEBF9448585A99621948225718FD27 _s33;
  $D4E6DAF5CA33188F1A020C2FD652704F _s34;
  $C76BAC4DAEADC8B53430A0FC598BC161 _s35;
  $9CFFE20A4067C1A9968A2E2C189D9503 _s36;
  $E0E0A9C3EC0738612571F8BDE610CCD2 _s37;
  $0477A1B66C7CDA412E54CF66B254233F _s38;
  $DD7FA4C648B7232600F9F4443E64BF0A _s39;
  $189FD88253269F446F876AECEAC29EC2 _s40;
  $ADA525106FD0EEC40EC4AA0CA346E268 _s41;
  $1E8D58782529F04468B994A586AFA1B8 _s42;
  $1A618566CD90A28A77DD151441FE7E1B _s43;
  $90360FDD3B870BA135C80BB14DC84913 _s44;
  $CADF342CFFA08B6D28584B6A0CC86260 _s45;
  $81B0813472F94703527EAA3264BBC504 _s46;
  $A0D0FE70220DDE9A3F344F673F7C8A40 _s47;
  $609C16BBF5C7E11508FB5219E911DD0F _s48;
  $21568916C9135DD4497B58F0382CAEA3 _s49;
  $A3F7CB77E90D350B4ED16D962E91A91A _s50;
  $1A58503C1090A7E56588CAA647980A5F _s51;
  $1D1A86368E0D6FAC71E045D37930450F _s52;
  $E1D71D20C3D01115E20D79FAE9629CE8 _s53;
  $166B1F81F6EA96F97683A65F38FB1A59 _s54;
  $76732A64405C0E287FCB302687644550 _s55;
  $5669F5A4AD19EF2CB42A5602080CB0A6 _s56;
  $E5FC128E66C26C95254032BA69D36E74 _s57;
  $886F8AE9D7C8B1B861B6CA58D67B682A _s58;
  $CDA73A427DD2A30CDA26CA3394C33CF0 _s59;
  $2516E53E690D8CC5659AAB7EDC49E664 _s60;
  $BF8CC88CDF129BD6E4FA4ABA13F521AD _s61;
  $2CABE618CF1C2625A4479554E4967E0A _s62;
  $AAA92DA1D6E1B0E8462F69216B62027C _s63;
  $DBCE5BEBC11A9A6FB10BE4EFD703EDDB _s64;
  $F7167AE7A8ABA03C094C204FB1564A28 _s65;
  $A0C3C097A7A1C69CF723E6E79760AEE5 _s66;
  $6857AE69DB7C952EEFD665431A7B503A _s67;
  $0878F16B0390542D20060EB711608720 _s68;
  $B571394016D930A8A23D06F70773B6CC _s69;
  $7ED6DEA95580E4C28BD44F4A3975253B _s70;
  $E08FA03BA2A6EC159A1883B5B2FA14AE _s71;
  $76451EAD8C8BD975495853209BA91F14 _s72;
};

/* 1137 */
struct IRowset
{
  IUnknown baseclass_0;
};

/* 1138 */
struct CNullLog
{
  CNullLogVtbl *vfptr;
};

/* 1139 */
struct CNullLogVtbl
{
  void *(__thiscall *__vecDelDtor)(CNullLog *this, unsigned int);
};

/* 1140 */
struct tagTYPEATTR
{
  _GUID guid;
  unsigned int lcid;
  unsigned int dwReserved;
  int memidConstructor;
  int memidDestructor;
  unsigned __int16 *lpstrSchema;
  unsigned int cbSizeInstance;
  tagTYPEKIND typekind;
  unsigned __int16 cFuncs;
  unsigned __int16 cVars;
  unsigned __int16 cImplTypes;
  unsigned __int16 cbSizeVft;
  unsigned __int16 cbAlignment;
  unsigned __int16 wTypeFlags;
  unsigned __int16 wMajorVerNum;
  unsigned __int16 wMinorVerNum;
  tagTYPEDESC tdescAlias;
  tagIDLDESC idldescType;
};

/* 1141 */
struct POS
{
  float fPointX;
  float fPointY;
  float fPointZ;
};

/* 1142 */
struct _LARGE_INTEGER::__unnamed
{
  unsigned int LowPart;
  int HighPart;
};

/* 1143 */
struct tagDBOBJECT
{
  unsigned int dwFlags;
  _GUID iid;
};

/* 1144 */
struct tagDBBINDEXT
{
  char *pExtension;
  unsigned int ulExtension;
};

/* 1145 */
struct tagDBBINDING
{
  unsigned int iOrdinal;
  unsigned int obValue;
  unsigned int obLength;
  unsigned int obStatus;
  ITypeInfo *pTypeInfo;
  tagDBOBJECT *pObject;
  tagDBBINDEXT *pBindExt;
  unsigned int dwPart;
  unsigned int dwMemOwner;
  unsigned int eParamIO;
  unsigned int cbMaxLen;
  unsigned int dwFlags;
  unsigned __int16 wType;
  char bPrecision;
  char bScale;
};

/* 1146 */
struct tagDBCOLUMNINFO
{
  unsigned __int16 *pwszName;
  ITypeInfo *pTypeInfo;
  unsigned int iOrdinal;
  unsigned int dwFlags;
  unsigned int ulColumnSize;
  unsigned __int16 wType;
  char bPrecision;
  char bScale;
  _BYTE gap18[24];
};

/* 1147 */
struct ServerInfo::sSrvState
{
  unsigned __int16 wError;
  unsigned __int16 wSrvState;
};

/* 1148 */
union ServerInfo
{
  ServerInfo::sSrvState SrvState;
  unsigned int dwServerInfo;
};

/* 1149 */
struct PktBase
{
  char m_StartBit;
  char m_Cmd;
  unsigned __int16 m_Len;
  unsigned int m_CodePage;
  ServerInfo m_SrvInfo;
};

/* 1150 */
struct OleDB::_COL_INFO
{
  char ColName[100];
  unsigned int ColSize;
};

/* 1151 */
struct OleDB::_RESULT_COLS
{
  unsigned int ColNum;
  tagDBCOLUMNINFO *lpDBColumnInfo;
  unsigned __int16 *lpStringsBuffer;
};

/* 1152 */
struct OleDB::_PARAM_INFO
{
  unsigned int ColNum;
  unsigned int eParamIO[30];
  unsigned int ColSize[30];
  unsigned __int16 ColType[30];
};

/* 1153 */
struct OleDB::_SET_BINARY
{
  unsigned int Size;
};

/* 1154 */
struct IDBInitialize
{
  IUnknown baseclass_0;
};

/* 1155 */
struct IDBCreateSession
{
  IUnknown baseclass_0;
};

/* 1156 */
struct IDBCreateCommand
{
  IUnknown baseclass_0;
};

/* 1157 */
struct IRowsetChange
{
  IUnknown baseclass_0;
};

/* 1158 */
struct OleDB
{
  OleDBVtbl *vfptr;
  unsigned __int16 m_QueryText[8192];
  OleDB::_COL_INFO m_ColInfo;
  IDBInitialize *m_pIDBInit;
  IDBCreateSession *m_pIDBCreateSession;
  IDBCreateCommand *m_pIDBCreateCommand;
  IRowset *m_pIRowset;
  IRowsetChange *m_pIRowsetChange;
  HRESULT m_dwLastError;
  char m_ErrorString[512];
};

/* 1159 */
struct OleDBVtbl
{
  void *(__thiscall *__vecDelDtor)(OleDB *this, unsigned int);
};

/* 1160 */
struct IEnumSTATSTG
{
  IUnknown baseclass_0;
};

/* 1161 */
struct ITypeLib
{
  IUnknown baseclass_0;
};

/* 1162 */
struct CLock<CSpinLock>
{
  char dummy[1];
};

/* 1163 */
struct CServerSetup
{
  CServerSetupVtbl *vfptr;
  unsigned int m_ServerID;
  unsigned int m_dwLimitVer;
  unsigned int m_dwClientVer;
  char m_chPatchAddr[260];
  unsigned int m_dwBillingType;
  unsigned int m_dwAuthType;
  bool m_bPingCheck;
  bool m_bAlone;
  bool m_bHanCheck;
  bool m_bHackCheck;
  bool m_bAdminIPCheck;
  bool m_bDuelModeCheck;
  bool m_bLotteryEvent;
  bool m_bLevelUpEvent;
  bool m_bDeathPenaltyEvent;
  bool m_bFreeCheck;
  bool m_bIgnoreFlag;
  bool m_bBattleAuth;
  bool m_bBattleGame;
  bool m_bBattleAgent;
  bool m_bSupressCharCreate;
  bool m_bSupressCharDelete;
  bool m_bTestGroupAuth;
  bool m_bChatToolIPCheck;
  char m_cRestrictedPart1ToPart2Level;
  char m_cMaxTransferPart1ToPart2Count;
  unsigned int m_dwUserLimit;
  unsigned int m_dwCheckSum;
  unsigned int m_dwExp;
  unsigned int m_dwDrop;
  unsigned int m_dwMinFame;
  unsigned int m_dwMaxFame;
  unsigned __int16 m_wBattleLimit;
  INET_Addr m_ServerAddress[8];
  INET_Addr m_GameServerUDPAddr;
  INET_Addr m_HanUnitedBillingAddr;
  INET_Addr m_Part1UnifiedAgentAddr;
  INET_Addr m_P1GameServerUDPAddr;
  CServerSetup::DBInfo m_stPart1UnifiedDBInfo;
  CServerSetup::DBInfo m_stAdminToolDBInfo;
  CServerSetup::DBInfo m_stKeeperDBInfo;
  CServerSetup::DBInfo m_stAuthDBInfo;
  CServerSetup::DBInfo m_stGameDBInfo;
  CServerSetup::DBInfo m_stLogDBInfo;
  unsigned int m_dwGameContentsFlag;
  GameRYL::ServiceNation m_eNationType;
  std::vector<unsigned long,std::allocator<unsigned long> > m_vecAdminUID;
  UnifiedConst::AgentServerType m_eAgentServerType;
  unsigned int m_dwSelectableUnifiedServerNum;
};

/* 1164 */
struct CServerSetupVtbl
{
  void *(__thiscall *__vecDelDtor)(CServerSetup *this, unsigned int);
};

/* 1165 */
struct CServerSetup::DBInfo
{
  OleDB::ConnType m_ConnType;
  char m_szDBAddr[128];
  char m_szDBName[128];
  char m_szDBUser[128];
  char m_szDBPass[128];
};

/* 1166 */
struct CLimitUserByIP
{
  CValidateConnection baseclass_0;
  CCSLock m_LimitLock;
  std::vector<unsigned long,std::allocator<unsigned long> > m_AllowIPList;
  CLimitUserByIP::AllowMode_t m_eAllowMode;
};

/* 1167 */
struct CRylGameServer
{
  CServerWindowFramework baseclass_0;
  CSessionPolicy *m_lpClientPolicy;
  CSessionPolicy *m_lpRegularAgentPolicy;
  CSessionPolicy *m_lpAgentPolicy;
  CSessionPolicy *m_lpChatPolicy;
  CSessionPolicy *m_lpLogPolicy;
  CLimitUserByIP *m_lpClientLimit;
  bool m_bStartServer;
  bool m_bInitialized;
};

/* 1168 */
#pragma pack(push, 1)
struct PARTY
{
  unsigned int m_dwPartyID;
  unsigned int m_dwLeaderID;
  char m_cMemberNum;
  char Name[10][16];
  unsigned int MemberCID[10];
  unsigned int ServerID[10];
  unsigned __int16 m_wClass[10];
  char m_cLevel[10];
  unsigned int m_dwGID[10];
};
#pragma pack(pop)

/* 1169 */
#pragma pack(push, 1)
struct PARTY_EX
{
  PARTY baseclass_0;
  bool m_bAutoRouting[10];
  POS m_Position[10];
};
#pragma pack(pop)

/* 1170 */
union $120E61AC29AE28E1F58D541496B9DC70
{
  CLock<CSpinLock> baseclass_0;
  volatile int m_bLocked;
};

/* 1171 */
struct CSpinLock
{
  $120E61AC29AE28E1F58D541496B9DC70 ___u0;
};

/* 1172 */
struct _KDHELP64
{
  unsigned __int64 Thread;
  unsigned int ThCallbackStack;
  unsigned int ThCallbackBStore;
  unsigned int NextCallback;
  unsigned int FramePointer;
  unsigned __int64 KiCallUserMode;
  unsigned __int64 KeUserCallbackDispatcher;
  unsigned __int64 SystemRangeStart;
  unsigned __int64 Reserved[8];
};

/* 1173 */
struct CLock<CNamedMutex>
{
  char dummy[1];
};

/* 1174 */
union $78CFCE4DAC1AB95CE3C5FCA2C9CCC580
{
  CLock<CNamedMutex> baseclass_0;
  void *m_hMutex;
};

/* 1175 */
struct CNamedMutex
{
  $78CFCE4DAC1AB95CE3C5FCA2C9CCC580 ___u0;
};

/* 1176 */
#pragma pack(push, 1)
struct QUICKSLOT
{
  char nType;
  char nSkillLockCount;
  char nSkillLevel;
  unsigned __int16 wID;
};
#pragma pack(pop)

/* 1177 */
struct CPerformanceInstrument
{
  _LARGE_INTEGER m_startTime;
  _LARGE_INTEGER m_stopTime;
  char *m_szfunctionName;
};

/* 1178 */
struct CLock<CMutex>
{
  char dummy[1];
};

/* 1179 */
union $9D11093B66D4E70D28C6FB0D9DECAC60
{
  CLock<CMutex> baseclass_0;
  void *m_hMutex;
};

/* 1180 */
struct CMutex
{
  $9D11093B66D4E70D28C6FB0D9DECAC60 ___u0;
};

/* 1181 */
struct CLock<CDummyLock>
{
  char dummy[1];
};

/* 1182 */
struct CDummyLock
{
  CLock<CDummyLock> baseclass_0;
};

/* 1183 */
struct PktBlockCompressedBase
{
  unsigned __int16 m_usLength;
  char m_cCommand;
  char m_cExtra;
};

/* 1184 */
struct CServerLog
{
  CServerLogVtbl *vfptr;
  __declspec(align(8)) CCSLock m_ServerLogLock;
  unsigned __int64 m_dwTotalFileWriteSize;
  unsigned __int64 m_dwTotalLoggedSize;
  unsigned int m_dwCurrentFileWriteSize;
  void *m_hFile;
  unsigned int m_dwBufferUsed;
  unsigned int m_dwLogEnabled;
  char m_szProgramName[260];
  char m_szLogPath[260];
  char *m_lpBuffer;
};

/* 1185 */
struct CServerLogVtbl
{
  void *(__thiscall *__vecDelDtor)(CServerLog *this, unsigned int);
};

/* 1186 */
struct CLogSaveThread
{
  CThread baseclass_0;
  volatile int m_bEnd;
  void *m_hFlush;
  void *m_hFile;
  unsigned int m_dwTotalWritten;
  std::list<LogBuffer *,std::allocator<LogBuffer *> > m_WriteBufferList;
  char m_szLogFileName[260];
};

/* 1187 */
struct CGameLog
{
  CCSLock m_LogBufferLock;
  std::list<LogBuffer *,std::allocator<LogBuffer *> > m_FreeList;
  std::list<LogBuffer *,std::allocator<LogBuffer *> > m_FullList;
  CLogSaveThread m_LogSaveThread;
  LogBuffer *m_lpLogBuffer;
  int m_time;
  char m_szLogFilePrefix[260];
};

/* 1188 */
struct QUICK
{
  QUICKSLOT Slots[20];
};

/* 1189 */
#pragma pack(push, 1)
struct USER_INFO
{
  unsigned int CharID[5];
  char Nation;
  char OldServerGroupID;
  char FirstLogin;
};
#pragma pack(pop)

/* 1190 */
struct CAutoInstrument
{
  CPerformanceInstrument *m_PerformanceInstrument;
};

/* 1191 */
struct CLock<CCSLock>::Syncronize
{
  CCSLock *m_Lock;
};

/* 1192 */
struct _CHAR_POS
{
  POS LastPoint;
  POS SavePoint;
};

/* 1193 */
#pragma pack(push, 1)
struct FieldObject
{
  unsigned __int64 m_nOID;
  unsigned int m_dwTypeID;
  unsigned __int16 m_usXPos;
  unsigned __int16 m_usYPos;
  unsigned __int16 m_usZPos;
  char m_cNum;
};
#pragma pack(pop)

/* 1194 */
struct EliteBonus::EliteBonusData
{
  char m_cNation;
  char m_cLevel;
};

/* 1195 */
#pragma pack(push, 1)
struct CHAR_INFOST
{
  unsigned int CID;
  char Name[16];
  char Sex;
  char Hair;
  char Face;
  char Race;
  unsigned __int16 Class;
  unsigned int Fame;
  unsigned int Mileage;
  unsigned int GID;
  unsigned int PID;
  char Level;
  unsigned int Gold;
  unsigned __int16 IP;
  unsigned __int16 STR;
  unsigned __int16 DEX;
  unsigned __int16 CON;
  unsigned __int16 INT;
  unsigned __int16 WIS;
  __int16 HP;
  __int16 MP;
  __int64 Exp;
  char Chance;
};
#pragma pack(pop)

/* 1196 */
struct std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1>
{
  std::less<unsigned long> comp;
};

/* 1197 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::_Node>
{
  char dummy[1];
};

/* 1198 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::_Node> baseclass_0;
};

/* 1199 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >
{
  std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::_Node> _Alnod;
};

/* 1200 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::_Node *>
{
  char dummy[1];
};

/* 1201 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::_Node *> baseclass_0;
};

/* 1202 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::_Node *> _Alptr;
};

/* 1203 */
struct std::_Allocator_base<std::pair<unsigned long const ,unsigned long> >
{
  char dummy[1];
};

/* 1204 */
struct std::allocator<std::pair<unsigned long const ,unsigned long> >
{
  std::_Allocator_base<std::pair<unsigned long const ,unsigned long> > baseclass_0;
};

/* 1205 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,unsigned long> > _Alval;
};

/* 1206 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::_Node *_Right;
  std::pair<unsigned long const ,unsigned long> _Myval;
  char _Color;
  char _Isnil;
};

/* 1207 */
struct std::pair<unsigned long const ,unsigned long>
{
  const unsigned int first;
  unsigned int second;
};

/* 1208 */
struct std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1209 */
struct std::multimap<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> > baseclass_0;
};

/* 1210 */
struct CXRefBans
{
  std::multimap<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > > m_XRefTable;
};

/* 1211 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,unsigned long>,int,std::pair<unsigned long const ,unsigned long> const *,std::pair<unsigned long const ,unsigned long> const &>
{
  char dummy[1];
};

/* 1212 */
struct std::_Bidit<std::pair<unsigned long const ,unsigned long>,int,std::pair<unsigned long const ,unsigned long> const *,std::pair<unsigned long const ,unsigned long> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,unsigned long>,int,std::pair<unsigned long const ,unsigned long> const *,std::pair<unsigned long const ,unsigned long> const &> baseclass_0;
};

/* 1213 */
union $2D3011B43ED3D632B1C85A4E1E31B659
{
  std::_Bidit<std::pair<unsigned long const ,unsigned long>,int,std::pair<unsigned long const ,unsigned long> const *,std::pair<unsigned long const ,unsigned long> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::_Node *_Ptr;
};

/* 1214 */
struct std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::const_iterator
{
  $2D3011B43ED3D632B1C85A4E1E31B659 ___u0;
};

/* 1215 */
struct std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::const_iterator baseclass_0;
};

/* 1216 */
struct CCreature
{
  CCreatureVtbl *vfptr;
  Position m_CurrentPos;
  MotionInfo m_MotionInfo;
  EnchantInfo m_EnchantInfo;
  unsigned int m_dwCID;
  char m_cAttackableCreatureType;
};

/* 1217 */
struct Item::CItem
{
  Item::CItemVtbl *vfptr;
  Item::ItemInfo *m_ItemInfo;
  Item::ItemData m_ItemData;
  Item::ItemPos m_itemPos_Real;
  char m_cMaxNumOrDurability;
  unsigned int m_dwStallPrice;
  unsigned int m_dwPrice;
};

/* 1218 */
struct Item::CItemVtbl
{
  bool (__thiscall *SerializeOut)(Item::CItem *this, char *, unsigned int *);
  bool (__thiscall *SerializeIn)(Item::CItem *this, const char *, unsigned int *);
  unsigned int (__thiscall *GetBuyPrice)(Item::CItem *this);
  unsigned int (__thiscall *GetSellPrice)(Item::CItem *this);
  unsigned int (__thiscall *GetRepairPrice)(Item::CItem *this);
  unsigned int (__thiscall *GetUpgradePrice)(Item::CItem *this);
  unsigned int (__thiscall *GetGraftPrice)(Item::CItem *this);
  void *(__thiscall *__vecDelDtor)(Item::CItem *this, unsigned int);
};

/* 1219 */
struct Item::DetailData
{
  unsigned int m_dwPrice;
  unsigned int m_dwBlackPrice;
  unsigned int m_dwMedalPrice;
  unsigned __int16 m_wDropOption;
  char m_cGrade;
  char m_cCriticalType;
  char m_cAttackRange;
  char m_cItemType;
  char m_cXSize;
  char m_cYSize;
  char m_cMaxSocketNum;
  char m_cDefaultDurabilityOrStack;
  char m_cMaxDurabilityOrStack;
  char m_cMinDropLevel;
  char m_cMaxDropLevel;
  unsigned __int16 m_wLowLimitLevel;
  unsigned __int16 m_wHighLimitLevel;
  bool m_bExchangeAndDrop;
  bool m_bSell;
  bool m_bOptionPrice;
  unsigned int m_dwFlags;
};

/* 1220 */
struct Item::UseLimit
{
  unsigned int m_dwClassLimit;
  char m_cLimitStatus;
  unsigned __int16 m_wLimitValue;
};

/* 1221 */
struct Item::SpriteData
{
  char m_szName[64];
  char m_szSpriteName[32];
  unsigned __int16 m_nSpriteMinX;
  unsigned __int16 m_nSpriteMinY;
  unsigned __int16 m_nSpriteMaxX;
  unsigned __int16 m_nSpriteMaxY;
};

/* 1222 */
struct Item::StringData
{
  char m_szFieldModelName[32];
  char m_szEquipModelName[32];
  char m_szEffectSoundName[32];
  char m_szTypeName[32];
  char m_szItemDescribe[256];
};

/* 1223 */
struct Item::EquipAttribute
{
  unsigned __int16 m_usAttributeValue[22];
  unsigned __int16 m_nAttibuteNum;
};

/* 1224 */
struct Position
{
  float m_fPointX;
  float m_fPointY;
  float m_fPointZ;
};

/* 1225 */
struct Item::UseItemInfo
{
  Position m_Pos;
  char m_cZone;
  unsigned int m_dwAmount;
  unsigned __int16 m_usSkill_ID;
  unsigned __int16 m_usSkill_LockCount;
  unsigned __int16 m_wQuestID;
  char m_cLimitRealmPoint;
  bool m_bForStatueWar;
};

/* 1226 */
const struct Item::ItemInfo
{
  unsigned __int16 m_usProtoTypeID;
  Item::DetailData m_DetailData;
  Item::UseLimit m_UseLimit;
  Item::SpriteData m_SpriteData;
  Item::StringData m_StringData;
  Item::EquipAttribute m_EquipAttribute;
  Item::UseItemInfo m_UseItemInfo;
};

/* 1227 */
struct Item::ItemPos
{
  __int16 _bf0;
};

/* 1228 */
#pragma pack(push, 1)
struct Item::ItemData
{
  unsigned __int64 m_dwUID;
  unsigned __int16 m_usProtoTypeID;
  Item::ItemPos m_ItemPos;
  char m_cItemSize;
  char m_cNumOrDurability;
};
#pragma pack(pop)

/* 1229 */
struct Item::ItemAttribute
{
  __int16 _bf0;
};

/* 1230 */
struct Item::Grade::GradeInfo
{
  Item::EquipType::Grade m_eItemGrade;
  char m_cPlus;
  Item::EquipType::Grade m_aryAttributeGrade[22];
};

/* 1231 */
struct Item::CEquipment
{
  Item::CItem baseclass_0;
  char m_cSocket[8];
  Item::ItemAttribute m_SocketAttribute[16];
  Item::ItemAttribute m_UpgradeAttribute[6];
  unsigned __int16 m_usRuneSocket[2];
  __int16 m_wAttribute[22];
  char m_cUpgradeLevel;
  char m_cSocketNum;
  char m_cMaxSocket;
  char m_cMaxAttribute;
  char m_cSeasonRecord;
  Item::Grade::GradeInfo m_GradeInfo;
  char m_cUpgradeCnt;
};

/* 1232 */
struct CAggresiveCreature
{
  CCreature baseclass_0;
  unsigned int m_dwLastTime;
  CParty *m_pParty;
  CThreat m_Threat;
  CharacterStatus m_CharacterStatus;
  CreatureStatus m_CreatureStatus;
  FightStatus m_EquipStatus;
  CSpellMgr m_SpellMgr;
  unsigned __int16 m_aryEnchantLevel[50];
  CellPosition m_CellPos;
  bool m_bLogout;
  bool m_bSitDown;
  bool m_bPadding[2];
};

/* 1233 */
#pragma pack(push, 1)
struct CCharacter
{
  CAggresiveCreature baseclass_0;
  CharacterFightInfo m_FightInfo;
  Item::CInventoryContainer m_Inventory;
  Item::CEquipmentsContainer m_Equipments;
  Item::CListContainer m_ExtraSpace;
  Item::CExchangeContainer m_Exchange;
  Item::CDepositContainer m_Deposit;
  Item::CCharacterShopContainer m_Stall;
  Item::CTempInvenContainer m_TempInven;
  std::vector<unsigned long,std::allocator<unsigned long> > m_GivenItemList;
  CFriendList m_friendList;
  CBanList m_banList;
  unsigned __int16 m_wHistoryQuest[100];
  Quest::ExecutingQuest m_ExecutingQuest[20];
  CharacterDBData m_DBData;
  RejectOption m_RejectOption;
  __declspec(align(2)) FightStatus m_EtcTypeStatus[4];
  unsigned int m_dwUID;
  unsigned int m_dwSessionID;
  unsigned int m_dwLastShoutTime;
  unsigned int m_dwLastSendPartyAttackInfoTime;
  int m_nLogoutCount;
  int m_nDBUpdateCount;
  unsigned int m_dwExchangeID;
  char m_cGMModelFlag;
  __declspec(align(4)) CGameClientDispatch *m_lpGameClientDispatch;
  CMonster *m_lpSummonee;
  unsigned int m_dwLastUpdateExTime;
  unsigned int m_dwRideArmsCID;
  unsigned int m_dwProtectGateCID;
  unsigned int m_dwRespawnSpeed;
  CCharacter::LAST_DEAD_TYPE m_eLastDeadType;
  Broadcast2nd::CSerializeCharacterData m_SerializeCharacterData;
  char m_szAccountName[16];
  char m_cUsingMastery[2];
  char m_cConsumeMPCount;
  char m_cOperationFlags;
  char m_cHandPos;
  char m_cMoveUpdateExCount;
  bool m_bChatBan;
  char m_cNameChangeCount;
  char m_cGuildWarFlag;
  char m_cRealmWarFlag;
  char m_cTactics;
  char m_cRealmPoint;
  char m_cAccountNation;
  char m_bPadding[3];
};
#pragma pack(pop)

/* 1234 */
struct CharacterFightInfo
{
  CCharacter *m_pDuelOpponent;
  POS m_Pos;
  unsigned int m_dwCellID;
  __int64 m_nRestoreExp;
};

/* 1235 */
struct Item::CItemContainer
{
  Item::CItemContainerVtbl *vfptr;
  Item::CItem **m_lppItems;
  Item::CItem *m_lpNullItem;
  unsigned int m_dwCID;
  unsigned __int16 m_nMaxSize;
  unsigned __int16 m_usFlags;
};

/* 1236 */
struct Item::CItemContainerVtbl
{
  void *(__thiscall *__vecDelDtor)(Item::CItemContainer *this, unsigned int);
  Item::CItem *(__thiscall *GetItem)(Item::CItemContainer *this, Item::ItemPos);
  bool (__thiscall *SetItem)(Item::CItemContainer *this, Item::ItemPos, Item::CItem *);
  bool (__thiscall *RemoveItem)(Item::CItemContainer *this, Item::ItemPos);
  bool (__thiscall *SerializeOut)(Item::CItemContainer *this, char *, unsigned int *);
  bool (__thiscall *SerializeIn)(Item::CItemContainer *this, const char *, unsigned int);
  void (__thiscall *DumpItemInfo)(Item::CItemContainer *this);
  void (__thiscall *Destroy)(Item::CItemContainer *this);
};

/* 1237 */
struct Item::CArrayContainer
{
  Item::CItemContainer baseclass_0;
  char m_nXSize;
  char m_nYSize;
  char m_nTabNum;
  char m_nSizePerTab;
};

/* 1238 */
struct Item::CInventoryContainer
{
  Item::CArrayContainer baseclass_0;
  bool m_bAdminToolFlag;
};

/* 1239 */
struct Item::CListContainer
{
  Item::CItemContainer baseclass_0;
};

/* 1240 */
struct Item::CEquipmentsContainer
{
  Item::CListContainer baseclass_0;
  CCharacter *m_lpOwner;
  char m_cRightHand;
  char m_cLeftHand;
};

/* 1241 */
struct Item::CExchangeContainer
{
  Item::CArrayContainer baseclass_0;
  CCharacter *m_lpOwner;
  CCharacter *m_lpExchangeCharacter;
  unsigned int m_dwGold;
  bool m_bLock;
  bool m_bAccept;
  char m_cPadding[2];
};

/* 1242 */
struct Item::CDepositContainer
{
  Item::CItemContainer baseclass_0;
  Item::CArrayContainer *m_lpArrayContainer;
  CCharacter *m_lpOwner;
  unsigned int m_dwTabFlag;
  unsigned int m_dwGold;
  char m_szPassword[4];
  char m_nXSize;
  char m_nYSize;
  char m_nTabNum;
  bool m_bLoginSuccess;
};

/* 1243 */
struct Item::CShopContainer
{
  Item::CArrayContainer baseclass_0;
  unsigned int m_aryCustomerID[10];
};

/* 1244 */
struct Item::CCharacterShopContainer
{
  Item::CShopContainer baseclass_0;
  unsigned int m_dwOtherOwnerID;
  char m_strStallName[32];
};

/* 1245 */
struct Item::CTempInvenContainer
{
  Item::CListContainer baseclass_0;
  CCharacter *m_lpOwner;
  char m_cItemNum;
};

/* 1246 */
struct CXRefFriends
{
  std::multimap<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > > m_XRefTable;
};

/* 1247 */
struct std::_Allocator_base<CFriendList::Rebind>
{
  char dummy[1];
};

/* 1248 */
struct std::allocator<CFriendList::Rebind>
{
  std::_Allocator_base<CFriendList::Rebind> baseclass_0;
};

/* 1249 */
struct std::_Vector_val<CFriendList::Rebind,std::allocator<CFriendList::Rebind> >
{
  std::allocator<CFriendList::Rebind> _Alval;
};

/* 1250 */
#pragma pack(push, 1)
struct FriendInfo
{
  unsigned int m_dwCID;
  unsigned int m_dwStatusFlag;
  char m_szName[16];
  unsigned int m_dwGID;
  unsigned __int16 m_wClass;
  char m_cLevel;
  unsigned int m_dwServerID;
};
#pragma pack(pop)

/* 1251 */
struct CFriendList::Rebind
{
  std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::iterator m_XRefItr;
  FriendInfo m_friendInfo;
};

/* 1252 */
struct std::vector<CFriendList::Rebind,std::allocator<CFriendList::Rebind> >
{
  std::_Vector_val<CFriendList::Rebind,std::allocator<CFriendList::Rebind> > baseclass_0;
  CFriendList::Rebind *_Myfirst;
  CFriendList::Rebind *_Mylast;
  CFriendList::Rebind *_Myend;
};

/* 1253 */
struct CFriendList
{
  unsigned int m_dwOwnerCID;
  CXRefFriends *m_lpXRefTable;
  std::vector<CFriendList::Rebind,std::allocator<CFriendList::Rebind> > m_friendList;
};

/* 1254 */
struct std::_Allocator_base<CBanList::Rebind>
{
  char dummy[1];
};

/* 1255 */
struct std::allocator<CBanList::Rebind>
{
  std::_Allocator_base<CBanList::Rebind> baseclass_0;
};

/* 1256 */
struct std::_Vector_val<CBanList::Rebind,std::allocator<CBanList::Rebind> >
{
  std::allocator<CBanList::Rebind> _Alval;
};

/* 1257 */
#pragma pack(push, 1)
struct BanInfo
{
  unsigned int m_dwCID;
  char m_szName[16];
  unsigned int m_dwGID;
  unsigned __int16 m_wClass;
  char m_cLevel;
  unsigned int m_dwServerID;
};
#pragma pack(pop)

/* 1258 */
struct CBanList::Rebind
{
  std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::iterator m_XRefItr;
  BanInfo m_banInfo;
};

/* 1259 */
struct std::vector<CBanList::Rebind,std::allocator<CBanList::Rebind> >
{
  std::_Vector_val<CBanList::Rebind,std::allocator<CBanList::Rebind> > baseclass_0;
  CBanList::Rebind *_Myfirst;
  CBanList::Rebind *_Mylast;
  CBanList::Rebind *_Myend;
};

/* 1260 */
struct CBanList
{
  std::vector<CBanList::Rebind,std::allocator<CBanList::Rebind> > m_banList;
  CXRefBans *m_lpXRefTable;
  unsigned int m_dwOwnerCID;
};

/* 1261 */
struct std::_Allocator_base<Quest::PhaseNode *>
{
  char dummy[1];
};

/* 1262 */
struct std::allocator<Quest::PhaseNode *>
{
  std::_Allocator_base<Quest::PhaseNode *> baseclass_0;
};

/* 1263 */
struct std::_Vector_val<Quest::PhaseNode *,std::allocator<Quest::PhaseNode *> >
{
  std::allocator<Quest::PhaseNode *> _Alval;
};

/* 1264 */
struct std::_Allocator_base<Quest::PhaseNode::DeletedItem>
{
  char dummy[1];
};

/* 1265 */
struct std::allocator<Quest::PhaseNode::DeletedItem>
{
  std::_Allocator_base<Quest::PhaseNode::DeletedItem> baseclass_0;
};

/* 1266 */
struct std::_Vector_val<Quest::PhaseNode::DeletedItem,std::allocator<Quest::PhaseNode::DeletedItem> >
{
  std::allocator<Quest::PhaseNode::DeletedItem> _Alval;
};

/* 1267 */
struct Quest::PhaseNode::DeletedItem
{
  unsigned __int16 m_wItemID;
  char m_cItemNum;
};

/* 1268 */
struct std::vector<Quest::PhaseNode::DeletedItem,std::allocator<Quest::PhaseNode::DeletedItem> >
{
  std::_Vector_val<Quest::PhaseNode::DeletedItem,std::allocator<Quest::PhaseNode::DeletedItem> > baseclass_0;
  Quest::PhaseNode::DeletedItem *_Myfirst;
  Quest::PhaseNode::DeletedItem *_Mylast;
  Quest::PhaseNode::DeletedItem *_Myend;
};

/* 1269 */
struct std::_Allocator_base<Quest::TriggerNode *>
{
  char dummy[1];
};

/* 1270 */
struct std::allocator<Quest::TriggerNode *>
{
  std::_Allocator_base<Quest::TriggerNode *> baseclass_0;
};

/* 1271 */
struct std::_Vector_val<Quest::TriggerNode *,std::allocator<Quest::TriggerNode *> >
{
  std::allocator<Quest::TriggerNode *> _Alval;
};

/* 1272 */
struct std::_Allocator_base<Quest::EventNode *>
{
  char dummy[1];
};

/* 1273 */
struct std::allocator<Quest::EventNode *>
{
  std::_Allocator_base<Quest::EventNode *> baseclass_0;
};

/* 1274 */
struct std::_Vector_val<Quest::EventNode *,std::allocator<Quest::EventNode *> >
{
  std::allocator<Quest::EventNode *> _Alval;
};

/* 1275 */
struct Quest::EventNode
{
  unsigned int m_dwEventKind;
  unsigned int m_dwEventNumber;
  unsigned int m_dwEventAmount1;
  unsigned int m_dwEventAmount2;
  unsigned int m_dwEventAmount3;
  float m_fPosX;
  float m_fPosY;
  float m_fPosZ;
};

/* 1276 */
struct std::vector<Quest::EventNode *,std::allocator<Quest::EventNode *> >
{
  std::_Vector_val<Quest::EventNode *,std::allocator<Quest::EventNode *> > baseclass_0;
  Quest::EventNode **_Myfirst;
  Quest::EventNode **_Mylast;
  Quest::EventNode **_Myend;
};

/* 1277 */
struct Quest::TriggerNode
{
  unsigned int m_dwTriggerKind;
  unsigned int m_dwTriggerID;
  unsigned int m_dwZoneID;
  unsigned int m_dwMaxCount;
  unsigned int m_dwLevel;
  float m_fPosX;
  float m_fPosY;
  float m_fPosZ;
  float m_fDistance;
  std::vector<Quest::EventNode *,std::allocator<Quest::EventNode *> > m_lstEvent;
  std::vector<Quest::EventNode *,std::allocator<Quest::EventNode *> > m_lstFalseEvent;
};

/* 1278 */
struct std::vector<Quest::TriggerNode *,std::allocator<Quest::TriggerNode *> >
{
  std::_Vector_val<Quest::TriggerNode *,std::allocator<Quest::TriggerNode *> > baseclass_0;
  Quest::TriggerNode **_Myfirst;
  Quest::TriggerNode **_Mylast;
  Quest::TriggerNode **_Myend;
};

/* 1279 */
struct Quest::PhaseNode
{
  unsigned int m_dwZondID;
  unsigned int m_dwPhaseNumber;
  std::vector<Quest::PhaseNode::DeletedItem,std::allocator<Quest::PhaseNode::DeletedItem> > m_lstDeletedItem;
  std::vector<Quest::TriggerNode *,std::allocator<Quest::TriggerNode *> > m_lstTrigger;
};

/* 1280 */
struct std::vector<Quest::PhaseNode *,std::allocator<Quest::PhaseNode *> >
{
  std::_Vector_val<Quest::PhaseNode *,std::allocator<Quest::PhaseNode *> > baseclass_0;
  Quest::PhaseNode **_Myfirst;
  Quest::PhaseNode **_Mylast;
  Quest::PhaseNode **_Myend;
};

/* 1281 */
struct Quest::QuestNode
{
  unsigned __int16 m_wQuestID;
  unsigned __int16 m_wQuestType;
  unsigned __int16 m_wMaxPhase;
  unsigned __int16 m_wMinLevel;
  unsigned __int16 m_wMaxLevel;
  unsigned int m_dwClass;
  unsigned __int16 m_wCompletedQuest;
  bool m_bSave;
  char m_cNation;
  bool m_bNationDependent;
  char m_cSkillPointBonus;
  float m_fPosX;
  float m_fPosY;
  float m_fPosZ;
  float m_fDistance;
  unsigned int m_dwZoneID;
  std::vector<Quest::PhaseNode *,std::allocator<Quest::PhaseNode *> > m_lstPhase;
};

/* 1282 */
struct Quest::ExecutingQuest
{
  char m_cPhase;
  char m_cTriggerCount[10];
  Quest::QuestNode *m_QuestNode;
};

/* 1283 */
#pragma pack(push, 1)
struct CharacterDBData
{
  CHAR_INFOST m_Info;
  _CHAR_POS m_Pos;
  SKILL m_Skill;
  QUICK m_Quick;
  char m_cAdminLevel;
};
#pragma pack(pop)

/* 1284 */
struct RejectOption::__unnamed::RejectStruct
{
  __int16 _bf0;
};

/* 1285 */
union $5969F936D5C78B1AFB27B0DF51EDC611
{
  RejectOption::__unnamed::RejectStruct Reject;
  unsigned __int16 m_wReject;
};

/* 1286 */
struct RejectOption
{
  $5969F936D5C78B1AFB27B0DF51EDC611 ___u0;
};

/* 1287 */
struct FightStatus
{
  __int16 m_wMinDamage;
  __int16 m_wMaxDamage;
  __int16 m_wArmor;
  __int16 m_wHitRate;
  __int16 m_wEvade;
  unsigned __int16 m_nMaxHP;
  __int16 m_wHPRegen;
  unsigned __int16 m_nMaxMP;
  __int16 m_wMPRegen;
  __int16 m_wCritical;
  __int16 m_wBlock;
  __int16 m_wSpeed;
  __int16 m_wCoolDownRevision;
  __int16 m_wSkillPoint;
  __int16 m_wMagicPower;
  __int16 m_wMagicResist;
  __int16 m_wFrost;
  __int16 m_wFire;
  __int16 m_wElectro;
  __int16 m_wDarkness;
  float m_fDefenceRate;
  float m_fCriticalMagnification;
  float m_fCriticalRate;
  float m_fBlockRate;
  float m_fSpeedRate;
  float m_fCoolDownRevisionRate;
  float m_fMagicResistRate;
  float m_fLevelExplosion;
  char m_cCriticalType;
  char m_cComboCount;
  char m_cCalculateState;
};

/* 1288 */
struct CSendStream
{
  CBuffer *m_lpBuffer;
  CSession *m_Session;
};

/* 1289 */
struct CRylServerDispatch
{
  CPacketDispatch baseclass_0;
  CCSLock m_BufferQueueLock;
  char m_BufferQueueLockPadding[8];
  CBufferQueue m_ProcessQueue;
  CSendStream m_SendStream;
  unsigned int m_dwMaxProcessPacketPerPulse;
  unsigned int m_dwFlags;
};

/* 1290 */
struct std::_Allocator_base<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> >
{
  char dummy[1];
};

/* 1291 */
struct std::allocator<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> >
{
  std::_Allocator_base<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> > baseclass_0;
};

/* 1292 */
struct std::_Vector_val<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)>,std::allocator<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> > >
{
  std::allocator<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> > _Alval;
};

/* 1293 */
struct CGameClientDispatch
{
  CRylServerDispatch baseclass_0;
  CCharacter *m_lpCharacter;
  unsigned int m_dwUID;
  CGameClientDispatchTable *m_GameClientDispatchTable;
  std::deque<unsigned long,std::allocator<unsigned long> > m_DBRequestQueue;
  CCheckPing m_CheckPing;
  CSpeedHackCheck m_CheckSpeedHack;
  CCSAuth m_CSAuth;
  CCSAuth2 m_CSAuth2;
  INET_Addr m_MoveAddress;
  unsigned int m_dwMoveServerID;
};

/* 1294 */
struct std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)>
{
  unsigned int first;
  bool (__cdecl *second)(CGameClientDispatch *, PktBase *);
};

/* 1295 */
struct std::vector<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)>,std::allocator<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> > >
{
  std::_Vector_val<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)>,std::allocator<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> > > baseclass_0;
  std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> *_Myfirst;
  std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> *_Mylast;
  std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> *_Myend;
};

/* 1296 */
struct CPacketDispatchTable<bool (__cdecl*)(CGameClientDispatch &,PktBase *)>::PredFirstPairOnly
{
  char dummy[1];
};

/* 1297 */
struct CPacketDispatchTable<bool (__cdecl*)(CGameClientDispatch &,PktBase *)>
{
  std::vector<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)>,std::allocator<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> > > m_DispatchMap;
  CPacketDispatchTable<bool (__cdecl*)(CGameClientDispatch &,PktBase *)>::PredFirstPairOnly m_PredFirstPairOnly;
};

/* 1298 */
struct CGameClientDispatchTable
{
  CPacketDispatchTable<bool (__cdecl*)(CGameClientDispatch &,PktBase *)> baseclass_0;
};

/* 1299 */
struct std::_Allocator_base<unsigned long *>
{
  char dummy[1];
};

/* 1300 */
struct std::allocator<unsigned long *>
{
  std::_Allocator_base<unsigned long *> baseclass_0;
};

/* 1301 */
struct std::_Deque_map<unsigned long,std::allocator<unsigned long> >
{
  std::allocator<unsigned long *> _Almap;
};

/* 1302 */
struct std::_Deque_val<unsigned long,std::allocator<unsigned long> >
{
  std::_Deque_map<unsigned long,std::allocator<unsigned long> > baseclass_0;
  std::allocator<unsigned long> _Alval;
};

/* 1303 */
struct std::deque<unsigned long,std::allocator<unsigned long> >
{
  std::_Deque_val<unsigned long,std::allocator<unsigned long> > baseclass_0;
  unsigned int **_Map;
  unsigned int _Mapsize;
  unsigned int _Myoff;
  unsigned int _Mysize;
};

/* 1304 */
struct CCheckPing
{
  CCSLock m_PingLock;
  char CheckPingLockPad[8];
  unsigned int m_dwPingCount;
  unsigned int m_dwLastPingRecvTime;
  unsigned int m_dwFirstCheckTime;
};

/* 1305 */
struct CSpeedHackCheck::SumAttackTime
{
  int m_nSumServerAttackTime;
  int m_nSumClientAttackTime;
};

/* 1306 */
struct std::_Allocator_base<CSpeedHackCheck::AttackTime *>
{
  char dummy[1];
};

/* 1307 */
struct std::allocator<CSpeedHackCheck::AttackTime *>
{
  std::_Allocator_base<CSpeedHackCheck::AttackTime *> baseclass_0;
};

/* 1308 */
struct std::_Deque_map<CSpeedHackCheck::AttackTime,std::allocator<CSpeedHackCheck::AttackTime> >
{
  std::allocator<CSpeedHackCheck::AttackTime *> _Almap;
};

/* 1309 */
struct std::_Allocator_base<CSpeedHackCheck::AttackTime>
{
  char dummy[1];
};

/* 1310 */
struct std::allocator<CSpeedHackCheck::AttackTime>
{
  std::_Allocator_base<CSpeedHackCheck::AttackTime> baseclass_0;
};

/* 1311 */
struct std::_Deque_val<CSpeedHackCheck::AttackTime,std::allocator<CSpeedHackCheck::AttackTime> >
{
  std::_Deque_map<CSpeedHackCheck::AttackTime,std::allocator<CSpeedHackCheck::AttackTime> > baseclass_0;
  std::allocator<CSpeedHackCheck::AttackTime> _Alval;
};

/* 1312 */
struct CSpeedHackCheck::AttackTime
{
  int m_nDiffServerInterval;
  int m_nDiffClientInterval;
};

/* 1313 */
struct std::deque<CSpeedHackCheck::AttackTime,std::allocator<CSpeedHackCheck::AttackTime> >
{
  std::_Deque_val<CSpeedHackCheck::AttackTime,std::allocator<CSpeedHackCheck::AttackTime> > baseclass_0;
  CSpeedHackCheck::AttackTime **_Map;
  unsigned int _Mapsize;
  unsigned int _Myoff;
  unsigned int _Mysize;
};

/* 1314 */
struct std::_Allocator_base<CSpeedHackCheck::CoolDownInfo>
{
  char dummy[1];
};

/* 1315 */
struct std::allocator<CSpeedHackCheck::CoolDownInfo>
{
  std::_Allocator_base<CSpeedHackCheck::CoolDownInfo> baseclass_0;
};

/* 1316 */
struct std::_Vector_val<CSpeedHackCheck::CoolDownInfo,std::allocator<CSpeedHackCheck::CoolDownInfo> >
{
  std::allocator<CSpeedHackCheck::CoolDownInfo> _Alval;
};

/* 1317 */
const struct Skill::ProtoType
{
  char m_szEffectFileName[32];
  char m_szHitFileName[32];
  char m_szCastingFileName[32];
  Item::SpriteData m_SpriteInfo;
  char m_szSkillDescribe[256];
  Skill::Type::SkillType m_eSkillType;
  Skill::Target::Type m_eTargetType;
  Skill::UseLimit::Type m_eUseLimit;
  char m_StatusLimitType[2];
  char m_StatusLimitValue[2];
  unsigned __int16 m_usSkill_ID;
  unsigned __int16 m_StartMP;
  unsigned __int16 m_LevelMP;
  unsigned __int16 m_LockMP;
  unsigned __int16 m_StartTick;
  unsigned __int16 m_LevelTick;
  unsigned __int16 m_usParentSkill;
  unsigned __int16 m_usChildSkill;
  unsigned int m_dwCoolDownTime;
  float m_fMinRange;
  float m_fMaxRange;
  float m_fEffectExtent;
  bool m_bProtection;
  bool m_bGauge;
  bool m_bIsClassSkill;
  bool m_bInterrupt;
  bool m_bCounter;
  char m_cEndScript;
  char m_cEndCoolDown;
  char m_cStrikeNum;
  char m_cPadding[1];
};

/* 1318 */
struct AtType
{
  unsigned __int16 m_wType;
  char _bf2;
  char m_cSkillLevel;
  POS m_DstPos;
};

/* 1319 */
struct CSpeedHackCheck::CoolDownInfo
{
  Skill::ProtoType *m_lpSkillProtoType;
  AtType m_attackType;
  unsigned int m_dwServerLastCastingTime;
  unsigned int m_dwClientLastCastingTime;
  unsigned int m_dwSkillUsedCount;
};

/* 1320 */
struct std::vector<CSpeedHackCheck::CoolDownInfo,std::allocator<CSpeedHackCheck::CoolDownInfo> >
{
  std::_Vector_val<CSpeedHackCheck::CoolDownInfo,std::allocator<CSpeedHackCheck::CoolDownInfo> > baseclass_0;
  CSpeedHackCheck::CoolDownInfo *_Myfirst;
  CSpeedHackCheck::CoolDownInfo *_Mylast;
  CSpeedHackCheck::CoolDownInfo *_Myend;
};

/* 1321 */
struct std::_Allocator_base<CSpeedHackCheck::SkillHistory *>
{
  char dummy[1];
};

/* 1322 */
struct std::allocator<CSpeedHackCheck::SkillHistory *>
{
  std::_Allocator_base<CSpeedHackCheck::SkillHistory *> baseclass_0;
};

/* 1323 */
struct std::_Deque_map<CSpeedHackCheck::SkillHistory,std::allocator<CSpeedHackCheck::SkillHistory> >
{
  std::allocator<CSpeedHackCheck::SkillHistory *> _Almap;
};

/* 1324 */
struct std::_Allocator_base<CSpeedHackCheck::SkillHistory>
{
  char dummy[1];
};

/* 1325 */
struct std::allocator<CSpeedHackCheck::SkillHistory>
{
  std::_Allocator_base<CSpeedHackCheck::SkillHistory> baseclass_0;
};

/* 1326 */
struct std::_Deque_val<CSpeedHackCheck::SkillHistory,std::allocator<CSpeedHackCheck::SkillHistory> >
{
  std::_Deque_map<CSpeedHackCheck::SkillHistory,std::allocator<CSpeedHackCheck::SkillHistory> > baseclass_0;
  std::allocator<CSpeedHackCheck::SkillHistory> _Alval;
};

/* 1327 */
struct CSpeedHackCheck::SkillHistory
{
  AtType m_attackType;
  int m_nServerInterval;
  int m_nClientInterval;
  int m_nMinCoolDownTime;
};

/* 1328 */
struct std::deque<CSpeedHackCheck::SkillHistory,std::allocator<CSpeedHackCheck::SkillHistory> >
{
  std::_Deque_val<CSpeedHackCheck::SkillHistory,std::allocator<CSpeedHackCheck::SkillHistory> > baseclass_0;
  CSpeedHackCheck::SkillHistory **_Map;
  unsigned int _Mapsize;
  unsigned int _Myoff;
  unsigned int _Mysize;
};

/* 1329 */
struct CSpeedHackCheck
{
  unsigned int m_dwServerTotal;
  unsigned int m_dwServerLast;
  unsigned int m_dwClientTotal;
  unsigned int m_dwClinetLast;
  unsigned int m_dwLastServerAttackTime;
  unsigned int m_dwLastClientAttackTime;
  unsigned int m_dwHackFoundCount;
  CSpeedHackCheck::SumAttackTime m_SumAttackTime;
  std::deque<CSpeedHackCheck::AttackTime,std::allocator<CSpeedHackCheck::AttackTime> > m_AttackTimeList;
  std::vector<CSpeedHackCheck::CoolDownInfo,std::allocator<CSpeedHackCheck::CoolDownInfo> > m_CoolDownInfo;
  std::deque<CSpeedHackCheck::SkillHistory,std::allocator<CSpeedHackCheck::SkillHistory> > m_SkillHistoryList;
  CCharacter *m_lpCharacter;
};

/* 1330 */
struct CCSAuth
{
  unsigned int m_dwSeed;
  unsigned int m_dwAuthValue;
  unsigned int m_bAuth;
  unsigned int m_dwCurrIndex;
  char m_table[8][5];
  unsigned int m_dwClientSequenceNumber;
  unsigned int m_dwServerSequenceNumber;
  unsigned int m_adwLastSeqs[12];
  unsigned int m_dwPPLastError;
  unsigned int m_dwSeq;
};

/* 1331 */
struct _GG_AUTH_DATA
{
  unsigned int dwIndex;
  unsigned int dwValue1;
  unsigned int dwValue2;
  unsigned int dwValue3;
};

/* 1332 */
struct CCSAuth2
{
  struct _GG_AUTH_PROTOCOL *m_pProtocol;
  unsigned int m_bPrtcRef;
  unsigned int m_dwUserFlag;
  _GG_AUTH_DATA m_AuthQuery;
  _GG_AUTH_DATA m_AuthAnswer;
};

/* 1333 */
struct MotionInfo
{
  float m_fDirection;
  float m_fVelocity;
  unsigned __int16 m_wAction;
  unsigned int m_dwFrame;
};

/* 1334 */
struct MonsterInfo
{
  MotionInfo m_MonsterMotions[4];
  char m_strName[64];
  char m_strModelingFlag[32];
  float m_fHitBox[4];
  unsigned __int16 m_aryAwardItem[5];
  unsigned int m_aryDropRate[39];
  char m_cStandardBaseNum;
  char m_cOverBaseNum;
  unsigned int m_dwKID;
  unsigned int m_dwRespawnTime;
  float m_fSize;
  float m_fAttackAngle;
  __int16 m_wAttackRange;
  char m_cSkillPattern;
  char m_cSkillLevel;
  char m_cFixLevelGap;
  bool m_bFixLevelGap;
  char m_cNation;
  unsigned __int16 m_wSkillUseRate;
  unsigned __int16 m_wSkillID[5];
  char m_cEnchantSpellType;
  char m_cChantSpellType;
  float m_fSkillEffectSize;
  bool m_bIgnoreEnchant;
  bool m_bCollision;
  bool m_bFirstAttack;
  bool m_bReturnPosition;
  bool m_bUseLOD;
  unsigned int m_dwDevelopGold;
  char m_cDevelopSpeed;
  unsigned int m_dwUpgradeGold;
  char m_cUpgradeSpeed;
  float m_fDevelopGoldDown;
  float m_fDevelopSpeedUp;
  float m_fUpgradeGoldDown;
  float m_fUpgradeSpeedUp;
  float m_fDefenseUp;
  float m_fOffenseUp;
  float m_fHPUp;
  float m_fBonusRate;
  float m_fRespawnSpeedUp;
  char m_cStatueEffectType;
  char m_cStatueEffectPercent;
};

/* 1335 */
struct Broadcast2nd::CAggresiveCreatureData
{
  Broadcast2nd::CAggresiveCreatureDataVtbl *vfptr;
  unsigned int m_dwCID;
  unsigned int m_dwLastUpdatedPulse;
  unsigned int m_dwDataFlag;
  EnchantInfo m_EnchantInfo;
  CNetworkPos m_NetworkPos;
  unsigned __int16 m_usHP;
};

/* 1336 */
struct Broadcast2nd::CAggresiveCreatureDataVtbl
{
  void *(__thiscall *__vecDelDtor)(Broadcast2nd::CAggresiveCreatureData *this, unsigned int);
  bool (__thiscall *UpdateData)(Broadcast2nd::CAggresiveCreatureData *this, unsigned int, unsigned int, const char *, int *);
  void (__thiscall *ClearData)(Broadcast2nd::CAggresiveCreatureData *this);
};

/* 1337 */
struct EnchantInfo
{
  unsigned int m_dwStatusFlag[4];
};

/* 1338 */
struct CNetworkPos
{
  unsigned __int16 m_usXPos;
  unsigned __int16 m_usYPos;
  unsigned __int16 m_usZPos;
  char m_cDirection;
  char m_cVelocity;
};

/* 1339 */
struct Broadcast2nd::CMonsterData
{
  Broadcast2nd::CAggresiveCreatureData baseclass_0;
  unsigned int m_dwMasterCID;
};

/* 1340 */
struct Broadcast2nd::CSerializeMonsterData
{
  Broadcast2nd::CMonsterData m_LastMonsterData;
  unsigned int m_dwPreparedCount;
  unsigned __int16 m_usBroadcastDataLen;
  unsigned __int16 m_usDeltaBroadcastDataLen;
  char m_aryBroadcastData[64];
  char m_aryDeltaBroadcastData[64];
};

/* 1341 */
struct CMonster
{
  CAggresiveCreature baseclass_0;
  MonsterInfo m_MonsterInfo;
  Position m_OriginalPosition;
  unsigned int m_dwLastBehaviorTick;
  Broadcast2nd::CSerializeMonsterData m_SerializeMonsterData;
  CAggresiveCreature *m_lpTarget;
  int m_lCurrentFrame;
  int m_nNormalMovingDelay;
  int m_nLeaveMovingNum;
  int m_nMovingPattern;
  int m_nCurrentState;
  unsigned __int16 m_wSearchRange;
  unsigned __int16 m_wDefaultSearchRange;
  bool m_bLongRangeAttacked;
  bool m_bScout;
  bool m_bAttacking;
  unsigned __int16 m_wRespawnArea;
  bool m_bAvoid;
  bool m_bAdminCmdSummon;
  unsigned int m_dwPID;
};

/* 1342 */
struct Broadcast2nd::CommunityInfo
{
  unsigned int m_dwGuild_ID;
  unsigned int m_dwParty_ID;
  char m_cTacticsFlag;
  unsigned int m_dwFame;
  unsigned int m_dwMileage;
};

/* 1343 */
struct Broadcast2nd::bcBodyInfo
{
  int _bf0;
};

/* 1344 */
union $774FFE34D37FBDE4891CE088FB90C792
{
  Broadcast2nd::bcBodyInfo m_BodyInfo;
  unsigned int m_dwBodyInfo;
};

/* 1345 */
struct Broadcast2nd::bcStatusInfo
{
  $774FFE34D37FBDE4891CE088FB90C792 ___u0;
  char m_cClass;
  char m_cLevel;
};

/* 1346 */
struct Broadcast2nd::CNetworkEquipGrade
{
  __int16 _bf0;
};

/* 1347 */
struct Broadcast2nd::WarFlagInfo
{
  char m_cGuildWarFlag;
  char m_cRealmWarFlag;
};

/* 1348 */
struct Broadcast2nd::CCharacterData
{
  Broadcast2nd::CAggresiveCreatureData baseclass_0;
  char m_szName[16];
  char m_szStallName[32];
  unsigned int m_dwDoubleEquipsID[8];
  Broadcast2nd::CommunityInfo m_CommunityInfo;
  Broadcast2nd::bcStatusInfo m_StatusInfo;
  Broadcast2nd::CNetworkEquipGrade m_NetworkEquipGrade;
  Broadcast2nd::WarFlagInfo m_WarFlagInfo;
  char m_cRealmPoint;
};

/* 1349 */
struct BattleInclination::CharData
{
  unsigned int m_dwCID;
  unsigned int m_dwGID;
  unsigned int m_dwCastleID;
  char m_cSiegeState;
  char m_cNation;
  char m_cAdminLevel;
  char m_cFlags;
  unsigned int m_dwPID;
  char m_cTacticsFlag;
  char m_cRealmWarFlag;
  char m_cGuildWarFlag;
  char m_cCreatureType;
  unsigned __int16 m_wObjectType;
  unsigned __int16 m_wKind;
};

/* 1350 */
struct ChatData::CCharInfo
{
  char m_szName[16];
  char m_szAccountName[16];
  unsigned int m_dwUID;
  unsigned int m_dwServerID;
  BattleInclination::CharData m_CharData;
  RejectOption m_RejectOption;
  char m_cAdminLevel;
  bool m_bSendLoginData;
  CBanList m_BanList;
  CFriendList m_FriendList;
};

/* 1351 */
struct Broadcast2nd::CSerializeCharacterData
{
  Broadcast2nd::CCharacterData m_LastCharacterData;
  ChatData::CCharInfo m_LastChatData;
  unsigned int m_dwPreparedCount;
  unsigned __int16 m_usBroadcastDataLen;
  unsigned __int16 m_usDeltaBroadcastDataLen;
  char m_aryBroadcastData[160];
  char m_aryDeltaBroadcastData[160];
};

/* 1352 */
#pragma pack(push, 1)
struct TakeType
{
  Item::ItemPos m_srcPos;
  Item::ItemPos m_dstPos;
  char m_cNum;
};
#pragma pack(pop)

/* 1353 */
struct CParty
{
  CPartyVtbl *vfptr;
  CPartySpellMgr m_PartySpellMgr;
  PARTY_EX m_Party;
};

/* 1354 */
struct CPartyVtbl
{
  void *(__thiscall *__vecDelDtor)(CParty *this, unsigned int);
  bool (__thiscall *Join)(CParty *this, unsigned int, unsigned int, const char *, unsigned __int16);
  int (__thiscall *Leave)(CParty *this, unsigned int, unsigned int, unsigned __int16);
  bool (__thiscall *Destory)(CParty *this, unsigned int, unsigned int);
  bool (__thiscall *Login)(CParty *this, unsigned int, unsigned int);
  bool (__thiscall *ReLogin)(CParty *this, CCharacter *);
  int (__thiscall *Logout)(CParty *this, unsigned int, unsigned int);
  void (__thiscall *PrepareLogout)(CParty *this, unsigned int);
  bool (__thiscall *TransferLeader)(CParty *this, unsigned int);
  char (__thiscall *GetLoggedMemberAverageLevel)(CParty *this);
  bool (__thiscall *AdjustAutoRouting)(CParty *this, unsigned int, bool);
  void (__thiscall *MovePos)(CParty *this, POS, char, const bool);
  void (__thiscall *MoveZone)(CParty *this, POS, char, char);
  bool (__thiscall *AutoRouting)(CParty *this, CAggresiveCreature *, Item::CItem *, unsigned int *);
  bool (__thiscall *Attack)(CParty *this, AtType, CAggresiveCreature **, char *, CAggresiveCreature *, float, char);
  void (__thiscall *UpdateData)(CParty *this);
};

/* 1355 */
struct CPartySpellMgr
{
  CParty *m_lpOwnerParty;
  CAggresiveCreature *m_pPartyMember[10];
  unsigned int m_dwMemberNum;
};

/* 1356 */
struct CCreatureVtbl
{
  void *(__thiscall *__vecDelDtor)(CCreature *this, unsigned int);
  unsigned int (__thiscall *RepairItem)(CCreature *this, Item::CEquipment *, unsigned int *);
  Item::CItem *(__thiscall *SellToCharacter)(CCreature *this, CCharacter *, unsigned __int16, TakeType, Item::CItem *, unsigned int *, unsigned __int16);
  EnemyCheck::EnemyType (__thiscall *IsEnemy)(CCreature *this, CCreature *, char *);
  char (__thiscall *GetNation)(CCreature *this);
  CParty *(__thiscall *GetParty)(CCreature *this);
  bool (__thiscall *IsPeaceMode)(CCreature *this);
  unsigned int (__thiscall *GetGID)(CCreature *this);
};

/* 1357 */
struct std::_Allocator_base<std::_List_nod<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::_Node>
{
  char dummy[1];
};

/* 1358 */
struct std::allocator<std::_List_nod<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::_Node>
{
  std::_Allocator_base<std::_List_nod<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::_Node> baseclass_0;
};

/* 1359 */
struct std::_List_nod<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >
{
  std::allocator<std::_List_nod<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::_Node> _Alnod;
};

/* 1360 */
struct std::_Allocator_base<std::_List_nod<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::_Node *>
{
  char dummy[1];
};

/* 1361 */
struct std::allocator<std::_List_nod<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::_Node *> baseclass_0;
};

/* 1362 */
struct std::_List_ptr<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >
{
  std::_List_nod<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> > baseclass_0;
  std::allocator<std::_List_nod<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::_Node *> _Alptr;
};

/* 1363 */
struct std::_Allocator_base<CThreat::ThreatInfo>
{
  char dummy[1];
};

/* 1364 */
struct std::allocator<CThreat::ThreatInfo>
{
  std::_Allocator_base<CThreat::ThreatInfo> baseclass_0;
};

/* 1365 */
struct std::_List_val<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >
{
  std::_List_ptr<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> > baseclass_0;
  std::allocator<CThreat::ThreatInfo> _Alval;
};

/* 1366 */
struct std::_List_nod<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::_Node
{
  std::_List_nod<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::_Node *_Next;
  std::_List_nod<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::_Node *_Prev;
  CThreat::ThreatInfo _Myval;
};

/* 1367 */
struct CThreat::ThreatInfo
{
  CAggresiveCreature *m_pCreature;
  int m_lThreatAmount;
};

/* 1368 */
struct std::list<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >
{
  std::_List_val<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> > baseclass_0;
  std::_List_nod<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1369 */
struct std::_Allocator_base<std::_List_nod<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::_Node>
{
  char dummy[1];
};

/* 1370 */
struct std::allocator<std::_List_nod<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::_Node>
{
  std::_Allocator_base<std::_List_nod<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::_Node> baseclass_0;
};

/* 1371 */
struct std::_List_nod<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >
{
  std::allocator<std::_List_nod<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::_Node> _Alnod;
};

/* 1372 */
struct std::_Allocator_base<std::_List_nod<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::_Node *>
{
  char dummy[1];
};

/* 1373 */
struct std::allocator<std::_List_nod<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::_Node *> baseclass_0;
};

/* 1374 */
struct std::_List_ptr<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >
{
  std::_List_nod<CAggresiveCreature *,std::allocator<CAggresiveCreature *> > baseclass_0;
  std::allocator<std::_List_nod<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::_Node *> _Alptr;
};

/* 1375 */
struct std::_Allocator_base<CAggresiveCreature *>
{
  char dummy[1];
};

/* 1376 */
struct std::allocator<CAggresiveCreature *>
{
  std::_Allocator_base<CAggresiveCreature *> baseclass_0;
};

/* 1377 */
struct std::_List_val<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >
{
  std::_List_ptr<CAggresiveCreature *,std::allocator<CAggresiveCreature *> > baseclass_0;
  std::allocator<CAggresiveCreature *> _Alval;
};

/* 1378 */
struct std::_List_nod<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::_Node
{
  std::_List_nod<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::_Node *_Next;
  std::_List_nod<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::_Node *_Prev;
  CAggresiveCreature *_Myval;
};

/* 1379 */
struct std::list<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >
{
  std::_List_val<CAggresiveCreature *,std::allocator<CAggresiveCreature *> > baseclass_0;
  std::_List_nod<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1380 */
struct CThreat::SaveEnemyInfo
{
  unsigned int m_dwCID;
  unsigned int m_dwTickCount;
};

/* 1381 */
struct CThreat
{
  std::list<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> > m_ThreatList;
  std::list<CAggresiveCreature *,std::allocator<CAggresiveCreature *> > m_ThreatenedList;
  CAggresiveCreature *m_pOwner;
  char m_cMaxLevel;
  Creature::CreatureType m_eMaxLevelCreatureType;
  CThreat::SaveEnemyInfo m_LatestEnemy[5];
};

/* 1382 */
struct CharacterStatus
{
  __int16 m_nSTR;
  __int16 m_nDEX;
  __int16 m_nCON;
  __int16 m_nINT;
  __int16 m_nWIS;
};

/* 1383 */
struct CreatureStatus
{
  __int64 m_nExp;
  int m_nLevel;
  unsigned __int16 m_nNowHP;
  unsigned __int16 m_nNowMP;
  FightStatus m_StatusInfo;
};

/* 1384 */
struct CSpell
{
  CSpellVtbl *vfptr;
  CSpell *m_pNextSpell;
  Skill::ProtoType *m_ProtoType;
  CAggresiveCreature *m_pAffected[10];
  CAggresiveCreature *m_pCaster;
  Skill::Type::SkillType m_eSkillType;
  unsigned int m_dwActivateStatus;
  unsigned __int16 m_wSpellID;
  unsigned __int16 m_wSpellLevel;
  unsigned __int16 m_wDurationSec;
  char m_cSpellType;
  char m_cAffectedNum;
  char m_cInternalFlags;
};

/* 1385 */
struct CSpellVtbl
{
  void *(__thiscall *__vecDelDtor)(CSpell *this, unsigned int);
  __declspec(align(8)) bool (__thiscall *Activate)(CSpell *this, CAggresiveCreature *, unsigned int);
  bool (__thiscall *Deactivate)(CSpell *this, CAggresiveCreature *, unsigned int);
};

/* 1386 */
struct CCastingSpell
{
  CSpell *m_pEnchantCasting[20];
  CSpell *m_pChantCasting[1];
  CAggresiveCreature *m_pOwner;
  unsigned __int16 m_usInternalFlag;
  char m_cEnchantNum;
  char m_cChantNum;
};

/* 1387 */
struct CAffectedSpell
{
  CSpell *m_pChant[10];
  CSpell *m_pEnchant[10];
  CAggresiveCreature *m_pOwner;
  char m_cInternalFlag;
  char m_cChantNum;
  char m_cEnchantNum;
};

/* 1388 */
struct CSpellMgr
{
  CAggresiveCreature *m_pOwner;
  CCastingSpell m_CastingInfo;
  CAffectedSpell m_AffectedInfo;
};

/* 1389 */
struct CCell
{
  CCell *m_lpConnectCell[9];
  CCell *m_lpSortedConnectedCell[9];
  std::list<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_lstCharacter;
  std::list<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_lstMonster;
  std::list<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_lstItem;
  std::list<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_lstSiegeObject;
  std::list<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::iterator m_MonsterIt;
  std::list<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::iterator m_CharacterIt;
  std::list<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::iterator m_SiegeObjectIt;
  CBuffer *m_lpBroadcast2ndBuffer;
  unsigned int m_dwCastleEmblemCID;
  unsigned __int16 m_wMapIndex;
  char m_cIndexX;
  char m_cIndexZ;
  char m_cTurnOfGetAggresiveCreature;
  CCell::Weather m_eWeather;
};

/* 1390 */
struct boost::fast_pool_allocator<std::_List_nod<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node,boost::default_user_allocator_new_delete,boost::details::pool::win32_mute
{
  char dummy[1];
};

/* 1391 */
struct std::_List_nod<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  boost::fast_pool_allocator<std::_List_nod<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node,boost::default_user_allocator_new_delete,boost::details::pool::win32_mute _Alnod;
};

/* 1392 */
struct boost::fast_pool_allocator<std::_List_nod<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mu
{
  char dummy[1];
};

/* 1393 */
struct std::_List_ptr<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_List_nod<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > baseclass_0;
  boost::fast_pool_allocator<std::_List_nod<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mu _Alptr;
};

/* 1394 */
struct boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 1395 */
struct std::_List_val<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_List_ptr<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > baseclass_0;
  boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 1396 */
struct std::_List_nod<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node
{
  std::_List_nod<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *_Next;
  std::_List_nod<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *_Prev;
  CCharacter *_Myval;
};

/* 1397 */
struct std::list<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_List_val<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > baseclass_0;
  std::_List_nod<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1398 */
struct boost::fast_pool_allocator<std::_List_nod<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32
{
  char dummy[1];
};

/* 1399 */
struct std::_List_nod<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  boost::fast_pool_allocator<std::_List_nod<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32 _Alnod;
};

/* 1400 */
struct boost::fast_pool_allocator<std::_List_nod<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,
{
  char dummy[1];
};

/* 1401 */
struct std::_List_ptr<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_List_nod<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > baseclass_0;
  boost::fast_pool_allocator<std::_List_nod<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex, _Alptr;
};

/* 1402 */
struct boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 1403 */
struct std::_List_val<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_List_ptr<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > baseclass_0;
  boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 1404 */
struct std::_List_nod<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node
{
  std::_List_nod<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *_Next;
  std::_List_nod<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *_Prev;
  CMonster *_Myval;
};

/* 1405 */
struct std::list<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_List_val<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > baseclass_0;
  std::_List_nod<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1406 */
struct boost::fast_pool_allocator<std::_List_nod<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node,boost::default_user_allocator_new_delete,boost::details::pool::win3
{
  char dummy[1];
};

/* 1407 */
struct std::_List_nod<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  boost::fast_pool_allocator<std::_List_nod<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node,boost::default_user_allocator_new_delete,boost::details::pool::win3 _Alnod;
};

/* 1408 */
struct boost::fast_pool_allocator<std::_List_nod<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *,boost::default_user_allocator_new_delete,boost::details::pool::wi
{
  char dummy[1];
};

/* 1409 */
struct std::_List_ptr<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_List_nod<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > baseclass_0;
  boost::fast_pool_allocator<std::_List_nod<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *,boost::default_user_allocator_new_delete,boost::details::pool::wi _Alptr;
};

/* 1410 */
struct boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 1411 */
struct std::_List_val<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_List_ptr<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > baseclass_0;
  boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 1412 */
struct std::_List_nod<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node
{
  std::_List_nod<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *_Next;
  std::_List_nod<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *_Prev;
  CCell::ItemInfo _Myval;
};

/* 1413 */
struct CCell::IDField
{
  unsigned int dwUID;
  unsigned __int16 wMapIndex;
  char cCellX;
  char cCellZ;
};

/* 1414 */
union CCell::ItemInfo::__unnamed
{
  unsigned __int64 m_nUniqueID;
  CCell::IDField m_Field;
};

/* 1415 */
struct CCell::ItemInfo
{
  Position m_Pos;
  CCell::ItemInfo::__unnamed UID;
  Item::CItem *m_lpItem;
  unsigned int m_dwGold;
  unsigned int m_dwOwnerID;
  unsigned __int16 m_wPulse;
  char m_cAutoRouting;
};

/* 1416 */
struct std::list<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_List_val<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > baseclass_0;
  std::_List_nod<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1417 */
struct boost::fast_pool_allocator<std::_List_nod<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node,boost::default_user_allocator_new_delete,boost::details::pool::win32_
{
  char dummy[1];
};

/* 1418 */
struct std::_List_nod<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  boost::fast_pool_allocator<std::_List_nod<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node,boost::default_user_allocator_new_delete,boost::details::pool::win32_ _Alnod;
};

/* 1419 */
struct boost::fast_pool_allocator<std::_List_nod<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *,boost::default_user_allocator_new_delete,boost::details::pool::win3
{
  char dummy[1];
};

/* 1420 */
struct std::_List_ptr<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_List_nod<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > baseclass_0;
  boost::fast_pool_allocator<std::_List_nod<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *,boost::default_user_allocator_new_delete,boost::details::pool::win3 _Alptr;
};

/* 1421 */
struct boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 1422 */
struct std::_List_val<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_List_ptr<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > baseclass_0;
  boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 1423 */
struct std::_List_nod<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node
{
  std::_List_nod<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *_Next;
  std::_List_nod<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *_Prev;
  CSiegeObject *_Myval;
};

/* 1424 */
struct CSkillMonster
{
  CMonster baseclass_0;
  unsigned int m_lastCastTime[5];
  char m_cConsumeMPCount;
  bool m_bCasting;
  int m_nCastingCount;
  AtType m_attackType;
  unsigned int m_dwTargetCID;
  char m_cSkillPattern;
};

/* 1425 */
struct CSphere
{
  Position m_Center;
  float m_fRadius;
  float m_fRadius2;
};

/* 1426 */
struct CCharSphereNode
{
  CSphere baseclass_0;
  unsigned int m_dwCID;
  CCharacter *m_pCharacter;
  CCharSphereNode *m_pParent;
  CCharSphereNode *m_pChildren;
  CCharSphereNode *m_pPrevSibling;
  CCharSphereNode *m_pNextSibling;
  CCharSphereNode **m_ppRecomuteFifo;
  CCharSphereNode **m_ppIntegrateFifo;
  int m_iChildCount;
  unsigned int m_dwFlag;
  float m_fBindingDistance2;
  void *m_pLink;
  CCharSphereTree *m_pTree;
};

/* 1427 */
struct CCharSphereTree
{
  CCharSphereTreeVtbl *vfptr;
  CCharSphereNode *m_pRoot;
  CCharSphereNode *m_pLeaf;
  CCharSphereNodeFifo *m_Recompute;
  CCharSphereNodeFifo *m_Integrate;
  float m_fMaxRootSize;
  float m_fMaxLeafSize;
  float m_fSuperSphereGravy;
  std::map<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> > > m_CharSphereMap;
};

/* 1428 */
struct CCharSphereTreeVtbl
{
  void *(__thiscall *__vecDelDtor)(CCharSphereTree *this, unsigned int);
};

/* 1429 */
struct CCharSphereNodeFifo
{
  int m_iCount;
  int m_iStackPointer;
  int m_iBottom;
  int m_iSize;
  CCharSphereNode **m_ppFifo;
};

/* 1430 */
struct std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0>
{
  std::less<unsigned long> comp;
};

/* 1431 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::_Node>
{
  char dummy[1];
};

/* 1432 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::_Node> baseclass_0;
};

/* 1433 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >
{
  std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::_Node> _Alnod;
};

/* 1434 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 1435 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::_Node *> baseclass_0;
};

/* 1436 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::_Node *> _Alptr;
};

/* 1437 */
struct std::_Allocator_base<std::pair<unsigned long const ,CCharSphereNode *> >
{
  char dummy[1];
};

/* 1438 */
struct std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >
{
  std::_Allocator_base<std::pair<unsigned long const ,CCharSphereNode *> > baseclass_0;
};

/* 1439 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,CCharSphereNode *> > _Alval;
};

/* 1440 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CCharSphereNode *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1441 */
struct std::pair<unsigned long const ,CCharSphereNode *>
{
  const unsigned int first;
  CCharSphereNode *second;
};

/* 1442 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1443 */
struct std::map<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> > baseclass_0;
};

/* 1444 */
struct ICharSphereTreeCallBack
{
  ICharSphereTreeCallBackVtbl *vfptr;
};

/* 1445 */
struct ICharSphereTreeCallBackVtbl
{
  void (__thiscall *RangeTestCallBack)(ICharSphereTreeCallBack *this, Position *, float, CCharSphereNode *);
};

/* 1446 */
union $EAEF08E8A4E7AC14151EAE6F8B672057
{
  unsigned int m_dwCastleID;
  unsigned int m_dwCampID;
  unsigned int m_dwOwnerCID;
};

/* 1447 */
struct BroadCastSiege::sOwnerShipInfo
{
  $EAEF08E8A4E7AC14151EAE6F8B672057 ___u0;
  unsigned int m_dwGID;
};

/* 1448 */
struct BroadCastSiege::sStateInfo
{
  unsigned __int16 m_wObjectType;
  char m_cState;
  char m_cSubState;
  char m_cUpgradeStep;
  char m_cUpgradeType;
};

/* 1449 */
struct BroadCastSiege::sHPInfo
{
  unsigned int m_dwNowHP;
  unsigned int m_dwMaxHP;
};

/* 1450 */
struct BroadCastSiege::sPosInfo
{
  float m_fDefaultDir;
  CNetworkPos m_NetworkPos;
};

/* 1451 */
struct BroadCastSiege::sMaterialInfo
{
  char m_cMaterial;
};

/* 1452 */
struct BroadCastSiege::sRiderInfo
{
  unsigned int m_dwRiderID[10];
};

/* 1453 */
struct BroadCastSiege::CSiegeObjectData
{
  unsigned int m_dwCID;
  BroadCastSiege::sOwnerShipInfo m_OwershipInfo;
  BroadCastSiege::sStateInfo m_StateInfo;
  BroadCastSiege::sHPInfo m_HPInfo;
  BroadCastSiege::sPosInfo m_PosInfo;
  BroadCastSiege::sMaterialInfo m_MaterialInfo;
  BroadCastSiege::sRiderInfo m_RiderInfo;
  unsigned int m_dwUpdateDataFlag;
};

/* 1454 */
struct BroadCastSiege::CSerializeSiegeObjectData
{
  BroadCastSiege::CSiegeObjectData m_LastSiegeObjectData;
  unsigned __int16 m_wBroadCastDataLen;
  unsigned __int16 m_wDeltaBroadCastDataLen;
  char m_aryBroadCastData[120];
  char m_aryDeltaBroadCastData[120];
};

/* 1455 */
struct std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0>
{
  std::less<unsigned long> comp;
};

/* 1456 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Node>
{
  char dummy[1];
};

/* 1457 */
struct std::allocator<std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Node> baseclass_0;
};

/* 1458 */
struct std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >
{
  std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Node> _Alnod;
};

/* 1459 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Node *>
{
  char dummy[1];
};

/* 1460 */
struct std::allocator<std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Node *> baseclass_0;
};

/* 1461 */
struct std::_Tree_ptr<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >
{
  std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Node *> _Alptr;
};

/* 1462 */
struct std::_Tree_val<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >
{
  std::_Tree_ptr<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> > baseclass_0;
  std::allocator<unsigned long> _Alval;
};

/* 1463 */
struct std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Node
{
  std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Node *_Right;
  unsigned int _Myval;
  char _Color;
  char _Isnil;
};

/* 1464 */
struct std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >
{
  std::_Tree_val<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> > baseclass_0;
  std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1465 */
struct std::set<unsigned long,std::less<unsigned long>,std::allocator<unsigned long> >
{
  std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> > baseclass_0;
};

/* 1466 */
struct CSiegeObject
{
  CSkillMonster baseclass_0;
  ICharSphereTreeCallBack baseclass_560;
  unsigned int m_dwOwnerID;
  unsigned int m_dwGID;
  unsigned __int16 m_wObjectType;
  char m_cState;
  char m_cSubState;
  char m_cUpgradeStep;
  char m_cUpgradeType;
  char m_cMaterial;
  char m_cSiegeCount;
  float m_fDefaultDir;
  unsigned int m_dwRiderCID;
  char m_cHPUpdateCount;
  BroadCastSiege::CSerializeSiegeObjectData m_SerializeSiegeObjectData;
  char m_szBroadCastBuffer[160];
  char m_szDeltaBuffer[160];
  unsigned int m_dwBroadCastSize;
  unsigned int m_dwDeltaSize;
  std::set<unsigned long,std::less<unsigned long>,std::allocator<unsigned long> > m_BroadCastSet;
};

/* 1467 */
struct std::list<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_List_val<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > baseclass_0;
  std::_List_nod<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1468 */
struct std::iterator<std::bidirectional_iterator_tag,CMonster *,int,CMonster * const *,CMonster * const &>
{
  char dummy[1];
};

/* 1469 */
struct std::_Bidit<CMonster *,int,CMonster * const *,CMonster * const &>
{
  std::iterator<std::bidirectional_iterator_tag,CMonster *,int,CMonster * const *,CMonster * const &> baseclass_0;
};

/* 1470 */
union $2E858914D58E8F4549AEA556E1083773
{
  std::_Bidit<CMonster *,int,CMonster * const *,CMonster * const &> baseclass_0;
  std::_List_nod<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *_Ptr;
};

/* 1471 */
struct std::list<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::const_iterator
{
  $2E858914D58E8F4549AEA556E1083773 ___u0;
};

/* 1472 */
struct std::list<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::iterator
{
  std::list<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::const_iterator baseclass_0;
};

/* 1473 */
struct std::iterator<std::bidirectional_iterator_tag,CCharacter *,int,CCharacter * const *,CCharacter * const &>
{
  char dummy[1];
};

/* 1474 */
struct std::_Bidit<CCharacter *,int,CCharacter * const *,CCharacter * const &>
{
  std::iterator<std::bidirectional_iterator_tag,CCharacter *,int,CCharacter * const *,CCharacter * const &> baseclass_0;
};

/* 1475 */
union $C764DA29D6C5F7B3DA3C68D7C916A70C
{
  std::_Bidit<CCharacter *,int,CCharacter * const *,CCharacter * const &> baseclass_0;
  std::_List_nod<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *_Ptr;
};

/* 1476 */
struct std::list<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::const_iterator
{
  $C764DA29D6C5F7B3DA3C68D7C916A70C ___u0;
};

/* 1477 */
struct std::list<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::iterator
{
  std::list<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::const_iterator baseclass_0;
};

/* 1478 */
struct std::iterator<std::bidirectional_iterator_tag,CSiegeObject *,int,CSiegeObject * const *,CSiegeObject * const &>
{
  char dummy[1];
};

/* 1479 */
struct std::_Bidit<CSiegeObject *,int,CSiegeObject * const *,CSiegeObject * const &>
{
  std::iterator<std::bidirectional_iterator_tag,CSiegeObject *,int,CSiegeObject * const *,CSiegeObject * const &> baseclass_0;
};

/* 1480 */
union $4496403CAECE611B8055A1F7BF3D96FD
{
  std::_Bidit<CSiegeObject *,int,CSiegeObject * const *,CSiegeObject * const &> baseclass_0;
  std::_List_nod<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *_Ptr;
};

/* 1481 */
struct std::list<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::const_iterator
{
  $4496403CAECE611B8055A1F7BF3D96FD ___u0;
};

/* 1482 */
struct std::list<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::iterator
{
  std::list<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::const_iterator baseclass_0;
};

/* 1483 */
struct CellPosition
{
  CCell *m_lpCell;
  unsigned __int16 m_wMapIndex;
  char m_cCellX;
  char m_cCellZ;
  unsigned __int16 m_wInX;
  unsigned __int16 m_wInZ;
};

/* 1484 */
struct CThreat::AwardInfo
{
  CAggresiveCreature *m_pCreature;
  CParty *m_pParty;
  int m_lAward;
};

/* 1485 */
struct CSingleton<EnemyCheck::CCheckTable>
{
  char dummy[1];
};

/* 1486 */
struct BattleInclination::RelationData
{
  char m_cVSFlag;
  bool m_bHostileGuild;
};

/* 1487 */
union $B654C781718F849E1DFF09F0B5333EB4
{
  CSingleton<EnemyCheck::CCheckTable> baseclass_0;
  bool m_bInit;
};

/* 1488 */
struct EnemyCheck::CCheckTable
{
  $B654C781718F849E1DFF09F0B5333EB4 ___u0;
  EnemyCheck::EnemyCheckRule m_eRule;
  bool (__cdecl *m_fnIsEnemy[4][4])(BattleInclination::CharData *, BattleInclination::CharData *, BattleInclination::RelationData *, char *);
};

/* 1489 */
struct CSendCharChatBanAllGameServer
{
  unsigned int m_dwCID;
  bool m_dwMinutes;
};

/* 1490 */
struct std::_List_nod<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::_Node
{
  std::_List_nod<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::_Node *_Next;
  std::_List_nod<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::_Node *_Prev;
  CCreatureManager::BattleGroundRespawnInfo _Myval;
};

/* 1491 */
struct CCreatureManager::BattleGroundRespawnInfo
{
  CCharacter *m_lpCharacter;
  Position m_RespawnPos;
  int m_lLeftTime;
};

/* 1492 */
struct std::_Allocator_base<std::_List_nod<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::_Node>
{
  char dummy[1];
};

/* 1493 */
struct std::_Allocator_base<std::_List_nod<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::_Node *>
{
  char dummy[1];
};

/* 1494 */
struct std::_Allocator_base<enum Item::ItemType::Type>
{
  char dummy[1];
};

/* 1495 */
struct std::allocator<std::_List_nod<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::_Node>
{
  std::_Allocator_base<std::_List_nod<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::_Node> baseclass_0;
};

/* 1496 */
struct std::allocator<std::_List_nod<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::_Node *> baseclass_0;
};

/* 1497 */
struct std::_Allocator_base<CCreatureManager::BattleGroundRespawnInfo>
{
  char dummy[1];
};

/* 1498 */
struct std::binary_function<unsigned __int64,unsigned __int64,bool>
{
  char dummy[1];
};

/* 1499 */
struct std::less<unsigned __int64>
{
  std::binary_function<unsigned __int64,unsigned __int64,bool> baseclass_0;
};

/* 1500 */
struct std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>
{
  std::less<unsigned __int64> comp;
};

/* 1501 */
struct boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::detail
{
  char dummy[1];
};

/* 1502 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>
{
  std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::detail _Alnod;
};

/* 1503 */
struct boost::fast_pool_allocator<std::pair<unsigned __int64 const ,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 1504 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::detail _Alptr;
};

/* 1505 */
struct std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1>
{
  std::less<unsigned long> comp;
};

/* 1506 */
struct boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,
{
  char dummy[1];
};

/* 1507 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >
{
  std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>, _Alnod;
};

/* 1508 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node *_Right;
  std::pair<unsigned long const ,CCharacter *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1509 */
struct std::pair<unsigned long const ,CCharacter *>
{
  const unsigned int first;
  CCharacter *second;
};

/* 1510 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 1511 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> > baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>, _Alptr;
};

/* 1512 */
struct std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>
{
  std::less<unsigned long> comp;
};

/* 1513 */
struct boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node,
{
  char dummy[1];
};

/* 1514 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node, _Alnod;
};

/* 1515 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Right;
  std::pair<unsigned long const ,CNPC *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1516 */
struct std::_Allocator_base<CNPC::GoodInfo>
{
  char dummy[1];
};

/* 1517 */
struct std::allocator<CNPC::GoodInfo>
{
  std::_Allocator_base<CNPC::GoodInfo> baseclass_0;
};

/* 1518 */
struct std::_Vector_val<CNPC::GoodInfo,std::allocator<CNPC::GoodInfo> >
{
  std::allocator<CNPC::GoodInfo> _Alval;
};

/* 1519 */
struct CNPC::GoodInfo
{
  unsigned __int16 m_wItemID;
  char m_cRace;
  char m_cTabPage;
  Item::EquipType::Grade m_ePreGrade;
  Item::EquipType::Grade m_eCurrentGrade;
};

/* 1520 */
struct std::vector<CNPC::GoodInfo,std::allocator<CNPC::GoodInfo> >
{
  std::_Vector_val<CNPC::GoodInfo,std::allocator<CNPC::GoodInfo> > baseclass_0;
  CNPC::GoodInfo *_Myfirst;
  CNPC::GoodInfo *_Mylast;
  CNPC::GoodInfo *_Myend;
};

/* 1521 */
struct std::_Allocator_base<unsigned short>
{
  char dummy[1];
};

/* 1522 */
struct std::allocator<unsigned short>
{
  std::_Allocator_base<unsigned short> baseclass_0;
};

/* 1523 */
struct std::_Vector_val<unsigned short,std::allocator<unsigned short> >
{
  std::allocator<unsigned short> _Alval;
};

/* 1524 */
struct std::vector<unsigned short,std::allocator<unsigned short> >
{
  std::_Vector_val<unsigned short,std::allocator<unsigned short> > baseclass_0;
  unsigned __int16 *_Myfirst;
  unsigned __int16 *_Mylast;
  unsigned __int16 *_Myend;
};

/* 1525 */
struct CNPC
{
  CCreature baseclass_0;
  std::vector<CNPC::GoodInfo,std::allocator<CNPC::GoodInfo> > m_Goods;
  std::vector<unsigned short,std::allocator<unsigned short> > m_Quests;
  int m_nZone;
  unsigned int m_dwTownOrNameID;
  unsigned int m_dwGID;
  unsigned int m_dwFlags;
  unsigned int m_dwDisplayTime;
  char m_cGradeRate[4][8];
  char m_cBaseNum[4][8];
  char m_cNation;
};

/* 1526 */
struct std::pair<unsigned long const ,CNPC *>
{
  const unsigned int first;
  CNPC *second;
};

/* 1527 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 1528 */
struct boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node
{
  char dummy[1];
};

/* 1529 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node _Alptr;
};

/* 1530 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> > baseclass_0;
  boost::fast_pool_allocator<std::pair<unsigned long const ,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 1531 */
struct std::binary_function<unsigned short,unsigned short,bool>
{
  char dummy[1];
};

/* 1532 */
struct std::less<unsigned short>
{
  std::binary_function<unsigned short,unsigned short,bool> baseclass_0;
};

/* 1533 */
struct std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>
{
  std::less<unsigned short> comp;
};

/* 1534 */
struct boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mut
{
  char dummy[1];
};

/* 1535 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mut _Alnod;
};

/* 1536 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Right;
  std::pair<unsigned short const ,unsigned short> _Myval;
  char _Color;
  char _Isnil;
};

/* 1537 */
struct std::pair<unsigned short const ,unsigned short>
{
  const unsigned __int16 first;
  unsigned __int16 second;
};

/* 1538 */
struct boost::fast_pool_allocator<std::pair<unsigned short const ,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 1539 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mut _Alptr;
};

/* 1540 */
struct std::_Tree_nod<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::_Node *_Right;
  std::pair<enum Item::ItemType::Type const ,unsigned char> _Myval;
  char _Color;
  char _Isnil;
};

/* 1541 */
struct std::pair<enum Item::ItemType::Type const ,unsigned char>
{
  Item::ItemType::Type first;
  char second;
};

/* 1542 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::_Node *>
{
  char dummy[1];
};

/* 1543 */
struct std::binary_function<enum Item::ItemType::Type,enum Item::ItemType::Type,bool>
{
  char dummy[1];
};

/* 1544 */
struct std::_List_nod<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >
{
  std::allocator<std::_List_nod<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::_Node> _Alnod;
};

/* 1545 */
struct std::_List_ptr<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >
{
  std::_List_nod<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> > baseclass_0;
  std::allocator<std::_List_nod<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::_Node *> _Alptr;
};

/* 1546 */
struct std::allocator<CCreatureManager::BattleGroundRespawnInfo>
{
  std::_Allocator_base<CCreatureManager::BattleGroundRespawnInfo> baseclass_0;
};

/* 1547 */
struct std::less<enum Item::ItemType::Type>
{
  std::binary_function<enum Item::ItemType::Type,enum Item::ItemType::Type,bool> baseclass_0;
};

/* 1548 */
struct std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0>
{
  std::less<enum Item::ItemType::Type> comp;
};

/* 1549 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::_Node>
{
  char dummy[1];
};

/* 1550 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::_Node> baseclass_0;
};

/* 1551 */
struct std::_Tree_nod<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >
{
  std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::_Node> _Alnod;
};

/* 1552 */
struct std::_Allocator_base<std::pair<enum Item::ItemType::Type const ,unsigned char> >
{
  char dummy[1];
};

/* 1553 */
struct std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >
{
  std::_Allocator_base<std::pair<enum Item::ItemType::Type const ,unsigned char> > baseclass_0;
};

/* 1554 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::_Node *> baseclass_0;
};

/* 1555 */
struct std::_Tree_ptr<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::_Node *> _Alptr;
};

/* 1556 */
struct Item::CItemOwnerInfo
{
  char m_szName[16];
  unsigned int m_dwUID;
  unsigned int m_dwCID;
};

/* 1557 */
struct std::pair<unsigned __int64 const ,Item::CItemOwnerInfo>
{
  const unsigned __int64 first;
  Item::CItemOwnerInfo second;
};

/* 1558 */
struct std::_Tree_val<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> > baseclass_0;
  std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> > _Alval;
};

/* 1559 */
struct std::_Tree_val<std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> baseclass_0;
  boost::fast_pool_allocator<std::pair<unsigned __int64 const ,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 1560 */
struct std::_List_nod<CCharacter *,std::allocator<CCharacter *> >::_Node
{
  std::_List_nod<CCharacter *,std::allocator<CCharacter *> >::_Node *_Next;
  std::_List_nod<CCharacter *,std::allocator<CCharacter *> >::_Node *_Prev;
  CCharacter *_Myval;
};

/* 1561 */
struct std::_Allocator_base<std::_List_nod<CCharacter *,std::allocator<CCharacter *> >::_Node *>
{
  char dummy[1];
};

/* 1562 */
struct std::_Tree<std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> *_Myhead;
  unsigned int _Mysize;
};

/* 1563 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,
{
  std::_Tree<std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >:: first;
  bool second;
};

/* 1564 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<std::pair<unsigned long const ,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 1565 */
struct std::allocator<CAggresiveCreature *>::rebind<std::_List_nod<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::_Node>
{
  char dummy[1];
};

/* 1566 */
struct std::allocator<CAggresiveCreature *>::rebind<std::_List_nod<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::_Node *>
{
  char dummy[1];
};

/* 1567 */
struct std::allocator<CAggresiveCreature *>::rebind<CAggresiveCreature *>
{
  char dummy[1];
};

/* 1568 */
struct std::allocator<CCreatureManager::BattleGroundRespawnInfo>::rebind<std::_List_nod<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::_Node>
{
  char dummy[1];
};

/* 1569 */
struct std::allocator<CCreatureManager::BattleGroundRespawnInfo>::rebind<std::_List_nod<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::_Node *>
{
  char dummy[1];
};

/* 1570 */
struct std::allocator<CCreatureManager::BattleGroundRespawnInfo>::rebind<CCreatureManager::BattleGroundRespawnInfo>
{
  char dummy[1];
};

/* 1571 */
struct std::allocator<enum Item::ItemType::Type>
{
  std::_Allocator_base<enum Item::ItemType::Type> baseclass_0;
};

/* 1572 */
struct std::allocator<enum Item::ItemType::Type>::rebind<enum Item::ItemType::Type>
{
  char dummy[1];
};

/* 1573 */
struct std::_Num_base
{
  char dummy[1];
};

/* 1574 */
struct std::_Num_float_base
{
  std::_Num_base baseclass_0;
};

/* 1575 */
struct std::_Tree<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1576 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<enum Item::ItemType::Type const ,unsigned char>,int,std::pair<enum Item::ItemType::Type const ,unsigned char> const *,std::pair<enum Item::ItemType::Type const ,unsigned char> const &>
{
  char dummy[1];
};

/* 1577 */
struct std::_Bidit<std::pair<enum Item::ItemType::Type const ,unsigned char>,int,std::pair<enum Item::ItemType::Type const ,unsigned char> const *,std::pair<enum Item::ItemType::Type const ,unsigned char> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<enum Item::ItemType::Type const ,unsigned char>,int,std::pair<enum Item::ItemType::Type const ,unsigned char> const *,std::pair<enum Item::ItemType::Type const ,unsigned char> const &> baseclass_0;
};

/* 1578 */
union $D9DFA58E856BE6CA3CF3569C9ADD4109
{
  std::_Bidit<std::pair<enum Item::ItemType::Type const ,unsigned char>,int,std::pair<enum Item::ItemType::Type const ,unsigned char> const *,std::pair<enum Item::ItemType::Type const ,unsigned char> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::_Node *_Ptr;
};

/* 1579 */
struct std::_Tree<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::const_iterator
{
  $D9DFA58E856BE6CA3CF3569C9ADD4109 ___u0;
};

/* 1580 */
struct std::_Tree<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::const_iterator baseclass_0;
};

/* 1581 */
struct std::pair<std::_Tree<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> >::iterator first;
  bool second;
};

/* 1582 */
struct std::_Allocator_base<std::_List_nod<CCharacter *,std::allocator<CCharacter *> >::_Node>
{
  char dummy[1];
};

/* 1583 */
struct std::allocator<std::_List_nod<CCharacter *,std::allocator<CCharacter *> >::_Node>
{
  std::_Allocator_base<std::_List_nod<CCharacter *,std::allocator<CCharacter *> >::_Node> baseclass_0;
};

/* 1584 */
struct std::_List_nod<CCharacter *,std::allocator<CCharacter *> >
{
  std::allocator<std::_List_nod<CCharacter *,std::allocator<CCharacter *> >::_Node> _Alnod;
};

/* 1585 */
struct std::allocator<std::_List_nod<CCharacter *,std::allocator<CCharacter *> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<CCharacter *,std::allocator<CCharacter *> >::_Node *> baseclass_0;
};

/* 1586 */
struct std::_List_ptr<CCharacter *,std::allocator<CCharacter *> >
{
  std::_List_nod<CCharacter *,std::allocator<CCharacter *> > baseclass_0;
  std::allocator<std::_List_nod<CCharacter *,std::allocator<CCharacter *> >::_Node *> _Alptr;
};

/* 1587 */
struct std::_Allocator_base<CCharacter *>
{
  char dummy[1];
};

/* 1588 */
struct std::allocator<CCharacter *>
{
  std::_Allocator_base<CCharacter *> baseclass_0;
};

/* 1589 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1590 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CCharacter *>,int,std::pair<unsigned long const ,CCharacter *> const *,std::pair<unsigned long const ,CCharacter *> const &>
{
  char dummy[1];
};

/* 1591 */
struct std::_Bidit<std::pair<unsigned long const ,CCharacter *>,int,std::pair<unsigned long const ,CCharacter *> const *,std::pair<unsigned long const ,CCharacter *> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CCharacter *>,int,std::pair<unsigned long const ,CCharacter *> const *,std::pair<unsigned long const ,CCharacter *> const &> baseclass_0;
};

/* 1592 */
union $42C1023D639CBD126110088EB87B31FB
{
  std::_Bidit<std::pair<unsigned long const ,CCharacter *>,int,std::pair<unsigned long const ,CCharacter *> const *,std::pair<unsigned long const ,CCharacter *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node *_Ptr;
};

/* 1593 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::const_iterator
{
  $42C1023D639CBD126110088EB87B31FB ___u0;
};

/* 1594 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::const_iterator baseclass_0;
};

/* 1595 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::iterator first;
  bool second;
};

/* 1596 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::iterator,std::_
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::iterator first;
  std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::iterator second;
};

/* 1597 */
struct std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>
{
  std::less<unsigned long> comp;
};

/* 1598 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>, _Alnod;
};

/* 1599 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Right;
  std::pair<unsigned long const ,CCharacter *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1600 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>, _Alptr;
};

/* 1601 */
struct std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>
{
  std::less<unsigned long> comp;
};

/* 1602 */
struct boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,
{
  char dummy[1];
};

/* 1603 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex, _Alnod;
};

/* 1604 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Right;
  std::pair<unsigned long const ,CSiegeObject *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1605 */
struct std::pair<unsigned long const ,CSiegeObject *>
{
  const unsigned int first;
  CSiegeObject *second;
};

/* 1606 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 1607 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex, _Alptr;
};

/* 1608 */
struct std::allocator<unsigned short>::rebind<unsigned short>
{
  char dummy[1];
};

/* 1609 */
struct std::_Tree_val<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<std::pair<unsigned short const ,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 1610 */
struct std::_List_val<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >
{
  std::_List_ptr<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> > baseclass_0;
  std::allocator<CCreatureManager::BattleGroundRespawnInfo> _Alval;
};

/* 1611 */
struct std::_Vector_val<enum Item::ItemType::Type,std::allocator<enum Item::ItemType::Type> >
{
  std::allocator<enum Item::ItemType::Type> _Alval;
};

/* 1612 */
struct std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1613 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned short const ,unsigned short>,int,std::pair<unsigned short const ,unsigned short> const *,std::pair<unsigned short const ,unsigned short> const &>
{
  char dummy[1];
};

/* 1614 */
struct std::_Bidit<std::pair<unsigned short const ,unsigned short>,int,std::pair<unsigned short const ,unsigned short> const *,std::pair<unsigned short const ,unsigned short> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned short const ,unsigned short>,int,std::pair<unsigned short const ,unsigned short> const *,std::pair<unsigned short const ,unsigned short> const &> baseclass_0;
};

/* 1615 */
union $30C6F80A7A7E748046C8E50099A163D6
{
  std::_Bidit<std::pair<unsigned short const ,unsigned short>,int,std::pair<unsigned short const ,unsigned short> const *,std::pair<unsigned short const ,unsigned short> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Ptr;
};

/* 1616 */
struct std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator
{
  $30C6F80A7A7E748046C8E50099A163D6 ___u0;
};

/* 1617 */
struct std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator baseclass_0;
};

/* 1618 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator first;
  bool second;
};

/* 1619 */
struct std::iterator<std::bidirectional_iterator_tag,CCommand *,int,CCommand * const *,CCommand * const &>
{
  char dummy[1];
};

/* 1620 */
struct std::iterator<std::bidirectional_iterator_tag,CThreat::ThreatInfo,int,CThreat::ThreatInfo const *,CThreat::ThreatInfo const &>
{
  char dummy[1];
};

/* 1621 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1622 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNPC *>,int,std::pair<unsigned long const ,CNPC *> const *,std::pair<unsigned long const ,CNPC *> const &>
{
  char dummy[1];
};

/* 1623 */
struct std::_Bidit<std::pair<unsigned long const ,CNPC *>,int,std::pair<unsigned long const ,CNPC *> const *,std::pair<unsigned long const ,CNPC *> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNPC *>,int,std::pair<unsigned long const ,CNPC *> const *,std::pair<unsigned long const ,CNPC *> const &> baseclass_0;
};

/* 1624 */
union $0CB8590276BFC7FF1D2611AAF9CE9C06
{
  std::_Bidit<std::pair<unsigned long const ,CNPC *>,int,std::pair<unsigned long const ,CNPC *> const *,std::pair<unsigned long const ,CNPC *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Ptr;
};

/* 1625 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator
{
  $0CB8590276BFC7FF1D2611AAF9CE9C06 ___u0;
};

/* 1626 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator baseclass_0;
};

/* 1627 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator first;
  bool second;
};

/* 1628 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator,std::_Tree<std::_T
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator first;
  std::_Tree<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator second;
};

/* 1629 */
struct std::allocator<CFriendList::Rebind>::rebind<CFriendList::Rebind>
{
  char dummy[1];
};

/* 1630 */
struct std::iterator<std::bidirectional_iterator_tag,CAggresiveCreature *,int,CAggresiveCreature * const *,CAggresiveCreature * const &>
{
  char dummy[1];
};

/* 1631 */
struct std::_Bidit<CAggresiveCreature *,int,CAggresiveCreature * const *,CAggresiveCreature * const &>
{
  std::iterator<std::bidirectional_iterator_tag,CAggresiveCreature *,int,CAggresiveCreature * const *,CAggresiveCreature * const &> baseclass_0;
};

/* 1632 */
union $F15400288B765E07DFFA7E70F760481E
{
  std::_Bidit<CAggresiveCreature *,int,CAggresiveCreature * const *,CAggresiveCreature * const &> baseclass_0;
  std::_List_nod<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::_Node *_Ptr;
};

/* 1633 */
struct std::list<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::const_iterator
{
  $F15400288B765E07DFFA7E70F760481E ___u0;
};

/* 1634 */
struct std::list<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::iterator
{
  std::list<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >::const_iterator baseclass_0;
};

/* 1635 */
struct std::_Num_int_base
{
  std::_Num_base baseclass_0;
};

/* 1636 */
struct std::numeric_limits<unsigned int>
{
  std::_Num_int_base baseclass_0;
};

/* 1637 */
struct std::pair<unsigned long,unsigned long>
{
  unsigned int first;
  unsigned int second;
};

/* 1638 */
struct std::iterator<std::bidirectional_iterator_tag,CCell::ItemInfo,int,CCell::ItemInfo const *,CCell::ItemInfo const &>
{
  char dummy[1];
};

/* 1639 */
struct std::_Bidit<CCell::ItemInfo,int,CCell::ItemInfo const *,CCell::ItemInfo const &>
{
  std::iterator<std::bidirectional_iterator_tag,CCell::ItemInfo,int,CCell::ItemInfo const *,CCell::ItemInfo const &> baseclass_0;
};

/* 1640 */
union $9B90D7BDBE32759AD4456B9B89B45E05
{
  std::_Bidit<CCell::ItemInfo,int,CCell::ItemInfo const *,CCell::ItemInfo const &> baseclass_0;
  std::_List_nod<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::_Node *_Ptr;
};

/* 1641 */
struct std::list<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::const_iterator
{
  $9B90D7BDBE32759AD4456B9B89B45E05 ___u0;
};

/* 1642 */
struct std::list<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::iterator
{
  std::list<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >::const_iterator baseclass_0;
};

/* 1643 */
struct std::iterator<std::random_access_iterator_tag,Quest::PhaseNode *,int,Quest::PhaseNode * const *,Quest::PhaseNode * const &>
{
  char dummy[1];
};

/* 1644 */
struct std::_Ranit<Quest::PhaseNode *,int,Quest::PhaseNode * const *,Quest::PhaseNode * const &>
{
  std::iterator<std::random_access_iterator_tag,Quest::PhaseNode *,int,Quest::PhaseNode * const *,Quest::PhaseNode * const &> baseclass_0;
};

/* 1645 */
union $0C2AF7B749EFA1DA205536C7DDAFFB5B
{
  std::_Ranit<Quest::PhaseNode *,int,Quest::PhaseNode * const *,Quest::PhaseNode * const &> baseclass_0;
  Quest::PhaseNode **_Myptr;
};

/* 1646 */
struct std::vector<Quest::PhaseNode *,std::allocator<Quest::PhaseNode *> >::const_iterator
{
  $0C2AF7B749EFA1DA205536C7DDAFFB5B ___u0;
};

/* 1647 */
struct std::vector<Quest::PhaseNode *,std::allocator<Quest::PhaseNode *> >::iterator
{
  std::vector<Quest::PhaseNode *,std::allocator<Quest::PhaseNode *> >::const_iterator baseclass_0;
};

/* 1648 */
struct std::map<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
};

/* 1649 */
struct std::_Bidit<CCommand *,int,CCommand * const *,CCommand * const &>
{
  std::iterator<std::bidirectional_iterator_tag,CCommand *,int,CCommand * const *,CCommand * const &> baseclass_0;
};

/* 1650 */
struct std::list<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >
{
  std::_List_val<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> > baseclass_0;
  std::_List_nod<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1651 */
struct std::iterator<std::bidirectional_iterator_tag,CCreatureManager::BattleGroundRespawnInfo,int,CCreatureManager::BattleGroundRespawnInfo const *,CCreatureManager::BattleGroundRespawnInfo const &>
{
  char dummy[1];
};

/* 1652 */
struct std::_Bidit<CCreatureManager::BattleGroundRespawnInfo,int,CCreatureManager::BattleGroundRespawnInfo const *,CCreatureManager::BattleGroundRespawnInfo const &>
{
  std::iterator<std::bidirectional_iterator_tag,CCreatureManager::BattleGroundRespawnInfo,int,CCreatureManager::BattleGroundRespawnInfo const *,CCreatureManager::BattleGroundRespawnInfo const &> baseclass_0;
};

/* 1653 */
union $BF124A17F495EF468BD58C5BF04D9A87
{
  std::_Bidit<CCreatureManager::BattleGroundRespawnInfo,int,CCreatureManager::BattleGroundRespawnInfo const *,CCreatureManager::BattleGroundRespawnInfo const &> baseclass_0;
  std::_List_nod<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::_Node *_Ptr;
};

/* 1654 */
struct std::list<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::const_iterator
{
  $BF124A17F495EF468BD58C5BF04D9A87 ___u0;
};

/* 1655 */
struct std::list<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::iterator
{
  std::list<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> >::const_iterator baseclass_0;
};

/* 1656 */
struct std::vector<enum Item::ItemType::Type,std::allocator<enum Item::ItemType::Type> >
{
  std::_Vector_val<enum Item::ItemType::Type,std::allocator<enum Item::ItemType::Type> > baseclass_0;
  Item::ItemType::Type *_Myfirst;
  Item::ItemType::Type *_Mylast;
  Item::ItemType::Type *_Myend;
};

/* 1657 */
struct std::iterator<std::random_access_iterator_tag,enum Item::ItemType::Type,int,enum Item::ItemType::Type const *,enum Item::ItemType::Type const &>
{
  char dummy[1];
};

/* 1658 */
struct std::_Ranit<enum Item::ItemType::Type,int,enum Item::ItemType::Type const *,enum Item::ItemType::Type const &>
{
  std::iterator<std::random_access_iterator_tag,enum Item::ItemType::Type,int,enum Item::ItemType::Type const *,enum Item::ItemType::Type const &> baseclass_0;
};

/* 1659 */
union $B5AF3ED2B0881DD3E6F13181873FF0BD
{
  std::_Ranit<enum Item::ItemType::Type,int,enum Item::ItemType::Type const *,enum Item::ItemType::Type const &> baseclass_0;
  Item::ItemType::Type *_Myptr;
};

/* 1660 */
struct std::vector<enum Item::ItemType::Type,std::allocator<enum Item::ItemType::Type> >::const_iterator
{
  $B5AF3ED2B0881DD3E6F13181873FF0BD ___u0;
};

/* 1661 */
struct std::vector<enum Item::ItemType::Type,std::allocator<enum Item::ItemType::Type> >::iterator
{
  std::vector<enum Item::ItemType::Type,std::allocator<enum Item::ItemType::Type> >::const_iterator baseclass_0;
};

/* 1662 */
struct std::numeric_limits<float>
{
  std::_Num_float_base baseclass_0;
};

/* 1663 */
struct std::numeric_limits<__int64>
{
  std::_Num_int_base baseclass_0;
};

/* 1664 */
struct std::_List_val<CCharacter *,std::allocator<CCharacter *> >
{
  std::_List_ptr<CCharacter *,std::allocator<CCharacter *> > baseclass_0;
  std::allocator<CCharacter *> _Alval;
};

/* 1665 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<std::pair<unsigned long const ,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 1666 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1667 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CSiegeObject *>,int,std::pair<unsigned long const ,CSiegeObject *> const *,std::pair<unsigned long const ,CSiegeObject *> const &>
{
  char dummy[1];
};

/* 1668 */
struct std::_Bidit<std::pair<unsigned long const ,CSiegeObject *>,int,std::pair<unsigned long const ,CSiegeObject *> const *,std::pair<unsigned long const ,CSiegeObject *> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CSiegeObject *>,int,std::pair<unsigned long const ,CSiegeObject *> const *,std::pair<unsigned long const ,CSiegeObject *> const &> baseclass_0;
};

/* 1669 */
union $624B1B5F70D3E85CB1F644F7EB023262
{
  std::_Bidit<std::pair<unsigned long const ,CSiegeObject *>,int,std::pair<unsigned long const ,CSiegeObject *> const *,std::pair<unsigned long const ,CSiegeObject *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Ptr;
};

/* 1670 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator
{
  $624B1B5F70D3E85CB1F644F7EB023262 ___u0;
};

/* 1671 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator baseclass_0;
};

/* 1672 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator,bo
{
  std::_Tree<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator first;
  bool second;
};

/* 1673 */
struct std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >::rebind<std::pair<enum Item::ItemType::Type const ,unsigned char> >
{
  char dummy[1];
};

/* 1674 */
struct std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >::rebind<std::_Tree_nod<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsig
{
  char dummy[1];
};

/* 1675 */
struct std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >::rebind<enum Item::ItemType::Type>
{
  char dummy[1];
};

/* 1676 */
struct std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >::rebind<char>
{
  char dummy[1];
};

/* 1677 */
struct std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>
{
  std::less<unsigned long> comp;
};

/* 1678 */
struct boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  char dummy[1];
};

/* 1679 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > _Alnod;
};

/* 1680 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > _Alptr;
};

/* 1681 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 1682 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<std::pair<unsigned long const ,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 1683 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Right;
  std::pair<unsigned long const ,CMonster *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1684 */
struct std::pair<unsigned long const ,CMonster *>
{
  const unsigned int first;
  CMonster *second;
};

/* 1685 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1686 */
struct std::map<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
};

/* 1687 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CMonster *>,int,std::pair<unsigned long const ,CMonster *> const *,std::pair<unsigned long const ,CMonster *> const &>
{
  char dummy[1];
};

/* 1688 */
struct std::_Bidit<std::pair<unsigned long const ,CMonster *>,int,std::pair<unsigned long const ,CMonster *> const *,std::pair<unsigned long const ,CMonster *> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CMonster *>,int,std::pair<unsigned long const ,CMonster *> const *,std::pair<unsigned long const ,CMonster *> const &> baseclass_0;
};

/* 1689 */
union $FCE10AC065FE017CD62A2F8E971E5CBC
{
  std::_Bidit<std::pair<unsigned long const ,CMonster *>,int,std::pair<unsigned long const ,CMonster *> const *,std::pair<unsigned long const ,CMonster *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Ptr;
};

/* 1690 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator
{
  $FCE10AC065FE017CD62A2F8E971E5CBC ___u0;
};

/* 1691 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator baseclass_0;
};

/* 1692 */
struct std::iterator<std::random_access_iterator_tag,Quest::EventNode *,int,Quest::EventNode * const *,Quest::EventNode * const &>
{
  char dummy[1];
};

/* 1693 */
struct std::_Ranit<Quest::EventNode *,int,Quest::EventNode * const *,Quest::EventNode * const &>
{
  std::iterator<std::random_access_iterator_tag,Quest::EventNode *,int,Quest::EventNode * const *,Quest::EventNode * const &> baseclass_0;
};

/* 1694 */
union $1F1FA50599740708D6B14CCAF0BA3301
{
  std::_Ranit<Quest::EventNode *,int,Quest::EventNode * const *,Quest::EventNode * const &> baseclass_0;
  Quest::EventNode **_Myptr;
};

/* 1695 */
struct std::vector<Quest::EventNode *,std::allocator<Quest::EventNode *> >::const_iterator
{
  $1F1FA50599740708D6B14CCAF0BA3301 ___u0;
};

/* 1696 */
struct std::vector<Quest::EventNode *,std::allocator<Quest::EventNode *> >::iterator
{
  std::vector<Quest::EventNode *,std::allocator<Quest::EventNode *> >::const_iterator baseclass_0;
};

/* 1697 */
struct std::allocator<CBanList::Rebind>::rebind<CBanList::Rebind>
{
  char dummy[1];
};

/* 1698 */
struct std::numeric_limits<bool>
{
  std::_Num_int_base baseclass_0;
};

/* 1699 */
struct std::map<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_Tree<std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
};

/* 1700 */
struct std::numeric_limits<unsigned short>
{
  std::_Num_int_base baseclass_0;
};

/* 1701 */
struct std::multimap<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> > baseclass_0;
};

/* 1702 */
struct std::map<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
};

/* 1703 */
struct std::_Bidit<CThreat::ThreatInfo,int,CThreat::ThreatInfo const *,CThreat::ThreatInfo const &>
{
  std::iterator<std::bidirectional_iterator_tag,CThreat::ThreatInfo,int,CThreat::ThreatInfo const *,CThreat::ThreatInfo const &> baseclass_0;
};

/* 1704 */
struct std::numeric_limits<unsigned long>
{
  std::_Num_int_base baseclass_0;
};

/* 1705 */
struct std::map<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> > >
{
  std::_Tree<std::_Tmap_traits<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> >,0> > baseclass_0;
};

/* 1706 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::iterator first;
  bool second;
};

/* 1707 */
struct std::iterator<std::random_access_iterator_tag,Quest::TriggerNode *,int,Quest::TriggerNode * const *,Quest::TriggerNode * const &>
{
  char dummy[1];
};

/* 1708 */
struct std::_Ranit<Quest::TriggerNode *,int,Quest::TriggerNode * const *,Quest::TriggerNode * const &>
{
  std::iterator<std::random_access_iterator_tag,Quest::TriggerNode *,int,Quest::TriggerNode * const *,Quest::TriggerNode * const &> baseclass_0;
};

/* 1709 */
union $745B7D09EEFC471835AF61D1EFF0B03D
{
  std::_Ranit<Quest::TriggerNode *,int,Quest::TriggerNode * const *,Quest::TriggerNode * const &> baseclass_0;
  Quest::TriggerNode **_Myptr;
};

/* 1710 */
struct std::vector<Quest::TriggerNode *,std::allocator<Quest::TriggerNode *> >::const_iterator
{
  $745B7D09EEFC471835AF61D1EFF0B03D ___u0;
};

/* 1711 */
struct std::vector<Quest::TriggerNode *,std::allocator<Quest::TriggerNode *> >::iterator
{
  std::vector<Quest::TriggerNode *,std::allocator<Quest::TriggerNode *> >::const_iterator baseclass_0;
};

/* 1712 */
struct std::numeric_limits<int>
{
  std::_Num_int_base baseclass_0;
};

/* 1713 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<std::pair<unsigned long const ,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 1714 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1715 */
union $61304C0CA96C83E22EAF18F8D86EA794
{
  std::_Bidit<std::pair<unsigned long const ,CCharacter *>,int,std::pair<unsigned long const ,CCharacter *> const *,std::pair<unsigned long const ,CCharacter *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Ptr;
};

/* 1716 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator
{
  $61304C0CA96C83E22EAF18F8D86EA794 ___u0;
};

/* 1717 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator baseclass_0;
};

/* 1718 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator first;
  bool second;
};

/* 1719 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator first;
  bool second;
};

/* 1720 */
struct std::numeric_limits<char>
{
  std::_Num_int_base baseclass_0;
};

/* 1721 */
struct std::numeric_limits<double>
{
  std::_Num_float_base baseclass_0;
};

/* 1722 */
struct std::numeric_limits<long double>
{
  std::_Num_float_base baseclass_0;
};

/* 1723 */
struct std::allocator<std::pair<unsigned long const ,unsigned long> >::rebind<std::pair<unsigned long const ,unsigned long> >
{
  char dummy[1];
};

/* 1724 */
struct std::allocator<std::pair<unsigned long const ,unsigned long> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::_Node>
{
  char dummy[1];
};

/* 1725 */
struct std::allocator<std::pair<unsigned long const ,unsigned long> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,1> >::_Node *>
{
  char dummy[1];
};

/* 1726 */
struct std::allocator<std::pair<unsigned long const ,unsigned long> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 1727 */
struct std::allocator<std::pair<unsigned long const ,unsigned long> >::rebind<char>
{
  char dummy[1];
};

/* 1728 */
union $3620EB6AEB8B9CBB0E05D548E3F3C5FA
{
  std::_Bidit<CThreat::ThreatInfo,int,CThreat::ThreatInfo const *,CThreat::ThreatInfo const &> baseclass_0;
  std::_List_nod<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::_Node *_Ptr;
};

/* 1729 */
struct std::list<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::const_iterator
{
  $3620EB6AEB8B9CBB0E05D548E3F3C5FA ___u0;
};

/* 1730 */
struct std::list<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::iterator
{
  std::list<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::const_iterator baseclass_0;
};

/* 1731 */
struct std::map<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
};

/* 1732 */
struct std::allocator<Quest::PhaseNode::DeletedItem>::rebind<Quest::PhaseNode::DeletedItem>
{
  char dummy[1];
};

/* 1733 */
struct std::allocator<CCharacter *>::rebind<std::_List_nod<CCharacter *,std::allocator<CCharacter *> >::_Node>
{
  char dummy[1];
};

/* 1734 */
struct std::allocator<CCharacter *>::rebind<std::_List_nod<CCharacter *,std::allocator<CCharacter *> >::_Node *>
{
  char dummy[1];
};

/* 1735 */
struct std::allocator<CCharacter *>::rebind<CCharacter *>
{
  char dummy[1];
};

/* 1736 */
struct std::iterator<std::random_access_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &>
{
  char dummy[1];
};

/* 1737 */
struct std::_Ranit<unsigned short,int,unsigned short const *,unsigned short const &>
{
  std::iterator<std::random_access_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &> baseclass_0;
};

/* 1738 */
union $5D7F4E7201D253CB71AECA1FC26457E9
{
  std::_Ranit<unsigned short,int,unsigned short const *,unsigned short const &> baseclass_0;
  unsigned __int16 *_Myptr;
};

/* 1739 */
struct std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator
{
  $5D7F4E7201D253CB71AECA1FC26457E9 ___u0;
};

/* 1740 */
struct std::vector<unsigned short,std::allocator<unsigned short> >::iterator
{
  std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator baseclass_0;
};

/* 1741 */
struct std::allocator<Quest::EventNode *>::rebind<Quest::EventNode *>
{
  char dummy[1];
};

/* 1742 */
struct std::numeric_limits<long>
{
  std::_Num_int_base baseclass_0;
};

/* 1743 */
struct std::map<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
};

/* 1744 */
union $8E03CA831D100A95F9857342591FC4AA
{
  std::_Bidit<CCommand *,int,CCommand * const *,CCommand * const &> baseclass_0;
  std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *_Ptr;
};

/* 1745 */
struct std::list<CCommand *,std::allocator<CCommand *> >::const_iterator
{
  $8E03CA831D100A95F9857342591FC4AA ___u0;
};

/* 1746 */
struct std::list<CCommand *,std::allocator<CCommand *> >::iterator
{
  std::list<CCommand *,std::allocator<CCommand *> >::const_iterator baseclass_0;
};

/* 1747 */
struct std::list<CCharacter *,std::allocator<CCharacter *> >
{
  std::_List_val<CCharacter *,std::allocator<CCharacter *> > baseclass_0;
  std::_List_nod<CCharacter *,std::allocator<CCharacter *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1748 */
union $EC37E31C9C4A0941BAD14639877BF64F
{
  std::_Bidit<CCharacter *,int,CCharacter * const *,CCharacter * const &> baseclass_0;
  std::_List_nod<CCharacter *,std::allocator<CCharacter *> >::_Node *_Ptr;
};

/* 1749 */
struct std::list<CCharacter *,std::allocator<CCharacter *> >::const_iterator
{
  $EC37E31C9C4A0941BAD14639877BF64F ___u0;
};

/* 1750 */
struct std::list<CCharacter *,std::allocator<CCharacter *> >::iterator
{
  std::list<CCharacter *,std::allocator<CCharacter *> >::const_iterator baseclass_0;
};

/* 1751 */
struct std::allocator<CCommand *>::rebind<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node>
{
  char dummy[1];
};

/* 1752 */
struct std::allocator<CCommand *>::rebind<std::_List_nod<CCommand *,std::allocator<CCommand *> >::_Node *>
{
  char dummy[1];
};

/* 1753 */
struct std::allocator<CCommand *>::rebind<CCommand *>
{
  char dummy[1];
};

/* 1754 */
struct std::nothrow_t
{
  char dummy[1];
};

/* 1755 */
struct std::numeric_limits<unsigned char>
{
  std::_Num_int_base baseclass_0;
};

/* 1756 */
struct std::numeric_limits<unsigned __int64>
{
  std::_Num_int_base baseclass_0;
};

/* 1757 */
struct std::allocator<Quest::TriggerNode *>::rebind<Quest::TriggerNode *>
{
  char dummy[1];
};

/* 1758 */
struct std::iterator<std::random_access_iterator_tag,Quest::PhaseNode::DeletedItem,int,Quest::PhaseNode::DeletedItem const *,Quest::PhaseNode::DeletedItem const &>
{
  char dummy[1];
};

/* 1759 */
struct std::_Ranit<Quest::PhaseNode::DeletedItem,int,Quest::PhaseNode::DeletedItem const *,Quest::PhaseNode::DeletedItem const &>
{
  std::iterator<std::random_access_iterator_tag,Quest::PhaseNode::DeletedItem,int,Quest::PhaseNode::DeletedItem const *,Quest::PhaseNode::DeletedItem const &> baseclass_0;
};

/* 1760 */
union $7DC8E74C8FADEF7F3C826AF74DC75885
{
  std::_Ranit<Quest::PhaseNode::DeletedItem,int,Quest::PhaseNode::DeletedItem const *,Quest::PhaseNode::DeletedItem const &> baseclass_0;
  Quest::PhaseNode::DeletedItem *_Myptr;
};

/* 1761 */
struct std::vector<Quest::PhaseNode::DeletedItem,std::allocator<Quest::PhaseNode::DeletedItem> >::const_iterator
{
  $7DC8E74C8FADEF7F3C826AF74DC75885 ___u0;
};

/* 1762 */
struct std::vector<Quest::PhaseNode::DeletedItem,std::allocator<Quest::PhaseNode::DeletedItem> >::iterator
{
  std::vector<Quest::PhaseNode::DeletedItem,std::allocator<Quest::PhaseNode::DeletedItem> >::const_iterator baseclass_0;
};

/* 1763 */
struct std::iterator<std::random_access_iterator_tag,CFriendList::Rebind,int,CFriendList::Rebind const *,CFriendList::Rebind const &>
{
  char dummy[1];
};

/* 1764 */
struct std::_Ranit<CFriendList::Rebind,int,CFriendList::Rebind const *,CFriendList::Rebind const &>
{
  std::iterator<std::random_access_iterator_tag,CFriendList::Rebind,int,CFriendList::Rebind const *,CFriendList::Rebind const &> baseclass_0;
};

/* 1765 */
union $1D990FDA08A6B1CB35F3A81E3BEABB70
{
  std::_Ranit<CFriendList::Rebind,int,CFriendList::Rebind const *,CFriendList::Rebind const &> baseclass_0;
  CFriendList::Rebind *_Myptr;
};

/* 1766 */
struct std::vector<CFriendList::Rebind,std::allocator<CFriendList::Rebind> >::const_iterator
{
  $1D990FDA08A6B1CB35F3A81E3BEABB70 ___u0;
};

/* 1767 */
struct std::vector<CFriendList::Rebind,std::allocator<CFriendList::Rebind> >::iterator
{
  std::vector<CFriendList::Rebind,std::allocator<CFriendList::Rebind> >::const_iterator baseclass_0;
};

/* 1768 */
struct std::allocator<Quest::PhaseNode *>::rebind<Quest::PhaseNode *>
{
  char dummy[1];
};

/* 1769 */
struct std::numeric_limits<short>
{
  std::_Num_int_base baseclass_0;
};

/* 1770 */
struct std::iterator<std::random_access_iterator_tag,CBanList::Rebind,int,CBanList::Rebind const *,CBanList::Rebind const &>
{
  char dummy[1];
};

/* 1771 */
struct std::_Ranit<CBanList::Rebind,int,CBanList::Rebind const *,CBanList::Rebind const &>
{
  std::iterator<std::random_access_iterator_tag,CBanList::Rebind,int,CBanList::Rebind const *,CBanList::Rebind const &> baseclass_0;
};

/* 1772 */
union $BB6922D34A7D74C7BDD173D6DEFD840B
{
  std::_Ranit<CBanList::Rebind,int,CBanList::Rebind const *,CBanList::Rebind const &> baseclass_0;
  CBanList::Rebind *_Myptr;
};

/* 1773 */
struct std::vector<CBanList::Rebind,std::allocator<CBanList::Rebind> >::const_iterator
{
  $BB6922D34A7D74C7BDD173D6DEFD840B ___u0;
};

/* 1774 */
struct std::vector<CBanList::Rebind,std::allocator<CBanList::Rebind> >::iterator
{
  std::vector<CBanList::Rebind,std::allocator<CBanList::Rebind> >::const_iterator baseclass_0;
};

/* 1775 */
struct std::allocator<CThreat::ThreatInfo>::rebind<std::_List_nod<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::_Node>
{
  char dummy[1];
};

/* 1776 */
struct std::allocator<CThreat::ThreatInfo>::rebind<std::_List_nod<CThreat::ThreatInfo,std::allocator<CThreat::ThreatInfo> >::_Node *>
{
  char dummy[1];
};

/* 1777 */
struct std::allocator<CThreat::ThreatInfo>::rebind<CThreat::ThreatInfo>
{
  char dummy[1];
};

/* 1778 */
struct std::numeric_limits<signed char>
{
  std::_Num_int_base baseclass_0;
};

/* 1779 */
struct std::_Nonscalar_ptr_iterator_tag
{
  char dummy[1];
};

/* 1780 */
struct CCMDAutoBalance
{
  CConsoleCommand baseclass_0;
  char m_cCmd;
};

/* 1781 */
struct CCMDDropItem
{
  CConsoleCommand baseclass_0;
  char m_szName[17];
  unsigned __int16 m_usItemProtoTypeID;
};

/* 1782 */
#pragma pack(push, 1)
struct AtNode
{
  char m_wDefenserNum;
  unsigned int m_dwDefenser[10];
  char m_cDefenserJudge[10];
};
#pragma pack(pop)

/* 1783 */
struct CCMDNotify
{
  CConsoleCommand baseclass_0;
  char m_szBuffer[2000];
  int m_nLength;
};

/* 1784 */
struct CClass
{
  CClass::StatusType m_eIncrementType[2];
  char m_cIncrementValue[2];
  CClass::JobType m_eJobType;
  CClass::JobType m_ePrevJobType;
  CClass::JobLevel m_eJobLevel;
  CClass::RaceType m_eRace;
  bool m_bLevelSwap;
};

/* 1785 */
struct ChState
{
  unsigned __int16 m_wIP;
  unsigned __int16 m_wSTR;
  unsigned __int16 m_wDEX;
  unsigned __int16 m_wCON;
  unsigned __int16 m_wINT;
  unsigned __int16 m_wWIS;
};

/* 1786 */
struct CalculateDamageInfo
{
  bool m_bForceDRC;
  float m_fDRC;
  __int16 m_nOffenceRevision;
  __int16 m_nMinDamage;
  __int16 m_nMaxDamage;
};

/* 1787 */
struct CTypeName
{
  char m_nType;
  char *m_lpszName;
};

/* 1788 */
union _Dconst
{
  unsigned __int16 _Word[8];
  float _Float;
  long double _Double;
  long double _Long_double;
};

/* 1789 */
#pragma pack(push, 1)
struct DefenserNode
{
  unsigned int m_dwCharID;
  unsigned __int16 m_wMaxHP;
  unsigned __int16 m_sCurrHP;
  unsigned __int16 m_wMaxMP;
  unsigned __int16 m_sCurrMP;
  unsigned __int16 m_wMPHeal;
  unsigned __int16 m_wDamage;
  char m_cJudge;
};
#pragma pack(pop)

/* 1790 */
#pragma pack(push, 1)
struct PeaceModeInfo
{
  bool m_bPeace;
  _FILETIME m_FileTime;
};
#pragma pack(pop)

/* 1791 */
struct CCreatureManager::sRealmEnchant
{
  char m_cHPPercent;
  char m_cMPPercent;
  char m_cExpPercent;
  char m_cDropRate;
};

/* 1792 */
struct CCreatureManager
{
  CCreatureManager::sRealmEnchant m_RealmEnchantInfo[2];
  std::map<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_NPCMap;
  std::map<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_MonsterMap;
  std::map<unsigned short,unsigned short,std::less<unsigned short>,boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_AdminMonsterUIDMap;
  std::map<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_CharacterMap;
  std::multimap<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_CharacterNameMap;
  std::map<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_SiegeObjectMap;
  std::list<CCharacter *,std::allocator<CCharacter *> > m_LogoutWaitList;
  boost::pool<boost::default_user_allocator_new_delete> m_CharacterPool;
  EliteBonus::EliteBonusData m_EliteBonus;
  bool m_bAutoBalance;
  bool m_bRest;
  std::list<CCreatureManager::BattleGroundRespawnInfo,std::allocator<CCreatureManager::BattleGroundRespawnInfo> > m_lstRespawn[6];
  Position m_RespawnPoint[6];
  unsigned int m_dwLastUpdateTime;
  unsigned __int16 m_wCharacterNum[2];
};

/* 1793 */
#pragma pack(push, 1)
struct GiveItemInfo
{
  unsigned int m_dwCreateID;
  unsigned int m_dwUID;
  unsigned int m_dwCID;
  unsigned __int16 m_usPrototypeID;
  char m_cAmount;
  char m_cAttribute[14];
  unsigned __int64 m_dwItemUID;
};
#pragma pack(pop)

/* 1794 */
struct CSpell::Spell_Info
{
  Skill::ProtoType *m_SkillProtoType;
  CAggresiveCreature *m_lpCaster;
  unsigned __int16 m_wDurationSec;
  unsigned __int16 m_wSpellID;
  unsigned __int16 m_wSpellLevel;
  char m_cSpellType;
  char m_cPadding;
};

/* 1795 */
struct boost::fast_pool_allocator_tag
{
  char dummy[1];
};

/* 1796 */
struct boost::default_user_allocator_new_delete
{
  char dummy[1];
};

/* 1797 */
struct boost::details::pool::win32_mutex
{
  _RTL_CRITICAL_SECTION mtx;
};

/* 1798 */
struct boost::fast_pool_allocator<char,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 1799 */
struct boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 1800 */
struct boost::singleton_pool<boost::fast_pool_allocator_tag,12,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type
{
  boost::details::pool::win32_mutex baseclass_0;
  boost::pool<boost::default_user_allocator_new_delete> p;
};

/* 1801 */
struct boost::details::pool::singleton_default<boost::singleton_pool<boost::fast_pool_allocator_tag,12,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>
{
  char dummy[1];
};

/* 1802 */
struct boost::singleton_pool<boost::fast_pool_allocator_tag,12,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 1803 */
struct boost::default_user_allocator_malloc_free
{
  char dummy[1];
};

/* 1804 */
struct boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_List_nod<CCell::ItemInfo,boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::deta
{
  char dummy[1];
};

/* 1805 */
struct boost::fast_pool_allocator<CCell::ItemInfo,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<CCell::ItemInfo>
{
  char dummy[1];
};

/* 1806 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::pair<unsigned long const ,CSiegeObject *> >
{
  char dummy[1];
};

/* 1807 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,boost::f
{
  char dummy[1];
};

/* 1808 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<unsigned long>
{
  char dummy[1];
};

/* 1809 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<char>
{
  char dummy[1];
};

/* 1810 */
struct boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_List_nod<CMonster *,boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win3
{
  char dummy[1];
};

/* 1811 */
struct boost::fast_pool_allocator<CMonster *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<CMonster *>
{
  char dummy[1];
};

/* 1812 */
struct boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_List_nod<CCharacter *,boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool
{
  char dummy[1];
};

/* 1813 */
struct boost::fast_pool_allocator<CCharacter *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<CCharacter *>
{
  char dummy[1];
};

/* 1814 */
struct boost::details::pool::singleton_default<boost::singleton_pool<boost::fast_pool_allocator_tag,12,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>::object_creator
{
  char dummy[1];
};

/* 1815 */
struct boost::details::pool::guard<boost::details::pool::win32_mutex>
{
  boost::details::pool::win32_mutex *mtx;
};

/* 1816 */
struct boost::details::pool::null_mutex
{
  char dummy[1];
};

/* 1817 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::pair<unsigned long const ,CMonster *> >
{
  char dummy[1];
};

/* 1818 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool
{
  char dummy[1];
};

/* 1819 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<unsigned long>
{
  char dummy[1];
};

/* 1820 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<char>
{
  char dummy[1];
};

/* 1821 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::pair<unsigned long const ,CCharacter *> >
{
  char dummy[1];
};

/* 1822 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_
{
  char dummy[1];
};

/* 1823 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<unsigned long>
{
  char dummy[1];
};

/* 1824 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<char>
{
  char dummy[1];
};

/* 1825 */
struct boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_List_nod<CSiegeObject *,boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details
{
  char dummy[1];
};

/* 1826 */
struct boost::fast_pool_allocator<CSiegeObject *,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<CSiegeObject *>
{
  char dummy[1];
};

/* 1827 */
struct std::_Allocator_base<Item::ItemGarbage>
{
  char dummy[1];
};

/* 1828 */
struct std::allocator<Item::ItemGarbage>
{
  std::_Allocator_base<Item::ItemGarbage> baseclass_0;
};

/* 1829 */
struct std::_Vector_val<Item::ItemGarbage,std::allocator<Item::ItemGarbage> >
{
  std::allocator<Item::ItemGarbage> _Alval;
};

/* 1830 */
struct Item::ItemGarbage
{
  Item::CItem *m_lpItem;
  unsigned int m_dwRemainNum;
};

/* 1831 */
struct std::vector<Item::ItemGarbage,std::allocator<Item::ItemGarbage> >
{
  std::_Vector_val<Item::ItemGarbage,std::allocator<Item::ItemGarbage> > baseclass_0;
  Item::ItemGarbage *_Myfirst;
  Item::ItemGarbage *_Mylast;
  Item::ItemGarbage *_Myend;
};

/* 1832 */
struct Item::CItemType
{
  std::vector<enum Item::ItemType::Type,std::allocator<enum Item::ItemType::Type> > m_ItemTypes[16];
  CTypeName m_ItemTypeNames[68];
  CTypeName m_ItemLimitNames[7];
  CTypeName m_ItemGradeNames[8];
};

/* 1833 */
struct Item::CSEQListContainer
{
  Item::CItemContainer baseclass_0;
  unsigned __int16 m_ListCount;
};

/* 1834 */
struct Item::ChemicalInfo
{
  unsigned __int16 m_wPickkingItemID;
  unsigned __int16 m_wTargetItemID;
  unsigned __int16 m_wResultItemID;
  char m_cPickkingItemNum;
  char m_cTargetItemNum;
  char m_cResultItemNum;
};

/* 1835 */
struct Item::CItemMgr
{
  unsigned int m_nItemNum;
  Item::ItemInfo *m_ItemInfoArray;
  std::vector<unsigned short,std::allocator<unsigned short> > m_vecDropListByLevel[150];
  std::vector<unsigned short,std::allocator<unsigned short> > m_vecRingDropListByLevel[150][8];
  std::vector<unsigned short,std::allocator<unsigned short> > m_vecNecklaceDropListByLevel[150][8];
  std::vector<unsigned short,std::allocator<unsigned short> > m_vecRuneDropListByLevel[150][8];
  std::vector<unsigned short,std::allocator<unsigned short> > m_vecCompensation[78];
  unsigned int m_nChemicalNum;
  Item::ChemicalInfo *m_ChemicalArray;
  std::map<enum Item::ItemType::Type,unsigned char,std::less<enum Item::ItemType::Type>,std::allocator<std::pair<enum Item::ItemType::Type const ,unsigned char> > > m_mapRuneItemCnt;
};

/* 1836 */
struct Item::CUseItem
{
  Item::CItem baseclass_0;
};

/* 1837 */
struct Item::CItemFactory
{
  unsigned __int64 m_nCurrentUID;
  std::map<unsigned __int64,Item::CItemOwnerInfo,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_ItemSerialMap;
};

/* 1838 */
struct Item::EquipmentInfo
{
  _BYTE gap0[3];
  char _bf3;
  char m_cDiffMaxDurability;
  char m_cReserved2;
};

/* 1839 */
struct Item::CCampShopContainer
{
  Item::CShopContainer baseclass_0;
  char m_cUpdateCount;
};

/* 1840 */
struct Item::CItemContainer::iterator
{
  Item::CItem **m_lppItems;
  Item::CItem *m_lpNullItem;
  unsigned __int16 m_nCurrentPos;
};

/* 1841 */
#pragma pack(push, 1)
struct CHAR_VIEW
{
  unsigned int CID;
  char Name[16];
  char Sex;
  char Hair;
  char Face;
  char Race;
  unsigned __int16 Class;
  unsigned int Fame;
  unsigned int Mileage;
  unsigned int GID;
  unsigned int PID;
  char Level;
  unsigned __int16 Equip[15];
};
#pragma pack(pop)

/* 1842 */
struct CastObject
{
  POS m_DstPos;
  unsigned int m_dwTargetID;
  unsigned __int16 m_wTypeID;
  char m_cObjectType;
  char m_cObjectLevel;
};

/* 1843 */
struct CCMDLotteryEvent
{
  CConsoleCommand baseclass_0;
  char m_cCmd;
};

/* 1844 */
struct Quest::TriggerMsg
{
  unsigned int m_dwCID;
  unsigned __int16 m_wQuestID;
  char m_cPhase;
  char m_cTrigger;
  char m_cCount;
  Position m_Pos;
};

/* 1845 */
struct CCMDDropItemList
{
  CConsoleCommand baseclass_0;
  unsigned __int16 m_nItemNum;
  char m_szName[17];
  unsigned __int16 m_usItemProtoTypeID[64];
};

/* 1846 */
struct INETAddressInfo
{
  unsigned int m_dwCharID;
  unsigned int m_dwPublicAddr;
  unsigned int m_dwPrivateAddr;
  unsigned __int16 m_usPublicPort;
  unsigned __int16 m_usPrivatePort;
};

/* 1847 */
struct CEchoDispatch
{
  CPacketDispatch baseclass_0;
};

/* 1848 */
struct CNullDispatch
{
  CPacketDispatch baseclass_0;
};

/* 1849 */
#pragma pack(push, 1)
struct PktDD
{
  PktBase baseclass_0;
  unsigned int m_dwRequestKey;
  unsigned __int16 m_wCmd;
};
#pragma pack(pop)

/* 1850 */
struct AddressInfo
{
  sockaddr_in m_PublicAddress;
  sockaddr_in m_PrivateAddress;
  unsigned int m_dwCharID;
};

/* 1851 */
struct std::allocator<CConsoleCMDFactory::StringCMD>::rebind<CConsoleCMDFactory::StringCMD>
{
  char dummy[1];
};

/* 1852 */
struct std::iterator<std::bidirectional_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &>
{
  char dummy[1];
};

/* 1853 */
struct std::_Allocator_base<std::_List_nod<unsigned short,std::allocator<unsigned short> >::_Node>
{
  char dummy[1];
};

/* 1854 */
struct std::allocator<std::_List_nod<unsigned short,std::allocator<unsigned short> >::_Node>
{
  std::_Allocator_base<std::_List_nod<unsigned short,std::allocator<unsigned short> >::_Node> baseclass_0;
};

/* 1855 */
struct std::_List_nod<unsigned short,std::allocator<unsigned short> >
{
  std::allocator<std::_List_nod<unsigned short,std::allocator<unsigned short> >::_Node> _Alnod;
};

/* 1856 */
struct std::_List_nod<unsigned short,std::allocator<unsigned short> >::_Node
{
  std::_List_nod<unsigned short,std::allocator<unsigned short> >::_Node *_Next;
  std::_List_nod<unsigned short,std::allocator<unsigned short> >::_Node *_Prev;
  unsigned __int16 _Myval;
};

/* 1857 */
struct std::_Allocator_base<std::_List_nod<unsigned short,std::allocator<unsigned short> >::_Node *>
{
  char dummy[1];
};

/* 1858 */
struct std::allocator<std::_List_nod<unsigned short,std::allocator<unsigned short> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<unsigned short,std::allocator<unsigned short> >::_Node *> baseclass_0;
};

/* 1859 */
struct std::_List_ptr<unsigned short,std::allocator<unsigned short> >
{
  std::_List_nod<unsigned short,std::allocator<unsigned short> > baseclass_0;
  std::allocator<std::_List_nod<unsigned short,std::allocator<unsigned short> >::_Node *> _Alptr;
};

/* 1860 */
struct std::_Allocator_base<CLotteryEvent::LotteryEventPrize>
{
  char dummy[1];
};

/* 1861 */
struct std::allocator<CLotteryEvent::LotteryEventPrize>
{
  std::_Allocator_base<CLotteryEvent::LotteryEventPrize> baseclass_0;
};

/* 1862 */
struct std::_Vector_val<CLotteryEvent::LotteryEventPrize,std::allocator<CLotteryEvent::LotteryEventPrize> >
{
  std::allocator<CLotteryEvent::LotteryEventPrize> _Alval;
};

/* 1863 */
struct CLotteryEvent::LotteryEventPrize
{
  unsigned __int16 m_usPrizeID;
  char m_cProbability;
  char m_cNum;
};

/* 1864 */
struct std::vector<CLotteryEvent::LotteryEventPrize,std::allocator<CLotteryEvent::LotteryEventPrize> >
{
  std::_Vector_val<CLotteryEvent::LotteryEventPrize,std::allocator<CLotteryEvent::LotteryEventPrize> > baseclass_0;
  CLotteryEvent::LotteryEventPrize *_Myfirst;
  CLotteryEvent::LotteryEventPrize *_Mylast;
  CLotteryEvent::LotteryEventPrize *_Myend;
};

/* 1865 */
struct CLotteryEvent::LotteryEventItem
{
  unsigned __int16 m_usItemID;
  char m_cProbability;
  unsigned __int16 m_usPrizeSumProb;
  std::vector<CLotteryEvent::LotteryEventPrize,std::allocator<CLotteryEvent::LotteryEventPrize> > m_aryPrize;
};

/* 1866 */
struct std::_Allocator_base<CLotteryEvent::LotteryEventItem>
{
  char dummy[1];
};

/* 1867 */
struct std::iterator<std::random_access_iterator_tag,CConsoleCMDFactory::StringCMD,int,CConsoleCMDFactory::StringCMD const *,CConsoleCMDFactory::StringCMD const &>
{
  char dummy[1];
};

/* 1868 */
struct std::_Ranit<CConsoleCMDFactory::StringCMD,int,CConsoleCMDFactory::StringCMD const *,CConsoleCMDFactory::StringCMD const &>
{
  std::iterator<std::random_access_iterator_tag,CConsoleCMDFactory::StringCMD,int,CConsoleCMDFactory::StringCMD const *,CConsoleCMDFactory::StringCMD const &> baseclass_0;
};

/* 1869 */
union $E8FAE2E06D5CEFB7E1C8D785D10EB698
{
  std::_Ranit<CConsoleCMDFactory::StringCMD,int,CConsoleCMDFactory::StringCMD const *,CConsoleCMDFactory::StringCMD const &> baseclass_0;
  CConsoleCMDFactory::StringCMD *_Myptr;
};

/* 1870 */
struct std::vector<CConsoleCMDFactory::StringCMD,std::allocator<CConsoleCMDFactory::StringCMD> >::const_iterator
{
  $E8FAE2E06D5CEFB7E1C8D785D10EB698 ___u0;
};

/* 1871 */
struct std::vector<CConsoleCMDFactory::StringCMD,std::allocator<CConsoleCMDFactory::StringCMD> >::iterator
{
  std::vector<CConsoleCMDFactory::StringCMD,std::allocator<CConsoleCMDFactory::StringCMD> >::const_iterator baseclass_0;
};

/* 1872 */
struct std::allocator<CLotteryEvent::LotteryEventItem>
{
  std::_Allocator_base<CLotteryEvent::LotteryEventItem> baseclass_0;
};

/* 1873 */
struct std::_Vector_val<CLotteryEvent::LotteryEventItem,std::allocator<CLotteryEvent::LotteryEventItem> >
{
  std::allocator<CLotteryEvent::LotteryEventItem> _Alval;
};

/* 1874 */
struct std::allocator<CLotteryEvent::LotteryEventPrize>::rebind<CLotteryEvent::LotteryEventPrize>
{
  char dummy[1];
};

/* 1875 */
struct std::_List_val<unsigned short,std::allocator<unsigned short> >
{
  std::_List_ptr<unsigned short,std::allocator<unsigned short> > baseclass_0;
  std::allocator<unsigned short> _Alval;
};

/* 1876 */
struct std::list<unsigned short,std::allocator<unsigned short> >
{
  std::_List_val<unsigned short,std::allocator<unsigned short> > baseclass_0;
  std::_List_nod<unsigned short,std::allocator<unsigned short> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1877 */
struct std::_Bidit<unsigned short,int,unsigned short const *,unsigned short const &>
{
  std::iterator<std::bidirectional_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &> baseclass_0;
};

/* 1878 */
union $04E9E8D108F8DD87F7BEC0E558D49A19
{
  std::_Bidit<unsigned short,int,unsigned short const *,unsigned short const &> baseclass_0;
  std::_List_nod<unsigned short,std::allocator<unsigned short> >::_Node *_Ptr;
};

/* 1879 */
struct std::list<unsigned short,std::allocator<unsigned short> >::const_iterator
{
  $04E9E8D108F8DD87F7BEC0E558D49A19 ___u0;
};

/* 1880 */
struct std::list<unsigned short,std::allocator<unsigned short> >::iterator
{
  std::list<unsigned short,std::allocator<unsigned short> >::const_iterator baseclass_0;
};

/* 1881 */
struct std::allocator<CLotteryEvent::LotteryEventItem>::rebind<CLotteryEvent::LotteryEventItem>
{
  char dummy[1];
};

/* 1882 */
struct std::vector<CLotteryEvent::LotteryEventItem,std::allocator<CLotteryEvent::LotteryEventItem> >
{
  std::_Vector_val<CLotteryEvent::LotteryEventItem,std::allocator<CLotteryEvent::LotteryEventItem> > baseclass_0;
  CLotteryEvent::LotteryEventItem *_Myfirst;
  CLotteryEvent::LotteryEventItem *_Mylast;
  CLotteryEvent::LotteryEventItem *_Myend;
};

/* 1883 */
struct std::iterator<std::random_access_iterator_tag,CLotteryEvent::LotteryEventItem,int,CLotteryEvent::LotteryEventItem const *,CLotteryEvent::LotteryEventItem const &>
{
  char dummy[1];
};

/* 1884 */
struct std::_Ranit<CLotteryEvent::LotteryEventItem,int,CLotteryEvent::LotteryEventItem const *,CLotteryEvent::LotteryEventItem const &>
{
  std::iterator<std::random_access_iterator_tag,CLotteryEvent::LotteryEventItem,int,CLotteryEvent::LotteryEventItem const *,CLotteryEvent::LotteryEventItem const &> baseclass_0;
};

/* 1885 */
union $BDD6C9F15581B63770D9AE255D23E6A7
{
  std::_Ranit<CLotteryEvent::LotteryEventItem,int,CLotteryEvent::LotteryEventItem const *,CLotteryEvent::LotteryEventItem const &> baseclass_0;
  CLotteryEvent::LotteryEventItem *_Myptr;
};

/* 1886 */
struct std::vector<CLotteryEvent::LotteryEventItem,std::allocator<CLotteryEvent::LotteryEventItem> >::const_iterator
{
  $BDD6C9F15581B63770D9AE255D23E6A7 ___u0;
};

/* 1887 */
struct std::vector<CLotteryEvent::LotteryEventItem,std::allocator<CLotteryEvent::LotteryEventItem> >::iterator
{
  std::vector<CLotteryEvent::LotteryEventItem,std::allocator<CLotteryEvent::LotteryEventItem> >::const_iterator baseclass_0;
};

/* 1888 */
struct std::allocator<unsigned short>::rebind<std::_List_nod<unsigned short,std::allocator<unsigned short> >::_Node>
{
  char dummy[1];
};

/* 1889 */
struct std::allocator<unsigned short>::rebind<std::_List_nod<unsigned short,std::allocator<unsigned short> >::_Node *>
{
  char dummy[1];
};

/* 1890 */
struct std::iterator<std::random_access_iterator_tag,CLotteryEvent::LotteryEventPrize,int,CLotteryEvent::LotteryEventPrize const *,CLotteryEvent::LotteryEventPrize const &>
{
  char dummy[1];
};

/* 1891 */
struct std::_Ranit<CLotteryEvent::LotteryEventPrize,int,CLotteryEvent::LotteryEventPrize const *,CLotteryEvent::LotteryEventPrize const &>
{
  std::iterator<std::random_access_iterator_tag,CLotteryEvent::LotteryEventPrize,int,CLotteryEvent::LotteryEventPrize const *,CLotteryEvent::LotteryEventPrize const &> baseclass_0;
};

/* 1892 */
union $7511E1EA096FE4381B5BBB45E83217F1
{
  std::_Ranit<CLotteryEvent::LotteryEventPrize,int,CLotteryEvent::LotteryEventPrize const *,CLotteryEvent::LotteryEventPrize const &> baseclass_0;
  CLotteryEvent::LotteryEventPrize *_Myptr;
};

/* 1893 */
struct std::vector<CLotteryEvent::LotteryEventPrize,std::allocator<CLotteryEvent::LotteryEventPrize> >::const_iterator
{
  $7511E1EA096FE4381B5BBB45E83217F1 ___u0;
};

/* 1894 */
struct std::vector<CLotteryEvent::LotteryEventPrize,std::allocator<CLotteryEvent::LotteryEventPrize> >::iterator
{
  std::vector<CLotteryEvent::LotteryEventPrize,std::allocator<CLotteryEvent::LotteryEventPrize> >::const_iterator baseclass_0;
};

/* 1895 */
struct CGameEventMgr
{
  CGameEventMgrVtbl *vfptr;
  CLotteryEvent m_LotteryEvent;
  std::list<unsigned short,std::allocator<unsigned short> > m_lstDropEventItem;
};

/* 1896 */
struct CGameEventMgrVtbl
{
  void *(__thiscall *__vecDelDtor)(CGameEventMgr *this, unsigned int);
};

/* 1897 */
struct CLotteryEvent
{
  CLotteryEventVtbl *vfptr;
  bool m_bActive;
  std::vector<CLotteryEvent::LotteryEventItem,std::allocator<CLotteryEvent::LotteryEventItem> > m_aryItem;
};

/* 1898 */
struct CLotteryEventVtbl
{
  void *(__thiscall *__vecDelDtor)(CLotteryEvent *this, unsigned int);
};

/* 1899 */
#pragma pack(push, 1)
struct PktAt
{
  PktBase baseclass_0;
  POS m_Postion;
  float m_fDir;
  unsigned int m_dwCharID;
  AtType m_AtType;
  AtNode m_AtNode;
};
#pragma pack(pop)

/* 1900 */
struct std::allocator<CSpeedHackCheck::SkillHistory>::rebind<CSpeedHackCheck::SkillHistory>
{
  char dummy[1];
};

/* 1901 */
struct std::allocator<CSpeedHackCheck::SkillHistory>::rebind<CSpeedHackCheck::SkillHistory *>
{
  char dummy[1];
};

/* 1902 */
struct std::allocator<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> >::rebind<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> >
{
  char dummy[1];
};

/* 1903 */
struct std::allocator<unsigned long>::rebind<unsigned long *>
{
  char dummy[1];
};

/* 1904 */
struct std::allocator<CSpeedHackCheck::AttackTime>::rebind<CSpeedHackCheck::AttackTime>
{
  char dummy[1];
};

/* 1905 */
struct std::allocator<CSpeedHackCheck::AttackTime>::rebind<CSpeedHackCheck::AttackTime *>
{
  char dummy[1];
};

/* 1906 */
struct std::allocator<CSpeedHackCheck::CoolDownInfo>::rebind<CSpeedHackCheck::CoolDownInfo>
{
  char dummy[1];
};

/* 1907 */
struct std::iterator<std::random_access_iterator_tag,CSpeedHackCheck::SkillHistory,int,CSpeedHackCheck::SkillHistory const *,CSpeedHackCheck::SkillHistory const &>
{
  char dummy[1];
};

/* 1908 */
struct std::_Ranit<CSpeedHackCheck::SkillHistory,int,CSpeedHackCheck::SkillHistory const *,CSpeedHackCheck::SkillHistory const &>
{
  std::iterator<std::random_access_iterator_tag,CSpeedHackCheck::SkillHistory,int,CSpeedHackCheck::SkillHistory const *,CSpeedHackCheck::SkillHistory const &> baseclass_0;
};

/* 1909 */
union $7D7A511D82ABC5C45793AA63E4551997
{
  std::_Ranit<CSpeedHackCheck::SkillHistory,int,CSpeedHackCheck::SkillHistory const *,CSpeedHackCheck::SkillHistory const &> baseclass_0;
  std::deque<CSpeedHackCheck::SkillHistory,std::allocator<CSpeedHackCheck::SkillHistory> > *_Mycont;
};

/* 1910 */
struct std::deque<CSpeedHackCheck::SkillHistory,std::allocator<CSpeedHackCheck::SkillHistory> >::const_iterator
{
  $7D7A511D82ABC5C45793AA63E4551997 ___u0;
  unsigned int _Myoff;
};

/* 1911 */
struct std::deque<CSpeedHackCheck::SkillHistory,std::allocator<CSpeedHackCheck::SkillHistory> >::iterator
{
  std::deque<CSpeedHackCheck::SkillHistory,std::allocator<CSpeedHackCheck::SkillHistory> >::const_iterator baseclass_0;
};

/* 1912 */
struct std::iterator<std::random_access_iterator_tag,std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)>,int,std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> const *,std::pair<unsigned long,bool (__cdecl*)(CGameClien
{
  char dummy[1];
};

/* 1913 */
union $FA4C2FAB94AD80DBC3C8C65E26EFCC05
{
  std::_Ranit<unsigned long,int,unsigned long const *,unsigned long const &> baseclass_0;
  std::deque<unsigned long,std::allocator<unsigned long> > *_Mycont;
};

/* 1914 */
struct std::deque<unsigned long,std::allocator<unsigned long> >::const_iterator
{
  $FA4C2FAB94AD80DBC3C8C65E26EFCC05 ___u0;
  unsigned int _Myoff;
};

/* 1915 */
struct std::deque<unsigned long,std::allocator<unsigned long> >::iterator
{
  std::deque<unsigned long,std::allocator<unsigned long> >::const_iterator baseclass_0;
};

/* 1916 */
struct std::_Ranit<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)>,int,std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> const *,std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> const &>
{
  std::iterator<std::random_access_iterator_tag,std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)>,int,std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> const *,std::pair<unsigned long,bool (__cdecl*)(CGameClien baseclass_0;
};

/* 1917 */
struct std::iterator<std::random_access_iterator_tag,CSpeedHackCheck::CoolDownInfo,int,CSpeedHackCheck::CoolDownInfo const *,CSpeedHackCheck::CoolDownInfo const &>
{
  char dummy[1];
};

/* 1918 */
struct std::_Ranit<CSpeedHackCheck::CoolDownInfo,int,CSpeedHackCheck::CoolDownInfo const *,CSpeedHackCheck::CoolDownInfo const &>
{
  std::iterator<std::random_access_iterator_tag,CSpeedHackCheck::CoolDownInfo,int,CSpeedHackCheck::CoolDownInfo const *,CSpeedHackCheck::CoolDownInfo const &> baseclass_0;
};

/* 1919 */
union $44A98FCEF4E574BDC234BFA32E43E33C
{
  std::_Ranit<CSpeedHackCheck::CoolDownInfo,int,CSpeedHackCheck::CoolDownInfo const *,CSpeedHackCheck::CoolDownInfo const &> baseclass_0;
  CSpeedHackCheck::CoolDownInfo *_Myptr;
};

/* 1920 */
struct std::vector<CSpeedHackCheck::CoolDownInfo,std::allocator<CSpeedHackCheck::CoolDownInfo> >::const_iterator
{
  $44A98FCEF4E574BDC234BFA32E43E33C ___u0;
};

/* 1921 */
struct std::vector<CSpeedHackCheck::CoolDownInfo,std::allocator<CSpeedHackCheck::CoolDownInfo> >::iterator
{
  std::vector<CSpeedHackCheck::CoolDownInfo,std::allocator<CSpeedHackCheck::CoolDownInfo> >::const_iterator baseclass_0;
};

/* 1922 */
struct std::iterator<std::random_access_iterator_tag,CSpeedHackCheck::AttackTime,int,CSpeedHackCheck::AttackTime const *,CSpeedHackCheck::AttackTime const &>
{
  char dummy[1];
};

/* 1923 */
struct std::_Ranit<CSpeedHackCheck::AttackTime,int,CSpeedHackCheck::AttackTime const *,CSpeedHackCheck::AttackTime const &>
{
  std::iterator<std::random_access_iterator_tag,CSpeedHackCheck::AttackTime,int,CSpeedHackCheck::AttackTime const *,CSpeedHackCheck::AttackTime const &> baseclass_0;
};

/* 1924 */
union $9E6FD4334D6F6EE1B5165E282917458C
{
  std::_Ranit<CSpeedHackCheck::AttackTime,int,CSpeedHackCheck::AttackTime const *,CSpeedHackCheck::AttackTime const &> baseclass_0;
  std::deque<CSpeedHackCheck::AttackTime,std::allocator<CSpeedHackCheck::AttackTime> > *_Mycont;
};

/* 1925 */
struct std::deque<CSpeedHackCheck::AttackTime,std::allocator<CSpeedHackCheck::AttackTime> >::const_iterator
{
  $9E6FD4334D6F6EE1B5165E282917458C ___u0;
  unsigned int _Myoff;
};

/* 1926 */
struct std::deque<CSpeedHackCheck::AttackTime,std::allocator<CSpeedHackCheck::AttackTime> >::iterator
{
  std::deque<CSpeedHackCheck::AttackTime,std::allocator<CSpeedHackCheck::AttackTime> >::const_iterator baseclass_0;
};

/* 1927 */
union $C36AE6893A05469FF85D7DDA11F0984D
{
  std::_Ranit<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)>,int,std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> const *,std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> const &> baseclass_0;
  std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> *_Myptr;
};

/* 1928 */
struct std::vector<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)>,std::allocator<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> > >::const_iterator
{
  $C36AE6893A05469FF85D7DDA11F0984D ___u0;
};

/* 1929 */
struct std::vector<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)>,std::allocator<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> > >::iterator
{
  std::vector<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)>,std::allocator<std::pair<unsigned long,bool (__cdecl*)(CGameClientDispatch &,PktBase *)> > >::const_iterator baseclass_0;
};

/* 1930 */
struct CFieldGameClientDispatchTable
{
  CGameClientDispatchTable baseclass_0;
};

/* 1931 */
struct CFieldGameClientDispatch
{
  CGameClientDispatch baseclass_0;
};

/* 1932 */
struct std::_Allocator_base<unsigned int>
{
  char dummy[1];
};

/* 1933 */
struct std::allocator<unsigned int>
{
  std::_Allocator_base<unsigned int> baseclass_0;
};

/* 1934 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned int const ,CMsgProc *>,int,std::pair<unsigned int const ,CMsgProc *> const *,std::pair<unsigned int const ,CMsgProc *> const &>
{
  char dummy[1];
};

/* 1935 */
struct std::_Bidit<std::pair<unsigned int const ,CMsgProc *>,int,std::pair<unsigned int const ,CMsgProc *> const *,std::pair<unsigned int const ,CMsgProc *> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned int const ,CMsgProc *>,int,std::pair<unsigned int const ,CMsgProc *> const *,std::pair<unsigned int const ,CMsgProc *> const &> baseclass_0;
};

/* 1936 */
union $8326E73D1E35A03148A42B29C3CD0B98
{
  std::_Bidit<std::pair<unsigned int const ,CMsgProc *>,int,std::pair<unsigned int const ,CMsgProc *> const *,std::pair<unsigned int const ,CMsgProc *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *_Ptr;
};

/* 1937 */
struct std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::const_iterator
{
  $8326E73D1E35A03148A42B29C3CD0B98 ___u0;
};

/* 1938 */
struct std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::const_iterator baseclass_0;
};

/* 1939 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::iterator first;
  bool second;
};

/* 1940 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std
{
  std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::iterator first;
  std::_Tree<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::iterator second;
};

/* 1941 */
struct std::allocator<std::pair<unsigned int const ,CMsgProc *> >::rebind<std::pair<unsigned int const ,CMsgProc *> >
{
  char dummy[1];
};

/* 1942 */
struct std::allocator<std::pair<unsigned int const ,CMsgProc *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node>
{
  char dummy[1];
};

/* 1943 */
struct std::allocator<std::pair<unsigned int const ,CMsgProc *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned int,CMsgProc *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CMsgProc *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 1944 */
struct std::allocator<std::pair<unsigned int const ,CMsgProc *> >::rebind<unsigned int>
{
  char dummy[1];
};

/* 1945 */
struct std::allocator<std::pair<unsigned int const ,CMsgProc *> >::rebind<char>
{
  char dummy[1];
};

/* 1946 */
struct CProcessCOMMAND
{
  CMsgProc baseclass_0;
  CConsoleWindow *m_ConsoleWindow;
};

/* 1947 */
struct CINETFamilyFactory
{
  CSocketFactory baseclass_0;
};

/* 1948 */
struct CUDPFactory
{
  CINETFamilyFactory baseclass_0;
};

/* 1949 */
struct CTCPFactory
{
  CINETFamilyFactory baseclass_0;
};

/* 1950 */
struct PktUAAck
{
  PktBase baseclass_0;
  sockaddr_in m_PublicAddress;
  sockaddr_in m_PrivateAddress;
  unsigned int m_dwCharID;
};

/* 1951 */
struct MineralInfo
{
  unsigned __int16 m_dwMineralID;
  char m_cMin;
  char m_cMax;
};

/* 1952 */
struct std::_Allocator_base<std::_List_nod<MineralInfo,std::allocator<MineralInfo> >::_Node>
{
  char dummy[1];
};

/* 1953 */
struct std::allocator<std::_List_nod<MineralInfo,std::allocator<MineralInfo> >::_Node>
{
  std::_Allocator_base<std::_List_nod<MineralInfo,std::allocator<MineralInfo> >::_Node> baseclass_0;
};

/* 1954 */
struct std::_List_nod<MineralInfo,std::allocator<MineralInfo> >
{
  std::allocator<std::_List_nod<MineralInfo,std::allocator<MineralInfo> >::_Node> _Alnod;
};

/* 1955 */
struct std::_Allocator_base<std::_List_nod<MineralInfo,std::allocator<MineralInfo> >::_Node *>
{
  char dummy[1];
};

/* 1956 */
struct std::allocator<std::_List_nod<MineralInfo,std::allocator<MineralInfo> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<MineralInfo,std::allocator<MineralInfo> >::_Node *> baseclass_0;
};

/* 1957 */
struct std::_List_ptr<MineralInfo,std::allocator<MineralInfo> >
{
  std::_List_nod<MineralInfo,std::allocator<MineralInfo> > baseclass_0;
  std::allocator<std::_List_nod<MineralInfo,std::allocator<MineralInfo> >::_Node *> _Alptr;
};

/* 1958 */
struct std::_Allocator_base<MineralInfo>
{
  char dummy[1];
};

/* 1959 */
struct std::allocator<MineralInfo>
{
  std::_Allocator_base<MineralInfo> baseclass_0;
};

/* 1960 */
struct std::_List_val<MineralInfo,std::allocator<MineralInfo> >
{
  std::_List_ptr<MineralInfo,std::allocator<MineralInfo> > baseclass_0;
  std::allocator<MineralInfo> _Alval;
};

/* 1961 */
struct std::_List_nod<MineralInfo,std::allocator<MineralInfo> >::_Node
{
  std::_List_nod<MineralInfo,std::allocator<MineralInfo> >::_Node *_Next;
  std::_List_nod<MineralInfo,std::allocator<MineralInfo> >::_Node *_Prev;
  MineralInfo _Myval;
};

/* 1962 */
struct std::list<MineralInfo,std::allocator<MineralInfo> >
{
  std::_List_val<MineralInfo,std::allocator<MineralInfo> > baseclass_0;
  std::_List_nod<MineralInfo,std::allocator<MineralInfo> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1963 */
struct std::iterator<std::bidirectional_iterator_tag,MineralInfo,int,MineralInfo const *,MineralInfo const &>
{
  char dummy[1];
};

/* 1964 */
struct std::_Bidit<MineralInfo,int,MineralInfo const *,MineralInfo const &>
{
  std::iterator<std::bidirectional_iterator_tag,MineralInfo,int,MineralInfo const *,MineralInfo const &> baseclass_0;
};

/* 1965 */
union $7C003BB802934409AAB5B94424DB1072
{
  std::_Bidit<MineralInfo,int,MineralInfo const *,MineralInfo const &> baseclass_0;
  std::_List_nod<MineralInfo,std::allocator<MineralInfo> >::_Node *_Ptr;
};

/* 1966 */
struct std::list<MineralInfo,std::allocator<MineralInfo> >::const_iterator
{
  $7C003BB802934409AAB5B94424DB1072 ___u0;
};

/* 1967 */
struct std::list<MineralInfo,std::allocator<MineralInfo> >::iterator
{
  std::list<MineralInfo,std::allocator<MineralInfo> >::const_iterator baseclass_0;
};

/* 1968 */
struct CNullSpell
{
  CSpell baseclass_0;
};

/* 1969 */
struct CChocolateSpell
{
  CSpell baseclass_0;
};

/* 1970 */
struct CStunSpell
{
  CSpell baseclass_0;
};

/* 1971 */
struct CMagicPotionSpell
{
  CSpell baseclass_0;
};

/* 1972 */
struct Skill::CFunctions
{
  char dummy[1];
};

/* 1973 */
struct Skill::CAddSpell<CSlowSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 1974 */
struct CSingleton<Skill::CProcessTable>
{
  char dummy[1];
};

/* 1975 */
struct Skill::CProcessTable::ProcessInfo
{
  unsigned __int16 m_usSkill_ID;
  unsigned __int16 (__cdecl *m_fnProcess)(Skill::ProtoType *, AtType, CAggresiveCreature *, CAggresiveCreature *, char *, char *, unsigned __int16 *, unsigned __int16 *, unsigned __int16 *);
  Skill::ProtoType *m_lpProtoType;
};

/* 1976 */
struct std::_Allocator_base<Skill::CProcessTable::ProcessInfo>
{
  char dummy[1];
};

/* 1977 */
struct std::allocator<Skill::CProcessTable::ProcessInfo>
{
  std::_Allocator_base<Skill::CProcessTable::ProcessInfo> baseclass_0;
};

/* 1978 */
struct std::_Vector_val<Skill::CProcessTable::ProcessInfo,std::allocator<Skill::CProcessTable::ProcessInfo> >
{
  std::allocator<Skill::CProcessTable::ProcessInfo> _Alval;
};

/* 1979 */
struct std::vector<Skill::CProcessTable::ProcessInfo,std::allocator<Skill::CProcessTable::ProcessInfo> >
{
  std::_Vector_val<Skill::CProcessTable::ProcessInfo,std::allocator<Skill::CProcessTable::ProcessInfo> > baseclass_0;
  Skill::CProcessTable::ProcessInfo *_Myfirst;
  Skill::CProcessTable::ProcessInfo *_Mylast;
  Skill::CProcessTable::ProcessInfo *_Myend;
};

/* 1980 */
union $C0D1FE350B9657BB4C3978F2C41D1374
{
  CSingleton<Skill::CProcessTable> baseclass_0;
  unsigned __int16 m_usProcessInfo;
};

/* 1981 */
struct Skill::CProcessTable
{
  $C0D1FE350B9657BB4C3978F2C41D1374 ___u0;
  Skill::CProcessTable::ProcessInfo *m_fnProcessTable;
};

/* 1982 */
struct std::_Allocator_base<boost::pool<boost::default_user_allocator_new_delete> *>
{
  char dummy[1];
};

/* 1983 */
struct std::allocator<boost::pool<boost::default_user_allocator_new_delete> *>
{
  std::_Allocator_base<boost::pool<boost::default_user_allocator_new_delete> *> baseclass_0;
};

/* 1984 */
struct std::_Vector_val<boost::pool<boost::default_user_allocator_new_delete> *,std::allocator<boost::pool<boost::default_user_allocator_new_delete> *> >
{
  std::allocator<boost::pool<boost::default_user_allocator_new_delete> *> _Alval;
};

/* 1985 */
struct std::vector<boost::pool<boost::default_user_allocator_new_delete> *,std::allocator<boost::pool<boost::default_user_allocator_new_delete> *> >
{
  std::_Vector_val<boost::pool<boost::default_user_allocator_new_delete> *,std::allocator<boost::pool<boost::default_user_allocator_new_delete> *> > baseclass_0;
  boost::pool<boost::default_user_allocator_new_delete> **_Myfirst;
  boost::pool<boost::default_user_allocator_new_delete> **_Mylast;
  boost::pool<boost::default_user_allocator_new_delete> **_Myend;
};

/* 1986 */
struct CPoolBufferFactory
{
  CBufferFactory baseclass_0;
  CCSLock m_BufferLock;
  boost::pool<boost::default_user_allocator_new_delete> *m_lpBufferPool;
  std::vector<boost::pool<boost::default_user_allocator_new_delete> *,std::allocator<boost::pool<boost::default_user_allocator_new_delete> *> > m_PoolArray;
};

/* 1987 */
struct std::_Allocator_base<CCellManager::SafetyZoneInfo *>
{
  char dummy[1];
};

/* 1988 */
struct std::allocator<CCellManager::SafetyZoneInfo *>
{
  std::_Allocator_base<CCellManager::SafetyZoneInfo *> baseclass_0;
};

/* 1989 */
struct std::_Vector_val<CCellManager::SafetyZoneInfo *,std::allocator<CCellManager::SafetyZoneInfo *> >
{
  std::allocator<CCellManager::SafetyZoneInfo *> _Alval;
};

/* 1990 */
struct CCellManager::SafetyZoneInfo
{
  unsigned int m_dwSectorX;
  unsigned int m_dwSectorY;
  char m_szFilename[260];
  unsigned int m_dwEventNum;
  std::vector<unsigned long,std::allocator<unsigned long> > m_vecEventKey;
  std::vector<unsigned long,std::allocator<unsigned long> > m_vecBGMColorKey;
  unsigned int m_aryColorTable[128][128];
};

/* 1991 */
struct std::vector<CCellManager::SafetyZoneInfo *,std::allocator<CCellManager::SafetyZoneInfo *> >
{
  std::_Vector_val<CCellManager::SafetyZoneInfo *,std::allocator<CCellManager::SafetyZoneInfo *> > baseclass_0;
  CCellManager::SafetyZoneInfo **_Myfirst;
  CCellManager::SafetyZoneInfo **_Mylast;
  CCellManager::SafetyZoneInfo **_Myend;
};

/* 1992 */
struct CCellManager
{
  CCell *m_CellData;
  char *m_WeatherRate;
  unsigned __int16 m_wNumMoving;
  unsigned __int16 m_usSummonCount;
  CPoolBufferFactory m_BufferFactory;
  std::vector<CCellManager::SafetyZoneInfo *,std::allocator<CCellManager::SafetyZoneInfo *> > m_vecSafetyZone;
  bool m_bMoving;
  bool m_bAvoid;
  bool m_bLoadComplete;
  bool m_bPadding[1];
};

/* 1993 */
struct std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0>
{
  std::less<unsigned long> comp;
};

/* 1994 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::_Node>
{
  char dummy[1];
};

/* 1995 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::_Node> baseclass_0;
};

/* 1996 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >
{
  std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::_Node> _Alnod;
};

/* 1997 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 1998 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::_Node *> baseclass_0;
};

/* 1999 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::_Node *> _Alptr;
};

/* 2000 */
struct std::_Allocator_base<std::pair<unsigned long const ,MineralVeinInfo *> >
{
  char dummy[1];
};

/* 2001 */
struct std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >
{
  std::_Allocator_base<std::pair<unsigned long const ,MineralVeinInfo *> > baseclass_0;
};

/* 2002 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> > _Alval;
};

/* 2003 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,MineralVeinInfo *> _Myval;
  char _Color;
  char _Isnil;
};

/* 2004 */
struct MineralVeinInfo
{
  char m_szVeinName[32];
  unsigned int m_dwVeinColor;
  unsigned int m_dwMaxFertility;
  unsigned int m_dwNowFertility;
  std::list<MineralInfo,std::allocator<MineralInfo> > m_lstMineralInfo;
};

/* 2005 */
struct std::pair<unsigned long const ,MineralVeinInfo *>
{
  const unsigned int first;
  MineralVeinInfo *second;
};

/* 2006 */
struct std::_Tree<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2007 */
struct std::map<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> > baseclass_0;
};

/* 2008 */
struct std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0>
{
  std::less<unsigned long> comp;
};

/* 2009 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Node>
{
  char dummy[1];
};

/* 2010 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Node> baseclass_0;
};

/* 2011 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >
{
  std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Node> _Alnod;
};

/* 2012 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2013 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Node *> baseclass_0;
};

/* 2014 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Node *> _Alptr;
};

/* 2015 */
struct std::_Allocator_base<std::pair<unsigned long const ,int> >
{
  char dummy[1];
};

/* 2016 */
struct std::allocator<std::pair<unsigned long const ,int> >
{
  std::_Allocator_base<std::pair<unsigned long const ,int> > baseclass_0;
};

/* 2017 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,int> > _Alval;
};

/* 2018 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,int> _Myval;
  char _Color;
  char _Isnil;
};

/* 2019 */
struct std::pair<unsigned long const ,int>
{
  const unsigned int first;
  int second;
};

/* 2020 */
struct std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2021 */
struct std::map<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> > baseclass_0;
};

/* 2022 */
struct CMineralVeinMgr
{
  std::map<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> > > m_mapMineralVein;
  std::map<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> > > m_mapCampNum;
  unsigned int m_dwColorTable[512][512];
};

/* 2023 */
struct std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0>
{
  std::less<unsigned long> comp;
};

/* 2024 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::_Node>
{
  char dummy[1];
};

/* 2025 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::_Node> baseclass_0;
};

/* 2026 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >
{
  std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::_Node> _Alnod;
};

/* 2027 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> _Myval;
  char _Color;
  char _Isnil;
};

/* 2028 */
struct std::_Allocator_base<Position>
{
  char dummy[1];
};

/* 2029 */
struct std::allocator<Position>
{
  std::_Allocator_base<Position> baseclass_0;
};

/* 2030 */
struct std::_Vector_val<Position,std::allocator<Position> >
{
  std::allocator<Position> _Alval;
};

/* 2031 */
struct std::vector<Position,std::allocator<Position> >
{
  std::_Vector_val<Position,std::allocator<Position> > baseclass_0;
  Position *_Myfirst;
  Position *_Mylast;
  Position *_Myend;
};

/* 2032 */
struct CCharRespawnMgr::RespawnProtoType
{
  unsigned int m_dwTownID;
  unsigned int m_dwGID;
  char m_cNation;
  char m_cZone;
  std::vector<Position,std::allocator<Position> > m_RespawnPosList;
};

/* 2033 */
struct std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType>
{
  const unsigned int first;
  CCharRespawnMgr::RespawnProtoType second;
};

/* 2034 */
struct std::_Allocator_base<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >
{
  char dummy[1];
};

/* 2035 */
struct std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >
{
  std::_Allocator_base<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> > baseclass_0;
};

/* 2036 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2037 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::_Node *> baseclass_0;
};

/* 2038 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::_Node *> _Alptr;
};

/* 2039 */
struct std::binary_function<int,int,bool>
{
  char dummy[1];
};

/* 2040 */
struct std::less<int>
{
  std::binary_function<int,int,bool> baseclass_0;
};

/* 2041 */
struct std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1>
{
  std::less<int> comp;
};

/* 2042 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::_Node>
{
  char dummy[1];
};

/* 2043 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::_Node> baseclass_0;
};

/* 2044 */
struct std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >
{
  std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::_Node> _Alnod;
};

/* 2045 */
struct std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::_Node *_Right;
  std::pair<int const ,CMonsterShout::ShoutInfo> _Myval;
  char _Color;
  char _Isnil;
};

/* 2046 */
struct CMonsterShout::ChatNode
{
  CMonsterShout::ChatNode *m_lpNextNode;
  int m_nPercentage;
  unsigned __int16 m_usChatLength;
  char m_szMonsterChat[260];
};

/* 2047 */
struct CMonsterShout::ShoutInfo
{
  int m_nKID;
  int m_nBehavior;
  int m_nSkill_ID;
  int m_nChatType;
  int m_nTotalPercentage;
  CMonsterShout::ChatNode *m_lpNextNode;
};

/* 2048 */
struct std::pair<int const ,CMonsterShout::ShoutInfo>
{
  const int first;
  CMonsterShout::ShoutInfo second;
};

/* 2049 */
struct std::_Allocator_base<std::pair<int const ,CMonsterShout::ShoutInfo> >
{
  char dummy[1];
};

/* 2050 */
struct std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >
{
  std::_Allocator_base<std::pair<int const ,CMonsterShout::ShoutInfo> > baseclass_0;
};

/* 2051 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::_Node *>
{
  char dummy[1];
};

/* 2052 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::_Node *> baseclass_0;
};

/* 2053 */
struct std::_Tree_ptr<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >
{
  std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::_Node *> _Alptr;
};

/* 2054 */
struct std::_Allocator_base<int>
{
  char dummy[1];
};

/* 2055 */
struct std::_Tree_val<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >
{
  std::_Tree_ptr<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> > baseclass_0;
  std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> > _Alval;
};

/* 2056 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> > _Alval;
};

/* 2057 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,s
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,s *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,s *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,s *_Right;
  std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > > _Myval;
  char _Color;
  char _Isnil;
};

/* 2058 */
struct std::_Allocator_base<std::_List_nod<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::_Node>
{
  char dummy[1];
};

/* 2059 */
struct std::allocator<std::_List_nod<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::_Node>
{
  std::_Allocator_base<std::_List_nod<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::_Node> baseclass_0;
};

/* 2060 */
struct std::_List_nod<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >
{
  std::allocator<std::_List_nod<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::_Node> _Alnod;
};

/* 2061 */
struct std::_Allocator_base<std::_List_nod<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::_Node *>
{
  char dummy[1];
};

/* 2062 */
struct std::allocator<std::_List_nod<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::_Node *> baseclass_0;
};

/* 2063 */
struct std::_List_ptr<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >
{
  std::_List_nod<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > baseclass_0;
  std::allocator<std::_List_nod<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::_Node *> _Alptr;
};

/* 2064 */
struct std::_Allocator_base<CCharRespawnMgr::RespawnCharInfo>
{
  char dummy[1];
};

/* 2065 */
struct std::allocator<CCharRespawnMgr::RespawnCharInfo>
{
  std::_Allocator_base<CCharRespawnMgr::RespawnCharInfo> baseclass_0;
};

/* 2066 */
struct std::_List_val<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >
{
  std::_List_ptr<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > baseclass_0;
  std::allocator<CCharRespawnMgr::RespawnCharInfo> _Alval;
};

/* 2067 */
struct std::_List_nod<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::_Node
{
  std::_List_nod<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::_Node *_Next;
  std::_List_nod<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::_Node *_Prev;
  CCharRespawnMgr::RespawnCharInfo _Myval;
};

/* 2068 */
struct CCharRespawnMgr::RespawnCharInfo
{
  unsigned int m_dwCID;
  unsigned int m_dwRemainSec;
};

/* 2069 */
struct std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >
{
  std::_List_val<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > baseclass_0;
  std::_List_nod<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2070 */
struct std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > >
{
  const unsigned int first;
  std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > second;
};

/* 2071 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnM
{
  char dummy[1];
};

/* 2072 */
struct CDelimitedFile::SectionInfo
{
  unsigned int m_dwLine;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > m_szSectionName;
};

/* 2073 */
struct std::_Allocator_base<CDelimitedFile::SectionInfo>
{
  char dummy[1];
};

/* 2074 */
struct std::_Tree<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >
{
  std::_Tree_val<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2075 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,CMonsterShout::ShoutInfo>,int,std::pair<int const ,CMonsterShout::ShoutInfo> const *,std::pair<int const ,CMonsterShout::ShoutInfo> const &>
{
  char dummy[1];
};

/* 2076 */
struct std::_Bidit<std::pair<int const ,CMonsterShout::ShoutInfo>,int,std::pair<int const ,CMonsterShout::ShoutInfo> const *,std::pair<int const ,CMonsterShout::ShoutInfo> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,CMonsterShout::ShoutInfo>,int,std::pair<int const ,CMonsterShout::ShoutInfo> const *,std::pair<int const ,CMonsterShout::ShoutInfo> const &> baseclass_0;
};

/* 2077 */
union $AED3CF60CD4733A6FFA42C03E7995D86
{
  std::_Bidit<std::pair<int const ,CMonsterShout::ShoutInfo>,int,std::pair<int const ,CMonsterShout::ShoutInfo> const *,std::pair<int const ,CMonsterShout::ShoutInfo> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::_Node *_Ptr;
};

/* 2078 */
struct std::_Tree<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::const_iterator
{
  $AED3CF60CD4733A6FFA42C03E7995D86 ___u0;
};

/* 2079 */
struct std::_Tree<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::iterator
{
  std::_Tree<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::const_iterator baseclass_0;
};

/* 2080 */
struct std::pair<std::_Tree<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::iterator first;
  bool second;
};

/* 2081 */
struct std::pair<std::_Tree<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::iterator,std::_Tree<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::p
{
  std::_Tree<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::iterator first;
  std::_Tree<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::iterator second;
};

/* 2082 */
struct std::allocator<std::pair<unsigned long const ,int> >::rebind<std::pair<unsigned long const ,int> >
{
  char dummy[1];
};

/* 2083 */
struct std::allocator<std::pair<unsigned long const ,int> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Node>
{
  char dummy[1];
};

/* 2084 */
struct std::allocator<std::pair<unsigned long const ,int> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2085 */
struct std::allocator<std::pair<unsigned long const ,int> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 2086 */
struct std::allocator<std::pair<unsigned long const ,int> >::rebind<char>
{
  char dummy[1];
};

/* 2087 */
struct std::allocator<int>
{
  std::_Allocator_base<int> baseclass_0;
};

/* 2088 */
struct std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >::rebind<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >
{
  char dummy[1];
};

/* 2089 */
struct std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnM
{
  char dummy[1];
};

/* 2090 */
struct std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 2091 */
struct std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >::rebind<char>
{
  char dummy[1];
};

/* 2092 */
struct std::allocator<CDelimitedFile::SectionInfo>
{
  std::_Allocator_base<CDelimitedFile::SectionInfo> baseclass_0;
};

/* 2093 */
struct std::_Vector_val<CDelimitedFile::SectionInfo,std::allocator<CDelimitedFile::SectionInfo> >
{
  std::allocator<CDelimitedFile::SectionInfo> _Alval;
};

/* 2094 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2095 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType>,int,std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> const *,std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType>
{
  char dummy[1];
};

/* 2096 */
struct std::_Bidit<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType>,int,std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> const *,std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType>,int,std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> const *,std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> baseclass_0;
};

/* 2097 */
union $9D79490C3D64883878BC6F3FAAC0DD10
{
  std::_Bidit<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType>,int,std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> const *,std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::_Node *_Ptr;
};

/* 2098 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::const_iterator
{
  $9D79490C3D64883878BC6F3FAAC0DD10 ___u0;
};

/* 2099 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::const_iterator baseclass_0;
};

/* 2100 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> >::iterator first;
  bool second;
};

/* 2101 */
struct std::allocator<MineralInfo>::rebind<std::_List_nod<MineralInfo,std::allocator<MineralInfo> >::_Node>
{
  char dummy[1];
};

/* 2102 */
struct std::allocator<MineralInfo>::rebind<std::_List_nod<MineralInfo,std::allocator<MineralInfo> >::_Node *>
{
  char dummy[1];
};

/* 2103 */
struct std::allocator<MineralInfo>::rebind<MineralInfo>
{
  char dummy[1];
};

/* 2104 */
struct std::_Allocator_base<char *>
{
  char dummy[1];
};

/* 2105 */
struct std::allocator<char *>
{
  std::_Allocator_base<char *> baseclass_0;
};

/* 2106 */
struct std::_Vector_val<char *,std::allocator<char *> >
{
  std::allocator<char *> _Alval;
};

/* 2107 */
struct std::allocator<CDelimitedFile::SectionInfo>::rebind<CDelimitedFile::SectionInfo>
{
  char dummy[1];
};

/* 2108 */
struct std::_Allocator_base<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > > >
{
  char dummy[1];
};

/* 2109 */
struct std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > > >
{
  std::_Allocator_base<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > > > baseclass_0;
};

/* 2110 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::Re
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnM baseclass_0;
};

/* 2111 */
struct std::allocator<boost::pool<boost::default_user_allocator_new_delete> *>::rebind<boost::pool<boost::default_user_allocator_new_delete> *>
{
  char dummy[1];
};

/* 2112 */
struct std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >::rebind<std::pair<int const ,CMonsterShout::ShoutInfo> >
{
  char dummy[1];
};

/* 2113 */
struct std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::_Node>
{
  char dummy[1];
};

/* 2114 */
struct std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> >::_Node *>
{
  char dummy[1];
};

/* 2115 */
struct std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >::rebind<int>
{
  char dummy[1];
};

/* 2116 */
struct std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >::rebind<char>
{
  char dummy[1];
};

/* 2117 */
struct std::allocator<Position>::rebind<Position>
{
  char dummy[1];
};

/* 2118 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,int>,int,std::pair<unsigned long const ,int> const *,std::pair<unsigned long const ,int> const &>
{
  char dummy[1];
};

/* 2119 */
struct std::_Bidit<std::pair<unsigned long const ,int>,int,std::pair<unsigned long const ,int> const *,std::pair<unsigned long const ,int> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,int>,int,std::pair<unsigned long const ,int> const *,std::pair<unsigned long const ,int> const &> baseclass_0;
};

/* 2120 */
union $0895D8067EF0FEC67CC84386B87D15FC
{
  std::_Bidit<std::pair<unsigned long const ,int>,int,std::pair<unsigned long const ,int> const *,std::pair<unsigned long const ,int> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Node *_Ptr;
};

/* 2121 */
struct std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::const_iterator
{
  $0895D8067EF0FEC67CC84386B87D15FC ___u0;
};

/* 2122 */
struct std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::const_iterator baseclass_0;
};

/* 2123 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::iterator first;
  bool second;
};

/* 2124 */
struct std::locale::facet
{
  std::locale::facetVtbl *vfptr;
  unsigned int _Refs;
};

/* 2125 */
struct std::locale::facetVtbl
{
  void *(__thiscall *__vecDelDtor)(std::locale::facet *this, unsigned int);
};

/* 2126 */
struct std::ctype_base
{
  std::locale::facet baseclass_0;
};

/* 2127 */
struct _Ctypevec
{
  unsigned int _Hand;
  unsigned int _Page;
  const __int16 *_Table;
  int _Delfl;
};

/* 2128 */
struct std::ctype<char>
{
  std::ctype_base baseclass_0;
  _Ctypevec _Ctype;
};

/* 2129 */
struct std::locale::id
{
  unsigned int _Id;
};

/* 2130 */
struct std::_Lockit
{
  int _Locktype;
};

/* 2131 */
struct std::_Locinfo
{
  std::_Lockit _Lock;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Days;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Months;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Oldlocname;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Newlocname;
};

/* 2132 */
struct std::vector<CDelimitedFile::SectionInfo,std::allocator<CDelimitedFile::SectionInfo> >
{
  std::_Vector_val<CDelimitedFile::SectionInfo,std::allocator<CDelimitedFile::SectionInfo> > baseclass_0;
  CDelimitedFile::SectionInfo *_Myfirst;
  CDelimitedFile::SectionInfo *_Mylast;
  CDelimitedFile::SectionInfo *_Myend;
};

/* 2133 */
struct std::iterator<std::random_access_iterator_tag,CDelimitedFile::SectionInfo,int,CDelimitedFile::SectionInfo const *,CDelimitedFile::SectionInfo const &>
{
  char dummy[1];
};

/* 2134 */
struct std::_Ranit<CDelimitedFile::SectionInfo,int,CDelimitedFile::SectionInfo const *,CDelimitedFile::SectionInfo const &>
{
  std::iterator<std::random_access_iterator_tag,CDelimitedFile::SectionInfo,int,CDelimitedFile::SectionInfo const *,CDelimitedFile::SectionInfo const &> baseclass_0;
};

/* 2135 */
union $378E5EAB250D5ED24DDB6EF1A42090F9
{
  std::_Ranit<CDelimitedFile::SectionInfo,int,CDelimitedFile::SectionInfo const *,CDelimitedFile::SectionInfo const &> baseclass_0;
  CDelimitedFile::SectionInfo *_Myptr;
};

/* 2136 */
struct std::vector<CDelimitedFile::SectionInfo,std::allocator<CDelimitedFile::SectionInfo> >::const_iterator
{
  $378E5EAB250D5ED24DDB6EF1A42090F9 ___u0;
};

/* 2137 */
struct std::vector<CDelimitedFile::SectionInfo,std::allocator<CDelimitedFile::SectionInfo> >::iterator
{
  std::vector<CDelimitedFile::SectionInfo,std::allocator<CDelimitedFile::SectionInfo> >::const_iterator baseclass_0;
};

/* 2138 */
struct std::_Iosb<int>
{
  char dummy[1];
};

/* 2139 */
struct std::ios_base
{
  std::ios_baseVtbl *vfptr;
  $41301537F0DC0FCFFDE76A95DF463806 ___u1;
  int _Mystate;
  int _Except;
  int _Fmtfl;
  int _Prec;
  int _Wide;
  std::ios_base::_Iosarray *_Arr;
  std::ios_base::_Fnarray *_Calls;
  std::locale *_Ploc;
};

/* 2140 */
struct std::ios_baseVtbl
{
  void *(__thiscall *__vecDelDtor)(std::ios_base *this, unsigned int);
};

/* 2141 */
struct std::ios_base::_Iosarray
{
  std::ios_base::_Iosarray *_Next;
  int _Index;
  int _Lo;
  void *_Vp;
};

/* 2142 */
struct std::ios_base::_Fnarray
{
  std::ios_base::_Fnarray *_Next;
  int _Index;
  void (__cdecl *_Pfn)(std::ios_base::event, std::ios_base *, int);
};

/* 2143 */
struct std::_Locbase<int>
{
  char dummy[1];
};

/* 2144 */
struct std::locale::_Locimp
{
  std::locale::facet baseclass_0;
  std::locale::facet **_Facetvec;
  unsigned int _Facetcount;
  int _Catmask;
  bool _Xparent;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Name;
};

/* 2145 */
union $E74BE8F67C058BC8415966511AAD813C
{
  std::_Locbase<int> baseclass_0;
  std::locale::_Locimp *_Ptr;
};

/* 2146 */
struct std::locale
{
  $E74BE8F67C058BC8415966511AAD813C ___u0;
};

/* 2147 */
union $41301537F0DC0FCFFDE76A95DF463806
{
  std::_Iosb<int> baseclass_4;
  unsigned int _Stdstr;
};

/* 2148 */
struct std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >
{
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >Vtbl *vfptr;
  std::_Mutex _Mylock;
  unsigned __int16 *_Gfirst;
  unsigned __int16 *_Pfirst;
  unsigned __int16 **_IGfirst;
  unsigned __int16 **_IPfirst;
  unsigned __int16 *_Gnext;
  unsigned __int16 *_Pnext;
  unsigned __int16 **_IGnext;
  unsigned __int16 **_IPnext;
  int _Gcount;
  int _Pcount;
  int *_IGcount;
  int *_IPcount;
  std::locale *_Plocale;
};

/* 2149 */
struct std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >Vtbl
{
  void *(__thiscall *__vecDelDtor)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned int);
  unsigned __int16 (__thiscall *overflow)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16);
  unsigned __int16 (__thiscall *pbackfail)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16);
  int (__thiscall *showmanyc)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  unsigned __int16 (__thiscall *underflow)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  unsigned __int16 (__thiscall *uflow)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  int (__thiscall *xsgetn)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16 *, int);
  int (__thiscall *xsputn)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, const unsigned __int16 *, int);
  std::fpos<int> *(__thiscall *seekoff)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, std::fpos<int> *result, int, int, int);
  std::fpos<int> *(__thiscall *seekpos)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, std::fpos<int> *result, std::fpos<int>, int);
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *(__thiscall *setbuf)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16 *, int);
  int (__thiscall *sync)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  void (__thiscall *imbue)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, std::locale *);
};

/* 2150 */
struct std::_Mutex
{
  void *_Mtx;
};

/* 2151 */
struct std::basic_ostream<unsigned short,std::char_traits<unsigned short> >
{
  char dummy[56];
};

/* 2152 */
struct std::basic_ios<unsigned short,std::char_traits<unsigned short> >
{
  std::ios_base baseclass_0;
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *_Mystrbuf;
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> > *_Tiestr;
  unsigned __int16 _Fillch;
};

/* 2153 */
struct std::basic_istream<unsigned short,std::char_traits<unsigned short> >
{
  _BYTE gap0[4];
  int _Chcount;
  _BYTE gap8[52];
};

/* 2154 */
struct _Cvtvec
{
  unsigned int _Hand;
  unsigned int _Page;
};

/* 2155 */
struct std::ctype<unsigned short>
{
  std::ctype_base baseclass_0;
  _Ctypevec _Ctype;
  _Cvtvec _Cvt;
};

/* 2156 */
struct std::basic_istream<unsigned short,std::char_traits<unsigned short> >::_Sentry_base
{
  std::basic_istream<unsigned short,std::char_traits<unsigned short> > *_Myistr;
};

/* 2157 */
struct std::basic_istream<unsigned short,std::char_traits<unsigned short> >::sentry
{
  std::basic_istream<unsigned short,std::char_traits<unsigned short> >::_Sentry_base baseclass_0;
  bool _Ok;
};

/* 2158 */
struct std::basic_streambuf<char,std::char_traits<char> >
{
  std::basic_streambuf<char,std::char_traits<char> >Vtbl *vfptr;
  std::_Mutex _Mylock;
  char *_Gfirst;
  char *_Pfirst;
  char **_IGfirst;
  char **_IPfirst;
  char *_Gnext;
  char *_Pnext;
  char **_IGnext;
  char **_IPnext;
  int _Gcount;
  int _Pcount;
  int *_IGcount;
  int *_IPcount;
  std::locale *_Plocale;
};

/* 2159 */
struct std::basic_streambuf<char,std::char_traits<char> >Vtbl
{
  void *(__thiscall *__vecDelDtor)(std::basic_streambuf<char,std::char_traits<char> > *this, unsigned int);
  int (__thiscall *overflow)(std::basic_streambuf<char,std::char_traits<char> > *this, int);
  int (__thiscall *pbackfail)(std::basic_streambuf<char,std::char_traits<char> > *this, int);
  int (__thiscall *showmanyc)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *underflow)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *uflow)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *xsgetn)(std::basic_streambuf<char,std::char_traits<char> > *this, char *, int);
  int (__thiscall *xsputn)(std::basic_streambuf<char,std::char_traits<char> > *this, const char *, int);
  std::fpos<int> *(__thiscall *seekoff)(std::basic_streambuf<char,std::char_traits<char> > *this, std::fpos<int> *result, int, int, int);
  std::fpos<int> *(__thiscall *seekpos)(std::basic_streambuf<char,std::char_traits<char> > *this, std::fpos<int> *result, std::fpos<int>, int);
  std::basic_streambuf<char,std::char_traits<char> > *(__thiscall *setbuf)(std::basic_streambuf<char,std::char_traits<char> > *this, char *, int);
  int (__thiscall *sync)(std::basic_streambuf<char,std::char_traits<char> > *this);
  void (__thiscall *imbue)(std::basic_streambuf<char,std::char_traits<char> > *this, std::locale *);
};

/* 2160 */
struct std::basic_ostream<char,std::char_traits<char> >
{
  char dummy[56];
};

/* 2161 */
struct std::basic_ios<char,std::char_traits<char> >
{
  std::ios_base baseclass_0;
  std::basic_streambuf<char,std::char_traits<char> > *_Mystrbuf;
  std::basic_ostream<char,std::char_traits<char> > *_Tiestr;
  char _Fillch;
};

/* 2162 */
struct std::iterator<std::output_iterator_tag,void,void,void,void>
{
  char dummy[1];
};

/* 2163 */
struct std::_Outit
{
  std::iterator<std::output_iterator_tag,void,void,void,void> baseclass_0;
};

/* 2164 */
union $1590FEC748C5D7CCDCEC19C2E178437B
{
  std::_Outit baseclass_0;
  bool _Failed;
};

/* 2165 */
struct std::ostreambuf_iterator<char,std::char_traits<char> >
{
  $1590FEC748C5D7CCDCEC19C2E178437B ___u0;
  std::basic_streambuf<char,std::char_traits<char> > *_Strbuf;
};

/* 2166 */
struct std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
{
  std::locale::facet baseclass_0;
  _Cvtvec _Cvt;
};

/* 2167 */
struct std::basic_ostream<char,std::char_traits<char> >::_Sentry_base
{
  std::basic_ostream<char,std::char_traits<char> > *_Myostr;
};

/* 2168 */
struct std::basic_ostream<char,std::char_traits<char> >::sentry
{
  std::basic_ostream<char,std::char_traits<char> >::_Sentry_base baseclass_0;
  bool _Ok;
};

/* 2169 */
struct std::allocator<CCellManager::SafetyZoneInfo *>::rebind<CCellManager::SafetyZoneInfo *>
{
  char dummy[1];
};

/* 2170 */
struct std::multimap<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> > >
{
  std::_Tree<std::_Tmap_traits<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> >,1> > baseclass_0;
};

/* 2171 */
struct std::codecvt_base
{
  std::locale::facet baseclass_0;
};

/* 2172 */
struct std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > > >::rebind<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr
{
  char dummy[1];
};

/* 2173 */
struct std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > > >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator
{
  char dummy[1];
};

/* 2174 */
struct std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > > >::rebind<unsigned long>
{
  char dummy[1];
};

/* 2175 */
struct std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > > >::rebind<char>
{
  char dummy[1];
};

/* 2176 */
struct std::map<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> >,0> > baseclass_0;
};

/* 2177 */
struct std::iterator<std::random_access_iterator_tag,boost::pool<boost::default_user_allocator_new_delete> *,int,boost::pool<boost::default_user_allocator_new_delete> * const *,boost::pool<boost::default_user_allocator_new_delete> * const &>
{
  char dummy[1];
};

/* 2178 */
struct std::_Ranit<boost::pool<boost::default_user_allocator_new_delete> *,int,boost::pool<boost::default_user_allocator_new_delete> * const *,boost::pool<boost::default_user_allocator_new_delete> * const &>
{
  std::iterator<std::random_access_iterator_tag,boost::pool<boost::default_user_allocator_new_delete> *,int,boost::pool<boost::default_user_allocator_new_delete> * const *,boost::pool<boost::default_user_allocator_new_delete> * const &> baseclass_0;
};

/* 2179 */
union $C9961099AB75C37D10AA652B131CE26F
{
  std::_Ranit<boost::pool<boost::default_user_allocator_new_delete> *,int,boost::pool<boost::default_user_allocator_new_delete> * const *,boost::pool<boost::default_user_allocator_new_delete> * const &> baseclass_0;
  boost::pool<boost::default_user_allocator_new_delete> **_Myptr;
};

/* 2180 */
struct std::vector<boost::pool<boost::default_user_allocator_new_delete> *,std::allocator<boost::pool<boost::default_user_allocator_new_delete> *> >::const_iterator
{
  $C9961099AB75C37D10AA652B131CE26F ___u0;
};

/* 2181 */
struct std::vector<boost::pool<boost::default_user_allocator_new_delete> *,std::allocator<boost::pool<boost::default_user_allocator_new_delete> *> >::iterator
{
  std::vector<boost::pool<boost::default_user_allocator_new_delete> *,std::allocator<boost::pool<boost::default_user_allocator_new_delete> *> >::const_iterator baseclass_0;
};

/* 2182 */
struct std::basic_istream<char,std::char_traits<char> >
{
  _BYTE gap0[4];
  int _Chcount;
  _BYTE gap8[52];
};

/* 2183 */
struct std::basic_istream<char,std::char_traits<char> >::_Sentry_base
{
  std::basic_istream<char,std::char_traits<char> > *_Myistr;
};

/* 2184 */
struct std::basic_istream<char,std::char_traits<char> >::sentry
{
  std::basic_istream<char,std::char_traits<char> >::_Sentry_base baseclass_0;
  bool _Ok;
};

/* 2185 */
struct std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >::rebind<std::pair<unsigned long const ,MineralVeinInfo *> >
{
  char dummy[1];
};

/* 2186 */
struct std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::_Node>
{
  char dummy[1];
};

/* 2187 */
struct std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2188 */
struct std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 2189 */
struct std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >::rebind<char>
{
  char dummy[1];
};

/* 2190 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,s
{
  _BYTE gap0[3];
  std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > > > _Alval;
};

/* 2191 */
struct std::codecvt<unsigned short,char,int>
{
  std::codecvt_base baseclass_0;
  _Cvtvec _Cvt;
};

/* 2192 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,MineralVeinInfo *>,int,std::pair<unsigned long const ,MineralVeinInfo *> const *,std::pair<unsigned long const ,MineralVeinInfo *> const &>
{
  char dummy[1];
};

/* 2193 */
struct std::_Bidit<std::pair<unsigned long const ,MineralVeinInfo *>,int,std::pair<unsigned long const ,MineralVeinInfo *> const *,std::pair<unsigned long const ,MineralVeinInfo *> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,MineralVeinInfo *>,int,std::pair<unsigned long const ,MineralVeinInfo *> const *,std::pair<unsigned long const ,MineralVeinInfo *> const &> baseclass_0;
};

/* 2194 */
union $B51AC72F62E448117C29F9126C537445
{
  std::_Bidit<std::pair<unsigned long const ,MineralVeinInfo *>,int,std::pair<unsigned long const ,MineralVeinInfo *> const *,std::pair<unsigned long const ,MineralVeinInfo *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::_Node *_Ptr;
};

/* 2195 */
struct std::_Tree<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::const_iterator
{
  $B51AC72F62E448117C29F9126C537445 ___u0;
};

/* 2196 */
struct std::_Tree<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::const_iterator baseclass_0;
};

/* 2197 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,MineralVeinInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,MineralVeinInfo *> >,0> >::iterator first;
  bool second;
};

/* 2198 */
struct std::allocator<char *>::rebind<char *>
{
  char dummy[1];
};

/* 2199 */
struct std::vector<char *,std::allocator<char *> >
{
  std::_Vector_val<char *,std::allocator<char *> > baseclass_0;
  char **_Myfirst;
  char **_Mylast;
  char **_Myend;
};

/* 2200 */
struct std::iterator<std::random_access_iterator_tag,char *,int,char * const *,char * const &>
{
  char dummy[1];
};

/* 2201 */
struct std::_Ranit<char *,int,char * const *,char * const &>
{
  std::iterator<std::random_access_iterator_tag,char *,int,char * const *,char * const &> baseclass_0;
};

/* 2202 */
union $8893488B817F05C1F16D17E713ECE47B
{
  std::_Ranit<char *,int,char * const *,char * const &> baseclass_0;
  char **_Myptr;
};

/* 2203 */
struct std::vector<char *,std::allocator<char *> >::const_iterator
{
  $8893488B817F05C1F16D17E713ECE47B ___u0;
};

/* 2204 */
struct std::vector<char *,std::allocator<char *> >::iterator
{
  std::vector<char *,std::allocator<char *> >::const_iterator baseclass_0;
};

/* 2205 */
struct _Collvec
{
  unsigned int _Hand;
  unsigned int _Page;
};

/* 2206 */
struct std::_Timevec
{
  void *_Timeptr;
};

/* 2207 */
struct lconv
{
  char *decimal_point;
  char *thousands_sep;
  char *grouping;
  char *int_curr_symbol;
  char *currency_symbol;
  char *mon_decimal_point;
  char *mon_thousands_sep;
  char *mon_grouping;
  char *positive_sign;
  char *negative_sign;
  char int_frac_digits;
  char frac_digits;
  char p_cs_precedes;
  char p_sep_by_space;
  char n_cs_precedes;
  char n_sep_by_space;
  char p_sign_posn;
  char n_sign_posn;
};

/* 2208 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnChar
{
  std::_Tree<std::_Tmap_traits<unsigned long,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std:: first;
  bool second;
};

/* 2209 */
struct std::iterator<std::random_access_iterator_tag,Position,int,Position const *,Position const &>
{
  char dummy[1];
};

/* 2210 */
struct std::_Ranit<Position,int,Position const *,Position const &>
{
  std::iterator<std::random_access_iterator_tag,Position,int,Position const *,Position const &> baseclass_0;
};

/* 2211 */
union $7B90627026436071F68863237191EC32
{
  std::_Ranit<Position,int,Position const *,Position const &> baseclass_0;
  Position *_Myptr;
};

/* 2212 */
struct std::vector<Position,std::allocator<Position> >::const_iterator
{
  $7B90627026436071F68863237191EC32 ___u0;
};

/* 2213 */
struct std::vector<Position,std::allocator<Position> >::iterator
{
  std::vector<Position,std::allocator<Position> >::const_iterator baseclass_0;
};

/* 2214 */
struct std::ios_base::failure
{
  std::runtime_error baseclass_0;
};

/* 2215 */
struct std::ios_base::Init
{
  char dummy[1];
};

/* 2216 */
struct std::iterator<std::random_access_iterator_tag,CCellManager::SafetyZoneInfo *,int,CCellManager::SafetyZoneInfo * const *,CCellManager::SafetyZoneInfo * const &>
{
  char dummy[1];
};

/* 2217 */
struct std::_Ranit<CCellManager::SafetyZoneInfo *,int,CCellManager::SafetyZoneInfo * const *,CCellManager::SafetyZoneInfo * const &>
{
  std::iterator<std::random_access_iterator_tag,CCellManager::SafetyZoneInfo *,int,CCellManager::SafetyZoneInfo * const *,CCellManager::SafetyZoneInfo * const &> baseclass_0;
};

/* 2218 */
union $13C5D7117B75864DC89D8C29DAD5CDC9
{
  std::_Ranit<CCellManager::SafetyZoneInfo *,int,CCellManager::SafetyZoneInfo * const *,CCellManager::SafetyZoneInfo * const &> baseclass_0;
  CCellManager::SafetyZoneInfo **_Myptr;
};

/* 2219 */
struct std::vector<CCellManager::SafetyZoneInfo *,std::allocator<CCellManager::SafetyZoneInfo *> >::const_iterator
{
  $13C5D7117B75864DC89D8C29DAD5CDC9 ___u0;
};

/* 2220 */
struct std::vector<CCellManager::SafetyZoneInfo *,std::allocator<CCellManager::SafetyZoneInfo *> >::iterator
{
  std::vector<CCellManager::SafetyZoneInfo *,std::allocator<CCellManager::SafetyZoneInfo *> >::const_iterator baseclass_0;
};

/* 2221 */
struct std::ostreambuf_iterator<unsigned short,std::char_traits<unsigned short> >
{
  $1590FEC748C5D7CCDCEC19C2E178437B ___u0;
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *_Strbuf;
};

/* 2222 */
struct std::basic_ostream<unsigned short,std::char_traits<unsigned short> >::_Sentry_base
{
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> > *_Myostr;
};

/* 2223 */
struct std::basic_ostream<unsigned short,std::char_traits<unsigned short> >::sentry
{
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> >::_Sentry_base baseclass_0;
  bool _Ok;
};

/* 2224 */
struct std::map<unsigned long,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespa
{
  std::_Tree<std::_Tmap_traits<unsigned long,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std:: baseclass_0;
  _BYTE gap4[8];
};

/* 2225 */
struct CManaShellSpell
{
  CSpell baseclass_0;
};

/* 2226 */
struct CKarterantWorldBuffSpell
{
  CSpell baseclass_0;
};

/* 2227 */
struct CFlexibilitySpell
{
  CSpell baseclass_0;
};

/* 2228 */
struct CLightningPotionSpell
{
  CSpell baseclass_0;
};

/* 2229 */
struct CChantSpell
{
  CSpell baseclass_0;
  char m_cOperateTurn;
  __int16 m_nConsumeMPAmount;
};

/* 2230 */
struct CLifeAuraSpell
{
  CChantSpell baseclass_0;
};

/* 2231 */
struct CGlobalSpellMgr
{
  unsigned int m_nSpellNum;
  CNullSpell m_HeadSpell;
};

/* 2232 */
struct CPoisonedSpell
{
  CSpell baseclass_0;
};

/* 2233 */
struct CStrengthSpell
{
  CSpell baseclass_0;
};

/* 2234 */
struct CMaintenanceChantSpell
{
  CChantSpell baseclass_0;
};

/* 2235 */
struct CBlazeSpell
{
  CSpell baseclass_0;
};

/* 2236 */
struct CMonsterShout
{
  std::multimap<int,CMonsterShout::ShoutInfo,std::less<int>,std::allocator<std::pair<int const ,CMonsterShout::ShoutInfo> > > m_ShoutMap;
};

/* 2237 */
struct CBombSetSpell
{
  CSpell baseclass_0;
};

/* 2238 */
struct CSlowSpell
{
  CSpell baseclass_0;
};

/* 2239 */
struct CHoldSpell
{
  CSpell baseclass_0;
};

/* 2240 */
struct CSingleton<CSkillMgr>
{
  char dummy[1];
};

/* 2241 */
struct CSkillMgr::ProtoTypeArray
{
  Skill::ProtoType m_ProtoTypes[5];
};

/* 2242 */
union $F7EB97F61B1D7135EBAAC22CA9C4A4CF
{
  CSingleton<CSkillMgr> baseclass_0;
  CSkillMgr::ProtoTypeArray *m_ProtoTypeArray;
};

/* 2243 */
struct CSkillMgr
{
  $F7EB97F61B1D7135EBAAC22CA9C4A4CF ___u0;
  unsigned int m_nSkillNum;
  unsigned int m_dwCRC32;
};

/* 2244 */
struct CDelimitedFile
{
  _iobuf *m_fpFile;
  unsigned int m_dwColumn;
  unsigned int m_dwColumnCount;
  char m_szLine[16384];
  char m_szBackupLine[16384];
  char m_szDelimiter[32];
  std::vector<char *,std::allocator<char *> > m_ColumnNames;
  std::vector<CDelimitedFile::SectionInfo,std::allocator<CDelimitedFile::SectionInfo> > m_SectionInfo;
};

/* 2245 */
struct CTasteWineSpell
{
  CSpell baseclass_0;
};

/* 2246 */
struct CGuardSpell
{
  CSpell baseclass_0;
  __int16 m_nOriginalBlocking;
};

/* 2247 */
struct CLuckyOrbSpell
{
  CSpell baseclass_0;
};

/* 2248 */
struct CIntStatueSpell
{
  CSpell baseclass_0;
};

/* 2249 */
struct CArmorBrokenSpell
{
  CSpell baseclass_0;
};

/* 2250 */
struct CMerkadiaWorldDeBuffSpell
{
  CSpell baseclass_0;
};

/* 2251 */
struct CWealthStatueSpell
{
  CSpell baseclass_0;
};

/* 2252 */
struct CPowerStatueSpell
{
  CSpell baseclass_0;
};

/* 2253 */
struct CRegenerationSpell
{
  CSpell baseclass_0;
};

/* 2254 */
struct CExpStatueSpell
{
  CSpell baseclass_0;
};

/* 2255 */
struct SERVER_ID::SID
{
  char Type;
  char Group;
  char Channel;
  char ID;
};

/* 2256 */
union SERVER_ID
{
  SERVER_ID::SID sID;
  unsigned int dwID;
};

/* 2257 */
struct RylServerInfo
{
  SERVER_ID m_ServerUID;
  in_addr m_ServerAddress;
  unsigned int m_dwClientVer;
  unsigned int m_dwChecksum;
  unsigned int m_nGroupNameLen;
  unsigned int m_nPatchAddressLen;
  char m_szGroupName[120];
  char m_szPatchAddress[100];
  unsigned __int16 m_usChannelClientNum[2];
  unsigned __int16 m_usChannelNum;
};

/* 2258 */
struct CDefencePotionSpell
{
  CSpell baseclass_0;
};

/* 2259 */
struct bad_cast
{
  exception baseclass_0;
};

/* 2260 */
struct CLowerStrengthSpell
{
  CSpell baseclass_0;
};

/* 2261 */
struct CExpOrbSpell
{
  CSpell baseclass_0;
};

/* 2262 */
struct CKarterantWorldDeBuffSpell
{
  CSpell baseclass_0;
};

/* 2263 */
struct CEnvenomSpell
{
  CSpell baseclass_0;
};

/* 2264 */
struct CChargingSpell
{
  CSpell baseclass_0;
};

/* 2265 */
struct CStoneFormSpell
{
  CSpell baseclass_0;
};

/* 2266 */
struct CRealmHPSpell
{
  CSpell baseclass_0;
};

/* 2267 */
struct CHardenSkinSpell
{
  CSpell baseclass_0;
};

/* 2268 */
struct CCounterAttackSpell
{
  CSpell baseclass_0;
};

/* 2269 */
struct CSingleton<CMonsterMgr>
{
  char dummy[1];
};

/* 2270 */
struct CMonsterMgr::MonsterProtoType
{
  MonsterInfo m_MonsterInfo;
  CreatureStatus m_CreatureStatus;
};

/* 2271 */
union $615B411B925F15267075C3F09FDB4681
{
  CSingleton<CMonsterMgr> baseclass_0;
  CMonsterMgr::MonsterProtoType *m_ProtoTypeArray;
};

/* 2272 */
struct CMonsterMgr
{
  $615B411B925F15267075C3F09FDB4681 ___u0;
  unsigned int m_nMonsterNum;
};

/* 2273 */
struct CBattleSongSpell
{
  CChantSpell baseclass_0;
};

/* 2274 */
struct CCharRespawnMgr
{
  std::map<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> > > m_ProtoTypeList;
  std::map<unsigned long,CCharRespawnMgr::RespawnProtoType,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharRespawnMgr::RespawnProtoType> > > m_AllZoneTownList;
  std::map<unsigned long,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespa m_CharList;
};

/* 2275 */
struct CBrightArmorSpell
{
  CSpell baseclass_0;
};

/* 2276 */
struct CPacketStatistics::PacketData
{
  long double m_Bytes;
  long double m_Count;
};

/* 2277 */
struct CPacketStatistics::CompressData
{
  long double m_CompressCount;
  long double m_FailedCount;
  long double m_TotalBytes;
  long double m_TotalCompressed;
};

/* 2278 */
struct CPacketStatistics
{
  int m_StartTime;
  void (__cdecl *m_fnPrefix)(_iobuf *);
  void (__cdecl *m_fnPostfix)(_iobuf *);
  CPacketStatistics::PacketData m_RecvData[255];
  CPacketStatistics::PacketData m_SendData[255];
  CPacketStatistics::CompressData m_CompressionData[255];
};

/* 2279 */
struct CSpellPotionSpell
{
  CSpell baseclass_0;
};

/* 2280 */
struct CInvincibleSpell
{
  CSpell baseclass_0;
};

/* 2281 */
struct CFrozenSpell
{
  CSpell baseclass_0;
};

/* 2282 */
struct CMerkadiaWorldBuffSpell
{
  CSpell baseclass_0;
};

/* 2283 */
struct CEncourageSpell
{
  CSpell baseclass_0;
};

/* 2284 */
struct CEnchantWeaponSpell
{
  CSpell baseclass_0;
};

/* 2285 */
struct CAccelerationChantSpell
{
  CChantSpell baseclass_0;
};

/* 2286 */
struct CStealthSpell
{
  CSpell baseclass_0;
};

/* 2287 */
struct CRealmMPSpell
{
  CSpell baseclass_0;
};

/* 2288 */
struct CWifeCrackerSpell
{
  CSpell baseclass_0;
};

/* 2289 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList::Equip
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList::Equip *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList::Equip *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList::Equip *_Right;
  std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> > > _Myval;
  char _Color;
  char _Isnil;
};

/* 2290 */
struct std::_Allocator_base<CDummyCharacterList::EquipmentData>
{
  char dummy[1];
};

/* 2291 */
struct std::allocator<CDummyCharacterList::EquipmentData>
{
  std::_Allocator_base<CDummyCharacterList::EquipmentData> baseclass_0;
};

/* 2292 */
struct std::_Vector_val<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >
{
  std::allocator<CDummyCharacterList::EquipmentData> _Alval;
};

/* 2293 */
struct CDummyCharacterList::EquipmentData
{
  unsigned __int16 m_usEquipments[15];
};

/* 2294 */
struct std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >
{
  std::_Vector_val<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> > baseclass_0;
  CDummyCharacterList::EquipmentData *_Myfirst;
  CDummyCharacterList::EquipmentData *_Mylast;
  CDummyCharacterList::EquipmentData *_Myend;
};

/* 2295 */
struct std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> > >
{
  const unsigned int first;
  std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> > second;
};

/* 2296 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<CDumm
{
  char dummy[1];
};

/* 2297 */
struct std::_List_nod<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::_Node
{
  std::_List_nod<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::_Node *_Next;
  std::_List_nod<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::_Node *_Prev;
  CModifyDummyCharacter *_Myval;
};

/* 2298 */
struct DummyData
{
  unsigned int m_dwDressChangeFreq;
  unsigned int m_dwAttackFreq;
  unsigned int m_dwSkillFreq;
};

/* 2299 */
struct __declspec(align(8)) CModifyDummyCharacter
{
  CCharacter baseclass_0;
  DummyData m_DummyData;
};

/* 2300 */
struct std::_Allocator_base<std::_List_nod<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::_Node *>
{
  char dummy[1];
};

/* 2301 */
struct std::_Allocator_base<std::_List_nod<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::_Node>
{
  char dummy[1];
};

/* 2302 */
struct std::allocator<std::_List_nod<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::_Node>
{
  std::_Allocator_base<std::_List_nod<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::_Node> baseclass_0;
};

/* 2303 */
struct std::_List_nod<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >
{
  std::allocator<std::_List_nod<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::_Node> _Alnod;
};

/* 2304 */
struct std::allocator<std::_List_nod<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::_Node *> baseclass_0;
};

/* 2305 */
struct std::_List_ptr<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >
{
  std::_List_nod<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> > baseclass_0;
  std::allocator<std::_List_nod<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::_Node *> _Alptr;
};

/* 2306 */
struct std::_Allocator_base<CModifyDummyCharacter *>
{
  char dummy[1];
};

/* 2307 */
struct std::allocator<CModifyDummyCharacter *>
{
  std::_Allocator_base<CModifyDummyCharacter *> baseclass_0;
};

/* 2308 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<CDummyChara
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<CDumm baseclass_0;
};

/* 2309 */
struct std::_Allocator_base<CSessionPolicy *>
{
  char dummy[1];
};

/* 2310 */
struct std::_Allocator_base<std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> > > >
{
  char dummy[1];
};

/* 2311 */
struct std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> > > >
{
  std::_Allocator_base<std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> > > > baseclass_0;
};

/* 2312 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<CSessionPolicy * const,unsigned int>,int,std::pair<CSessionPolicy * const,unsigned int> const *,std::pair<CSessionPolicy * const,unsigned int> const &>
{
  char dummy[1];
};

/* 2313 */
struct std::_Bidit<std::pair<CSessionPolicy * const,unsigned int>,int,std::pair<CSessionPolicy * const,unsigned int> const *,std::pair<CSessionPolicy * const,unsigned int> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<CSessionPolicy * const,unsigned int>,int,std::pair<CSessionPolicy * const,unsigned int> const *,std::pair<CSessionPolicy * const,unsigned int> const &> baseclass_0;
};

/* 2314 */
union $E75B86CBC7739465DE052C0CBB8A1C93
{
  std::_Bidit<std::pair<CSessionPolicy * const,unsigned int>,int,std::pair<CSessionPolicy * const,unsigned int> const *,std::pair<CSessionPolicy * const,unsigned int> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *_Ptr;
};

/* 2315 */
struct std::_Tree<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::const_iterator
{
  $E75B86CBC7739465DE052C0CBB8A1C93 ___u0;
};

/* 2316 */
struct std::_Tree<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::const_iterator baseclass_0;
};

/* 2317 */
struct std::pair<std::_Tree<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::iterator first;
  bool second;
};

/* 2318 */
struct std::allocator<CSessionPolicy *>
{
  std::_Allocator_base<CSessionPolicy *> baseclass_0;
};

/* 2319 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList::Equip
{
  _BYTE gap0[3];
  std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> > > > _Alval;
};

/* 2320 */
struct std::allocator<std::pair<CSessionPolicy * const,unsigned int> >::rebind<std::pair<CSessionPolicy * const,unsigned int> >
{
  char dummy[1];
};

/* 2321 */
struct std::allocator<std::pair<CSessionPolicy * const,unsigned int> >::rebind<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node>
{
  char dummy[1];
};

/* 2322 */
struct std::allocator<std::pair<CSessionPolicy * const,unsigned int> >::rebind<std::_Tree_nod<std::_Tmap_traits<CSessionPolicy *,unsigned int,std::less<CSessionPolicy *>,std::allocator<std::pair<CSessionPolicy * const,unsigned int> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2323 */
struct std::allocator<std::pair<CSessionPolicy * const,unsigned int> >::rebind<CSessionPolicy *>
{
  char dummy[1];
};

/* 2324 */
struct std::allocator<std::pair<CSessionPolicy * const,unsigned int> >::rebind<char>
{
  char dummy[1];
};

/* 2325 */
struct std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> > > >::rebind<std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDumm
{
  char dummy[1];
};

/* 2326 */
struct std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> > > >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::vector<CDummyCharacterList::EquipmentData,std:
{
  char dummy[1];
};

/* 2327 */
struct std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> > > >::rebind<unsigned long>
{
  char dummy[1];
};

/* 2328 */
struct std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> > > >::rebind<char>
{
  char dummy[1];
};

/* 2329 */
struct std::_List_val<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >
{
  std::_List_ptr<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> > baseclass_0;
  std::allocator<CModifyDummyCharacter *> _Alval;
};

/* 2330 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList:
{
  std::_Tree<std::_Tmap_traits<unsigned long,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList::Equipment first;
  bool second;
};

/* 2331 */
struct std::allocator<CModifyDummyCharacter *>::rebind<std::_List_nod<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::_Node>
{
  char dummy[1];
};

/* 2332 */
struct std::allocator<CModifyDummyCharacter *>::rebind<std::_List_nod<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::_Node *>
{
  char dummy[1];
};

/* 2333 */
struct std::allocator<CModifyDummyCharacter *>::rebind<CModifyDummyCharacter *>
{
  char dummy[1];
};

/* 2334 */
struct std::list<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >
{
  std::_List_val<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> > baseclass_0;
  std::_List_nod<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2335 */
struct std::iterator<std::bidirectional_iterator_tag,CModifyDummyCharacter *,int,CModifyDummyCharacter * const *,CModifyDummyCharacter * const &>
{
  char dummy[1];
};

/* 2336 */
struct std::_Bidit<CModifyDummyCharacter *,int,CModifyDummyCharacter * const *,CModifyDummyCharacter * const &>
{
  std::iterator<std::bidirectional_iterator_tag,CModifyDummyCharacter *,int,CModifyDummyCharacter * const *,CModifyDummyCharacter * const &> baseclass_0;
};

/* 2337 */
union $B4EDE75FD22404B16CF89D25F4D65F42
{
  std::_Bidit<CModifyDummyCharacter *,int,CModifyDummyCharacter * const *,CModifyDummyCharacter * const &> baseclass_0;
  std::_List_nod<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::_Node *_Ptr;
};

/* 2338 */
struct std::list<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::const_iterator
{
  $B4EDE75FD22404B16CF89D25F4D65F42 ___u0;
};

/* 2339 */
struct std::list<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::iterator
{
  std::list<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> >::const_iterator baseclass_0;
};

/* 2340 */
struct std::map<unsigned long,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::allocator<
{
  std::_Tree<std::_Tmap_traits<unsigned long,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList::Equipment baseclass_0;
  _BYTE gap4[8];
};

/* 2341 */
struct std::allocator<CListener *>::rebind<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node>
{
  char dummy[1];
};

/* 2342 */
struct std::allocator<CListener *>::rebind<std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *>
{
  char dummy[1];
};

/* 2343 */
struct std::allocator<CListener *>::rebind<CListener *>
{
  char dummy[1];
};

/* 2344 */
struct std::iterator<std::bidirectional_iterator_tag,CListener *,int,CListener * const *,CListener * const &>
{
  char dummy[1];
};

/* 2345 */
struct std::_Bidit<CListener *,int,CListener * const *,CListener * const &>
{
  std::iterator<std::bidirectional_iterator_tag,CListener *,int,CListener * const *,CListener * const &> baseclass_0;
};

/* 2346 */
union $1742E7A891031871454C5979BBA9357F
{
  std::_Bidit<CListener *,int,CListener * const *,CListener * const &> baseclass_0;
  std::_List_nod<CListener *,std::allocator<CListener *> >::_Node *_Ptr;
};

/* 2347 */
struct std::list<CListener *,std::allocator<CListener *> >::const_iterator
{
  $1742E7A891031871454C5979BBA9357F ___u0;
};

/* 2348 */
struct std::list<CListener *,std::allocator<CListener *> >::iterator
{
  std::list<CListener *,std::allocator<CListener *> >::const_iterator baseclass_0;
};

/* 2349 */
struct CConsoleCMDSingleton<CCMDStartServer>
{
  CConsoleCommand baseclass_0;
};

/* 2350 */
struct CCMDStartServer
{
  CConsoleCMDSingleton<CCMDStartServer> baseclass_0;
};

/* 2351 */
struct CConsoleCMDSingleton<CCMDPrintLog>
{
  CConsoleCommand baseclass_0;
};

/* 2352 */
struct CConsoleCMDSingleton<CCMDFlushLog>
{
  CConsoleCommand baseclass_0;
};

/* 2353 */
struct CConsoleCMDSingleton<CCMDStatClear>
{
  CConsoleCommand baseclass_0;
};

/* 2354 */
struct CCMDStatClear
{
  CConsoleCMDSingleton<CCMDStatClear> baseclass_0;
};

/* 2355 */
struct CConsoleCMDSingleton<CCMDConnect>
{
  CConsoleCommand baseclass_0;
};

/* 2356 */
struct CConsoleCMDSingleton<CCMDClearDummyCharacters>
{
  CConsoleCommand baseclass_0;
};

/* 2357 */
struct CCMDPrintLog
{
  CConsoleCMDSingleton<CCMDPrintLog> baseclass_0;
};

/* 2358 */
struct CConsoleCMDSingleton<CCMDShowStatistics>
{
  CConsoleCommand baseclass_0;
};

/* 2359 */
struct CCMDShowStatistics
{
  CConsoleCMDSingleton<CCMDShowStatistics> baseclass_0;
};

/* 2360 */
struct CCMDClearDummyCharacters
{
  CConsoleCMDSingleton<CCMDClearDummyCharacters> baseclass_0;
};

/* 2361 */
struct CConsoleCMDSingleton<CCMDReloadSetup>
{
  CConsoleCommand baseclass_0;
};

/* 2362 */
struct CCMDReloadSetup
{
  CConsoleCMDSingleton<CCMDReloadSetup> baseclass_0;
};

/* 2363 */
struct CConsoleCMDSingleton<CCMDStatLog>
{
  CConsoleCommand baseclass_0;
};

/* 2364 */
struct CCMDStatLog
{
  CConsoleCMDSingleton<CCMDStatLog> baseclass_0;
};

/* 2365 */
struct CDummyCharacterList
{
  std::list<CModifyDummyCharacter *,std::allocator<CModifyDummyCharacter *> > m_DummyCharacterList;
  std::map<unsigned long,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::allocator< m_EquipmentClassSet;
};

/* 2366 */
struct CCMDFlushLog
{
  CConsoleCMDSingleton<CCMDFlushLog> baseclass_0;
};

/* 2367 */
struct CCMDDummyCharacters
{
  CConsoleCommand baseclass_0;
  unsigned int m_dwLoadCharNum;
};

/* 2368 */
struct CCMDConnect
{
  CConsoleCMDSingleton<CCMDConnect> baseclass_0;
};

/* 2369 */
struct InstrumentInfo
{
  unsigned int m_dwIndex;
  char *m_szName;
};

/* 2370 */
struct PktChatBan
{
  PktBase baseclass_0;
  unsigned int m_dwAdminCID;
  unsigned int m_dwTargetCID;
  unsigned int m_dwMinutes;
};

/* 2371 */
#pragma pack(push, 1)
struct PktFriendDB
{
  PktDD baseclass_0;
  unsigned int m_dwOwnerUID;
  unsigned int m_dwOwnerCID;
  unsigned int m_dwReferenceUID;
  unsigned int m_dwReferenceCID;
  unsigned int m_dwData;
  unsigned int m_dwGID;
  unsigned __int16 m_wClass;
  char m_cLevel;
  unsigned int m_dwServerID;
  char m_cCmd;
};
#pragma pack(pop)

/* 2372 */
#pragma pack(push, 1)
struct PktFriendAck
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  char m_szName[16];
  unsigned int m_dwGID;
  unsigned __int16 m_wClass;
  char m_cLevel;
  unsigned int m_dwServerID;
  char m_cCmd;
};
#pragma pack(pop)

/* 2373 */
struct CSingleton<CFSM>
{
  char dummy[1];
};

/* 2374 */
struct CFSMState
{
  int m_dwNumberOfTransistions;
  int *m_pdwInputs;
  int *m_pdwOutputState;
  int m_dwStateID;
};

/* 2375 */
union $E1DAB5C2AD0B8D6D533FFD908A3FFAE1
{
  CSingleton<CFSM> baseclass_0;
  int m_nStateNum;
};

/* 2376 */
struct CFSM
{
  $E1DAB5C2AD0B8D6D533FFD908A3FFAE1 ___u0;
  CFSMState *m_lpFSMState[8];
};

/* 2377 */
struct CCharacterParty
{
  CParty baseclass_0;
  CCharacter *m_pMemberPointer[10];
  bool m_bAutoRouting[10];
  CCharacterParty *m_pHostileParty;
  CCharacter *m_pFightingMember[10];
  PartyMemberData m_partyMemberData[10];
};

/* 2378 */
#pragma pack(push, 1)
struct PartyMemberData
{
  unsigned int m_dwCID;
  float m_fXPos;
  float m_fYPos;
  float m_fZPos;
  unsigned __int16 m_usMaxHP;
  unsigned __int16 m_usMaxMP;
  unsigned __int16 m_usCurHP;
  unsigned __int16 m_usCurMP;
  char m_cLevel;
  char m_cClass;
  unsigned int m_dwEnchantInfo[4];
  unsigned __int16 m_usDataChanged;
};
#pragma pack(pop)

/* 2379 */
struct CSingleDispatch
{
  CCSLock m_DispatchLock;
  char DispatchLockPad[8];
  CPacketDispatch *m_lpDispatch;
};

/* 2380 */
struct CChatDispatch
{
  CRylServerDispatch baseclass_0;
};

/* 2381 */
struct CSingleton<CDuelCellManager>
{
  char dummy[1];
};

/* 2382 */
struct std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0>
{
  std::less<unsigned long> comp;
};

/* 2383 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::_Node>
{
  char dummy[1];
};

/* 2384 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::_Node> baseclass_0;
};

/* 2385 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >
{
  std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::_Node> _Alnod;
};

/* 2386 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2387 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::_Node *> baseclass_0;
};

/* 2388 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::_Node *> _Alptr;
};

/* 2389 */
struct std::_Allocator_base<std::pair<unsigned long const ,CCell *> >
{
  char dummy[1];
};

/* 2390 */
struct std::allocator<std::pair<unsigned long const ,CCell *> >
{
  std::_Allocator_base<std::pair<unsigned long const ,CCell *> > baseclass_0;
};

/* 2391 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,CCell *> > _Alval;
};

/* 2392 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CCell *> _Myval;
  char _Color;
  char _Isnil;
};

/* 2393 */
struct std::pair<unsigned long const ,CCell *>
{
  const unsigned int first;
  CCell *second;
};

/* 2394 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2395 */
struct std::map<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> > baseclass_0;
};

/* 2396 */
union $3AF126313600EEB35C3CCAB7545556ED
{
  CSingleton<CDuelCellManager> baseclass_0;
  std::map<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> > > m_CellData;
};

/* 2397 */
struct CDuelCellManager
{
  $3AF126313600EEB35C3CCAB7545556ED ___u0;
};

/* 2398 */
struct std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0>
{
  std::less<unsigned long> comp;
};

/* 2399 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::_Node>
{
  char dummy[1];
};

/* 2400 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::_Node> baseclass_0;
};

/* 2401 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >
{
  std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::_Node> _Alnod;
};

/* 2402 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2403 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::_Node *> baseclass_0;
};

/* 2404 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::_Node *> _Alptr;
};

/* 2405 */
struct std::_Allocator_base<std::pair<unsigned long const ,Castle::CCastle *> >
{
  char dummy[1];
};

/* 2406 */
struct std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >
{
  std::_Allocator_base<std::pair<unsigned long const ,Castle::CCastle *> > baseclass_0;
};

/* 2407 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,Castle::CCastle *> > _Alval;
};

/* 2408 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,Castle::CCastle *> _Myval;
  char _Color;
  char _Isnil;
};

/* 2409 */
struct std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0>
{
  std::less<unsigned long> comp;
};

/* 2410 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::_Node>
{
  char dummy[1];
};

/* 2411 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::_Node> baseclass_0;
};

/* 2412 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >
{
  std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::_Node> _Alnod;
};

/* 2413 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2414 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::_Node *> baseclass_0;
};

/* 2415 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::_Node *> _Alptr;
};

/* 2416 */
struct std::_Allocator_base<std::pair<unsigned long const ,CSiegeObject *> >
{
  char dummy[1];
};

/* 2417 */
struct std::allocator<std::pair<unsigned long const ,CSiegeObject *> >
{
  std::_Allocator_base<std::pair<unsigned long const ,CSiegeObject *> > baseclass_0;
};

/* 2418 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,CSiegeObject *> > _Alval;
};

/* 2419 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CSiegeObject *> _Myval;
  char _Color;
  char _Isnil;
};

/* 2420 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2421 */
struct std::map<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> > baseclass_0;
};

/* 2422 */
struct CastleRight
{
  char m_aryCastleRight[10];
};

/* 2423 */
#pragma pack(push, 1)
struct CastleTaxInfo
{
  char m_cTaxType;
  char m_cTax;
  unsigned int m_dwTempTaxMoney;
  unsigned int m_dwTaxMoney;
  char m_cTaxChangable;
};
#pragma pack(pop)

/* 2424 */
struct std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0>
{
  std::less<unsigned short> comp;
};

/* 2425 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>
{
  char dummy[1];
};

/* 2426 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node> baseclass_0;
};

/* 2427 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >
{
  std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node> _Alnod;
};

/* 2428 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2429 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *> baseclass_0;
};

/* 2430 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *> _Alptr;
};

/* 2431 */
struct std::_Allocator_base<std::pair<unsigned short const ,unsigned short> >
{
  char dummy[1];
};

/* 2432 */
struct std::allocator<std::pair<unsigned short const ,unsigned short> >
{
  std::_Allocator_base<std::pair<unsigned short const ,unsigned short> > baseclass_0;
};

/* 2433 */
struct std::_Tree_val<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned short const ,unsigned short> > _Alval;
};

/* 2434 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *_Right;
  std::pair<unsigned short const ,unsigned short> _Myval;
  char _Color;
  char _Isnil;
};

/* 2435 */
struct std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2436 */
struct std::map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > >
{
  std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> > baseclass_0;
};

/* 2437 */
struct Castle::CCastle
{
  std::map<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> > > m_CastleObjectMap;
  unsigned int m_dwCastleID;
  unsigned int m_dwGID;
  char m_cZone;
  char m_cChannel;
  char m_cNameID;
  char m_cSiegeCount;
  char m_cInvincibleCount;
  unsigned __int16 m_wTotalSiegeCount;
  unsigned int m_dwTotalTaxMoney;
  unsigned __int16 m_wItemID;
  char m_cTotalItemNum;
  char m_cItemNum[9];
  CastleRight m_CastleRight;
  Position m_BackDoorPos[2];
  CastleTaxInfo m_CastleTax[5];
  std::map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > > m_AccumulatedMineralMap;
  std::map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > > m_TemporaryMineralMap;
  bool m_bEnableSiege;
  float m_fBonusRate;
  char m_cTempTaxUpdateCount;
  unsigned int m_dwTemporayTempTaxMoney;
};

/* 2438 */
struct std::pair<unsigned long const ,Castle::CCastle *>
{
  const unsigned int first;
  Castle::CCastle *second;
};

/* 2439 */
struct std::_Tree<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2440 */
struct std::map<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> > baseclass_0;
};

/* 2441 */
struct Castle::CCastleMgr
{
  std::map<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> > > m_CastleMap;
};

/* 2442 */
struct std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0>
{
  std::less<unsigned long> comp;
};

/* 2443 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::_Node>
{
  char dummy[1];
};

/* 2444 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::_Node> baseclass_0;
};

/* 2445 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >
{
  std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::_Node> _Alnod;
};

/* 2446 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2447 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::_Node *> baseclass_0;
};

/* 2448 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::_Node *> _Alptr;
};

/* 2449 */
struct std::_Allocator_base<std::pair<unsigned long const ,CCamp *> >
{
  char dummy[1];
};

/* 2450 */
struct std::allocator<std::pair<unsigned long const ,CCamp *> >
{
  std::_Allocator_base<std::pair<unsigned long const ,CCamp *> > baseclass_0;
};

/* 2451 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,CCamp *> > _Alval;
};

/* 2452 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CCamp *> _Myval;
  char _Color;
  char _Isnil;
};

/* 2453 */
struct CampRight
{
  char m_aryCampRight[10];
};

/* 2454 */
struct CCamp
{
  CSiegeObject baseclass_0;
  unsigned int m_dwLastAttackedTick;
  CampRight m_CampRight;
  unsigned int m_dwCmdSenderCID;
};

/* 2455 */
struct std::pair<unsigned long const ,CCamp *>
{
  const unsigned int first;
  CCamp *second;
};

/* 2456 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2457 */
struct std::map<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> > baseclass_0;
};

/* 2458 */
struct CSiegeObjectMgr
{
  std::map<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> > > m_SiegeObjectMap;
  std::map<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> > > m_CampMap;
  CCamp *m_lpWorldWeapon;
  char m_cKarRemainSiegeTime;
  char m_cMerRemainSiegeTime;
  bool m_bRequestWorldWeaponCreation;
};

/* 2459 */
struct std::_Allocator_base<VirtualArea::CBGServerMap *>
{
  char dummy[1];
};

/* 2460 */
struct std::allocator<VirtualArea::CBGServerMap *>
{
  std::_Allocator_base<VirtualArea::CBGServerMap *> baseclass_0;
};

/* 2461 */
struct std::_Vector_val<VirtualArea::CBGServerMap *,std::allocator<VirtualArea::CBGServerMap *> >
{
  std::allocator<VirtualArea::CBGServerMap *> _Alval;
};

/* 2462 */
struct VirtualArea::CVirtualArea
{
  VirtualArea::CVirtualAreaVtbl *vfptr;
  CCell *m_CellData;
  unsigned int m_dwVID;
  unsigned __int16 m_wMapIndex;
  std::list<CCharacter *,std::allocator<CCharacter *> > m_CharacterList;
  std::list<CCharacter *,std::allocator<CCharacter *> > m_SpectatorList;
  CVirtualMonsterMgr *m_pVirtualMonsterMgr;
};

/* 2463 */
struct VirtualArea::CVirtualAreaVtbl
{
  void (__thiscall *Process)(VirtualArea::CVirtualArea *this);
  unsigned __int16 (__thiscall *Enter)(VirtualArea::CVirtualArea *this, CCharacter *, char);
  bool (__thiscall *Leave)(VirtualArea::CVirtualArea *this, CCharacter *);
  void *(__thiscall *__vecDelDtor)(VirtualArea::CVirtualArea *this, unsigned int);
  unsigned __int16 (__thiscall *AddCharacter)(VirtualArea::CVirtualArea *this, CCharacter *);
  unsigned __int16 (__thiscall *AddSpectator)(VirtualArea::CVirtualArea *this, CCharacter *);
};

/* 2464 */
struct CVirtualMonsterMgr
{
  std::map<unsigned long,CMonster *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_MonsterMap;
  std::map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > > m_AdminMonsterUIDMap;
  unsigned __int16 m_usSummonCount;
};

/* 2465 */
struct std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0>
{
  std::less<unsigned long> comp;
};

/* 2466 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::_Node>
{
  char dummy[1];
};

/* 2467 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::_Node> baseclass_0;
};

/* 2468 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >
{
  std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::_Node> _Alnod;
};

/* 2469 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2470 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::_Node *> baseclass_0;
};

/* 2471 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::_Node *> _Alptr;
};

/* 2472 */
struct std::_Allocator_base<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >
{
  char dummy[1];
};

/* 2473 */
struct std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >
{
  std::_Allocator_base<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> > baseclass_0;
};

/* 2474 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> > _Alval;
};

/* 2475 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> _Myval;
  char _Color;
  char _Isnil;
};

/* 2476 */
struct VirtualArea::MapInfo::PersonalInfo
{
  char m_cEnteringMin;
  char m_cKill;
  char m_cKilled;
};

/* 2477 */
struct std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo>
{
  const unsigned int first;
  VirtualArea::MapInfo::PersonalInfo second;
};

/* 2478 */
struct std::_Tree<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2479 */
struct std::map<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> > baseclass_0;
};

/* 2480 */
struct VirtualArea::MapInfo
{
  char m_cMapType;
  char m_cMaxCharNumOfNation;
  char m_cRemainPlayMin;
  char m_cRemainRestMin;
  unsigned __int16 m_wTargetScore;
  char m_cCurrentCharNum[2];
  unsigned __int16 m_wScore[2];
  char m_cLimitMin;
  char m_cRestMin;
  std::map<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> > > m_PersonalInfoMap;
};

/* 2481 */
struct VirtualArea::ResultInfo
{
  unsigned __int16 m_wScore[2];
  char m_cWinRace;
};

/* 2482 */
struct VirtualArea::CBGServerMap
{
  VirtualArea::CVirtualArea baseclass_0;
  VirtualArea::MapInfo m_MapInfo;
  VirtualArea::ResultInfo m_ResultInfo;
  char m_cStatus;
  unsigned int m_dwRemainTime;
};

/* 2483 */
struct std::vector<VirtualArea::CBGServerMap *,std::allocator<VirtualArea::CBGServerMap *> >
{
  std::_Vector_val<VirtualArea::CBGServerMap *,std::allocator<VirtualArea::CBGServerMap *> > baseclass_0;
  VirtualArea::CBGServerMap **_Myfirst;
  VirtualArea::CBGServerMap **_Mylast;
  VirtualArea::CBGServerMap **_Myend;
};

/* 2484 */
struct VirtualArea::CBGServerMgr
{
  std::vector<VirtualArea::CBGServerMap *,std::allocator<VirtualArea::CBGServerMap *> > m_lstBGServerMap;
};

/* 2485 */
struct VirtualArea::CDuelMgr
{
  char dummy[1];
};

/* 2486 */
struct VirtualArea::CDungeonMgr
{
  char dummy[1];
};

/* 2487 */
struct VirtualArea::ProtoType
{
  unsigned int m_dwVID;
  char m_cMapType;
  char m_cZone;
  unsigned __int16 m_wStartX;
  unsigned __int16 m_wStartZ;
  unsigned __int16 m_wWidth;
  unsigned __int16 m_wHeight;
  char m_cMaxRespawnPos;
  char m_szArrangementFileName[128];
  char m_szMapType[32];
  Position m_StartPos[2];
  Position m_RespawnPos[2][3];
};

/* 2488 */
struct std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned char,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocat
{
  std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned char,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_trait baseclass_0;
  _BYTE gap4[8];
};

/* 2489 */
const struct VirtualArea::MapTypeMatching
{
  std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned char,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocat m_matchMap;
};

/* 2490 */
struct VirtualArea::CVirtualAreaMgr
{
  VirtualArea::CBGServerMgr *m_BGServerMgr;
  VirtualArea::CDuelMgr *m_DuelMgr;
  VirtualArea::CDungeonMgr *m_DungeonMgr;
  VirtualArea::ProtoType *m_VirtualAreaProtoTypeArray;
  unsigned int m_VirtualAreaProtoTypeNum;
  VirtualArea::MapTypeMatching m_MapTypeMatching;
};

/* 2491 */
struct std::unary_function<CMonster *,bool>
{
  char dummy[1];
};

/* 2492 */
union $40FBF7070D4C7A9C338590EBA0DECF55
{
  std::unary_function<CMonster *,bool> baseclass_0;
  bool (__thiscall *_Pmemfun)(CMonster *this);
};

/* 2493 */
struct std::mem_fun_t<bool,CMonster>
{
  $40FBF7070D4C7A9C338590EBA0DECF55 ___u0;
};

/* 2494 */
struct std::unary_function<CCell,void>
{
  char dummy[1];
};

/* 2495 */
union $994935C75E14D6D16FE7065BC35D512D
{
  std::unary_function<CCell,void> baseclass_0;
  void (__thiscall *_Pmemfun)(CCell *this);
};

/* 2496 */
struct std::mem_fun_ref_t<void,CCell>
{
  $994935C75E14D6D16FE7065BC35D512D ___u0;
};

/* 2497 */
struct std::binary_function<CCell,unsigned long,void>
{
  char dummy[1];
};

/* 2498 */
union $F813B312CE717742B931DBC5DFEE034B
{
  std::binary_function<CCell,unsigned long,void> baseclass_0;
  void (__thiscall *_Pmemfun)(CCell *this, unsigned int);
};

/* 2499 */
struct std::mem_fun1_ref_t<void,CCell,unsigned long>
{
  $F813B312CE717742B931DBC5DFEE034B ___u0;
};

/* 2500 */
struct CGameServerProcessThread
{
  CProcessThread baseclass_0;
  CRylGameServer *m_RylGameServer;
  CCreatureManager *m_CreatureManager;
  CCellManager *m_CellManager;
  CDuelCellManager *m_DuelCellManager;
  CGlobalSpellMgr *m_GlobalSpellMgr;
  CGameLog *m_GameLog;
  Castle::CCastleMgr *m_CastleMgr;
  CSiegeObjectMgr *m_SiegeObjectMgr;
  CCharRespawnMgr *m_CharRespawnMgr;
  CCharSphereTree *m_CharSphereTree;
  VirtualArea::CVirtualAreaMgr *m_VirtualAreaMgr;
  CPerformanceInstrument m_Instruments[14];
  std::mem_fun_t<bool,CMonster> m_processMonster;
  std::mem_fun_ref_t<void,CCell> m_processPrepareBroadCast;
  std::mem_fun1_ref_t<void,CCell,unsigned long> m_processBroadCast;
};

/* 2501 */
struct std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned char,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_t
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned char,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_t *_Left;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned char,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_t *_Parent;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned char,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_t *_Right;
  std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned char> _Myval;
  char _Color;
  char _Isnil;
};

/* 2502 */
struct std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned char>
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > first;
  char second;
};

/* 2503 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned char,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_st
{
  char dummy[1];
};

/* 2504 */
struct std::_Allocator_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
{
  char dummy[1];
};

/* 2505 */
struct std::_Allocator_base<Quest::QuestNode *>
{
  char dummy[1];
};

/* 2506 */
struct std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>
{
  std::less<unsigned long> comp;
};

/* 2507 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Right;
  std::pair<unsigned long const ,CParty *> _Myval;
  char _Color;
  char _Isnil;
};

/* 2508 */
struct std::pair<unsigned long const ,CParty *>
{
  const unsigned int first;
  CParty *second;
};

/* 2509 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 2510 */
struct boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_N
{
  char dummy[1];
};

/* 2511 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_N _Alnod;
};

/* 2512 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::_Node *_Right;
  std::pair<unsigned short const ,unsigned char> _Myval;
  char _Color;
  char _Isnil;
};

/* 2513 */
struct std::pair<unsigned short const ,unsigned char>
{
  const unsigned __int16 first;
  char second;
};

/* 2514 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2515 */
struct std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
{
  std::_Allocator_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > baseclass_0;
};

/* 2516 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_N _Alptr;
};

/* 2517 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned char,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<c
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned char,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_st baseclass_0;
};

/* 2518 */
struct std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0>
{
  std::less<unsigned short> comp;
};

/* 2519 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::_Node>
{
  char dummy[1];
};

/* 2520 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::_Node> baseclass_0;
};

/* 2521 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >
{
  std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::_Node> _Alnod;
};

/* 2522 */
struct std::_Allocator_base<std::pair<unsigned short const ,unsigned char> >
{
  char dummy[1];
};

/* 2523 */
struct std::allocator<std::pair<unsigned short const ,unsigned char> >
{
  std::_Allocator_base<std::pair<unsigned short const ,unsigned char> > baseclass_0;
};

/* 2524 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::_Node *> baseclass_0;
};

/* 2525 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::_Node *> _Alptr;
};

/* 2526 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<std::pair<unsigned long const ,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 2527 */
struct std::_Allocator_base<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned char> >
{
  char dummy[1];
};

/* 2528 */
struct std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>
{
  std::less<unsigned long> comp;
};

/* 2529 */
struct boost::fast_pool_allocator<std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node,boost::default_user_alloc
{
  char dummy[1];
};

/* 2530 */
struct std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node,boost::default_user_alloc _Alnod;
};

/* 2531 */
struct std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node
{
  std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Right;
  unsigned int _Myval;
  char _Color;
  char _Isnil;
};

/* 2532 */
struct boost::fast_pool_allocator<std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *,boost::default_user_all
{
  char dummy[1];
};

/* 2533 */
struct std::_Tree_ptr<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *,boost::default_user_all _Alptr;
};

/* 2534 */
struct std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned char> >
{
  std::_Allocator_base<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned char> > baseclass_0;
};

/* 2535 */
struct std::binary_function<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool>
{
  char dummy[1];
};

/* 2536 */
struct std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
{
  std::binary_function<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool> baseclass_0;
};

/* 2537 */
struct std::_Allocator_base<Quest::TriggerMsg>
{
  char dummy[1];
};

/* 2538 */
struct std::allocator<Quest::TriggerMsg>
{
  std::_Allocator_base<Quest::TriggerMsg> baseclass_0;
};

/* 2539 */
struct std::_Vector_val<Quest::TriggerMsg,std::allocator<Quest::TriggerMsg> >
{
  std::allocator<Quest::TriggerMsg> _Alval;
};

/* 2540 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2541 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CParty *>,int,std::pair<unsigned long const ,CParty *> const *,std::pair<unsigned long const ,CParty *> const &>
{
  char dummy[1];
};

/* 2542 */
struct std::_Bidit<std::pair<unsigned long const ,CParty *>,int,std::pair<unsigned long const ,CParty *> const *,std::pair<unsigned long const ,CParty *> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CParty *>,int,std::pair<unsigned long const ,CParty *> const *,std::pair<unsigned long const ,CParty *> const &> baseclass_0;
};

/* 2543 */
union $BCDF7AF1E42E81F12C3BD28CCC6B5B29
{
  std::_Bidit<std::pair<unsigned long const ,CParty *>,int,std::pair<unsigned long const ,CParty *> const *,std::pair<unsigned long const ,CParty *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Ptr;
};

/* 2544 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator
{
  $BCDF7AF1E42E81F12C3BD28CCC6B5B29 ___u0;
};

/* 2545 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator baseclass_0;
};

/* 2546 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator first;
  bool second;
};

/* 2547 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo>,int,std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> const *,std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInf
{
  char dummy[1];
};

/* 2548 */
struct std::_Bidit<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo>,int,std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> const *,std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo>,int,std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> const *,std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInf baseclass_0;
};

/* 2549 */
union $ABDA2C901A5FEACEAA5E2543A386CD89
{
  std::_Bidit<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo>,int,std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> const *,std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::_Node *_Ptr;
};

/* 2550 */
struct std::_Tree<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::const_iterator
{
  $ABDA2C901A5FEACEAA5E2543A386CD89 ___u0;
};

/* 2551 */
struct std::_Tree<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::const_iterator baseclass_0;
};

/* 2552 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::iterator first;
  bool second;
};

/* 2553 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,V
{
  std::_Tree<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::iterator first;
  std::_Tree<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >,0> >::iterator second;
};

/* 2554 */
struct std::_Tree_val<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned short const ,unsigned char> > _Alval;
};

/* 2555 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CCell *>,int,std::pair<unsigned long const ,CCell *> const *,std::pair<unsigned long const ,CCell *> const &>
{
  char dummy[1];
};

/* 2556 */
struct std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned char,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_t
{
  _BYTE gap0[3];
  std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned char> > _Alval;
};

/* 2557 */
struct std::allocator<Quest::QuestNode *>
{
  std::_Allocator_base<Quest::QuestNode *> baseclass_0;
};

/* 2558 */
struct std::_Vector_val<Quest::QuestNode *,std::allocator<Quest::QuestNode *> >
{
  std::allocator<Quest::QuestNode *> _Alval;
};

/* 2559 */
struct std::allocator<Quest::QuestNode *>::rebind<Quest::QuestNode *>
{
  char dummy[1];
};

/* 2560 */
struct std::allocator<Quest::TriggerMsg>::rebind<Quest::TriggerMsg>
{
  char dummy[1];
};

/* 2561 */
struct std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned char> >::rebind<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned char> >
{
  char dummy[1];
};

/* 2562 */
struct std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned char> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned char,std::less<std:
{
  char dummy[1];
};

/* 2563 */
struct std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned char> >::rebind<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
{
  char dummy[1];
};

/* 2564 */
struct std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned char> >::rebind<char>
{
  char dummy[1];
};

/* 2565 */
struct std::_Tree_val<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_ptr<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 2566 */
struct std::pair<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned char,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::
{
  std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned char,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_trait first;
  bool second;
};

/* 2567 */
union $6DC4FA7155A6D889D76C778764BEFC53
{
  std::_Bidit<std::pair<unsigned long const ,CSiegeObject *>,int,std::pair<unsigned long const ,CSiegeObject *> const *,std::pair<unsigned long const ,CSiegeObject *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::_Node *_Ptr;
};

/* 2568 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::const_iterator
{
  $6DC4FA7155A6D889D76C778764BEFC53 ___u0;
};

/* 2569 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::const_iterator baseclass_0;
};

/* 2570 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::iterator first;
  bool second;
};

/* 2571 */
struct std::allocator<std::pair<unsigned long const ,CCamp *> >::rebind<std::pair<unsigned long const ,CCamp *> >
{
  char dummy[1];
};

/* 2572 */
struct std::allocator<std::pair<unsigned long const ,CCamp *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::_Node>
{
  char dummy[1];
};

/* 2573 */
struct std::allocator<std::pair<unsigned long const ,CCamp *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2574 */
struct std::allocator<std::pair<unsigned long const ,CCamp *> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 2575 */
struct std::allocator<std::pair<unsigned long const ,CCamp *> >::rebind<char>
{
  char dummy[1];
};

/* 2576 */
struct std::binary_function<CCharacter *,enum DBUpdateData::UpdateType,bool>
{
  char dummy[1];
};

/* 2577 */
struct std::vector<Quest::QuestNode *,std::allocator<Quest::QuestNode *> >
{
  std::_Vector_val<Quest::QuestNode *,std::allocator<Quest::QuestNode *> > baseclass_0;
  Quest::QuestNode **_Myfirst;
  Quest::QuestNode **_Mylast;
  Quest::QuestNode **_Myend;
};

/* 2578 */
struct std::iterator<std::random_access_iterator_tag,Quest::QuestNode *,int,Quest::QuestNode * const *,Quest::QuestNode * const &>
{
  char dummy[1];
};

/* 2579 */
struct std::_Ranit<Quest::QuestNode *,int,Quest::QuestNode * const *,Quest::QuestNode * const &>
{
  std::iterator<std::random_access_iterator_tag,Quest::QuestNode *,int,Quest::QuestNode * const *,Quest::QuestNode * const &> baseclass_0;
};

/* 2580 */
union $B4FDCD0734182BE799E8AB650B705DFB
{
  std::_Ranit<Quest::QuestNode *,int,Quest::QuestNode * const *,Quest::QuestNode * const &> baseclass_0;
  Quest::QuestNode **_Myptr;
};

/* 2581 */
struct std::vector<Quest::QuestNode *,std::allocator<Quest::QuestNode *> >::const_iterator
{
  $B4FDCD0734182BE799E8AB650B705DFB ___u0;
};

/* 2582 */
struct std::vector<Quest::QuestNode *,std::allocator<Quest::QuestNode *> >::iterator
{
  std::vector<Quest::QuestNode *,std::allocator<Quest::QuestNode *> >::const_iterator baseclass_0;
};

/* 2583 */
struct FnCSAuth
{
  char dummy[1];
};

/* 2584 */
struct std::unary_function<FnCSAuth,bool>
{
  char dummy[1];
};

/* 2585 */
struct std::vector<Quest::TriggerMsg,std::allocator<Quest::TriggerMsg> >
{
  std::_Vector_val<Quest::TriggerMsg,std::allocator<Quest::TriggerMsg> > baseclass_0;
  Quest::TriggerMsg *_Myfirst;
  Quest::TriggerMsg *_Mylast;
  Quest::TriggerMsg *_Myend;
};

/* 2586 */
struct std::iterator<std::random_access_iterator_tag,Quest::TriggerMsg,int,Quest::TriggerMsg const *,Quest::TriggerMsg const &>
{
  char dummy[1];
};

/* 2587 */
struct std::_Ranit<Quest::TriggerMsg,int,Quest::TriggerMsg const *,Quest::TriggerMsg const &>
{
  std::iterator<std::random_access_iterator_tag,Quest::TriggerMsg,int,Quest::TriggerMsg const *,Quest::TriggerMsg const &> baseclass_0;
};

/* 2588 */
union $37A076318B126DCC0503ACF203492FB2
{
  std::_Ranit<Quest::TriggerMsg,int,Quest::TriggerMsg const *,Quest::TriggerMsg const &> baseclass_0;
  Quest::TriggerMsg *_Myptr;
};

/* 2589 */
struct std::vector<Quest::TriggerMsg,std::allocator<Quest::TriggerMsg> >::const_iterator
{
  $37A076318B126DCC0503ACF203492FB2 ___u0;
};

/* 2590 */
struct std::vector<Quest::TriggerMsg,std::allocator<Quest::TriggerMsg> >::iterator
{
  std::vector<Quest::TriggerMsg,std::allocator<Quest::TriggerMsg> >::const_iterator baseclass_0;
};

/* 2591 */
struct std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_val<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2592 */
struct std::iterator<std::bidirectional_iterator_tag,unsigned long,int,unsigned long const *,unsigned long const &>
{
  char dummy[1];
};

/* 2593 */
struct std::_Bidit<unsigned long,int,unsigned long const *,unsigned long const &>
{
  std::iterator<std::bidirectional_iterator_tag,unsigned long,int,unsigned long const *,unsigned long const &> baseclass_0;
};

/* 2594 */
union $C6C0962D4D76E68E0D465003D56E964E
{
  std::_Bidit<unsigned long,int,unsigned long const *,unsigned long const &> baseclass_0;
  std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Ptr;
};

/* 2595 */
struct std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator
{
  $C6C0962D4D76E68E0D465003D56E964E ___u0;
};

/* 2596 */
struct std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator
{
  std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator baseclass_0;
};

/* 2597 */
struct std::pair<std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator,bool>
{
  std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator first;
  bool second;
};

/* 2598 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CCharSphereNode *>,int,std::pair<unsigned long const ,CCharSphereNode *> const *,std::pair<unsigned long const ,CCharSphereNode *> const &>
{
  char dummy[1];
};

/* 2599 */
struct std::_Bidit<std::pair<unsigned long const ,CCharSphereNode *>,int,std::pair<unsigned long const ,CCharSphereNode *> const *,std::pair<unsigned long const ,CCharSphereNode *> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CCharSphereNode *>,int,std::pair<unsigned long const ,CCharSphereNode *> const *,std::pair<unsigned long const ,CCharSphereNode *> const &> baseclass_0;
};

/* 2600 */
union $95AB5BBE6CEBD49CBBAB8A0B3C77EC06
{
  std::_Bidit<std::pair<unsigned long const ,CCharSphereNode *>,int,std::pair<unsigned long const ,CCharSphereNode *> const *,std::pair<unsigned long const ,CCharSphereNode *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::_Node *_Ptr;
};

/* 2601 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::const_iterator
{
  $95AB5BBE6CEBD49CBBAB8A0B3C77EC06 ___u0;
};

/* 2602 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::const_iterator baseclass_0;
};

/* 2603 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::iterator first;
  bool second;
};

/* 2604 */
struct std::allocator<std::pair<unsigned long const ,CCell *> >::rebind<std::pair<unsigned long const ,CCell *> >
{
  char dummy[1];
};

/* 2605 */
struct std::allocator<std::pair<unsigned long const ,CCell *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::_Node>
{
  char dummy[1];
};

/* 2606 */
struct std::allocator<std::pair<unsigned long const ,CCell *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2607 */
struct std::allocator<std::pair<unsigned long const ,CCell *> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 2608 */
struct std::allocator<std::pair<unsigned long const ,CCell *> >::rebind<char>
{
  char dummy[1];
};

/* 2609 */
struct std::_Bidit<std::pair<unsigned long const ,CCell *>,int,std::pair<unsigned long const ,CCell *> const *,std::pair<unsigned long const ,CCell *> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CCell *>,int,std::pair<unsigned long const ,CCell *> const *,std::pair<unsigned long const ,CCell *> const &> baseclass_0;
};

/* 2610 */
union $AB198834FDB288CAEFD5CE740ECC318D
{
  std::_Bidit<std::pair<unsigned long const ,CCell *>,int,std::pair<unsigned long const ,CCell *> const *,std::pair<unsigned long const ,CCell *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::_Node *_Ptr;
};

/* 2611 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::const_iterator
{
  $AB198834FDB288CAEFD5CE740ECC318D ___u0;
};

/* 2612 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::const_iterator baseclass_0;
};

/* 2613 */
struct std::map<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
};

/* 2614 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CCamp *>,int,std::pair<unsigned long const ,CCamp *> const *,std::pair<unsigned long const ,CCamp *> const &>
{
  char dummy[1];
};

/* 2615 */
struct std::_Bidit<std::pair<unsigned long const ,CCamp *>,int,std::pair<unsigned long const ,CCamp *> const *,std::pair<unsigned long const ,CCamp *> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CCamp *>,int,std::pair<unsigned long const ,CCamp *> const *,std::pair<unsigned long const ,CCamp *> const &> baseclass_0;
};

/* 2616 */
union $59E6F976F411C66EF101CF51D4F2E0B4
{
  std::_Bidit<std::pair<unsigned long const ,CCamp *>,int,std::pair<unsigned long const ,CCamp *> const *,std::pair<unsigned long const ,CCamp *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::_Node *_Ptr;
};

/* 2617 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::const_iterator
{
  $59E6F976F411C66EF101CF51D4F2E0B4 ___u0;
};

/* 2618 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::const_iterator baseclass_0;
};

/* 2619 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCamp *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCamp *> >,0> >::iterator first;
  bool second;
};

/* 2620 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::iterator first;
  bool second;
};

/* 2621 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pa
{
  std::_Tree<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::iterator first;
  std::_Tree<std::_Tmap_traits<unsigned long,CCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCell *> >,0> >::iterator second;
};

/* 2622 */
struct std::_Tree<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2623 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned short const ,unsigned char>,int,std::pair<unsigned short const ,unsigned char> const *,std::pair<unsigned short const ,unsigned char> const &>
{
  char dummy[1];
};

/* 2624 */
struct std::_Bidit<std::pair<unsigned short const ,unsigned char>,int,std::pair<unsigned short const ,unsigned char> const *,std::pair<unsigned short const ,unsigned char> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned short const ,unsigned char>,int,std::pair<unsigned short const ,unsigned char> const *,std::pair<unsigned short const ,unsigned char> const &> baseclass_0;
};

/* 2625 */
union $07C6DE87E6FF418753512126C962554C
{
  std::_Bidit<std::pair<unsigned short const ,unsigned char>,int,std::pair<unsigned short const ,unsigned char> const *,std::pair<unsigned short const ,unsigned char> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::_Node *_Ptr;
};

/* 2626 */
struct std::_Tree<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::const_iterator
{
  $07C6DE87E6FF418753512126C962554C ___u0;
};

/* 2627 */
struct std::_Tree<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::const_iterator baseclass_0;
};

/* 2628 */
struct std::allocator<std::pair<unsigned short const ,unsigned char> >::rebind<std::pair<unsigned short const ,unsigned char> >
{
  char dummy[1];
};

/* 2629 */
struct std::allocator<std::pair<unsigned short const ,unsigned char> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::_Node>
{
  char dummy[1];
};

/* 2630 */
struct std::allocator<std::pair<unsigned short const ,unsigned char> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2631 */
struct std::allocator<std::pair<unsigned short const ,unsigned char> >::rebind<unsigned short>
{
  char dummy[1];
};

/* 2632 */
struct std::allocator<std::pair<unsigned short const ,unsigned char> >::rebind<char>
{
  char dummy[1];
};

/* 2633 */
struct std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >::rebind<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >
{
  char dummy[1];
};

/* 2634 */
struct std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,VirtualArea::MapInfo::PersonalInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VirtualArea
{
  char dummy[1];
};

/* 2635 */
struct std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 2636 */
struct std::allocator<std::pair<unsigned long const ,VirtualArea::MapInfo::PersonalInfo> >::rebind<char>
{
  char dummy[1];
};

/* 2637 */
struct std::set<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
};

/* 2638 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,Castle::CCastle *>,int,std::pair<unsigned long const ,Castle::CCastle *> const *,std::pair<unsigned long const ,Castle::CCastle *> const &>
{
  char dummy[1];
};

/* 2639 */
struct std::_Bidit<std::pair<unsigned long const ,Castle::CCastle *>,int,std::pair<unsigned long const ,Castle::CCastle *> const *,std::pair<unsigned long const ,Castle::CCastle *> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,Castle::CCastle *>,int,std::pair<unsigned long const ,Castle::CCastle *> const *,std::pair<unsigned long const ,Castle::CCastle *> const &> baseclass_0;
};

/* 2640 */
union $204E4159F6E44DE013110AB070FA46EA
{
  std::_Bidit<std::pair<unsigned long const ,Castle::CCastle *>,int,std::pair<unsigned long const ,Castle::CCastle *> const *,std::pair<unsigned long const ,Castle::CCastle *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::_Node *_Ptr;
};

/* 2641 */
struct std::_Tree<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::const_iterator
{
  $204E4159F6E44DE013110AB070FA46EA ___u0;
};

/* 2642 */
struct std::_Tree<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::const_iterator baseclass_0;
};

/* 2643 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::iterator first;
  bool second;
};

/* 2644 */
struct std::unary_function<CCharacter *,bool>
{
  char dummy[1];
};

/* 2645 */
union $5558A8F4E71260A6792654EA02A2B6F8
{
  std::binary_function<CCharacter *,enum DBUpdateData::UpdateType,bool> baseclass_0;
  bool (__thiscall *_Pmemfun)(CCharacter *this, DBUpdateData::UpdateType);
};

/* 2646 */
struct std::mem_fun1_t<bool,CCharacter,enum DBUpdateData::UpdateType>
{
  $5558A8F4E71260A6792654EA02A2B6F8 ___u0;
};

/* 2647 */
union $2422348BCB70B21806FDF5F35FAD2F8A
{
  std::unary_function<CCharacter *,bool> baseclass_0;
  std::mem_fun1_t<bool,CCharacter,enum DBUpdateData::UpdateType> op;
};

/* 2648 */
struct std::binder2nd<std::mem_fun1_t<bool,CCharacter,enum DBUpdateData::UpdateType> >
{
  $2422348BCB70B21806FDF5F35FAD2F8A ___u0;
  DBUpdateData::UpdateType value;
};

/* 2649 */
struct std::unary_function<std::binder2nd<std::mem_fun1_t<bool,CCharacter,enum DBUpdateData::UpdateType> >,bool>
{
  char dummy[1];
};

/* 2650 */
struct std::allocator<std::pair<unsigned long const ,CSiegeObject *> >::rebind<std::pair<unsigned long const ,CSiegeObject *> >
{
  char dummy[1];
};

/* 2651 */
struct std::allocator<std::pair<unsigned long const ,CSiegeObject *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::_Node>
{
  char dummy[1];
};

/* 2652 */
struct std::allocator<std::pair<unsigned long const ,CSiegeObject *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CSiegeObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSiegeObject *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2653 */
struct std::allocator<std::pair<unsigned long const ,CSiegeObject *> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 2654 */
struct std::allocator<std::pair<unsigned long const ,CSiegeObject *> >::rebind<char>
{
  char dummy[1];
};

/* 2655 */
struct FnDisconnectCharacter
{
  char dummy[1];
};

/* 2656 */
struct std::unary_function<FnDisconnectCharacter,bool>
{
  char dummy[1];
};

/* 2657 */
struct std::unary_function<std::mem_fun_t<bool,CMonster>,bool>
{
  char dummy[1];
};

/* 2658 */
struct std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >::rebind<std::pair<unsigned long const ,CCharSphereNode *> >
{
  char dummy[1];
};

/* 2659 */
struct std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::_Node>
{
  char dummy[1];
};

/* 2660 */
struct std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCharSphereNode *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2661 */
struct std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 2662 */
struct std::allocator<std::pair<unsigned long const ,CCharSphereNode *> >::rebind<char>
{
  char dummy[1];
};

/* 2663 */
struct FnRegenHPAndMP
{
  char dummy[1];
};

/* 2664 */
struct std::unary_function<FnRegenHPAndMP,bool>
{
  char dummy[1];
};

/* 2665 */
struct std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >::rebind<std::pair<unsigned long const ,Castle::CCastle *> >
{
  char dummy[1];
};

/* 2666 */
struct std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::_Node>
{
  char dummy[1];
};

/* 2667 */
struct std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,Castle::CCastle *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 2668 */
struct std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 2669 */
struct std::allocator<std::pair<unsigned long const ,Castle::CCastle *> >::rebind<char>
{
  char dummy[1];
};

/* 2670 */
struct PrepareBroadcastData
{
  char dummy[1];
};

/* 2671 */
struct std::unary_function<PrepareBroadcastData,bool>
{
  char dummy[1];
};

/* 2672 */
struct std::map<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> > >
{
  std::_Tree<std::_Tmap_traits<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> >,0> > baseclass_0;
};

/* 2673 */
struct CMonsterParty
{
  CParty baseclass_0;
  CMonster *m_pMemberPointer[10];
  float m_fHelpRange;
  std::set<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_partyTargets;
};

/* 2674 */
struct CSingleton<CQuestMgr>
{
  char dummy[1];
};

/* 2675 */
union $B0C2CA095E6FE73CF81C1379EFE5C629
{
  CSingleton<CQuestMgr> baseclass_0;
  std::vector<Quest::QuestNode *,std::allocator<Quest::QuestNode *> > m_lstQuest;
};

/* 2676 */
struct CQuestMgr
{
  $B0C2CA095E6FE73CF81C1379EFE5C629 ___u0;
  std::map<unsigned short,unsigned char,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned char> > > m_mapSkillPointBonus;
  std::vector<Quest::TriggerMsg,std::allocator<Quest::TriggerMsg> > m_vecPendingQuest;
  std::vector<Quest::TriggerMsg,std::allocator<Quest::TriggerMsg> > m_vecSubPendingQuest;
  Quest::QuestNode *m_lpQuestNode;
  Quest::PhaseNode *m_lpPhaseNode;
  Quest::TriggerNode *m_lpTriggerNode;
  bool m_bFalseEvent;
  bool m_bDangerousEvent;
  bool m_bPendingQuest;
};

/* 2677 */
#pragma pack(push, 1)
struct CastleSiegeInfo
{
  unsigned int m_dwCastleID;
  bool m_bEnableSiege;
};
#pragma pack(pop)

/* 2678 */
struct CSingleDispatch::Storage
{
  CPacketDispatch *m_lpDispatch;
  CSingleDispatch *m_SingleDispatch;
};

/* 2679 */
struct CDatagramOverlappedFactory
{
  COverlappedFactory baseclass_0;
  CCSLock m_Lock;
  char FactoryLockPad[8];
  boost::pool<boost::default_user_allocator_new_delete> *m_lpOverlappedPool;
};

/* 2680 */
union $0B7692A738C7E9A58C4B2530C74509C2
{
  std::unary_function<FnCSAuth,bool> baseclass_0;
  FnCSAuth *m_fnSecondProcess;
};

/* 2681 */
struct CCreatureManager::CProcessSecond<FnCSAuth,std::pair<unsigned long const ,CCharacter *> >
{
  $0B7692A738C7E9A58C4B2530C74509C2 ___u0;
};

/* 2682 */
union $1FDAA1C84C4C202FF184AB9E06F18778
{
  std::unary_function<PrepareBroadcastData,bool> baseclass_0;
  PrepareBroadcastData *m_fnSecondProcess;
};

/* 2683 */
struct CCreatureManager::CProcessSecond<PrepareBroadcastData,std::pair<unsigned long const ,CMonster *> >
{
  $1FDAA1C84C4C202FF184AB9E06F18778 ___u0;
};

/* 2684 */
struct CCreatureManager::CProcessSecond<PrepareBroadcastData,std::pair<unsigned long const ,CCharacter *> >
{
  $1FDAA1C84C4C202FF184AB9E06F18778 ___u0;
};

/* 2685 */
union $56F3C17EF494786C76E64A6C251991D9
{
  std::unary_function<FnRegenHPAndMP,bool> baseclass_0;
  FnRegenHPAndMP *m_fnSecondProcess;
};

/* 2686 */
struct CCreatureManager::CProcessSecond<FnRegenHPAndMP,std::pair<unsigned long const ,CCharacter *> >
{
  $56F3C17EF494786C76E64A6C251991D9 ___u0;
};

/* 2687 */
struct CCreatureManager::CProcessSecond<FnRegenHPAndMP,std::pair<unsigned long const ,CMonster *> >
{
  $56F3C17EF494786C76E64A6C251991D9 ___u0;
};

/* 2688 */
union $DF3DDCA207128953714768278C0D69D6
{
  std::unary_function<std::mem_fun_t<bool,CMonster>,bool> baseclass_0;
  std::mem_fun_t<bool,CMonster> *m_fnSecondProcess;
};

/* 2689 */
struct CCreatureManager::CProcessSecond<std::mem_fun_t<bool,CMonster>,std::pair<unsigned long const ,CMonster *> >
{
  $DF3DDCA207128953714768278C0D69D6 ___u0;
};

/* 2690 */
union $CE2F1C62CB92FED6EAC4383FDE41C793
{
  std::unary_function<std::binder2nd<std::mem_fun1_t<bool,CCharacter,enum DBUpdateData::UpdateType> >,bool> baseclass_0;
  std::binder2nd<std::mem_fun1_t<bool,CCharacter,enum DBUpdateData::UpdateType> > *m_fnSecondProcess;
};

/* 2691 */
struct CCreatureManager::CProcessSecond<std::binder2nd<std::mem_fun1_t<bool,CCharacter,enum DBUpdateData::UpdateType> >,std::pair<unsigned long const ,CCharacter *> >
{
  $CE2F1C62CB92FED6EAC4383FDE41C793 ___u0;
};

/* 2692 */
union $A737F2A1EE514443FA427C4F86924066
{
  std::unary_function<FnDisconnectCharacter,bool> baseclass_0;
  FnDisconnectCharacter *m_fnSecondProcess;
};

/* 2693 */
struct CCreatureManager::CProcessSecond<FnDisconnectCharacter,std::pair<unsigned long const ,CCharacter *> >
{
  $A737F2A1EE514443FA427C4F86924066 ___u0;
};

/* 2694 */
struct CGameTimeMgr::sDetailTimeInfo
{
  char m_cMonth;
  char m_cDay;
  char m_cHour;
  char m_cMinute;
  unsigned int m_dwDuration;
};

/* 2695 */
struct CGameTimeMgr
{
  char m_cNowGuildTime;
  char m_cNowRealmTime;
  char m_cNowSiegeTime;
  CGameTimeMgr::sDetailTimeInfo m_GuildDetailTimeInfo;
  CGameTimeMgr::sDetailTimeInfo m_RealmDetailTimeInfo;
  CGameTimeMgr::sDetailTimeInfo m_SiegeDetailTimeInfo;
  unsigned int m_dwOldGuildRemainSec;
  unsigned int m_dwOldRealmRemainSec;
  unsigned int m_dwOldSiegeRemainSec;
};

/* 2696 */
struct boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<unsigned long>
{
  char dummy[1];
};

/* 2697 */
struct boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<unsigned long,boost::default_
{
  char dummy[1];
};

/* 2698 */
struct boost::fast_pool_allocator<unsigned long,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<char>
{
  char dummy[1];
};

/* 2699 */
#pragma pack(push, 1)
struct CastleObjectInfo
{
  unsigned int m_dwCID;
  unsigned int m_dwCastleID;
  unsigned int m_dwGID;
  unsigned int m_dwHP;
  unsigned __int16 m_wObjectType;
  float m_fDefaultDir;
  char m_cState;
  char m_cSubState;
  char m_cUpgradeStep;
  char m_cUpgradeType;
  POS m_Pos;
};
#pragma pack(pop)

/* 2700 */
struct CDBAgentDispatch
{
  CRylServerDispatch baseclass_0;
};

/* 2701 */
struct CPartyMgr
{
  std::map<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_PartyMap;
  std::map<unsigned long,CCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_MemberFindPartyMap;
  std::map<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_PartyFindMemberMap;
  unsigned int m_tempUID;
};

/* 2702 */
union AnyData
{
  int intValue;
  float floatValue;
  const char *stringValue;
};

/* 2703 */
struct CMonster::MonsterCreateInfo
{
  Position m_Pos;
  unsigned int m_dwCID;
  unsigned int m_dwPID;
  int m_nKID;
  int m_nMovingPattern;
  bool m_bScout;
  unsigned __int16 m_wRespawnArea;
};

/* 2704 */
struct CStatue
{
  CMonster baseclass_0;
  unsigned int m_dwDuration;
  unsigned __int16 m_wBonusTurn;
  char m_cHPUpdateCount;
  unsigned int m_dwLastAttackedTime;
  CStatue *m_lpParent;
  CNPC *m_lpLinkNPC;
};

/* 2705 */
struct std::iterator<std::random_access_iterator_tag,CDummyCharacterList::EquipmentData,int,CDummyCharacterList::EquipmentData const *,CDummyCharacterList::EquipmentData const &>
{
  char dummy[1];
};

/* 2706 */
struct std::pair<enum CClass::JobType,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> > >
{
  CClass::JobType first;
  std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> > second;
};

/* 2707 */
struct std::allocator<CDummyCharacterList::EquipmentData>::rebind<CDummyCharacterList::EquipmentData>
{
  char dummy[1];
};

/* 2708 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> > >,int,std::pair<unsigned long const ,std::vector<CDummyCharacterList::Equipment
{
  char dummy[1];
};

/* 2709 */
struct std::_Bidit<std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> > >,int,std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacte
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> > >,int,std::pair<unsigned long const ,std::vector<CDummyCharacterList::Equipment baseclass_0;
};

/* 2710 */
struct std::_Ranit<CDummyCharacterList::EquipmentData,int,CDummyCharacterList::EquipmentData const *,CDummyCharacterList::EquipmentData const &>
{
  std::iterator<std::random_access_iterator_tag,CDummyCharacterList::EquipmentData,int,CDummyCharacterList::EquipmentData const *,CDummyCharacterList::EquipmentData const &> baseclass_0;
};

/* 2711 */
union $07A8844C9DF633C6BC17D5214EBAFFB2
{
  std::_Ranit<CDummyCharacterList::EquipmentData,int,CDummyCharacterList::EquipmentData const *,CDummyCharacterList::EquipmentData const &> baseclass_0;
  CDummyCharacterList::EquipmentData *_Myptr;
};

/* 2712 */
struct std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >::const_iterator
{
  $07A8844C9DF633C6BC17D5214EBAFFB2 ___u0;
};

/* 2713 */
struct std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >::iterator
{
  std::vector<CDummyCharacterList::EquipmentData,std::allocator<CDummyCharacterList::EquipmentData> >::const_iterator baseclass_0;
};

/* 2714 */
struct std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1>
{
  std::less<unsigned long> comp;
};

/* 2715 */
struct boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32
{
  char dummy[1];
};

/* 2716 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >
{
  std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32 _Alnod;
};

/* 2717 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node *_Right;
  std::pair<unsigned long const ,unsigned long> _Myval;
  char _Color;
  char _Isnil;
};

/* 2718 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 2719 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> > baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32 _Alptr;
};

/* 2720 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> > baseclass_0;
  boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 2721 */
struct std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2722 */
struct std::multimap<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> > baseclass_0;
};

/* 2723 */
union $5E88D8D029BDEB2EF9FEA866CB097C36
{
  std::_Bidit<std::pair<unsigned long const ,unsigned long>,int,std::pair<unsigned long const ,unsigned long> const *,std::pair<unsigned long const ,unsigned long> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node *_Ptr;
};

/* 2724 */
struct std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::const_iterator
{
  $5E88D8D029BDEB2EF9FEA866CB097C36 ___u0;
};

/* 2725 */
struct std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::const_iterator baseclass_0;
};

/* 2726 */
struct CChatPacket
{
  unsigned __int16 m_usCompressedSize;
  unsigned __int16 m_usPacketSize;
  char m_szPacketData[1024];
  char m_szCompressedPacket[1024];
};

/* 2727 */
struct CServerChatPacket
{
  unsigned int m_dwPacketSize;
  char m_szBuffer[8192];
};

/* 2728 */
struct CChatRequestPacket
{
  unsigned int m_dwPacketSize;
  char m_szBuffer[8192];
};

/* 2729 */
struct CCommunityListSend
{
  char m_szData[7100];
  bool m_bIsValid;
};

/* 2730 */
struct tagEMR
{
  unsigned int iType;
  unsigned int nSize;
};

/* 2731 */
struct _RECTL
{
  int left;
  int top;
  int right;
  int bottom;
};

/* 2732 */
struct _POINTL
{
  int x;
  int y;
};

/* 2733 */
struct tagEMRPOLYLINE
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cptl;
  _POINTL aptl[1];
};

/* 2734 */
struct tagXFORM
{
  float eM11;
  float eM12;
  float eM21;
  float eM22;
  float eDx;
  float eDy;
};

/* 2735 */
struct tagEMRTRANSPARENTBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int cxSrc;
  int cySrc;
};

/* 2736 */
struct _TAPE_SET_DRIVE_PARAMETERS
{
  char ECC;
  char Compression;
  char DataPadding;
  char ReportSetmarks;
  unsigned int EOTWarningZoneSize;
};

/* 2737 */
struct tagCBTACTIVATESTRUCT
{
  int fMouse;
  HWND__ *hWndActive;
};

/* 2738 */
struct _NETRESOURCEW
{
  unsigned int dwScope;
  unsigned int dwType;
  unsigned int dwDisplayType;
  unsigned int dwUsage;
  unsigned __int16 *lpLocalName;
  unsigned __int16 *lpRemoteName;
  unsigned __int16 *lpComment;
  unsigned __int16 *lpProvider;
};

/* 2739 */
struct _WSAVersion
{
  unsigned int dwVersion;
  _WSAEcomparator ecHow;
};

/* 2740 */
struct _AFPROTOCOLS
{
  int iAddressFamily;
  int iProtocol;
};

/* 2741 */
struct _SOCKET_ADDRESS
{
  sockaddr *lpSockaddr;
  int iSockaddrLength;
};

/* 2742 */
struct _CSADDR_INFO
{
  _SOCKET_ADDRESS LocalAddr;
  _SOCKET_ADDRESS RemoteAddr;
  int iSocketType;
  int iProtocol;
};

/* 2743 */
struct _WSAQuerySetA
{
  unsigned int dwSize;
  char *lpszServiceInstanceName;
  _GUID *lpServiceClassId;
  _WSAVersion *lpVersion;
  char *lpszComment;
  unsigned int dwNameSpace;
  _GUID *lpNSProviderId;
  char *lpszContext;
  unsigned int dwNumberOfProtocols;
  _AFPROTOCOLS *lpafpProtocols;
  char *lpszQueryString;
  unsigned int dwNumberOfCsAddrs;
  _CSADDR_INFO *lpcsaBuffer;
  unsigned int dwOutputFlags;
  _BLOB *lpBlob;
};

/* 2744 */
struct _QUERY_SERVICE_CONFIGA
{
  unsigned int dwServiceType;
  unsigned int dwStartType;
  unsigned int dwErrorControl;
  char *lpBinaryPathName;
  char *lpLoadOrderGroup;
  unsigned int dwTagId;
  char *lpDependencies;
  char *lpServiceStartName;
  char *lpDisplayName;
};

/* 2745 */
struct _TOKEN_PRIMARY_GROUP
{
  void *PrimaryGroup;
};

/* 2746 */
struct _PROCESS_HEAP_ENTRY::__unnamed::__unnamed
{
  void *hMem;
  unsigned int dwReserved[3];
};

/* 2747 */
union $671F41929D78FB12C2181EA6CF131C67
{
  _PROCESS_HEAP_ENTRY::__unnamed::__unnamed Block;
  _PROCESS_HEAP_ENTRY::__unnamed::__unnamed Region;
};

/* 2748 */
struct _PROCESS_HEAP_ENTRY
{
  void *lpData;
  unsigned int cbData;
  char cbOverhead;
  char iRegionIndex;
  unsigned __int16 wFlags;
  $671F41929D78FB12C2181EA6CF131C67 ___u5;
};

/* 2749 */
struct tagEMREOF
{
  tagEMR emr;
  unsigned int nPalEntries;
  unsigned int offPalEntries;
  unsigned int nSizeLast;
};

/* 2750 */
struct _SYMBOL_INFO_PACKAGE
{
  _SYMBOL_INFO si;
  char name[2001];
};

/* 2751 */
struct _SID_AND_ATTRIBUTES
{
  void *Sid;
  unsigned int Attributes;
};

/* 2752 */
struct _MEMORY_BASIC_INFORMATION64
{
  unsigned __int64 BaseAddress;
  unsigned __int64 AllocationBase;
  unsigned int AllocationProtect;
  unsigned int __alignment1;
  unsigned __int64 RegionSize;
  unsigned int State;
  unsigned int Protect;
  unsigned int Type;
  unsigned int __alignment2;
};

/* 2753 */
struct _PROCESSOR_POWER_POLICY_INFO
{
  unsigned int TimeCheck;
  unsigned int DemoteLimit;
  unsigned int PromoteLimit;
  char DemotePercent;
  char PromotePercent;
  char Spare[2];
  int _bf16;
};

/* 2754 */
struct _PROCESSOR_POWER_POLICY
{
  unsigned int Revision;
  char DynamicThrottle;
  char Spare[3];
  int _bf8;
  unsigned int PolicyCount;
  _PROCESSOR_POWER_POLICY_INFO Policy[3];
};

/* 2755 */
struct tagTOGGLEKEYS
{
  unsigned int cbSize;
  unsigned int dwFlags;
};

/* 2756 */
#pragma pack(push, 1)
struct tagBITMAPFILEHEADER
{
  unsigned __int16 bfType;
  unsigned int bfSize;
  unsigned __int16 bfReserved1;
  unsigned __int16 bfReserved2;
  unsigned int bfOffBits;
};
#pragma pack(pop)

/* 2757 */
struct _MINIDUMP_STRING
{
  unsigned int Length;
  unsigned __int16 Buffer[];
};

/* 2758 */
struct tagEMRARC
{
  tagEMR emr;
  _RECTL rclBox;
  _POINTL ptlStart;
  _POINTL ptlEnd;
};

/* 2759 */
struct tagNMHDR
{
  HWND__ *hwndFrom;
  unsigned int idFrom;
  unsigned int code;
};

/* 2760 */
struct tagLOGFONTW
{
  int lfHeight;
  int lfWidth;
  int lfEscapement;
  int lfOrientation;
  int lfWeight;
  char lfItalic;
  char lfUnderline;
  char lfStrikeOut;
  char lfCharSet;
  char lfOutPrecision;
  char lfClipPrecision;
  char lfQuality;
  char lfPitchAndFamily;
  unsigned __int16 lfFaceName[32];
};

/* 2761 */
struct tagICONMETRICSW
{
  unsigned int cbSize;
  int iHorzSpacing;
  int iVertSpacing;
  int iTitleWrap;
  tagLOGFONTW lfFont;
};

/* 2762 */
struct _currencyfmtA
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  char *lpDecimalSep;
  char *lpThousandSep;
  unsigned int NegativeOrder;
  unsigned int PositiveOrder;
  char *lpCurrencySymbol;
};

/* 2763 */
struct val_context
{
  int valuelen;
  void *value_context;
  void *val_buff_ptr;
};

/* 2764 */
struct _ACTIVATION_CONTEXT_QUERY_INDEX
{
  unsigned int ulAssemblyIndex;
  unsigned int ulFileIndexInAssembly;
};

/* 2765 */
union $726A17CE83E57534AEAE47CF2E04B483
{
  unsigned int Reserved;
  unsigned int TimeDateStamp;
};

/* 2766 */
struct _MINIDUMP_HEADER
{
  unsigned int Signature;
  unsigned int Version;
  unsigned int NumberOfStreams;
  unsigned int StreamDirectoryRva;
  unsigned int CheckSum;
  $726A17CE83E57534AEAE47CF2E04B483 ___u5;
  unsigned __int64 Flags;
};

/* 2767 */
struct _OSVERSIONINFOEXW
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  unsigned __int16 szCSDVersion[128];
  unsigned __int16 wServicePackMajor;
  unsigned __int16 wServicePackMinor;
  unsigned __int16 wSuiteMask;
  char wProductType;
  char wReserved;
};

/* 2768 */
struct _DCB
{
  unsigned int DCBlength;
  unsigned int BaudRate;
  int _bf8;
  unsigned __int16 wReserved;
  unsigned __int16 XonLim;
  unsigned __int16 XoffLim;
  char ByteSize;
  char Parity;
  char StopBits;
  char XonChar;
  char XoffChar;
  char ErrorChar;
  char EofChar;
  char EvtChar;
  unsigned __int16 wReserved1;
};

/* 2769 */
struct _COMMCONFIG
{
  unsigned int dwSize;
  unsigned __int16 wVersion;
  unsigned __int16 wReserved;
  _DCB dcb;
  unsigned int dwProviderSubType;
  unsigned int dwProviderOffset;
  unsigned int dwProviderSize;
  unsigned __int16 wcProviderData[1];
};

/* 2770 */
struct tagPALETTEENTRY
{
  char peRed;
  char peGreen;
  char peBlue;
  char peFlags;
};

/* 2771 */
struct tagPANOSE
{
  char bFamilyType;
  char bSerifStyle;
  char bWeight;
  char bProportion;
  char bContrast;
  char bStrokeVariation;
  char bArmStyle;
  char bLetterform;
  char bMidline;
  char bXHeight;
};

/* 2772 */
struct tagEXTLOGFONTW
{
  tagLOGFONTW elfLogFont;
  unsigned __int16 elfFullName[64];
  unsigned __int16 elfStyle[32];
  unsigned int elfVersion;
  unsigned int elfStyleSize;
  unsigned int elfMatch;
  unsigned int elfReserved;
  char elfVendorId[4];
  unsigned int elfCulture;
  tagPANOSE elfPanose;
};

/* 2773 */
struct tagEMREXTCREATEFONTINDIRECTW
{
  tagEMR emr;
  unsigned int ihFont;
  tagEXTLOGFONTW elfw;
};

/* 2774 */
struct _SID_IDENTIFIER_AUTHORITY
{
  char Value[6];
};

/* 2775 */
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR
{
  unsigned int TimeDateStamp;
  unsigned __int16 OffsetModuleName;
  unsigned __int16 NumberOfModuleForwarderRefs;
};

/* 2776 */
struct tagEMROFFSETCLIPRGN
{
  tagEMR emr;
  _POINTL ptlOffset;
};

/* 2777 */
struct tagSCROLLINFO
{
  unsigned int cbSize;
  unsigned int fMask;
  int nMin;
  int nMax;
  unsigned int nPage;
  int nPos;
  int nTrackPos;
};

/* 2778 */
struct tagREGISTERWORDW
{
  unsigned __int16 *lpReading;
  unsigned __int16 *lpWord;
};

/* 2779 */
struct _LUID
{
  unsigned int LowPart;
  int HighPart;
};

/* 2780 */
struct _LUID_AND_ATTRIBUTES
{
  _LUID Luid;
  unsigned int Attributes;
};

/* 2781 */
struct tagRECT
{
  int left;
  int top;
  int right;
  int bottom;
};

/* 2782 */
struct tagPOLYTEXTA
{
  int x;
  int y;
  unsigned int n;
  const char *lpstr;
  unsigned int uiFlags;
  tagRECT rcl;
  int *pdx;
};

/* 2783 */
struct tagEMRSELECTOBJECT
{
  tagEMR emr;
  unsigned int ihObject;
};

/* 2784 */
struct tagEMRPOLYDRAW
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cptl;
  _POINTL aptl[1];
  char abTypes[1];
};

/* 2785 */
struct tagCOPYDATASTRUCT
{
  unsigned int dwData;
  unsigned int cbData;
  void *lpData;
};

/* 2786 */
struct tagREGISTERWORDA
{
  char *lpReading;
  char *lpWord;
};

/* 2787 */
struct _IMAGE_FILE_HEADER
{
  unsigned __int16 Machine;
  unsigned __int16 NumberOfSections;
  unsigned int TimeDateStamp;
  unsigned int PointerToSymbolTable;
  unsigned int NumberOfSymbols;
  unsigned __int16 SizeOfOptionalHeader;
  unsigned __int16 Characteristics;
};

/* 2788 */
struct _IMAGE_DATA_DIRECTORY
{
  unsigned int VirtualAddress;
  unsigned int Size;
};

/* 2789 */
struct _IMAGE_OPTIONAL_HEADER
{
  unsigned __int16 Magic;
  char MajorLinkerVersion;
  char MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned int BaseOfData;
  unsigned int ImageBase;
  unsigned int SectionAlignment;
  unsigned int FileAlignment;
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
  unsigned __int16 MajorImageVersion;
  unsigned __int16 MinorImageVersion;
  unsigned __int16 MajorSubsystemVersion;
  unsigned __int16 MinorSubsystemVersion;
  unsigned int Win32VersionValue;
  unsigned int SizeOfImage;
  unsigned int SizeOfHeaders;
  unsigned int CheckSum;
  unsigned __int16 Subsystem;
  unsigned __int16 DllCharacteristics;
  unsigned int SizeOfStackReserve;
  unsigned int SizeOfStackCommit;
  unsigned int SizeOfHeapReserve;
  unsigned int SizeOfHeapCommit;
  unsigned int LoaderFlags;
  unsigned int NumberOfRvaAndSizes;
  _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/* 2790 */
struct _IMAGE_NT_HEADERS
{
  unsigned int Signature;
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_OPTIONAL_HEADER OptionalHeader;
};

/* 2791 */
union $22971E98F1DCAE471B592EC18ECB1551
{
  unsigned int PhysicalAddress;
  unsigned int VirtualSize;
};

/* 2792 */
struct _IMAGE_SECTION_HEADER
{
  char Name[8];
  $22971E98F1DCAE471B592EC18ECB1551 Misc;
  unsigned int VirtualAddress;
  unsigned int SizeOfRawData;
  unsigned int PointerToRawData;
  unsigned int PointerToRelocations;
  unsigned int PointerToLinenumbers;
  unsigned __int16 NumberOfRelocations;
  unsigned __int16 NumberOfLinenumbers;
  unsigned int Characteristics;
};

/* 2793 */
struct _LOADED_IMAGE
{
  char *ModuleName;
  void *hFile;
  char *MappedAddress;
  _IMAGE_NT_HEADERS *FileHeader;
  _IMAGE_SECTION_HEADER *LastRvaSection;
  unsigned int NumberOfSections;
  _IMAGE_SECTION_HEADER *Sections;
  unsigned int Characteristics;
  char fSystemImage;
  char fDOSImage;
  _LIST_ENTRY Links;
  unsigned int SizeOfImage;
};

/* 2794 */
struct _IMAGE_BOUND_FORWARDER_REF
{
  unsigned int TimeDateStamp;
  unsigned __int16 OffsetModuleName;
  unsigned __int16 Reserved;
};

/* 2795 */
struct tagPOINT
{
  int x;
  int y;
};

/* 2796 */
struct tagMINMAXINFO
{
  tagPOINT ptReserved;
  tagPOINT ptMaxSize;
  tagPOINT ptMaxPosition;
  tagPOINT ptMinTrackSize;
  tagPOINT ptMaxTrackSize;
};

/* 2797 */
struct _SERVICE_TABLE_ENTRYW
{
  unsigned __int16 *lpServiceName;
  void (__stdcall *lpServiceProc)(unsigned int, unsigned __int16 **);
};

/* 2798 */
struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION
{
  unsigned int EndOfJobTimeAction;
};

/* 2799 */
struct tagDEBUGHOOKINFO
{
  unsigned int idThread;
  unsigned int idThreadInstaller;
  int lParam;
  unsigned int wParam;
  int code;
};

/* 2800 */
struct tagWINDOWINFO
{
  unsigned int cbSize;
  tagRECT rcWindow;
  tagRECT rcClient;
  unsigned int dwStyle;
  unsigned int dwExStyle;
  unsigned int dwWindowStatus;
  unsigned int cxWindowBorders;
  unsigned int cyWindowBorders;
  unsigned __int16 atomWindowType;
  unsigned __int16 wCreatorVersion;
};

/* 2801 */
struct _IMAGEHLP_MODULE64
{
  unsigned int SizeOfStruct;
  unsigned __int64 BaseOfImage;
  unsigned int ImageSize;
  unsigned int TimeDateStamp;
  unsigned int CheckSum;
  unsigned int NumSyms;
  SYM_TYPE SymType;
  char ModuleName[32];
  char ImageName[256];
  char LoadedImageName[256];
};

/* 2802 */
struct tagRGBTRIPLE
{
  char rgbtBlue;
  char rgbtGreen;
  char rgbtRed;
};

/* 2803 */
struct tagEMRSELECTCLIPPATH
{
  tagEMR emr;
  unsigned int iMode;
};

/* 2804 */
struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD
{
  unsigned int SizeOfStruct;
  unsigned int BaseOfImage;
  unsigned int CheckSum;
  unsigned int TimeDateStamp;
  char FileName[260];
  char Reparse;
  void *hFile;
};

/* 2805 */
struct _COMSTAT
{
  int _bf0;
  unsigned int cbInQue;
  unsigned int cbOutQue;
};

/* 2806 */
#pragma pack(push, 1)
struct DLGITEMTEMPLATE
{
  unsigned int style;
  unsigned int dwExtendedStyle;
  __int16 x;
  __int16 y;
  __int16 cx;
  __int16 cy;
  unsigned __int16 id;
};
#pragma pack(pop)

/* 2807 */
struct _TOKEN_SOURCE
{
  char SourceName[8];
  _LUID SourceIdentifier;
};

/* 2808 */
struct _TOKEN_CONTROL
{
  _LUID TokenId;
  _LUID AuthenticationId;
  _LUID ModifiedId;
  _TOKEN_SOURCE TokenSource;
};

/* 2809 */
struct _DISPLAY_DEVICEW
{
  unsigned int cb;
  unsigned __int16 DeviceName[32];
  unsigned __int16 DeviceString[128];
  unsigned int StateFlags;
  unsigned __int16 DeviceID[128];
  unsigned __int16 DeviceKey[128];
};

/* 2810 */
struct tagABORTPATH
{
  tagEMR emr;
};

/* 2811 */
struct _COORD
{
  __int16 X;
  __int16 Y;
};

/* 2812 */
struct _SMALL_RECT
{
  __int16 Left;
  __int16 Top;
  __int16 Right;
  __int16 Bottom;
};

/* 2813 */
struct _CONSOLE_SCREEN_BUFFER_INFO
{
  _COORD dwSize;
  _COORD dwCursorPosition;
  unsigned __int16 wAttributes;
  _SMALL_RECT srWindow;
  _COORD dwMaximumWindowSize;
};

/* 2814 */
struct tagCOLORCORRECTPALETTE
{
  tagEMR emr;
  unsigned int ihPalette;
  unsigned int nFirstEntry;
  unsigned int nPalEntries;
  unsigned int nReserved;
};

/* 2815 */
struct HMENU__
{
  int unused;
};

/* 2816 */
struct tagCREATESTRUCTA
{
  void *lpCreateParams;
  HINSTANCE__ *hInstance;
  HMENU__ *hMenu;
  HWND__ *hwndParent;
  int cy;
  int cx;
  int y;
  int x;
  int style;
  const char *lpszName;
  const char *lpszClass;
  unsigned int dwExStyle;
};

/* 2817 */
struct tagMINIMIZEDMETRICS
{
  unsigned int cbSize;
  int iWidth;
  int iHorzGap;
  int iVertGap;
  int iArrange;
};

/* 2818 */
struct _TypeDescriptor
{
  const void *pVFTable;
  void *spare;
  char name[];
};

/* 2819 */
struct _PMD
{
  int mdisp;
  int pdisp;
  int vdisp;
};

/* 2820 */
struct _s__CatchableType
{
  unsigned int properties;
  _TypeDescriptor *pType;
  _PMD thisDisplacement;
  int sizeOrOffset;
  void (__cdecl *copyFunction)();
};

/* 2821 */
struct _s__CatchableTypeArray
{
  int nCatchableTypes;
  _s__CatchableType *arrayOfCatchableTypes[];
};

/* 2822 */
struct tagCIEXYZ
{
  int ciexyzX;
  int ciexyzY;
  int ciexyzZ;
};

/* 2823 */
struct tagICEXYZTRIPLE
{
  tagCIEXYZ ciexyzRed;
  tagCIEXYZ ciexyzGreen;
  tagCIEXYZ ciexyzBlue;
};

/* 2824 */
struct tagLOGCOLORSPACEW
{
  unsigned int lcsSignature;
  unsigned int lcsVersion;
  unsigned int lcsSize;
  int lcsCSType;
  int lcsIntent;
  tagICEXYZTRIPLE lcsEndpoints;
  unsigned int lcsGammaRed;
  unsigned int lcsGammaGreen;
  unsigned int lcsGammaBlue;
  unsigned __int16 lcsFilename[260];
};

/* 2825 */
struct tagEMRCREATECOLORSPACEW
{
  tagEMR emr;
  unsigned int ihCS;
  tagLOGCOLORSPACEW lcs;
  unsigned int dwFlags;
  unsigned int cbData;
  char Data[1];
};

/* 2826 */
struct tagEMRFILLRGN
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cbRgnData;
  unsigned int ihBrush;
  char RgnData[1];
};

/* 2827 */
struct tagMULTIKEYHELPW
{
  unsigned int mkSize;
  unsigned __int16 mkKeylist;
  unsigned __int16 szKeyphrase[1];
};

/* 2828 */
struct tagHELPWININFOA
{
  int wStructSize;
  int x;
  int y;
  int dx;
  int dy;
  int wMax;
  char rgchMember[2];
};

/* 2829 */
struct tagSIZE
{
  int cx;
  int cy;
};

/* 2830 */
struct tagEMRFRAMERGN
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cbRgnData;
  unsigned int ihBrush;
  tagSIZE szlStroke;
  char RgnData[1];
};

/* 2831 */
struct tagMEASUREITEMSTRUCT
{
  unsigned int CtlType;
  unsigned int CtlID;
  unsigned int itemID;
  unsigned int itemWidth;
  unsigned int itemHeight;
  unsigned int itemData;
};

/* 2832 */
struct _CREATE_PROCESS_DEBUG_INFO
{
  void *hFile;
  void *hProcess;
  void *hThread;
  void *lpBaseOfImage;
  unsigned int dwDebugInfoFileOffset;
  unsigned int nDebugInfoSize;
  void *lpThreadLocalBase;
  unsigned int (__stdcall *lpStartAddress)(void *);
  void *lpImageName;
  unsigned __int16 fUnicode;
};

/* 2833 */
struct _IMAGEHLP_MODULEW
{
  unsigned int SizeOfStruct;
  unsigned int BaseOfImage;
  unsigned int ImageSize;
  unsigned int TimeDateStamp;
  unsigned int CheckSum;
  unsigned int NumSyms;
  SYM_TYPE SymType;
  unsigned __int16 ModuleName[32];
  unsigned __int16 ImageName[256];
  unsigned __int16 LoadedImageName[256];
};

/* 2834 */
struct _ACE_HEADER
{
  char AceType;
  char AceFlags;
  unsigned __int16 AceSize;
};

/* 2835 */
struct HGLRC__
{
  int unused;
};

/* 2836 */
struct tagEMREXCLUDECLIPRECT
{
  tagEMR emr;
  _RECTL rclClip;
};

/* 2837 */
struct tagEMRPOLYPOLYLINE
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int nPolys;
  unsigned int cptl;
  unsigned int aPolyCounts[1];
  _POINTL aptl[1];
};

/* 2838 */
struct tagUSEROBJECTFLAGS
{
  int fInherit;
  int fReserved;
  unsigned int dwFlags;
};

/* 2839 */
struct fd_set
{
  unsigned int fd_count;
  unsigned int fd_array[64];
};

/* 2840 */
struct _NON_PAGED_DEBUG_INFO
{
  unsigned __int16 Signature;
  unsigned __int16 Flags;
  unsigned int Size;
  unsigned __int16 Machine;
  unsigned __int16 Characteristics;
  unsigned int TimeDateStamp;
  unsigned int CheckSum;
  unsigned int SizeOfImage;
  unsigned __int64 ImageBase;
};

/* 2841 */
struct HRGN__
{
  int unused;
};

/* 2842 */
struct _JOBOBJECT_JOBSET_INFORMATION
{
  unsigned int MemberLevel;
};

/* 2843 */
struct CM_Power_Data_s
{
  unsigned int PD_Size;
  _DEVICE_POWER_STATE PD_MostRecentPowerState;
  unsigned int PD_Capabilities;
  unsigned int PD_D1Latency;
  unsigned int PD_D2Latency;
  unsigned int PD_D3Latency;
  _DEVICE_POWER_STATE PD_PowerStateMapping[7];
  _SYSTEM_POWER_STATE PD_DeepestSystemWake;
};

/* 2844 */
struct BITMAPV5HEADER
{
  unsigned int bV5Size;
  int bV5Width;
  int bV5Height;
  unsigned __int16 bV5Planes;
  unsigned __int16 bV5BitCount;
  unsigned int bV5Compression;
  unsigned int bV5SizeImage;
  int bV5XPelsPerMeter;
  int bV5YPelsPerMeter;
  unsigned int bV5ClrUsed;
  unsigned int bV5ClrImportant;
  unsigned int bV5RedMask;
  unsigned int bV5GreenMask;
  unsigned int bV5BlueMask;
  unsigned int bV5AlphaMask;
  unsigned int bV5CSType;
  tagICEXYZTRIPLE bV5Endpoints;
  unsigned int bV5GammaRed;
  unsigned int bV5GammaGreen;
  unsigned int bV5GammaBlue;
  unsigned int bV5Intent;
  unsigned int bV5ProfileData;
  unsigned int bV5ProfileSize;
  unsigned int bV5Reserved;
};

/* 2845 */
struct tagANIMATIONINFO
{
  unsigned int cbSize;
  int iMinAnimate;
};

/* 2846 */
struct _MINIDUMP_HANDLE_DATA_STREAM
{
  unsigned int SizeOfHeader;
  unsigned int SizeOfDescriptor;
  unsigned int NumberOfDescriptors;
  unsigned int Reserved;
};

/* 2847 */
struct _VIDEOPARAMETERS
{
  _GUID Guid;
  unsigned int dwOffset;
  unsigned int dwCommand;
  unsigned int dwFlags;
  unsigned int dwMode;
  unsigned int dwTVStandard;
  unsigned int dwAvailableModes;
  unsigned int dwAvailableTVStandard;
  unsigned int dwFlickerFilter;
  unsigned int dwOverScanX;
  unsigned int dwOverScanY;
  unsigned int dwMaxUnscaledX;
  unsigned int dwMaxUnscaledY;
  unsigned int dwPositionX;
  unsigned int dwPositionY;
  unsigned int dwBrightness;
  unsigned int dwContrast;
  unsigned int dwCPType;
  unsigned int dwCPCommand;
  unsigned int dwCPStandard;
  unsigned int dwCPKey;
  unsigned int bCP_APSTriggerBits;
  char bOEMCopyProtection[256];
};

/* 2848 */
struct tagBITMAPCOREHEADER
{
  unsigned int bcSize;
  unsigned __int16 bcWidth;
  unsigned __int16 bcHeight;
  unsigned __int16 bcPlanes;
  unsigned __int16 bcBitCount;
};

/* 2849 */
struct tagBITMAPCOREINFO
{
  tagBITMAPCOREHEADER bmciHeader;
  tagRGBTRIPLE bmciColors[1];
};

/* 2850 */
struct tagPIXELFORMATDESCRIPTOR
{
  unsigned __int16 nSize;
  unsigned __int16 nVersion;
  unsigned int dwFlags;
  char iPixelType;
  char cColorBits;
  char cRedBits;
  char cRedShift;
  char cGreenBits;
  char cGreenShift;
  char cBlueBits;
  char cBlueShift;
  char cAlphaBits;
  char cAlphaShift;
  char cAccumBits;
  char cAccumRedBits;
  char cAccumGreenBits;
  char cAccumBlueBits;
  char cAccumAlphaBits;
  char cDepthBits;
  char cStencilBits;
  char cAuxBuffers;
  char iLayerType;
  char bReserved;
  unsigned int dwLayerMask;
  unsigned int dwVisibleMask;
  unsigned int dwDamageMask;
};

/* 2851 */
struct tagEMRFILLPATH
{
  tagEMR emr;
  _RECTL rclBounds;
};

/* 2852 */
struct _WSAPROTOCOLCHAIN
{
  int ChainLen;
  unsigned int ChainEntries[7];
};

/* 2853 */
struct _WSAPROTOCOL_INFOA
{
  unsigned int dwServiceFlags1;
  unsigned int dwServiceFlags2;
  unsigned int dwServiceFlags3;
  unsigned int dwServiceFlags4;
  unsigned int dwProviderFlags;
  _GUID ProviderId;
  unsigned int dwCatalogEntryId;
  _WSAPROTOCOLCHAIN ProtocolChain;
  int iVersion;
  int iAddressFamily;
  int iMaxSockAddr;
  int iMinSockAddr;
  int iSocketType;
  int iProtocol;
  int iProtocolMaxOffset;
  int iNetworkByteOrder;
  int iSecurityScheme;
  unsigned int dwMessageSize;
  unsigned int dwProviderReserved;
  char szProtocol[256];
};

/* 2854 */
struct _MINIDUMP_EXCEPTION
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  unsigned __int64 ExceptionRecord;
  unsigned __int64 ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int __unusedAlignment;
  unsigned __int64 ExceptionInformation[15];
};

/* 2855 */
struct _MINIDUMP_LOCATION_DESCRIPTOR
{
  unsigned int DataSize;
  unsigned int Rva;
};

/* 2856 */
struct MINIDUMP_EXCEPTION_STREAM
{
  unsigned int ThreadId;
  unsigned int __alignment;
  _MINIDUMP_EXCEPTION ExceptionRecord;
  _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext;
};

/* 2857 */
struct _FLOAT128
{
  __int64 LowPart;
  __int64 HighPart;
};

/* 2858 */
struct _LDT_ENTRY::__unnamed::__unnamed
{
  char BaseMid;
  char Flags1;
  char Flags2;
  char BaseHi;
};

/* 2859 */
union _LDT_ENTRY::__unnamed
{
  _LDT_ENTRY::__unnamed::__unnamed Bytes;
  _LDT_ENTRY::__unnamed::__unnamed Bits;
};

/* 2860 */
struct _LDT_ENTRY
{
  unsigned __int16 LimitLow;
  unsigned __int16 BaseLow;
  _LDT_ENTRY::__unnamed HighWord;
};

/* 2861 */
struct _JOBOBJECT_BASIC_LIMIT_INFORMATION
{
  _LARGE_INTEGER PerProcessUserTimeLimit;
  _LARGE_INTEGER PerJobUserTimeLimit;
  unsigned int LimitFlags;
  unsigned int MinimumWorkingSetSize;
  unsigned int MaximumWorkingSetSize;
  unsigned int ActiveProcessLimit;
  unsigned int Affinity;
  unsigned int PriorityClass;
  unsigned int SchedulingClass;
};

/* 2862 */
#pragma pack(push, 1)
struct tagMETAHEADER
{
  unsigned __int16 mtType;
  unsigned __int16 mtHeaderSize;
  unsigned __int16 mtVersion;
  unsigned int mtSize;
  unsigned __int16 mtNoObjects;
  unsigned int mtMaxRecord;
  unsigned __int16 mtNoParameters;
};
#pragma pack(pop)

/* 2863 */
struct tagWNDCLASSEXA
{
  unsigned int cbSize;
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const char *lpszMenuName;
  const char *lpszClassName;
  HICON__ *hIconSm;
};

/* 2864 */
struct HKL__
{
  int unused;
};

/* 2865 */
struct tagLOGFONTA
{
  int lfHeight;
  int lfWidth;
  int lfEscapement;
  int lfOrientation;
  int lfWeight;
  char lfItalic;
  char lfUnderline;
  char lfStrikeOut;
  char lfCharSet;
  char lfOutPrecision;
  char lfClipPrecision;
  char lfQuality;
  char lfPitchAndFamily;
  char lfFaceName[32];
};

/* 2866 */
struct tagCWPRETSTRUCT
{
  int lResult;
  int lParam;
  unsigned int wParam;
  unsigned int message;
  HWND__ *hwnd;
};

/* 2867 */
struct HIMCC__
{
  int unused;
};

/* 2868 */
struct _MEMORY_BASIC_INFORMATION32
{
  unsigned int BaseAddress;
  unsigned int AllocationBase;
  unsigned int AllocationProtect;
  unsigned int RegionSize;
  unsigned int State;
  unsigned int Protect;
  unsigned int Type;
};

/* 2869 */
struct tagENHMETARECORD
{
  unsigned int iType;
  unsigned int nSize;
  unsigned int dParm[1];
};

/* 2870 */
struct tagTEXTMETRICA
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  char tmFirstChar;
  char tmLastChar;
  char tmDefaultChar;
  char tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
};

/* 2871 */
struct _MINIDUMP_FUNCTION_TABLE_DESCRIPTOR
{
  unsigned __int64 MinimumAddress;
  unsigned __int64 MaximumAddress;
  unsigned __int64 BaseAddress;
  unsigned int EntryCount;
  unsigned int SizeOfAlignPad;
};

/* 2872 */
struct HWINSTA__
{
  int unused;
};

/* 2873 */
struct _OFSTRUCT
{
  char cBytes;
  char fFixedDisk;
  unsigned __int16 nErrCode;
  unsigned __int16 Reserved1;
  unsigned __int16 Reserved2;
  char szPathName[128];
};

/* 2874 */
struct _FIXED
{
  unsigned __int16 fract;
  __int16 value;
};

/* 2875 */
struct _MAT2
{
  _FIXED eM11;
  _FIXED eM12;
  _FIXED eM21;
  _FIXED eM22;
};

/* 2876 */
struct tagEMRNAMEDESCAPE
{
  tagEMR emr;
  int iEscape;
  int cbDriver;
  int cbEscData;
  char EscData[1];
};

/* 2877 */
struct tagHELPINFO
{
  unsigned int cbSize;
  int iContextType;
  int iCtrlId;
  void *hItemHandle;
  unsigned int dwContextId;
  tagPOINT MousePos;
};

/* 2878 */
struct tagMSGBOXPARAMSA
{
  unsigned int cbSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const char *lpszText;
  const char *lpszCaption;
  unsigned int dwStyle;
  const char *lpszIcon;
  unsigned int dwContextHelpId;
  void (__stdcall *lpfnMsgBoxCallback)(tagHELPINFO *);
  unsigned int dwLanguageId;
};

/* 2879 */
struct tagCLIENTCREATESTRUCT
{
  void *hWindowMenu;
  unsigned int idFirstChild;
};

/* 2880 */
struct _IMAGEHLP_SYMBOL64
{
  unsigned int SizeOfStruct;
  unsigned __int64 Address;
  unsigned int Size;
  unsigned int Flags;
  unsigned int MaxNameLength;
  char Name[1];
};

/* 2881 */
struct _OUTPUT_DEBUG_STRING_INFO
{
  char *lpDebugStringData;
  unsigned __int16 fUnicode;
  unsigned __int16 nDebugStringLength;
};

/* 2882 */
struct tagEVENTMSG
{
  unsigned int message;
  unsigned int paramL;
  unsigned int paramH;
  unsigned int time;
  HWND__ *hwnd;
};

/* 2883 */
struct _UNIVERSAL_NAME_INFOA
{
  char *lpUniversalName;
};

/* 2884 */
struct _IMAGE_OPTIONAL_HEADER64
{
  unsigned __int16 Magic;
  char MajorLinkerVersion;
  char MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned __int64 ImageBase;
  unsigned int SectionAlignment;
  unsigned int FileAlignment;
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
  unsigned __int16 MajorImageVersion;
  unsigned __int16 MinorImageVersion;
  unsigned __int16 MajorSubsystemVersion;
  unsigned __int16 MinorSubsystemVersion;
  unsigned int Win32VersionValue;
  unsigned int SizeOfImage;
  unsigned int SizeOfHeaders;
  unsigned int CheckSum;
  unsigned __int16 Subsystem;
  unsigned __int16 DllCharacteristics;
  unsigned __int64 SizeOfStackReserve;
  unsigned __int64 SizeOfStackCommit;
  unsigned __int64 SizeOfHeapReserve;
  unsigned __int64 SizeOfHeapCommit;
  unsigned int LoaderFlags;
  unsigned int NumberOfRvaAndSizes;
  _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/* 2885 */
struct tagEMRSETVIEWPORTEXTEX
{
  tagEMR emr;
  tagSIZE szlExtent;
};

/* 2886 */
struct tagCOMBOBOXINFO
{
  unsigned int cbSize;
  tagRECT rcItem;
  tagRECT rcButton;
  unsigned int stateButton;
  HWND__ *hwndCombo;
  HWND__ *hwndItem;
  HWND__ *hwndList;
};

/* 2887 */
const struct _s__RTTIBaseClassDescriptor
{
  _TypeDescriptor *pTypeDescriptor;
  unsigned int numContainedBases;
  _PMD where;
  unsigned int attributes;
};

/* 2888 */
const struct _s__RTTIBaseClassArray
{
  _s__RTTIBaseClassDescriptor *arrayOfBaseClassDescriptors[];
  _BYTE gap0[1];
};

/* 2889 */
struct _s__RTTIClassHierarchyDescriptor
{
  unsigned int signature;
  unsigned int attributes;
  unsigned int numBaseClasses;
  _s__RTTIBaseClassArray *pBaseClassArray;
};

/* 2890 */
struct _s__RTTICompleteObjectLocator
{
  unsigned int signature;
  unsigned int offset;
  unsigned int cdOffset;
  _TypeDescriptor *pTypeDescriptor;
  _s__RTTIClassHierarchyDescriptor *pClassDescriptor;
};

/* 2891 */
struct _IMAGE_AUX_SYMBOL::__unnamed::__unnamed::__unnamed
{
  unsigned __int16 Linenumber;
  unsigned __int16 Size;
};

/* 2892 */
union _IMAGE_AUX_SYMBOL::__unnamed::__unnamed
{
  _IMAGE_AUX_SYMBOL::__unnamed::__unnamed::__unnamed LnSz;
  unsigned int TotalSize;
};

/* 2893 */
#pragma pack(push, 1)
struct _IMAGE_AUX_SYMBOL::__unnamed
{
  unsigned int TagIndex;
  _IMAGE_AUX_SYMBOL::__unnamed::__unnamed Misc;
  _IMAGE_AUX_SYMBOL::__unnamed::__unnamed FcnAry;
  __declspec(align(8)) unsigned __int16 TvIndex;
};
#pragma pack(pop)

/* 2894 */
union _IMAGE_AUX_SYMBOL
{
  _IMAGE_AUX_SYMBOL::__unnamed Sym;
  _IMAGE_AUX_SYMBOL::__unnamed File;
  _IMAGE_AUX_SYMBOL::__unnamed Section;
};

/* 2895 */
struct _BY_HANDLE_FILE_INFORMATION
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int dwVolumeSerialNumber;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
  unsigned int nNumberOfLinks;
  unsigned int nFileIndexHigh;
  unsigned int nFileIndexLow;
};

/* 2896 */
struct _STARTUPINFOA
{
  unsigned int cb;
  char *lpReserved;
  char *lpDesktop;
  char *lpTitle;
  unsigned int dwX;
  unsigned int dwY;
  unsigned int dwXSize;
  unsigned int dwYSize;
  unsigned int dwXCountChars;
  unsigned int dwYCountChars;
  unsigned int dwFillAttribute;
  unsigned int dwFlags;
  unsigned __int16 wShowWindow;
  unsigned __int16 cbReserved2;
  char *lpReserved2;
  void *hStdInput;
  void *hStdOutput;
  void *hStdError;
};

/* 2897 */
struct _EVENTLOGRECORD
{
  unsigned int Length;
  unsigned int Reserved;
  unsigned int RecordNumber;
  unsigned int TimeGenerated;
  unsigned int TimeWritten;
  unsigned int EventID;
  unsigned __int16 EventType;
  unsigned __int16 NumStrings;
  unsigned __int16 EventCategory;
  unsigned __int16 ReservedFlags;
  unsigned int ClosingRecordNumber;
  unsigned int StringOffset;
  unsigned int UserSidLength;
  unsigned int UserSidOffset;
  unsigned int DataLength;
  unsigned int DataOffset;
};

/* 2898 */
struct tagSTYLESTRUCT
{
  unsigned int styleOld;
  unsigned int styleNew;
};

/* 2899 */
struct _cpinfoexA
{
  unsigned int MaxCharSize;
  char DefaultChar[2];
  char LeadByte[12];
  unsigned __int16 UnicodeDefaultChar;
  unsigned int CodePage;
  char CodePageName[260];
};

/* 2900 */
struct _MINIDUMP_MEMORY_DESCRIPTOR
{
  unsigned __int64 StartOfMemoryRange;
  _MINIDUMP_LOCATION_DESCRIPTOR Memory;
};

/* 2901 */
struct HMONITOR__
{
  int unused;
};

/* 2902 */
struct tagEMRMODIFYWORLDTRANSFORM
{
  tagEMR emr;
  tagXFORM xform;
  unsigned int iMode;
};

/* 2903 */
struct tagEXTLOGFONTA
{
  tagLOGFONTA elfLogFont;
  char elfFullName[64];
  char elfStyle[32];
  unsigned int elfVersion;
  unsigned int elfStyleSize;
  unsigned int elfMatch;
  unsigned int elfReserved;
  char elfVendorId[4];
  unsigned int elfCulture;
  tagPANOSE elfPanose;
};

/* 2904 */
struct HBITMAP__
{
  int unused;
};

/* 2905 */
struct tagMENUITEMINFOA
{
  unsigned int cbSize;
  unsigned int fMask;
  unsigned int fType;
  unsigned int fState;
  unsigned int wID;
  HMENU__ *hSubMenu;
  HBITMAP__ *hbmpChecked;
  HBITMAP__ *hbmpUnchecked;
  unsigned int dwItemData;
  char *dwTypeData;
  unsigned int cch;
  HBITMAP__ *hbmpItem;
};

/* 2906 */
struct _IMAGE_FUNCTION_ENTRY
{
  unsigned int StartingAddress;
  unsigned int EndingAddress;
  unsigned int EndOfPrologue;
};

/* 2907 */
struct _FPO_DATA
{
  unsigned int ulOffStart;
  unsigned int cbProcSize;
  unsigned int cdwLocals;
  unsigned __int16 cdwParams;
  __int16 _bf14;
};

/* 2908 */
struct _IMAGE_COFF_SYMBOLS_HEADER
{
  unsigned int NumberOfSymbols;
  unsigned int LvaToFirstSymbol;
  unsigned int NumberOfLinenumbers;
  unsigned int LvaToFirstLinenumber;
  unsigned int RvaToFirstByteOfCode;
  unsigned int RvaToLastByteOfCode;
  unsigned int RvaToFirstByteOfData;
  unsigned int RvaToLastByteOfData;
};

/* 2909 */
struct _IMAGE_DEBUG_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int Type;
  unsigned int SizeOfData;
  unsigned int AddressOfRawData;
  unsigned int PointerToRawData;
};

/* 2910 */
struct _IMAGE_DEBUG_INFORMATION
{
  _LIST_ENTRY List;
  unsigned int ReservedSize;
  void *ReservedMappedBase;
  unsigned __int16 ReservedMachine;
  unsigned __int16 ReservedCharacteristics;
  unsigned int ReservedCheckSum;
  unsigned int ImageBase;
  unsigned int SizeOfImage;
  unsigned int ReservedNumberOfSections;
  _IMAGE_SECTION_HEADER *ReservedSections;
  unsigned int ReservedExportedNamesSize;
  char *ReservedExportedNames;
  unsigned int ReservedNumberOfFunctionTableEntries;
  _IMAGE_FUNCTION_ENTRY *ReservedFunctionTableEntries;
  unsigned int ReservedLowestFunctionStartingAddress;
  unsigned int ReservedHighestFunctionEndingAddress;
  unsigned int ReservedNumberOfFpoTableEntries;
  _FPO_DATA *ReservedFpoTableEntries;
  unsigned int SizeOfCoffSymbols;
  _IMAGE_COFF_SYMBOLS_HEADER *CoffSymbols;
  unsigned int ReservedSizeOfCodeViewSymbols;
  void *ReservedCodeViewSymbols;
  char *ImageFilePath;
  char *ImageFileName;
  char *ReservedDebugFilePath;
  unsigned int ReservedTimeDateStamp;
  int ReservedRomImage;
  _IMAGE_DEBUG_DIRECTORY *ReservedDebugDirectory;
  unsigned int ReservedNumberOfDebugDirectories;
  unsigned int ReservedOriginalFunctionTableBaseAddress;
  unsigned int Reserved[2];
};

/* 2911 */
struct _currencyfmtW
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  unsigned __int16 *lpDecimalSep;
  unsigned __int16 *lpThousandSep;
  unsigned int NegativeOrder;
  unsigned int PositiveOrder;
  unsigned __int16 *lpCurrencySymbol;
};

/* 2912 */
struct _ACL
{
  char AclRevision;
  char Sbz1;
  unsigned __int16 AclSize;
  unsigned __int16 AceCount;
  unsigned __int16 Sbz2;
};

/* 2913 */
struct _TOKEN_DEFAULT_DACL
{
  _ACL *DefaultDacl;
};

/* 2914 */
struct $5ACE225D4D14CE0550A9F5A217E306C5
{
  __int16 dmOrientation;
  __int16 dmPaperSize;
  __int16 dmPaperLength;
  __int16 dmPaperWidth;
};

/* 2915 */
union $37415D7FB1F75105C7347AE16FD725E4
{
  $5ACE225D4D14CE0550A9F5A217E306C5 _s0;
  _POINTL dmPosition;
};

/* 2916 */
struct $84BDF2D0EF3E6D92B6C33770B276E406
{
  __int16 dmScale;
  __int16 dmCopies;
};

/* 2917 */
union $4BCFA3688D54F056A8210C50FE42F600
{
  $84BDF2D0EF3E6D92B6C33770B276E406 _s0;
  unsigned int dmDisplayOrientation;
};

/* 2918 */
struct $319163E49F0A6F35652FDFBFBA0FF503
{
  __int16 dmDefaultSource;
  __int16 dmPrintQuality;
};

/* 2919 */
union $F7DE3DCEE75194406F86D93F0E0A40A2
{
  $319163E49F0A6F35652FDFBFBA0FF503 _s0;
  unsigned int dmDisplayFixedOutput;
};

/* 2920 */
union $309666D137CBB19809FA597AD348B415
{
  unsigned int dmDisplayFlags;
  unsigned int dmNup;
};

/* 2921 */
struct _devicemodeA
{
  char dmDeviceName[32];
  unsigned __int16 dmSpecVersion;
  unsigned __int16 dmDriverVersion;
  unsigned __int16 dmSize;
  unsigned __int16 dmDriverExtra;
  unsigned int dmFields;
  $37415D7FB1F75105C7347AE16FD725E4 ___u6;
  $4BCFA3688D54F056A8210C50FE42F600 ___u7;
  $F7DE3DCEE75194406F86D93F0E0A40A2 ___u8;
  __int16 dmColor;
  __int16 dmDuplex;
  __int16 dmYResolution;
  __int16 dmTTOption;
  __int16 dmCollate;
  char dmFormName[32];
  unsigned __int16 dmLogPixels;
  unsigned int dmBitsPerPel;
  unsigned int dmPelsWidth;
  unsigned int dmPelsHeight;
  $309666D137CBB19809FA597AD348B415 ___u19;
  unsigned int dmDisplayFrequency;
  unsigned int dmICMMethod;
  unsigned int dmICMIntent;
  unsigned int dmMediaType;
  unsigned int dmDitherType;
  unsigned int dmReserved1;
  unsigned int dmReserved2;
  unsigned int dmPanningWidth;
  unsigned int dmPanningHeight;
};

/* 2922 */
struct tagEMRLINETO
{
  tagEMR emr;
  _POINTL ptl;
};

/* 2923 */
struct QOS_OBJECT_HDR
{
  unsigned int ObjectType;
  unsigned int ObjectLength;
};

/* 2924 */
union $18D88968084CBEE834030F63CA1057E2
{
  unsigned int Name;
  unsigned __int16 Id;
};

/* 2925 */
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY
{
  $18D88968084CBEE834030F63CA1057E2 ___u0;
  unsigned int OffsetToData;
};

/* 2926 */
struct _GRADIENT_TRIANGLE
{
  unsigned int Vertex1;
  unsigned int Vertex2;
  unsigned int Vertex3;
};

/* 2927 */
struct tagEMRROUNDRECT
{
  tagEMR emr;
  _RECTL rclBox;
  tagSIZE szlCorner;
};

/* 2928 */
struct _ADMINISTRATOR_POWER_POLICY
{
  _SYSTEM_POWER_STATE MinSleep;
  _SYSTEM_POWER_STATE MaxSleep;
  unsigned int MinVideoTimeout;
  unsigned int MaxVideoTimeout;
  unsigned int MinSpindownTimeout;
  unsigned int MaxSpindownTimeout;
};

/* 2929 */
struct _ASSEMBLY_FILE_DETAILED_INFORMATION
{
  unsigned int ulFlags;
  unsigned int ulFilenameLength;
  unsigned int ulPathLength;
  const unsigned __int16 *lpFileName;
  const unsigned __int16 *lpFilePath;
};

/* 2930 */
struct _UNLOAD_DLL_DEBUG_INFO
{
  void *lpBaseOfDll;
};

/* 2931 */
struct tagLOGPEN
{
  unsigned int lopnStyle;
  tagPOINT lopnWidth;
  unsigned int lopnColor;
};

/* 2932 */
struct _REMOTE_NAME_INFOW
{
  unsigned __int16 *lpUniversalName;
  unsigned __int16 *lpConnectionName;
  unsigned __int16 *lpRemainingPath;
};

/* 2933 */
struct _IMAGEHLP_SYMBOL_SRC
{
  unsigned int sizeofstruct;
  unsigned int type;
  char file[260];
};

/* 2934 */
struct _RIP_INFO
{
  unsigned int dwError;
  unsigned int dwType;
};

/* 2935 */
struct tagLOGBRUSH32
{
  unsigned int lbStyle;
  unsigned int lbColor;
  unsigned int lbHatch;
};

/* 2936 */
struct tagLOGBRUSH
{
  unsigned int lbStyle;
  unsigned int lbColor;
  unsigned int lbHatch;
};

/* 2937 */
struct tagCOLORMATCHTOTARGET
{
  tagEMR emr;
  unsigned int dwAction;
  unsigned int dwFlags;
  unsigned int cbName;
  unsigned int cbData;
  char Data[1];
};

/* 2938 */
struct _ABC
{
  int abcA;
  unsigned int abcB;
  int abcC;
};

/* 2939 */
struct _NETINFOSTRUCT
{
  unsigned int cbStructure;
  unsigned int dwProviderVersion;
  unsigned int dwStatus;
  unsigned int dwCharacteristics;
  unsigned int dwHandle;
  unsigned __int16 wNetType;
  unsigned int dwPrinters;
  unsigned int dwDrives;
};

/* 2940 */
struct _MINIDUMP_MEMORY_DESCRIPTOR64
{
  unsigned __int64 StartOfMemoryRange;
  unsigned __int64 DataSize;
};

/* 2941 */
struct _MINIDUMP_MEMORY64_LIST
{
  unsigned __int64 NumberOfMemoryRanges;
  unsigned __int64 BaseRva;
  _MINIDUMP_MEMORY_DESCRIPTOR64 MemoryRanges[];
};

/* 2942 */
struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 2943 */
struct HKEY__
{
  int unused;
};

/* 2944 */
struct tagEMRSELECTPALETTE
{
  tagEMR emr;
  unsigned int ihPal;
};

/* 2945 */
struct hostent
{
  char *h_name;
  char **h_aliases;
  __int16 h_addrtype;
  __int16 h_length;
  char **h_addr_list;
};

/* 2946 */
struct tagDRAWTEXTPARAMS
{
  unsigned int cbSize;
  int iTabLength;
  int iLeftMargin;
  int iRightMargin;
  unsigned int uiLengthDrawn;
};

/* 2947 */
struct tagBLOB
{
  unsigned int cbSize;
  char *pBlobData;
};

/* 2948 */
struct _WSAQuerySetW
{
  unsigned int dwSize;
  unsigned __int16 *lpszServiceInstanceName;
  _GUID *lpServiceClassId;
  _WSAVersion *lpVersion;
  unsigned __int16 *lpszComment;
  unsigned int dwNameSpace;
  _GUID *lpNSProviderId;
  unsigned __int16 *lpszContext;
  unsigned int dwNumberOfProtocols;
  _AFPROTOCOLS *lpafpProtocols;
  unsigned __int16 *lpszQueryString;
  unsigned int dwNumberOfCsAddrs;
  _CSADDR_INFO *lpcsaBuffer;
  unsigned int dwOutputFlags;
  tagBLOB *lpBlob;
};

/* 2949 */
struct _SECURITY_ATTRIBUTES
{
  unsigned int nLength;
  void *lpSecurityDescriptor;
  int bInheritHandle;
};

/* 2950 */
struct tagPELARRAY
{
  int paXCount;
  int paYCount;
  int paXExt;
  int paYExt;
  char paRGBs;
};

/* 2951 */
struct tagMDICREATESTRUCTA
{
  const char *szClass;
  const char *szTitle;
  void *hOwner;
  int x;
  int y;
  int cx;
  int cy;
  unsigned int style;
  int lParam;
};

/* 2952 */
struct tagSTYLEBUFW
{
  unsigned int dwStyle;
  unsigned __int16 szDescription[32];
};

/* 2953 */
struct _WSANSClassInfoA
{
  char *lpszName;
  unsigned int dwNameSpace;
  unsigned int dwValueType;
  unsigned int dwValueSize;
  void *lpValue;
};

/* 2954 */
struct _POINTFLOAT
{
  float x;
  float y;
};

/* 2955 */
struct _GLYPHMETRICSFLOAT
{
  float gmfBlackBoxX;
  float gmfBlackBoxY;
  _POINTFLOAT gmfptGlyphOrigin;
  float gmfCellIncX;
  float gmfCellIncY;
};

/* 2956 */
struct _SYSTEM_ALARM_CALLBACK_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 2957 */
struct tagFONTSIGNATURE
{
  unsigned int fsUsb[4];
  unsigned int fsCsb[2];
};

/* 2958 */
struct POWER_ACTION_POLICY
{
  POWER_ACTION Action;
  unsigned int Flags;
  unsigned int EventCode;
};

/* 2959 */
struct SYSTEM_POWER_LEVEL
{
  char Enable;
  char Spare[3];
  unsigned int BatteryLevel;
  POWER_ACTION_POLICY PowerPolicy;
  _SYSTEM_POWER_STATE MinSystemState;
};

/* 2960 */
struct _IMAGE_OS2_HEADER
{
  unsigned __int16 ne_magic;
  char ne_ver;
  char ne_rev;
  unsigned __int16 ne_enttab;
  unsigned __int16 ne_cbenttab;
  int ne_crc;
  unsigned __int16 ne_flags;
  unsigned __int16 ne_autodata;
  unsigned __int16 ne_heap;
  unsigned __int16 ne_stack;
  int ne_csip;
  int ne_sssp;
  unsigned __int16 ne_cseg;
  unsigned __int16 ne_cmod;
  unsigned __int16 ne_cbnrestab;
  unsigned __int16 ne_segtab;
  unsigned __int16 ne_rsrctab;
  unsigned __int16 ne_restab;
  unsigned __int16 ne_modtab;
  unsigned __int16 ne_imptab;
  int ne_nrestab;
  unsigned __int16 ne_cmovent;
  unsigned __int16 ne_align;
  unsigned __int16 ne_cres;
  char ne_exetyp;
  char ne_flagsothers;
  unsigned __int16 ne_pretthunks;
  unsigned __int16 ne_psegrefbytes;
  unsigned __int16 ne_swaparea;
  unsigned __int16 ne_expver;
};

/* 2961 */
struct _MESSAGE_RESOURCE_BLOCK
{
  unsigned int LowId;
  unsigned int HighId;
  unsigned int OffsetToEntries;
};

/* 2962 */
struct _WSANAMESPACE_INFOA
{
  _GUID NSProviderId;
  unsigned int dwNameSpace;
  int fActive;
  unsigned int dwVersion;
  char *lpszIdentifier;
};

/* 2963 */
struct tagEMRSETDIBITSTODEVICE
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int xSrc;
  int ySrc;
  int cxSrc;
  int cySrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  unsigned int iUsageSrc;
  unsigned int iStartScan;
  unsigned int cScans;
};

/* 2964 */
struct $409DFF2A380C4FFE2B587D0390AC124E
{
  unsigned __int16 wProcessorArchitecture;
  unsigned __int16 wReserved;
};

/* 2965 */
union $0897E09504F2EADDFACC2BAC6DDF4159
{
  unsigned int dwOemId;
  $409DFF2A380C4FFE2B587D0390AC124E _s1;
};

/* 2966 */
struct _SYSTEM_INFO
{
  $0897E09504F2EADDFACC2BAC6DDF4159 ___u0;
  unsigned int dwPageSize;
  void *lpMinimumApplicationAddress;
  void *lpMaximumApplicationAddress;
  unsigned int dwActiveProcessorMask;
  unsigned int dwNumberOfProcessors;
  unsigned int dwProcessorType;
  unsigned int dwAllocationGranularity;
  unsigned __int16 wProcessorLevel;
  unsigned __int16 wProcessorRevision;
};

/* 2967 */
struct _ACCESS_ALLOWED_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 2968 */
struct std::_Init_locks
{
  char dummy[1];
};

/* 2969 */
struct std::_Int_iterator_tag
{
  char dummy[1];
};

/* 2970 */
struct std::iterator_traits<unsigned short>
{
  char dummy[1];
};

/* 2971 */
struct std::output_iterator_tag
{
  char dummy[1];
};

/* 2972 */
struct std::iterator_traits<unsigned long>
{
  char dummy[1];
};

/* 2973 */
struct std::codecvt<char,char,int>
{
  std::codecvt_base baseclass_0;
};

/* 2974 */
struct std::basic_filebuf<char,std::char_traits<char> >
{
  std::basic_streambuf<char,std::char_traits<char> > baseclass_0;
  std::codecvt<char,char,int> *_Pcvt;
  int _State0;
  char _Mychar;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > *_Mystr;
  bool _Wrotesome;
  int _State;
  bool _Closef;
  _iobuf *_Myfile;
};

/* 2975 */
struct std::iterator_traits<short>
{
  char dummy[1];
};

/* 2976 */
struct std::iterator_traits<unsigned __int64>
{
  char dummy[1];
};

/* 2977 */
struct std::iterator_traits<signed char>
{
  char dummy[1];
};

/* 2978 */
struct std::iterator_traits<__int64>
{
  char dummy[1];
};

/* 2979 */
struct $E18BDEEBFA656DD56CFC43E2AE7B92C2
{
  _BYTE gap0[8];
  std::basic_ostream<char,std::char_traits<char> > baseclass_8;
};

/* 2980 */
union $57329459A86ED8E8DEDA4A8D11D16696
{
  std::basic_istream<char,std::char_traits<char> > baseclass_0;
  $E18BDEEBFA656DD56CFC43E2AE7B92C2 _s1;
};

/* 2981 */
struct std::basic_iostream<char,std::char_traits<char> >
{
  $57329459A86ED8E8DEDA4A8D11D16696 ___u0;
};

/* 2982 */
struct $68179033B3AA6BC2B0DE9FCE32DD1D43
{
  _BYTE gap0[12];
  std::basic_filebuf<char,std::char_traits<char> > _Filebuffer;
};

/* 2983 */
union $0C9AF856B780D2CEA6CC40214C98C379
{
  std::basic_iostream<char,std::char_traits<char> > baseclass_0;
  $68179033B3AA6BC2B0DE9FCE32DD1D43 _s1;
};

/* 2984 */
struct std::basic_fstream<char,std::char_traits<char> >
{
  $0C9AF856B780D2CEA6CC40214C98C379 ___u0;
  _BYTE gap68[52];
};

/* 2985 */
struct std::iterator_traits<unsigned int>
{
  char dummy[1];
};

/* 2986 */
struct std::iterator_traits<char>
{
  char dummy[1];
};

/* 2987 */
struct std::iterator_traits<unsigned char>
{
  char dummy[1];
};

/* 2988 */
struct std::iterator_traits<int>
{
  char dummy[1];
};

/* 2989 */
struct std::iterator_traits<bool>
{
  char dummy[1];
};

/* 2990 */
struct std::iterator_traits<long>
{
  char dummy[1];
};

/* 2991 */
struct sockaddr_storage
{
  __int16 ss_family;
  char __ss_pad1[6];
  __int64 __ss_align;
  char __ss_pad2[112];
};

/* 2992 */
struct LIST_ENTRY32
{
  unsigned int Flink;
  unsigned int Blink;
};

/* 2993 */
union $E0927F6BE2F1645595F211B37EFD8766
{
  unsigned __int64 EndOfPrologue;
  unsigned __int64 UnwindInfoAddress;
};

/* 2994 */
struct _IMAGE_FUNCTION_ENTRY64
{
  unsigned __int64 StartingAddress;
  unsigned __int64 EndingAddress;
  $E0927F6BE2F1645595F211B37EFD8766 ___u2;
};

/* 2995 */
struct _EXIT_THREAD_DEBUG_INFO
{
  unsigned int dwExitCode;
};

/* 2996 */
struct _SERVICE_STATUS_PROCESS
{
  unsigned int dwServiceType;
  unsigned int dwCurrentState;
  unsigned int dwControlsAccepted;
  unsigned int dwWin32ExitCode;
  unsigned int dwServiceSpecificExitCode;
  unsigned int dwCheckPoint;
  unsigned int dwWaitHint;
  unsigned int dwProcessId;
  unsigned int dwServiceFlags;
};

/* 2997 */
struct _ENUM_SERVICE_STATUS_PROCESSA
{
  char *lpServiceName;
  char *lpDisplayName;
  _SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

/* 2998 */
struct servent
{
  char *s_name;
  char **s_aliases;
  __int16 s_port;
  char *s_proto;
};

/* 2999 */
struct tagACCEL
{
  char fVirt;
  unsigned __int16 key;
  unsigned __int16 cmd;
};

/* 3000 */
struct _QUOTA_LIMITS
{
  unsigned int PagedPoolLimit;
  unsigned int NonPagedPoolLimit;
  unsigned int MinimumWorkingSetSize;
  unsigned int MaximumWorkingSetSize;
  unsigned int PagefileLimit;
  _LARGE_INTEGER TimeLimit;
};

/* 3001 */
struct tagSERIALKEYSW
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned __int16 *lpszActivePort;
  unsigned __int16 *lpszPort;
  unsigned int iBaudRate;
  unsigned int iPortState;
  unsigned int iActive;
};

/* 3002 */
struct _NETCONNECTINFOSTRUCT
{
  unsigned int cbStructure;
  unsigned int dwFlags;
  unsigned int dwSpeed;
  unsigned int dwDelay;
  unsigned int dwOptDataSize;
};

/* 3003 */
struct _IMAGE_SYMBOL::__unnamed::__unnamed
{
  unsigned int Short;
  unsigned int Long;
};

/* 3004 */
union _IMAGE_SYMBOL::__unnamed
{
  char ShortName[8];
  _IMAGE_SYMBOL::__unnamed::__unnamed Name;
  unsigned int LongName[2];
};

/* 3005 */
#pragma pack(push, 1)
struct _IMAGE_SYMBOL
{
  _IMAGE_SYMBOL::__unnamed N;
  unsigned int Value;
  __int16 SectionNumber;
  unsigned __int16 Type;
  char StorageClass;
  char NumberOfAuxSymbols;
};
#pragma pack(pop)

/* 3006 */
struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION
{
  unsigned int ulFlags;
  unsigned int ulEncodedAssemblyIdentityLength;
  unsigned int ulManifestPathType;
  unsigned int ulManifestPathLength;
  _LARGE_INTEGER liManifestLastWriteTime;
  unsigned int ulPolicyPathType;
  unsigned int ulPolicyPathLength;
  _LARGE_INTEGER liPolicyLastWriteTime;
  unsigned int ulMetadataSatelliteRosterIndex;
  unsigned int ulManifestVersionMajor;
  unsigned int ulManifestVersionMinor;
  unsigned int ulPolicyVersionMajor;
  unsigned int ulPolicyVersionMinor;
  unsigned int ulAssemblyDirectoryNameLength;
  const unsigned __int16 *lpAssemblyEncodedAssemblyIdentity;
  const unsigned __int16 *lpAssemblyManifestPath;
  const unsigned __int16 *lpAssemblyPolicyPath;
  const unsigned __int16 *lpAssemblyDirectoryName;
  unsigned int ulFileCount;
};

/* 3007 */
struct tagDROPSTRUCT
{
  HWND__ *hwndSource;
  HWND__ *hwndSink;
  unsigned int wFmt;
  unsigned int dwData;
  tagPOINT ptDrop;
  unsigned int dwControlData;
};

/* 3008 */
struct _TOKEN_GROUPS_AND_PRIVILEGES
{
  unsigned int SidCount;
  unsigned int SidLength;
  _SID_AND_ATTRIBUTES *Sids;
  unsigned int RestrictedSidCount;
  unsigned int RestrictedSidLength;
  _SID_AND_ATTRIBUTES *RestrictedSids;
  unsigned int PrivilegeCount;
  unsigned int PrivilegeLength;
  _LUID_AND_ATTRIBUTES *Privileges;
  _LUID AuthenticationId;
};

/* 3009 */
struct tagIMEMENUITEMINFOA
{
  unsigned int cbSize;
  unsigned int fType;
  unsigned int fState;
  unsigned int wID;
  HBITMAP__ *hbmpChecked;
  HBITMAP__ *hbmpUnchecked;
  unsigned int dwItemData;
  char szString[80];
  HBITMAP__ *hbmpItem;
};

/* 3010 */
struct tagEXTLOGPEN
{
  unsigned int elpPenStyle;
  unsigned int elpWidth;
  unsigned int elpBrushStyle;
  unsigned int elpColor;
  unsigned int elpHatch;
  unsigned int elpNumEntries;
  unsigned int elpStyleEntry[1];
};

/* 3011 */
struct _OUTLINETEXTMETRICA
{
  unsigned int otmSize;
  tagTEXTMETRICA otmTextMetrics;
  char otmFiller;
  tagPANOSE otmPanoseNumber;
  unsigned int otmfsSelection;
  unsigned int otmfsType;
  int otmsCharSlopeRise;
  int otmsCharSlopeRun;
  int otmItalicAngle;
  unsigned int otmEMSquare;
  int otmAscent;
  int otmDescent;
  unsigned int otmLineGap;
  unsigned int otmsCapEmHeight;
  unsigned int otmsXHeight;
  tagRECT otmrcFontBox;
  int otmMacAscent;
  int otmMacDescent;
  unsigned int otmMacLineGap;
  unsigned int otmusMinimumPPEM;
  tagPOINT otmptSubscriptSize;
  tagPOINT otmptSubscriptOffset;
  tagPOINT otmptSuperscriptSize;
  tagPOINT otmptSuperscriptOffset;
  unsigned int otmsStrikeoutSize;
  int otmsStrikeoutPosition;
  int otmsUnderscoreSize;
  int otmsUnderscorePosition;
  char *otmpFamilyName;
  char *otmpFaceName;
  char *otmpStyleName;
  char *otmpFullName;
};

/* 3012 */
struct _RASTERIZER_STATUS
{
  __int16 nSize;
  __int16 wFlags;
  __int16 nLanguageID;
};

/* 3013 */
struct _WIN32_FIND_DATAW
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
  unsigned int dwReserved0;
  unsigned int dwReserved1;
  unsigned __int16 cFileName[260];
  unsigned __int16 cAlternateFileName[14];
};

/* 3014 */
struct _TOKEN_AUDIT_POLICY_ELEMENT
{
  unsigned int Category;
  unsigned int PolicyMask;
};

/* 3015 */
struct tagEMRTEXT
{
  _POINTL ptlReference;
  unsigned int nChars;
  unsigned int offString;
  unsigned int fOptions;
  _RECTL rcl;
  unsigned int offDx;
};

/* 3016 */
struct tagEMRPOLYTEXTOUTA
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int iGraphicsMode;
  float exScale;
  float eyScale;
  int cStrings;
  tagEMRTEXT aemrtext[1];
};

/* 3017 */
struct _WIN32_FIND_DATAA
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
  unsigned int dwReserved0;
  unsigned int dwReserved1;
  char cFileName[260];
  char cAlternateFileName[14];
};

/* 3018 */
struct tagBITMAPINFOHEADER
{
  unsigned int biSize;
  int biWidth;
  int biHeight;
  unsigned __int16 biPlanes;
  unsigned __int16 biBitCount;
  unsigned int biCompression;
  unsigned int biSizeImage;
  int biXPelsPerMeter;
  int biYPelsPerMeter;
  unsigned int biClrUsed;
  unsigned int biClrImportant;
};

/* 3019 */
struct tagEMRSTRETCHDIBITS
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int xSrc;
  int ySrc;
  int cxSrc;
  int cySrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  unsigned int iUsageSrc;
  unsigned int dwRop;
  int cxDest;
  int cyDest;
};

/* 3020 */
struct IMAGE_LOAD_CONFIG_DIRECTORY32
{
  unsigned int Size;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int GlobalFlagsClear;
  unsigned int GlobalFlagsSet;
  unsigned int CriticalSectionDefaultTimeout;
  unsigned int DeCommitFreeBlockThreshold;
  unsigned int DeCommitTotalFreeThreshold;
  unsigned int LockPrefixTable;
  unsigned int MaximumAllocationSize;
  unsigned int VirtualMemoryThreshold;
  unsigned int ProcessHeapFlags;
  unsigned int ProcessAffinityMask;
  unsigned __int16 CSDVersion;
  unsigned __int16 Reserved1;
  unsigned int EditList;
  unsigned int SecurityCookie;
  unsigned int SEHandlerTable;
  unsigned int SEHandlerCount;
};

/* 3021 */
struct _TRIVERTEX
{
  int x;
  int y;
  unsigned __int16 Red;
  unsigned __int16 Green;
  unsigned __int16 Blue;
  unsigned __int16 Alpha;
};

/* 3022 */
struct _ACCESS_DENIED_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 3023 */
struct _MEMORY_BASIC_INFORMATION
{
  void *BaseAddress;
  void *AllocationBase;
  unsigned int AllocationProtect;
  unsigned int RegionSize;
  unsigned int State;
  unsigned int Protect;
  unsigned int Type;
};

/* 3024 */
struct tagTEXTMETRICW
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  unsigned __int16 tmFirstChar;
  unsigned __int16 tmLastChar;
  unsigned __int16 tmDefaultChar;
  unsigned __int16 tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
};

/* 3025 */
struct _OUTLINETEXTMETRICW
{
  unsigned int otmSize;
  tagTEXTMETRICW otmTextMetrics;
  char otmFiller;
  tagPANOSE otmPanoseNumber;
  unsigned int otmfsSelection;
  unsigned int otmfsType;
  int otmsCharSlopeRise;
  int otmsCharSlopeRun;
  int otmItalicAngle;
  unsigned int otmEMSquare;
  int otmAscent;
  int otmDescent;
  unsigned int otmLineGap;
  unsigned int otmsCapEmHeight;
  unsigned int otmsXHeight;
  tagRECT otmrcFontBox;
  int otmMacAscent;
  int otmMacDescent;
  unsigned int otmMacLineGap;
  unsigned int otmusMinimumPPEM;
  tagPOINT otmptSubscriptSize;
  tagPOINT otmptSubscriptOffset;
  tagPOINT otmptSuperscriptSize;
  tagPOINT otmptSuperscriptOffset;
  unsigned int otmsStrikeoutSize;
  int otmsStrikeoutPosition;
  int otmsUnderscoreSize;
  int otmsUnderscorePosition;
  char *otmpFamilyName;
  char *otmpFaceName;
  char *otmpStyleName;
  char *otmpFullName;
};

/* 3026 */
struct _DOCINFOA
{
  int cbSize;
  const char *lpszDocName;
  const char *lpszOutput;
  const char *lpszDatatype;
  unsigned int fwType;
};

/* 3027 */
struct MENUITEMTEMPLATEHEADER
{
  unsigned __int16 versionNumber;
  unsigned __int16 offset;
};

/* 3028 */
struct _SYSTEM_AUDIT_CALLBACK_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 3029 */
struct BITMAPV4HEADER
{
  unsigned int bV4Size;
  int bV4Width;
  int bV4Height;
  unsigned __int16 bV4Planes;
  unsigned __int16 bV4BitCount;
  unsigned int bV4V4Compression;
  unsigned int bV4SizeImage;
  int bV4XPelsPerMeter;
  int bV4YPelsPerMeter;
  unsigned int bV4ClrUsed;
  unsigned int bV4ClrImportant;
  unsigned int bV4RedMask;
  unsigned int bV4GreenMask;
  unsigned int bV4BlueMask;
  unsigned int bV4AlphaMask;
  unsigned int bV4CSType;
  tagICEXYZTRIPLE bV4Endpoints;
  unsigned int bV4GammaRed;
  unsigned int bV4GammaGreen;
  unsigned int bV4GammaBlue;
};

/* 3030 */
struct _BLENDFUNCTION
{
  char BlendOp;
  char BlendFlags;
  char SourceConstantAlpha;
  char AlphaFormat;
};

/* 3031 */
struct HUMPD__
{
  int unused;
};

/* 3032 */
struct _NETRESOURCEA
{
  unsigned int dwScope;
  unsigned int dwType;
  unsigned int dwDisplayType;
  unsigned int dwUsage;
  char *lpLocalName;
  char *lpRemoteName;
  char *lpComment;
  char *lpProvider;
};

/* 3033 */
struct tagEMRCREATEDIBPATTERNBRUSHPT
{
  tagEMR emr;
  unsigned int ihBrush;
  unsigned int iUsage;
  unsigned int offBmi;
  unsigned int cbBmi;
  unsigned int offBits;
  unsigned int cbBits;
};

/* 3034 */
struct SC_HANDLE__
{
  int unused;
};

/* 3035 */
struct tagPOINTS
{
  __int16 x;
  __int16 y;
};

/* 3036 */
struct tagPOINTFX
{
  _FIXED x;
  _FIXED y;
};

/* 3037 */
struct _COMMPROP
{
  unsigned __int16 wPacketLength;
  unsigned __int16 wPacketVersion;
  unsigned int dwServiceMask;
  unsigned int dwReserved1;
  unsigned int dwMaxTxQueue;
  unsigned int dwMaxRxQueue;
  unsigned int dwMaxBaud;
  unsigned int dwProvSubType;
  unsigned int dwProvCapabilities;
  unsigned int dwSettableParams;
  unsigned int dwSettableBaud;
  unsigned __int16 wSettableData;
  unsigned __int16 wSettableStopParity;
  unsigned int dwCurrentTxQueue;
  unsigned int dwCurrentRxQueue;
  unsigned int dwProvSpec1;
  unsigned int dwProvSpec2;
  unsigned __int16 wcProvChar[1];
};

/* 3038 */
struct tagGUITHREADINFO
{
  unsigned int cbSize;
  unsigned int flags;
  HWND__ *hwndActive;
  HWND__ *hwndFocus;
  HWND__ *hwndCapture;
  HWND__ *hwndMenuOwner;
  HWND__ *hwndMoveSize;
  HWND__ *hwndCaret;
  tagRECT rcCaret;
};

/* 3039 */
struct HDC__
{
  int unused;
};

/* 3040 */
struct tagPAINTSTRUCT
{
  HDC__ *hdc;
  int fErase;
  tagRECT rcPaint;
  int fRestore;
  int fIncUpdate;
  char rgbReserved[32];
};

/* 3041 */
struct _DISCDLGSTRUCTA
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  char *lpLocalName;
  char *lpRemoteName;
  unsigned int dwFlags;
};

/* 3042 */
struct _QUERY_SERVICE_CONFIGW
{
  unsigned int dwServiceType;
  unsigned int dwStartType;
  unsigned int dwErrorControl;
  unsigned __int16 *lpBinaryPathName;
  unsigned __int16 *lpLoadOrderGroup;
  unsigned int dwTagId;
  unsigned __int16 *lpDependencies;
  unsigned __int16 *lpServiceStartName;
  unsigned __int16 *lpDisplayName;
};

/* 3043 */
struct _MINIDUMP_THREAD
{
  unsigned int ThreadId;
  unsigned int SuspendCount;
  unsigned int PriorityClass;
  unsigned int Priority;
  unsigned __int64 Teb;
  _MINIDUMP_MEMORY_DESCRIPTOR Stack;
  _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext;
};

/* 3044 */
struct HPALETTE__
{
  int unused;
};

/* 3045 */
struct _IMAGEHLP_MODULE
{
  unsigned int SizeOfStruct;
  unsigned int BaseOfImage;
  unsigned int ImageSize;
  unsigned int TimeDateStamp;
  unsigned int CheckSum;
  unsigned int NumSyms;
  SYM_TYPE SymType;
  char ModuleName[32];
  char ImageName[256];
  char LoadedImageName[256];
};

/* 3046 */
struct _SINGLE_LIST_ENTRY
{
  _SINGLE_LIST_ENTRY *Next;
};

/* 3047 */
struct _SYSTEM_ALARM_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 3048 */
struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 3049 */
struct tagWNDCLASSEXW
{
  unsigned int cbSize;
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const unsigned __int16 *lpszMenuName;
  const unsigned __int16 *lpszClassName;
  HICON__ *hIconSm;
};

/* 3050 */
struct tagMONITORINFO
{
  unsigned int cbSize;
  tagRECT rcMonitor;
  tagRECT rcWork;
  unsigned int dwFlags;
};

/* 3051 */
struct tagMONITORINFOEXA
{
  tagMONITORINFO baseclass_0;
  char szDevice[32];
};

/* 3052 */
struct tagEMRINVERTRGN
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cbRgnData;
  char RgnData[1];
};

/* 3053 */
struct _IMAGEHLP_CBA_READ_MEMORY
{
  unsigned __int64 addr;
  void *buf;
  unsigned int bytes;
  unsigned int *bytesread;
};

/* 3054 */
struct _RTL_VERIFIER_THUNK_DESCRIPTOR
{
  char *ThunkName;
  void *ThunkOldAddress;
  void *ThunkNewAddress;
};

/* 3055 */
struct _RTL_VERIFIER_DLL_DESCRIPTOR
{
  unsigned __int16 *DllName;
  unsigned int DllFlags;
  void *DllAddress;
  _RTL_VERIFIER_THUNK_DESCRIPTOR *DllThunks;
};

/* 3056 */
struct _MODEMSETTINGS
{
  unsigned int dwActualSize;
  unsigned int dwRequiredSize;
  unsigned int dwDevSpecificOffset;
  unsigned int dwDevSpecificSize;
  unsigned int dwCallSetupFailTimer;
  unsigned int dwInactivityTimeout;
  unsigned int dwSpeakerVolume;
  unsigned int dwSpeakerMode;
  unsigned int dwPreferredModemOptions;
  unsigned int dwNegotiatedModemOptions;
  unsigned int dwNegotiatedDCERate;
  char abVariablePortion[1];
};

/* 3057 */
struct tagRGBQUAD
{
  char rgbBlue;
  char rgbGreen;
  char rgbRed;
  char rgbReserved;
};

/* 3058 */
struct tagBITMAPINFO
{
  tagBITMAPINFOHEADER bmiHeader;
  tagRGBQUAD bmiColors[1];
};

/* 3059 */
struct _IMAGE_ROM_OPTIONAL_HEADER
{
  unsigned __int16 Magic;
  char MajorLinkerVersion;
  char MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned int BaseOfData;
  unsigned int BaseOfBss;
  unsigned int GprMask;
  unsigned int CprMask[4];
  unsigned int GpValue;
};

/* 3060 */
struct _IMAGE_ROM_HEADERS
{
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
};

/* 3061 */
struct tagSCROLLBARINFO
{
  unsigned int cbSize;
  tagRECT rcScrollBar;
  int dxyLineButton;
  int xyThumbTop;
  int xyThumbBottom;
  int reserved;
  unsigned int rgstate[6];
};

/* 3062 */
struct _IMAGEHLP_SYMBOL
{
  unsigned int SizeOfStruct;
  unsigned int Address;
  unsigned int Size;
  unsigned int Flags;
  unsigned int MaxNameLength;
  char Name[1];
};

/* 3063 */
struct _IMAGEHLP_SYMBOL_PACKAGE
{
  _IMAGEHLP_SYMBOL sym;
  char name[2001];
};

/* 3064 */
struct pvalueA
{
  char *pv_valuename;
  int pv_valuelen;
  void *pv_value_context;
  unsigned int pv_type;
};

/* 3065 */
struct _TOKEN_USER
{
  _SID_AND_ATTRIBUTES User;
};

/* 3066 */
struct tagEMREXTTEXTOUTA
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int iGraphicsMode;
  float exScale;
  float eyScale;
  tagEMRTEXT emrtext;
};

/* 3067 */
struct tagEMRANGLEARC
{
  tagEMR emr;
  _POINTL ptlCenter;
  unsigned int nRadius;
  float eStartAngle;
  float eSweepAngle;
};

/* 3068 */
struct tagCANDIDATEFORM
{
  unsigned int dwIndex;
  unsigned int dwStyle;
  tagPOINT ptCurrentPos;
  tagRECT rcArea;
};

/* 3069 */
struct tagEMRSETARCDIRECTION
{
  tagEMR emr;
  unsigned int iArcDirection;
};

/* 3070 */
#pragma pack(push, 1)
struct IMAGE_AUX_SYMBOL_TOKEN_DEF
{
  char bAuxType;
  char bReserved;
  unsigned int SymbolTableIndex;
  char rgbReserved[12];
};
#pragma pack(pop)

/* 3071 */
struct tagLAYERPLANEDESCRIPTOR
{
  unsigned __int16 nSize;
  unsigned __int16 nVersion;
  unsigned int dwFlags;
  char iPixelType;
  char cColorBits;
  char cRedBits;
  char cRedShift;
  char cGreenBits;
  char cGreenShift;
  char cBlueBits;
  char cBlueShift;
  char cAlphaBits;
  char cAlphaShift;
  char cAccumBits;
  char cAccumRedBits;
  char cAccumGreenBits;
  char cAccumBlueBits;
  char cAccumAlphaBits;
  char cDepthBits;
  char cStencilBits;
  char cAuxBuffers;
  char iLayerPlane;
  char bReserved;
  unsigned int crTransparent;
};

/* 3072 */
struct _TAPE_SET_POSITION
{
  unsigned int Method;
  unsigned int Partition;
  _LARGE_INTEGER Offset;
  char Immediate;
};

/* 3073 */
struct _numberfmtW
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  unsigned __int16 *lpDecimalSep;
  unsigned __int16 *lpThousandSep;
  unsigned int NegativeOrder;
};

/* 3074 */
struct _CONNECTDLGSTRUCTA
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  _NETRESOURCEA *lpConnRes;
  unsigned int dwFlags;
  unsigned int dwDevNum;
};

/* 3075 */
union _IMAGE_LINENUMBER::__unnamed
{
  unsigned int SymbolTableIndex;
  unsigned int VirtualAddress;
};

/* 3076 */
#pragma pack(push, 1)
struct _IMAGE_LINENUMBER
{
  _IMAGE_LINENUMBER::__unnamed Type;
  unsigned __int16 Linenumber;
};
#pragma pack(pop)

/* 3077 */
struct _EXCEPTION_DEBUG_INFO
{
  _EXCEPTION_RECORD ExceptionRecord;
  unsigned int dwFirstChance;
};

/* 3078 */
struct tagNEWTEXTMETRICA
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  char tmFirstChar;
  char tmLastChar;
  char tmDefaultChar;
  char tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
  unsigned int ntmFlags;
  unsigned int ntmSizeEM;
  unsigned int ntmCellHeight;
  unsigned int ntmAvgWidth;
};

/* 3079 */
struct tagNEWTEXTMETRICEXA
{
  tagNEWTEXTMETRICA ntmTm;
  tagFONTSIGNATURE ntmFontSig;
};

/* 3080 */
struct _DISPLAY_DEVICEA
{
  unsigned int cb;
  char DeviceName[32];
  char DeviceString[128];
  unsigned int StateFlags;
  char DeviceID[128];
  char DeviceKey[128];
};

/* 3081 */
struct _IMAGE_DEBUG_MISC
{
  unsigned int DataType;
  unsigned int Length;
  char Unicode;
  char Reserved[3];
  char Data[1];
};

/* 3082 */
struct HENHMETAFILE__
{
  int unused;
};

/* 3083 */
struct _MINIDUMP_FUNCTION_TABLE_STREAM
{
  unsigned int SizeOfHeader;
  unsigned int SizeOfDescriptor;
  unsigned int SizeOfNativeDescriptor;
  unsigned int SizeOfFunctionEntry;
  unsigned int NumberOfDescriptors;
  unsigned int SizeOfAlignPad;
};

/* 3084 */
struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
{
  unsigned int BeginAddress;
  unsigned int EndAddress;
  unsigned int ExceptionHandler;
  unsigned int HandlerData;
  unsigned int PrologEndAddress;
};

/* 3085 */
struct _SOCKET_ADDRESS_LIST
{
  int iAddressCount;
  _SOCKET_ADDRESS Address[1];
};

/* 3086 */
struct _OSVERSIONINFOW
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  unsigned __int16 szCSDVersion[128];
};

/* 3087 */
struct tagRECONVERTSTRING
{
  unsigned int dwSize;
  unsigned int dwVersion;
  unsigned int dwStrLen;
  unsigned int dwStrOffset;
  unsigned int dwCompStrLen;
  unsigned int dwCompStrOffset;
  unsigned int dwTargetStrLen;
  unsigned int dwTargetStrOffset;
};

/* 3088 */
struct _EXCEPTION_RECORD32
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  unsigned int ExceptionRecord;
  unsigned int ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int ExceptionInformation[15];
};

/* 3089 */
struct tagEMREXTSELECTCLIPRGN
{
  tagEMR emr;
  unsigned int cbRgnData;
  unsigned int iMode;
  char RgnData[1];
};

/* 3090 */
struct _STARTUPINFOW
{
  unsigned int cb;
  unsigned __int16 *lpReserved;
  unsigned __int16 *lpDesktop;
  unsigned __int16 *lpTitle;
  unsigned int dwX;
  unsigned int dwY;
  unsigned int dwXSize;
  unsigned int dwYSize;
  unsigned int dwXCountChars;
  unsigned int dwYCountChars;
  unsigned int dwFillAttribute;
  unsigned int dwFlags;
  unsigned __int16 wShowWindow;
  unsigned __int16 cbReserved2;
  char *lpReserved2;
  void *hStdInput;
  void *hStdOutput;
  void *hStdError;
};

/* 3091 */
struct tagSTICKYKEYS
{
  unsigned int cbSize;
  unsigned int dwFlags;
};

/* 3092 */
struct tagTITLEBARINFO
{
  unsigned int cbSize;
  tagRECT rcTitleBar;
  unsigned int rgstate[6];
};

/* 3093 */
struct tagENUMLOGFONTA
{
  tagLOGFONTA elfLogFont;
  char elfFullName[64];
  char elfStyle[32];
};

/* 3094 */
struct tagEMRALPHABLEND
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int cxSrc;
  int cySrc;
};

/* 3095 */
struct tagMOUSEHOOKSTRUCT
{
  tagPOINT pt;
  HWND__ *hwnd;
  unsigned int wHitTestCode;
  unsigned int dwExtraInfo;
};

/* 3096 */
struct tagEMRGLSRECORD
{
  tagEMR emr;
  unsigned int cbData;
  char Data[1];
};

/* 3097 */
struct tagMOUSEKEYS
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iMaxSpeed;
  unsigned int iTimeToMaxSpeed;
  unsigned int iCtrlSpeed;
  unsigned int dwReserved1;
  unsigned int dwReserved2;
};

/* 3098 */
struct HACCEL__
{
  int unused;
};

/* 3099 */
struct tagEMRSTRETCHBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int cxSrc;
  int cySrc;
};

/* 3100 */
struct _ACCESS_DENIED_CALLBACK_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 3101 */
struct _TOKEN_GROUPS
{
  unsigned int GroupCount;
  _SID_AND_ATTRIBUTES Groups[1];
};

/* 3102 */
struct _TOKEN_PRIVILEGES
{
  unsigned int PrivilegeCount;
  _LUID_AND_ATTRIBUTES Privileges[1];
};

/* 3103 */
struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION
{
  unsigned int SecurityLimitFlags;
  void *JobToken;
  _TOKEN_GROUPS *SidsToDisable;
  _TOKEN_PRIVILEGES *PrivilegesToDelete;
  _TOKEN_GROUPS *RestrictedSids;
};

/* 3104 */
union _IMAGE_THUNK_DATA32::__unnamed
{
  unsigned int ForwarderString;
  unsigned int Function;
  unsigned int Ordinal;
  unsigned int AddressOfData;
};

/* 3105 */
struct _IMAGE_THUNK_DATA32
{
  _IMAGE_THUNK_DATA32::__unnamed u1;
};

/* 3106 */
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY
{
  unsigned int FuncStart;
  int _bf4;
};

/* 3107 */
struct tagSERIALKEYSA
{
  unsigned int cbSize;
  unsigned int dwFlags;
  char *lpszActivePort;
  char *lpszPort;
  unsigned int iBaudRate;
  unsigned int iPortState;
  unsigned int iActive;
};

/* 3108 */
struct ANON_OBJECT_HEADER
{
  unsigned __int16 Sig1;
  unsigned __int16 Sig2;
  unsigned __int16 Version;
  unsigned __int16 Machine;
  unsigned int TimeDateStamp;
  _GUID ClassID;
  unsigned int SizeOfData;
};

/* 3109 */
struct tagEMREXTESCAPE
{
  tagEMR emr;
  int iEscape;
  int cbEscData;
  char EscData[1];
};

/* 3110 */
struct tagLOGCOLORSPACEA
{
  unsigned int lcsSignature;
  unsigned int lcsVersion;
  unsigned int lcsSize;
  int lcsCSType;
  int lcsIntent;
  tagICEXYZTRIPLE lcsEndpoints;
  unsigned int lcsGammaRed;
  unsigned int lcsGammaGreen;
  unsigned int lcsGammaBlue;
  char lcsFilename[260];
};

/* 3111 */
struct tagEMRCREATECOLORSPACE
{
  tagEMR emr;
  unsigned int ihCS;
  tagLOGCOLORSPACEA lcs;
};

/* 3112 */
struct _WSAPROTOCOL_INFOW
{
  unsigned int dwServiceFlags1;
  unsigned int dwServiceFlags2;
  unsigned int dwServiceFlags3;
  unsigned int dwServiceFlags4;
  unsigned int dwProviderFlags;
  _GUID ProviderId;
  unsigned int dwCatalogEntryId;
  _WSAPROTOCOLCHAIN ProtocolChain;
  int iVersion;
  int iAddressFamily;
  int iMaxSockAddr;
  int iMinSockAddr;
  int iSocketType;
  int iProtocol;
  int iProtocolMaxOffset;
  int iNetworkByteOrder;
  int iSecurityScheme;
  unsigned int dwMessageSize;
  unsigned int dwProviderReserved;
  unsigned __int16 szProtocol[256];
};

/* 3113 */
struct _IMAGE_VXD_HEADER
{
  unsigned __int16 e32_magic;
  char e32_border;
  char e32_worder;
  unsigned int e32_level;
  unsigned __int16 e32_cpu;
  unsigned __int16 e32_os;
  unsigned int e32_ver;
  unsigned int e32_mflags;
  unsigned int e32_mpages;
  unsigned int e32_startobj;
  unsigned int e32_eip;
  unsigned int e32_stackobj;
  unsigned int e32_esp;
  unsigned int e32_pagesize;
  unsigned int e32_lastpagesize;
  unsigned int e32_fixupsize;
  unsigned int e32_fixupsum;
  unsigned int e32_ldrsize;
  unsigned int e32_ldrsum;
  unsigned int e32_objtab;
  unsigned int e32_objcnt;
  unsigned int e32_objmap;
  unsigned int e32_itermap;
  unsigned int e32_rsrctab;
  unsigned int e32_rsrccnt;
  unsigned int e32_restab;
  unsigned int e32_enttab;
  unsigned int e32_dirtab;
  unsigned int e32_dircnt;
  unsigned int e32_fpagetab;
  unsigned int e32_frectab;
  unsigned int e32_impmod;
  unsigned int e32_impmodcnt;
  unsigned int e32_impproc;
  unsigned int e32_pagesum;
  unsigned int e32_datapage;
  unsigned int e32_preload;
  unsigned int e32_nrestab;
  unsigned int e32_cbnrestab;
  unsigned int e32_nressum;
  unsigned int e32_autodata;
  unsigned int e32_debuginfo;
  unsigned int e32_debuglen;
  unsigned int e32_instpreload;
  unsigned int e32_instdemand;
  unsigned int e32_heapsize;
  char e32_res3[12];
  unsigned int e32_winresoff;
  unsigned int e32_winreslen;
  unsigned __int16 e32_devid;
  unsigned __int16 e32_ddkver;
};

/* 3114 */
struct tagEMRSETWORLDTRANSFORM
{
  tagEMR emr;
  tagXFORM xform;
};

/* 3115 */
struct tagMULTIKEYHELPA
{
  unsigned int mkSize;
  char mkKeylist;
  char szKeyphrase[1];
};

/* 3116 */
struct _MINIDUMP_THREAD_EX
{
  unsigned int ThreadId;
  unsigned int SuspendCount;
  unsigned int PriorityClass;
  unsigned int Priority;
  unsigned __int64 Teb;
  _MINIDUMP_MEMORY_DESCRIPTOR Stack;
  _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext;
  _MINIDUMP_MEMORY_DESCRIPTOR BackingStore;
};

/* 3117 */
#pragma pack(push, 1)
struct _MINIDUMP_THREAD_EX_LIST
{
  unsigned int NumberOfThreads;
  _MINIDUMP_THREAD_EX Threads[];
};
#pragma pack(pop)

/* 3118 */
struct _WIN32_FILE_ATTRIBUTE_DATA
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
};

/* 3119 */
struct _OSVERSIONINFOEXA
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  char szCSDVersion[128];
  unsigned __int16 wServicePackMajor;
  unsigned __int16 wServicePackMinor;
  unsigned __int16 wSuiteMask;
  char wProductType;
  char wReserved;
};

/* 3120 */
struct _ImageArchitectureHeader
{
  int _bf0;
  unsigned int FirstEntryRVA;
};

/* 3121 */
struct _SYSTEM_POWER_STATUS
{
  char ACLineStatus;
  char BatteryFlag;
  char BatteryLifePercent;
  char Reserved1;
  unsigned int BatteryLifeTime;
  unsigned int BatteryFullLifeTime;
};

/* 3122 */
struct tagEMRPOLYLINE16
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cpts;
  tagPOINTS apts[1];
};

/* 3123 */
struct tagMENUBARINFO
{
  unsigned int cbSize;
  tagRECT rcBar;
  HMENU__ *hMenu;
  HWND__ *hwndMenu;
  int _bf28;
};

/* 3124 */
struct _WSABUF
{
  unsigned int len;
  char *buf;
};

/* 3125 */
struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 3126 */
struct tagEMRSCALEVIEWPORTEXTEX
{
  tagEMR emr;
  int xNum;
  int xDenom;
  int yNum;
  int yDenom;
};

/* 3127 */
#pragma pack(push, 1)
struct DLGTEMPLATE
{
  unsigned int style;
  unsigned int dwExtendedStyle;
  unsigned __int16 cdit;
  __int16 x;
  __int16 y;
  __int16 cx;
  __int16 cy;
};
#pragma pack(pop)

/* 3128 */
struct tagEMRELLIPSE
{
  tagEMR emr;
  _RECTL rclBox;
};

/* 3129 */
struct _ACCESS_ALLOWED_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 3130 */
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::__unnamed::__unnamed
{
  char Flags;
};

/* 3131 */
union $F742568D58E75A35F9AF27B156627E8C
{
  _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::__unnamed::__unnamed ProcessorCore;
  _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::__unnamed::__unnamed NumaNode;
  unsigned __int64 Reserved[2];
};

/* 3132 */
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION
{
  unsigned int ProcessorMask;
  _LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
  $F742568D58E75A35F9AF27B156627E8C ___u2;
};

/* 3133 */
struct tagENHMETAHEADER
{
  unsigned int iType;
  unsigned int nSize;
  _RECTL rclBounds;
  _RECTL rclFrame;
  unsigned int dSignature;
  unsigned int nVersion;
  unsigned int nBytes;
  unsigned int nRecords;
  unsigned __int16 nHandles;
  unsigned __int16 sReserved;
  unsigned int nDescription;
  unsigned int offDescription;
  unsigned int nPalEntries;
  tagSIZE szlDevice;
  tagSIZE szlMillimeters;
  unsigned int cbPixelFormat;
  unsigned int offPixelFormat;
  unsigned int bOpenGL;
  tagSIZE szlMicrometers;
};

/* 3134 */
struct _TAPE_WMI_OPERATIONS
{
  unsigned int Method;
  unsigned int DataBufferSize;
  void *DataBuffer;
};

/* 3135 */
struct _devicemodeW
{
  unsigned __int16 dmDeviceName[32];
  unsigned __int16 dmSpecVersion;
  unsigned __int16 dmDriverVersion;
  unsigned __int16 dmSize;
  unsigned __int16 dmDriverExtra;
  unsigned int dmFields;
  $37415D7FB1F75105C7347AE16FD725E4 ___u6;
  $4BCFA3688D54F056A8210C50FE42F600 ___u7;
  $F7DE3DCEE75194406F86D93F0E0A40A2 ___u8;
  __int16 dmColor;
  __int16 dmDuplex;
  __int16 dmYResolution;
  __int16 dmTTOption;
  __int16 dmCollate;
  unsigned __int16 dmFormName[32];
  unsigned __int16 dmLogPixels;
  unsigned int dmBitsPerPel;
  unsigned int dmPelsWidth;
  unsigned int dmPelsHeight;
  $309666D137CBB19809FA597AD348B415 ___u19;
  unsigned int dmDisplayFrequency;
  unsigned int dmICMMethod;
  unsigned int dmICMIntent;
  unsigned int dmMediaType;
  unsigned int dmDitherType;
  unsigned int dmReserved1;
  unsigned int dmReserved2;
  unsigned int dmPanningWidth;
  unsigned int dmPanningHeight;
};

/* 3136 */
struct _WSANAMESPACE_INFOW
{
  _GUID NSProviderId;
  unsigned int dwNameSpace;
  int fActive;
  unsigned int dwVersion;
  unsigned __int16 *lpszIdentifier;
};

/* 3137 */
struct tagMOUSEMOVEPOINT
{
  int x;
  int y;
  unsigned int time;
  unsigned int dwExtraInfo;
};

/* 3138 */
struct tagHIGHCONTRASTA
{
  unsigned int cbSize;
  unsigned int dwFlags;
  char *lpszDefaultScheme;
};

/* 3139 */
struct _WSANSClassInfoW
{
  unsigned __int16 *lpszName;
  unsigned int dwNameSpace;
  unsigned int dwValueType;
  unsigned int dwValueSize;
  void *lpValue;
};

/* 3140 */
struct _OSVERSIONINFOA
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  char szCSDVersion[128];
};

/* 3141 */
struct tagEMRSETICMPROFILE
{
  tagEMR emr;
  unsigned int dwFlags;
  unsigned int cbName;
  unsigned int cbData;
  char Data[1];
};

/* 3142 */
struct _IMAGE_BASE_RELOCATION
{
  unsigned int VirtualAddress;
  unsigned int SizeOfBlock;
};

/* 3143 */
struct WSAData
{
  unsigned __int16 wVersion;
  unsigned __int16 wHighVersion;
  char szDescription[257];
  char szSystemStatus[129];
  unsigned __int16 iMaxSockets;
  unsigned __int16 iMaxUdpDg;
  char *lpVendorInfo;
};

/* 3144 */
struct tagCANDIDATELIST
{
  unsigned int dwSize;
  unsigned int dwStyle;
  unsigned int dwCount;
  unsigned int dwSelection;
  unsigned int dwPageStart;
  unsigned int dwPageSize;
  unsigned int dwOffset[1];
};

/* 3145 */
struct tagACCESSTIMEOUT
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iTimeOutMSec;
};

/* 3146 */
struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT
{
  void *CompletionKey;
  void *CompletionPort;
};

/* 3147 */
struct HWINEVENTHOOK__
{
  int unused;
};

/* 3148 */
struct tagMENUGETOBJECTINFO
{
  unsigned int dwFlags;
  unsigned int uPos;
  HMENU__ *hmenu;
  void *riid;
  void *pvObj;
};

/* 3149 */
struct _MINIDUMP_UNLOADED_MODULE_LIST
{
  unsigned int SizeOfHeader;
  unsigned int SizeOfEntry;
  unsigned int NumberOfEntries;
};

/* 3150 */
struct _MESSAGE_RESOURCE_ENTRY
{
  unsigned __int16 Length;
  unsigned __int16 Flags;
  char Text[1];
};

/* 3151 */
struct tagHIGHCONTRASTW
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned __int16 *lpszDefaultScheme;
};

/* 3152 */
#pragma pack(push, 1)
struct _MINIDUMP_MODULE
{
  unsigned __int64 BaseOfImage;
  unsigned int SizeOfImage;
  unsigned int CheckSum;
  unsigned int TimeDateStamp;
  unsigned int ModuleNameRva;
  tagVS_FIXEDFILEINFO VersionInfo;
  _MINIDUMP_LOCATION_DESCRIPTOR CvRecord;
  _MINIDUMP_LOCATION_DESCRIPTOR MiscRecord;
  unsigned __int64 Reserved0;
  unsigned __int64 Reserved1;
};
#pragma pack(pop)

/* 3153 */
struct tagPOLYTEXTW
{
  int x;
  int y;
  unsigned int n;
  const unsigned __int16 *lpstr;
  unsigned int uiFlags;
  tagRECT rcl;
  int *pdx;
};

/* 3154 */
struct _flowspec
{
  unsigned int TokenRate;
  unsigned int TokenBucketSize;
  unsigned int PeakBandwidth;
  unsigned int Latency;
  unsigned int DelayVariation;
  unsigned int ServiceType;
  unsigned int MaxSduSize;
  unsigned int MinimumPolicedSize;
};

/* 3155 */
struct _QualityOfService
{
  _flowspec SendingFlowspec;
  _flowspec ReceivingFlowspec;
  _WSABUF ProviderSpecific;
};

/* 3156 */
struct SYSTEM_BATTERY_STATE
{
  char AcOnLine;
  char BatteryPresent;
  char Charging;
  char Discharging;
  char Spare1[4];
  unsigned int MaxCapacity;
  unsigned int RemainingCapacity;
  unsigned int Rate;
  unsigned int EstimatedTime;
  unsigned int DefaultAlert1;
  unsigned int DefaultAlert2;
};

/* 3157 */
struct tagICONMETRICSA
{
  unsigned int cbSize;
  int iHorzSpacing;
  int iVertSpacing;
  int iTitleWrap;
  tagLOGFONTA lfFont;
};

/* 3158 */
struct _nlsversioninfo
{
  unsigned int dwNLSVersionInfoSize;
  unsigned int dwNLSVersion;
  unsigned int dwDefinedVersion;
};

/* 3159 */
struct HMETAFILE__
{
  int unused;
};

/* 3160 */
struct tagMETAFILEPICT
{
  int mm;
  int xExt;
  int yExt;
  HMETAFILE__ *hMF;
};

/* 3161 */
struct _FOCUS_EVENT_RECORD
{
  int bSetFocus;
};

/* 3162 */
struct _tagSTACKFRAME64
{
  _tagADDRESS64 AddrPC;
  _tagADDRESS64 AddrReturn;
  _tagADDRESS64 AddrFrame;
  _tagADDRESS64 AddrStack;
  _tagADDRESS64 AddrBStore;
  void *FuncTableEntry;
  unsigned __int64 Params[4];
  int Far;
  int Virtual;
  unsigned __int64 Reserved[3];
  _KDHELP64 KdHelp;
};

/* 3163 */
struct tagHELPWININFOW
{
  int wStructSize;
  int x;
  int y;
  int dx;
  int dy;
  int wMax;
  unsigned __int16 rgchMember[2];
};

/* 3164 */
struct _numberfmtA
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  char *lpDecimalSep;
  char *lpThousandSep;
  unsigned int NegativeOrder;
};

/* 3165 */
struct _WSAServiceClassInfoW
{
  _GUID *lpServiceClassId;
  unsigned __int16 *lpszServiceClassName;
  unsigned int dwCount;
  _WSANSClassInfoW *lpClassInfos;
};

/* 3166 */
struct tagHANDLETABLE
{
  void *objectHandle[1];
};

/* 3167 */
struct tagSOUNDSENTRYA
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iFSTextEffect;
  unsigned int iFSTextEffectMSec;
  unsigned int iFSTextEffectColorBits;
  unsigned int iFSGrafEffect;
  unsigned int iFSGrafEffectMSec;
  unsigned int iFSGrafEffectColor;
  unsigned int iWindowsEffect;
  unsigned int iWindowsEffectMSec;
  char *lpszWindowsEffectDLL;
  unsigned int iWindowsEffectOrdinal;
};

/* 3168 */
struct _IMAGE_RESOURCE_DATA_ENTRY
{
  unsigned int OffsetToData;
  unsigned int Size;
  unsigned int CodePage;
  unsigned int Reserved;
};

/* 3169 */
struct _COMMTIMEOUTS
{
  unsigned int ReadIntervalTimeout;
  unsigned int ReadTotalTimeoutMultiplier;
  unsigned int ReadTotalTimeoutConstant;
  unsigned int WriteTotalTimeoutMultiplier;
  unsigned int WriteTotalTimeoutConstant;
};

/* 3170 */
struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 3171 */
struct _EXIT_PROCESS_DEBUG_INFO
{
  unsigned int dwExitCode;
};

/* 3172 */
struct _SOURCEFILE
{
  unsigned __int64 ModBase;
  char *FileName;
};

/* 3173 */
struct _ImageArchitectureEntry
{
  unsigned int FixupInstRVA;
  unsigned int NewInst;
};

/* 3174 */
union $4CFA15F5CE489CDF0BD78DFB308FEF36
{
  unsigned __int16 Ordinal;
  unsigned __int16 Hint;
};

/* 3175 */
struct IMPORT_OBJECT_HEADER
{
  unsigned __int16 Sig1;
  unsigned __int16 Sig2;
  unsigned __int16 Version;
  unsigned __int16 Machine;
  unsigned int TimeDateStamp;
  unsigned int SizeOfData;
  $4CFA15F5CE489CDF0BD78DFB308FEF36 ___u6;
  __int16 _bf18;
};

/* 3176 */
struct tagMSGBOXPARAMSW
{
  unsigned int cbSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpszText;
  const unsigned __int16 *lpszCaption;
  unsigned int dwStyle;
  const unsigned __int16 *lpszIcon;
  unsigned int dwContextHelpId;
  void (__stdcall *lpfnMsgBoxCallback)(tagHELPINFO *);
  unsigned int dwLanguageId;
};

/* 3177 */
struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD64
{
  unsigned int SizeOfStruct;
  unsigned __int64 BaseOfImage;
  unsigned int CheckSum;
  unsigned int TimeDateStamp;
  char FileName[260];
  char Reparse;
  void *hFile;
  unsigned int Flags;
};

/* 3178 */
struct tagMSG
{
  HWND__ *hwnd;
  unsigned int message;
  unsigned int wParam;
  int lParam;
  unsigned int time;
  tagPOINT pt;
};

/* 3179 */
struct _WSAServiceClassInfoA
{
  _GUID *lpServiceClassId;
  char *lpszServiceClassName;
  unsigned int dwCount;
  _WSANSClassInfoA *lpClassInfos;
};

/* 3180 */
struct tagLOGPALETTE
{
  unsigned __int16 palVersion;
  unsigned __int16 palNumEntries;
  tagPALETTEENTRY palPalEntry[1];
};

/* 3181 */
struct tagNONCLIENTMETRICSA
{
  unsigned int cbSize;
  int iBorderWidth;
  int iScrollWidth;
  int iScrollHeight;
  int iCaptionWidth;
  int iCaptionHeight;
  tagLOGFONTA lfCaptionFont;
  int iSmCaptionWidth;
  int iSmCaptionHeight;
  tagLOGFONTA lfSmCaptionFont;
  int iMenuWidth;
  int iMenuHeight;
  tagLOGFONTA lfMenuFont;
  tagLOGFONTA lfStatusFont;
  tagLOGFONTA lfMessageFont;
};

/* 3182 */
struct tagCREATESTRUCTW
{
  void *lpCreateParams;
  HINSTANCE__ *hInstance;
  HMENU__ *hMenu;
  HWND__ *hwndParent;
  int cy;
  int cx;
  int y;
  int x;
  int style;
  const unsigned __int16 *lpszName;
  const unsigned __int16 *lpszClass;
  unsigned int dwExStyle;
};

/* 3183 */
struct tagCBT_CREATEWNDW
{
  tagCREATESTRUCTW *lpcs;
  HWND__ *hwndInsertAfter;
};

/* 3184 */
struct _stat
{
  unsigned int st_dev;
  unsigned __int16 st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  unsigned int st_rdev;
  int st_size;
  int st_atime;
  int st_mtime;
  int st_ctime;
};

/* 3185 */
struct FLASHWINFO
{
  unsigned int cbSize;
  HWND__ *hwnd;
  unsigned int dwFlags;
  unsigned int uCount;
  unsigned int dwTimeout;
};

/* 3186 */
struct _MODEMDEVCAPS
{
  unsigned int dwActualSize;
  unsigned int dwRequiredSize;
  unsigned int dwDevSpecificOffset;
  unsigned int dwDevSpecificSize;
  unsigned int dwModemProviderVersion;
  unsigned int dwModemManufacturerOffset;
  unsigned int dwModemManufacturerSize;
  unsigned int dwModemModelOffset;
  unsigned int dwModemModelSize;
  unsigned int dwModemVersionOffset;
  unsigned int dwModemVersionSize;
  unsigned int dwDialOptions;
  unsigned int dwCallSetupFailTimer;
  unsigned int dwInactivityTimeout;
  unsigned int dwSpeakerVolume;
  unsigned int dwSpeakerMode;
  unsigned int dwModemOptions;
  unsigned int dwMaxDTERate;
  unsigned int dwMaxDCERate;
  char abVariablePortion[1];
};

/* 3187 */
struct _NT_TIB
{
  struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
  void *StackBase;
  void *StackLimit;
  void *SubSystemTib;
  $7A727655067EA29DD1B3C3F7D79CBFD1 ___u4;
  void *ArbitraryUserPointer;
  _NT_TIB *Self;
};

/* 3188 */
union $7A727655067EA29DD1B3C3F7D79CBFD1
{
  void *FiberData;
  unsigned int Version;
};

/* 3189 */
struct tagWINDOWPLACEMENT
{
  unsigned int length;
  unsigned int flags;
  unsigned int showCmd;
  tagPOINT ptMinPosition;
  tagPOINT ptMaxPosition;
  tagRECT rcNormalPosition;
};

/* 3190 */
struct _SERVICE_STATUS
{
  unsigned int dwServiceType;
  unsigned int dwCurrentState;
  unsigned int dwControlsAccepted;
  unsigned int dwWin32ExitCode;
  unsigned int dwServiceSpecificExitCode;
  unsigned int dwCheckPoint;
  unsigned int dwWaitHint;
};

/* 3191 */
struct _ENUM_SERVICE_STATUSW
{
  unsigned __int16 *lpServiceName;
  unsigned __int16 *lpDisplayName;
  _SERVICE_STATUS ServiceStatus;
};

/* 3192 */
struct value_entW
{
  unsigned __int16 *ve_valuename;
  unsigned int ve_valuelen;
  unsigned int ve_valueptr;
  unsigned int ve_type;
};

/* 3193 */
struct _PACKEDEVENTINFO
{
  unsigned int ulSize;
  unsigned int ulNumEventsForLogFile;
  unsigned int ulOffsets[];
};

/* 3194 */
struct _MEMORYSTATUSEX
{
  unsigned int dwLength;
  unsigned int dwMemoryLoad;
  unsigned __int64 ullTotalPhys;
  unsigned __int64 ullAvailPhys;
  unsigned __int64 ullTotalPageFile;
  unsigned __int64 ullAvailPageFile;
  unsigned __int64 ullTotalVirtual;
  unsigned __int64 ullAvailVirtual;
  unsigned __int64 ullAvailExtendedVirtual;
};

/* 3195 */
struct sockproto
{
  unsigned __int16 sp_family;
  unsigned __int16 sp_protocol;
};

/* 3196 */
struct _PSINJECTDATA
{
  unsigned int DataBytes;
  unsigned __int16 InjectionPoint;
  unsigned __int16 PageNumber;
};

/* 3197 */
struct tagMENUITEMINFOW
{
  unsigned int cbSize;
  unsigned int fMask;
  unsigned int fType;
  unsigned int fState;
  unsigned int wID;
  HMENU__ *hSubMenu;
  HBITMAP__ *hbmpChecked;
  HBITMAP__ *hbmpUnchecked;
  unsigned int dwItemData;
  unsigned __int16 *dwTypeData;
  unsigned int cch;
  HBITMAP__ *hbmpItem;
};

/* 3198 */
struct tagGCP_RESULTSA
{
  unsigned int lStructSize;
  char *lpOutString;
  unsigned int *lpOrder;
  int *lpDx;
  int *lpCaretPos;
  char *lpClass;
  unsigned __int16 *lpGlyphs;
  unsigned int nGlyphs;
  int nMaxFit;
};

/* 3199 */
struct API_VERSION
{
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned __int16 Revision;
  unsigned __int16 Reserved;
};

/* 3200 */
struct HTASK__
{
  int unused;
};

/* 3201 */
struct tagEMRFORMAT
{
  unsigned int dSignature;
  unsigned int nVersion;
  unsigned int cbData;
  unsigned int offData;
};

/* 3202 */
struct tagMETARECORD
{
  unsigned int rdSize;
  unsigned __int16 rdFunction;
  unsigned __int16 rdParm[1];
};

/* 3203 */
struct _MODULE_TYPE_INFO
{
  unsigned __int16 dataLength;
  unsigned __int16 leaf;
  char data[1];
};

/* 3204 */
struct _GENERIC_MAPPING
{
  unsigned int GenericRead;
  unsigned int GenericWrite;
  unsigned int GenericExecute;
  unsigned int GenericAll;
};

/* 3205 */
struct _heapinfo
{
  int *_pentry;
  unsigned int _size;
  int _useflag;
};

/* 3206 */
struct _SC_ACTION
{
  _SC_ACTION_TYPE Type;
  unsigned int Delay;
};

/* 3207 */
struct _SERVICE_FAILURE_ACTIONSA
{
  unsigned int dwResetPeriod;
  char *lpRebootMsg;
  char *lpCommand;
  unsigned int cActions;
  _SC_ACTION *lpsaActions;
};

/* 3208 */
struct HIMC__
{
  int unused;
};

/* 3209 */
struct tagEMREXTCREATEPEN
{
  tagEMR emr;
  unsigned int ihPen;
  unsigned int offBmi;
  unsigned int cbBmi;
  unsigned int offBits;
  unsigned int cbBits;
  tagEXTLOGPEN elp;
};

/* 3210 */
union $66A2FC5ED47CB5912809650DAB14E256
{
  unsigned int VirtualAddress;
  unsigned int RelocCount;
};

/* 3211 */
#pragma pack(push, 1)
struct _IMAGE_RELOCATION
{
  $66A2FC5ED47CB5912809650DAB14E256 ___u0;
  unsigned int SymbolTableIndex;
  unsigned __int16 Type;
};
#pragma pack(pop)

/* 3212 */
struct tagWNDCLASSW
{
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const unsigned __int16 *lpszMenuName;
  const unsigned __int16 *lpszClassName;
};

/* 3213 */
struct _QUERY_SERVICE_LOCK_STATUSW
{
  unsigned int fIsLocked;
  unsigned __int16 *lpLockOwner;
  unsigned int dwLockDuration;
};

/* 3214 */
struct _MINIDUMP_USER_RECORD
{
  unsigned int Type;
  _MINIDUMP_LOCATION_DESCRIPTOR Memory;
};

/* 3215 */
struct _MOUSE_EVENT_RECORD
{
  _COORD dwMousePosition;
  unsigned int dwButtonState;
  unsigned int dwControlKeyState;
  unsigned int dwEventFlags;
};

/* 3216 */
struct tagLOCALESIGNATURE
{
  unsigned int lsUsb[4];
  unsigned int lsCsbDefault[2];
  unsigned int lsCsbSupported[2];
};

/* 3217 */
struct _CONNECTDLGSTRUCTW
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  _NETRESOURCEW *lpConnRes;
  unsigned int dwFlags;
  unsigned int dwDevNum;
};

/* 3218 */
struct tagWINDOWPOS
{
  HWND__ *hwnd;
  HWND__ *hwndInsertAfter;
  int x;
  int y;
  int cx;
  int cy;
  unsigned int flags;
};

/* 3219 */
struct tagNCCALCSIZE_PARAMS
{
  tagRECT rgrc[3];
  tagWINDOWPOS *lppos;
};

/* 3220 */
struct _WSACOMPLETION::__unnamed::__unnamed
{
  HWND__ *hWnd;
  unsigned int uMsg;
  unsigned int context;
};

/* 3221 */
union _WSACOMPLETION::__unnamed
{
  _WSACOMPLETION::__unnamed::__unnamed WindowMessage;
  _WSACOMPLETION::__unnamed::__unnamed Event;
  _WSACOMPLETION::__unnamed::__unnamed Apc;
  _WSACOMPLETION::__unnamed::__unnamed Port;
};

/* 3222 */
struct _WSACOMPLETION
{
  _WSACOMPLETIONTYPE Type;
  _WSACOMPLETION::__unnamed Parameters;
};

/* 3223 */
struct _IMAGE_SEPARATE_DEBUG_HEADER
{
  unsigned __int16 Signature;
  unsigned __int16 Flags;
  unsigned __int16 Machine;
  unsigned __int16 Characteristics;
  unsigned int TimeDateStamp;
  unsigned int CheckSum;
  unsigned int ImageBase;
  unsigned int SizeOfImage;
  unsigned int NumberOfSections;
  unsigned int ExportedNamesSize;
  unsigned int DebugDirectorySize;
  unsigned int SectionAlignment;
  unsigned int Reserved[2];
};

/* 3224 */
struct tagCOMPAREITEMSTRUCT
{
  unsigned int CtlType;
  unsigned int CtlID;
  HWND__ *hwndItem;
  unsigned int itemID1;
  unsigned int itemData1;
  unsigned int itemID2;
  unsigned int itemData2;
  unsigned int dwLocaleId;
};

/* 3225 */
struct _ENUM_SERVICE_STATUSA
{
  char *lpServiceName;
  char *lpDisplayName;
  _SERVICE_STATUS ServiceStatus;
};

/* 3226 */
struct tagEMRRESTOREDC
{
  tagEMR emr;
  int iRelative;
};

/* 3227 */
struct _MESSAGE_RESOURCE_DATA
{
  unsigned int NumberOfBlocks;
  _MESSAGE_RESOURCE_BLOCK Blocks[1];
};

/* 3228 */
struct _cpinfoexW
{
  unsigned int MaxCharSize;
  char DefaultChar[2];
  char LeadByte[12];
  unsigned __int16 UnicodeDefaultChar;
  unsigned int CodePage;
  unsigned __int16 CodePageName[260];
};

/* 3229 */
struct tagIMECHARPOSITION
{
  unsigned int dwSize;
  unsigned int dwCharPos;
  tagPOINT pt;
  unsigned int cLineHeight;
  tagRECT rcDocument;
};

/* 3230 */
struct __wfinddata64_t
{
  unsigned int attrib;
  __int64 time_create;
  __int64 time_access;
  __int64 time_write;
  __int64 size;
  wchar_t name[260];
};

/* 3231 */
struct $236AF168BDC763FFEAC5B27EDA687B1B
{
  _SINGLE_LIST_ENTRY Next;
  unsigned __int16 Depth;
  unsigned __int16 Sequence;
};

/* 3232 */
union _SLIST_HEADER
{
  unsigned __int64 Alignment;
  $236AF168BDC763FFEAC5B27EDA687B1B _s1;
};

/* 3233 */
struct _UNIVERSAL_NAME_INFOW
{
  unsigned __int16 *lpUniversalName;
};

/* 3234 */
struct _TAPE_WRITE_MARKS
{
  unsigned int Type;
  unsigned int Count;
  char Immediate;
};

/* 3235 */
struct tagSTYLEBUFA
{
  unsigned int dwStyle;
  char szDescription[32];
};

/* 3236 */
struct tagCURSORINFO
{
  unsigned int cbSize;
  unsigned int flags;
  HICON__ *hCursor;
  tagPOINT ptScreenPos;
};

/* 3237 */
struct value_entA
{
  char *ve_valuename;
  unsigned int ve_valuelen;
  unsigned int ve_valueptr;
  unsigned int ve_type;
};

/* 3238 */
struct _IO_COUNTERS
{
  unsigned __int64 ReadOperationCount;
  unsigned __int64 WriteOperationCount;
  unsigned __int64 OtherOperationCount;
  unsigned __int64 ReadTransferCount;
  unsigned __int64 WriteTransferCount;
  unsigned __int64 OtherTransferCount;
};

/* 3239 */
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION
{
  _JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
  _IO_COUNTERS IoInfo;
  unsigned int ProcessMemoryLimit;
  unsigned int JobMemoryLimit;
  unsigned int PeakProcessMemoryUsed;
  unsigned int PeakJobMemoryUsed;
};

/* 3240 */
struct _MINIDUMP_MODULE_LIST
{
  unsigned int NumberOfModules;
  _MINIDUMP_MODULE Modules[];
};

/* 3241 */
struct _MINIDUMP_HANDLE_DESCRIPTOR
{
  unsigned __int64 Handle;
  unsigned int TypeNameRva;
  unsigned int ObjectNameRva;
  unsigned int Attributes;
  unsigned int GrantedAccess;
  unsigned int HandleCount;
  unsigned int PointerCount;
};

/* 3242 */
struct _MEMORYSTATUS
{
  unsigned int dwLength;
  unsigned int dwMemoryLoad;
  unsigned int dwTotalPhys;
  unsigned int dwAvailPhys;
  unsigned int dwTotalPageFile;
  unsigned int dwAvailPageFile;
  unsigned int dwTotalVirtual;
  unsigned int dwAvailVirtual;
};

/* 3243 */
struct _WGLSWAP
{
  HDC__ *hdc;
  unsigned int uiFlags;
};

/* 3244 */
struct tagCHARSETINFO
{
  unsigned int ciCharset;
  unsigned int ciACP;
  tagFONTSIGNATURE fs;
};

/* 3245 */
struct tagTTPOLYGONHEADER
{
  unsigned int cb;
  unsigned int dwType;
  tagPOINTFX pfxStart;
};

/* 3246 */
struct _MODLOAD_DATA
{
  unsigned int ssize;
  unsigned int ssig;
  void *data;
  unsigned int size;
  unsigned int flags;
};

/* 3247 */
struct _IMAGE_ARCHIVE_MEMBER_HEADER
{
  char Name[16];
  char Date[12];
  char UserID[6];
  char GroupID[6];
  char Mode[8];
  char Size[10];
  char EndHeader[2];
};

/* 3248 */
struct _IMAGEHLP_DUPLICATE_SYMBOL64
{
  unsigned int SizeOfStruct;
  unsigned int NumberOfDups;
  _IMAGEHLP_SYMBOL64 *Symbol;
  unsigned int SelectedSymbol;
};

/* 3249 */
#pragma pack(push, 1)
struct _MINIDUMP_THREAD_LIST
{
  unsigned int NumberOfThreads;
  _MINIDUMP_THREAD Threads[];
};
#pragma pack(pop)

/* 3250 */
struct _IMAGEHLP_DUPLICATE_SYMBOL
{
  unsigned int SizeOfStruct;
  unsigned int NumberOfDups;
  _IMAGEHLP_SYMBOL *Symbol;
  unsigned int SelectedSymbol;
};

/* 3251 */
struct IMAGE_COR20_HEADER
{
  unsigned int cb;
  unsigned __int16 MajorRuntimeVersion;
  unsigned __int16 MinorRuntimeVersion;
  _IMAGE_DATA_DIRECTORY MetaData;
  unsigned int Flags;
  unsigned int EntryPointToken;
  _IMAGE_DATA_DIRECTORY Resources;
  _IMAGE_DATA_DIRECTORY StrongNameSignature;
  _IMAGE_DATA_DIRECTORY CodeManagerTable;
  _IMAGE_DATA_DIRECTORY VTableFixups;
  _IMAGE_DATA_DIRECTORY ExportAddressTableJumps;
  _IMAGE_DATA_DIRECTORY ManagedNativeHeader;
};

/* 3252 */
struct _IMAGE_EXPORT_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int Name;
  unsigned int Base;
  unsigned int NumberOfFunctions;
  unsigned int NumberOfNames;
  unsigned int AddressOfFunctions;
  unsigned int AddressOfNames;
  unsigned int AddressOfNameOrdinals;
};

/* 3253 */
struct tagEMRPLGBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  _POINTL aptlDest[3];
  int xSrc;
  int ySrc;
  int cxSrc;
  int cySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int xMask;
  int yMask;
  unsigned int iUsageMask;
  unsigned int offBmiMask;
  unsigned int cbBmiMask;
  unsigned int offBitsMask;
  unsigned int cbBitsMask;
};

/* 3254 */
struct _LOAD_DLL_DEBUG_INFO
{
  void *hFile;
  void *lpBaseOfDll;
  unsigned int dwDebugInfoFileOffset;
  unsigned int nDebugInfoSize;
  void *lpImageName;
  unsigned __int16 fUnicode;
};

/* 3255 */
struct _IMAGE_RUNTIME_FUNCTION_ENTRY
{
  unsigned int BeginAddress;
  unsigned int EndAddress;
  unsigned int UnwindInfoAddress;
};

/* 3256 */
struct tagEMRCREATEMONOBRUSH
{
  tagEMR emr;
  unsigned int ihBrush;
  unsigned int iUsage;
  unsigned int offBmi;
  unsigned int cbBmi;
  unsigned int offBits;
  unsigned int cbBits;
};

/* 3257 */
union _FILE_SEGMENT_ELEMENT
{
  void *Buffer;
  unsigned __int64 Alignment;
};

/* 3258 */
struct tagENUMLOGFONTEXA
{
  tagLOGFONTA elfLogFont;
  char elfFullName[64];
  char elfStyle[32];
  char elfScript[32];
};

/* 3259 */
struct _div_t
{
  int quot;
  int rem;
};

/* 3260 */
struct _GLYPHMETRICS
{
  unsigned int gmBlackBoxX;
  unsigned int gmBlackBoxY;
  tagPOINT gmptGlyphOrigin;
  __int16 gmCellIncX;
  __int16 gmCellIncY;
};

/* 3261 */
struct _JOB_SET_ARRAY
{
  void *JobHandle;
  unsigned int MemberLevel;
  unsigned int Flags;
};

/* 3262 */
struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION
{
  _LARGE_INTEGER TotalUserTime;
  _LARGE_INTEGER TotalKernelTime;
  _LARGE_INTEGER ThisPeriodTotalUserTime;
  _LARGE_INTEGER ThisPeriodTotalKernelTime;
  unsigned int TotalPageFaultCount;
  unsigned int TotalProcesses;
  unsigned int ActiveProcesses;
  unsigned int TotalTerminatedProcesses;
};

/* 3263 */
struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION
{
  _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
  _IO_COUNTERS IoInfo;
};

/* 3264 */
struct _MINIDUMP_MISC_INFO
{
  unsigned int SizeOfInfo;
  unsigned int Flags1;
  unsigned int ProcessId;
  unsigned int ProcessCreateTime;
  unsigned int ProcessUserTime;
  unsigned int ProcessKernelTime;
};

/* 3265 */
struct tagEMRSETMITERLIMIT
{
  tagEMR emr;
  float eMiterLimit;
};

/* 3266 */
struct tagEMRCREATEBRUSHINDIRECT
{
  tagEMR emr;
  unsigned int ihBrush;
  tagLOGBRUSH32 lb;
};

/* 3267 */
struct _IMAGEHLP_MODULE64W
{
  unsigned int SizeOfStruct;
  unsigned __int64 BaseOfImage;
  unsigned int ImageSize;
  unsigned int TimeDateStamp;
  unsigned int CheckSum;
  unsigned int NumSyms;
  SYM_TYPE SymType;
  unsigned __int16 ModuleName[32];
  unsigned __int16 ImageName[256];
  unsigned __int16 LoadedImageName[256];
};

/* 3268 */
struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION
{
  unsigned int dwFlags;
  unsigned int ulFormatVersion;
  unsigned int ulAssemblyCount;
  unsigned int ulRootManifestPathType;
  unsigned int ulRootManifestPathChars;
  unsigned int ulRootConfigurationPathType;
  unsigned int ulRootConfigurationPathChars;
  unsigned int ulAppDirPathType;
  unsigned int ulAppDirPathChars;
  const unsigned __int16 *lpRootManifestPath;
  const unsigned __int16 *lpRootConfigurationPath;
  const unsigned __int16 *lpAppDirPath;
};

/* 3269 */
struct _CREATE_THREAD_DEBUG_INFO
{
  void *hThread;
  void *lpThreadLocalBase;
  unsigned int (__stdcall *lpStartAddress)(void *);
};

/* 3270 */
union _DEBUG_EVENT::__unnamed
{
  _EXCEPTION_DEBUG_INFO Exception;
  _CREATE_THREAD_DEBUG_INFO CreateThread;
  _CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
  _EXIT_THREAD_DEBUG_INFO ExitThread;
  _EXIT_PROCESS_DEBUG_INFO ExitProcess;
  _LOAD_DLL_DEBUG_INFO LoadDll;
  _UNLOAD_DLL_DEBUG_INFO UnloadDll;
  _OUTPUT_DEBUG_STRING_INFO DebugString;
  _RIP_INFO RipInfo;
};

/* 3271 */
struct _DEBUG_EVENT
{
  unsigned int dwDebugEventCode;
  unsigned int dwProcessId;
  unsigned int dwThreadId;
  _DEBUG_EVENT::__unnamed u;
};

/* 3272 */
struct _SECURITY_DESCRIPTOR_RELATIVE
{
  char Revision;
  char Sbz1;
  unsigned __int16 Control;
  unsigned int Owner;
  unsigned int Group;
  unsigned int Sacl;
  unsigned int Dacl;
};

/* 3273 */
#pragma pack(push, 1)
struct _MINIDUMP_MEMORY_LIST
{
  unsigned int NumberOfMemoryRanges;
  _MINIDUMP_MEMORY_DESCRIPTOR MemoryRanges[];
};
#pragma pack(pop)

/* 3274 */
struct _TOKEN_STATISTICS
{
  _LUID TokenId;
  _LUID AuthenticationId;
  _LARGE_INTEGER ExpirationTime;
  _TOKEN_TYPE TokenType;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  unsigned int DynamicCharged;
  unsigned int DynamicAvailable;
  unsigned int GroupCount;
  unsigned int PrivilegeCount;
  _LUID ModifiedId;
};

/* 3275 */
struct _PRIVILEGE_SET
{
  unsigned int PrivilegeCount;
  unsigned int Control;
  _LUID_AND_ATTRIBUTES Privilege[1];
};

/* 3276 */
struct _TAPE_GET_POSITION
{
  unsigned int Type;
  unsigned int Partition;
  _LARGE_INTEGER Offset;
};

/* 3277 */
struct tagCWPSTRUCT
{
  int lParam;
  unsigned int wParam;
  unsigned int message;
  HWND__ *hwnd;
};

/* 3278 */
struct tagALTTABINFO
{
  unsigned int cbSize;
  int cItems;
  int cColumns;
  int cRows;
  int iColFocus;
  int iRowFocus;
  int cxItem;
  int cyItem;
  tagPOINT ptStart;
};

/* 3279 */
struct _IMAGE_TLS_DIRECTORY32
{
  unsigned int StartAddressOfRawData;
  unsigned int EndAddressOfRawData;
  unsigned int AddressOfIndex;
  unsigned int AddressOfCallBacks;
  unsigned int SizeOfZeroFill;
  unsigned int Characteristics;
};

/* 3280 */
struct tagEMRPOLYDRAW16
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cpts;
  tagPOINTS apts[1];
  char abTypes[1];
};

/* 3281 */
struct _GRADIENT_RECT
{
  unsigned int UpperLeft;
  unsigned int LowerRight;
};

/* 3282 */
struct _QOS_SHAPING_RATE
{
  QOS_OBJECT_HDR ObjectHdr;
  unsigned int ShapingRate;
};

/* 3283 */
struct _TAPE_ERASE
{
  unsigned int Type;
  char Immediate;
};

/* 3284 */
struct HRSRC__
{
  int unused;
};

/* 3285 */
struct _ACL_SIZE_INFORMATION
{
  unsigned int AceCount;
  unsigned int AclBytesInUse;
  unsigned int AclBytesFree;
};

/* 3286 */
struct tagEMRPOLYPOLYLINE16
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int nPolys;
  unsigned int cpts;
  unsigned int aPolyCounts[1];
  tagPOINTS apts[1];
};

/* 3287 */
struct _MINIDUMP_DIRECTORY
{
  unsigned int StreamType;
  _MINIDUMP_LOCATION_DESCRIPTOR Location;
};

/* 3288 */
struct _ENUM_SERVICE_STATUS_PROCESSW
{
  unsigned __int16 *lpServiceName;
  unsigned __int16 *lpDisplayName;
  _SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

/* 3289 */
struct tagKERNINGPAIR
{
  unsigned __int16 wFirst;
  unsigned __int16 wSecond;
  int iKernAmount;
};

/* 3290 */
struct tagEMRCREATEPEN
{
  tagEMR emr;
  unsigned int ihPen;
  tagLOGPEN lopn;
};

/* 3291 */
union _KEY_EVENT_RECORD::__unnamed
{
  unsigned __int16 UnicodeChar;
  char AsciiChar;
};

/* 3292 */
struct _KEY_EVENT_RECORD
{
  int bKeyDown;
  unsigned __int16 wRepeatCount;
  unsigned __int16 wVirtualKeyCode;
  unsigned __int16 wVirtualScanCode;
  _KEY_EVENT_RECORD::__unnamed uChar;
  unsigned int dwControlKeyState;
};

/* 3293 */
struct _QUERY_SERVICE_LOCK_STATUSA
{
  unsigned int fIsLocked;
  char *lpLockOwner;
  unsigned int dwLockDuration;
};

/* 3294 */
struct _OBJECTID
{
  _GUID Lineage;
  unsigned int Uniquifier;
};

/* 3295 */
struct _SYSTEM_ALARM_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 3296 */
struct IMAGE_LOAD_CONFIG_DIRECTORY64
{
  unsigned int Size;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int GlobalFlagsClear;
  unsigned int GlobalFlagsSet;
  unsigned int CriticalSectionDefaultTimeout;
  unsigned __int64 DeCommitFreeBlockThreshold;
  unsigned __int64 DeCommitTotalFreeThreshold;
  unsigned __int64 LockPrefixTable;
  unsigned __int64 MaximumAllocationSize;
  unsigned __int64 VirtualMemoryThreshold;
  unsigned __int64 ProcessAffinityMask;
  unsigned int ProcessHeapFlags;
  unsigned __int16 CSDVersion;
  unsigned __int16 Reserved1;
  unsigned __int64 EditList;
  unsigned __int64 SecurityCookie;
  unsigned __int64 SEHandlerTable;
  unsigned __int64 SEHandlerCount;
};

/* 3297 */
struct tagEMRSETPIXELV
{
  tagEMR emr;
  _POINTL ptlPixel;
  unsigned int crColor;
};

/* 3298 */
struct linger
{
  unsigned __int16 l_onoff;
  unsigned __int16 l_linger;
};

/* 3299 */
union $8662F439D215AAEDBB1F787C8B649648
{
  unsigned __int64 FiberData;
  unsigned int Version;
};

/* 3300 */
struct _NT_TIB64
{
  unsigned __int64 ExceptionList;
  unsigned __int64 StackBase;
  unsigned __int64 StackLimit;
  unsigned __int64 SubSystemTib;
  $8662F439D215AAEDBB1F787C8B649648 ___u4;
  unsigned __int64 ArbitraryUserPointer;
  unsigned __int64 Self;
};

/* 3301 */
struct _ABCFLOAT
{
  float abcfA;
  float abcfB;
  float abcfC;
};

/* 3302 */
struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
{
  unsigned __int64 BeginAddress;
  unsigned __int64 EndAddress;
  unsigned __int64 ExceptionHandler;
  unsigned __int64 HandlerData;
  unsigned __int64 PrologEndAddress;
};

/* 3303 */
struct _CONSOLE_CURSOR_INFO
{
  unsigned int dwSize;
  int bVisible;
};

/* 3304 */
struct _TAPE_GET_MEDIA_PARAMETERS
{
  _LARGE_INTEGER Capacity;
  _LARGE_INTEGER Remaining;
  unsigned int BlockSize;
  unsigned int PartitionCount;
  char WriteProtected;
};

/* 3305 */
struct _wfinddatai64_t
{
  unsigned int attrib;
  int time_create;
  int time_access;
  int time_write;
  __int64 size;
  wchar_t name[260];
};

/* 3306 */
struct _SERVICE_DESCRIPTIONA
{
  char *lpDescription;
};

/* 3307 */
struct timeval
{
  int tv_sec;
  int tv_usec;
};

/* 3308 */
struct tagBITMAP
{
  int bmType;
  int bmWidth;
  int bmHeight;
  int bmWidthBytes;
  unsigned __int16 bmPlanes;
  unsigned __int16 bmBitsPixel;
  void *bmBits;
};

/* 3309 */
struct tagDIBSECTION
{
  tagBITMAP dsBm;
  tagBITMAPINFOHEADER dsBmih;
  unsigned int dsBitfields[3];
  void *dshSection;
  unsigned int dsOffset;
};

/* 3310 */
struct _WIN32_STREAM_ID
{
  unsigned int dwStreamId;
  unsigned int dwStreamAttributes;
  _LARGE_INTEGER Size;
  unsigned int dwStreamNameSize;
  unsigned __int16 cStreamName[1];
};

/* 3311 */
struct tagENUMLOGFONTEXW
{
  tagLOGFONTW elfLogFont;
  unsigned __int16 elfFullName[64];
  unsigned __int16 elfStyle[32];
  unsigned __int16 elfScript[32];
};

/* 3312 */
struct _TOKEN_OWNER
{
  void *Owner;
};

/* 3313 */
struct _EVENTSFORLOGFILE
{
  unsigned int ulSize;
  unsigned __int16 szLogicalLogFile[256];
  unsigned int ulNumRecords;
  _EVENTLOGRECORD pEventLogRecords[];
};

/* 3314 */
struct _IMAGE_RESOURCE_DIRECTORY_STRING
{
  unsigned __int16 Length;
  char NameString[1];
};

/* 3315 */
struct _ACCESS_DENIED_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 3316 */
struct _IMAGE_DOS_HEADER
{
  unsigned __int16 e_magic;
  unsigned __int16 e_cblp;
  unsigned __int16 e_cp;
  unsigned __int16 e_crlc;
  unsigned __int16 e_cparhdr;
  unsigned __int16 e_minalloc;
  unsigned __int16 e_maxalloc;
  unsigned __int16 e_ss;
  unsigned __int16 e_sp;
  unsigned __int16 e_csum;
  unsigned __int16 e_ip;
  unsigned __int16 e_cs;
  unsigned __int16 e_lfarlc;
  unsigned __int16 e_ovno;
  unsigned __int16 e_res[4];
  unsigned __int16 e_oemid;
  unsigned __int16 e_oeminfo;
  unsigned __int16 e_res2[10];
  int e_lfanew;
};

/* 3317 */
struct tagIMEMENUITEMINFOW
{
  unsigned int cbSize;
  unsigned int fType;
  unsigned int fState;
  unsigned int wID;
  HBITMAP__ *hbmpChecked;
  HBITMAP__ *hbmpUnchecked;
  unsigned int dwItemData;
  unsigned __int16 szString[80];
  HBITMAP__ *hbmpItem;
};

/* 3318 */
struct tagCOLORADJUSTMENT
{
  unsigned __int16 caSize;
  unsigned __int16 caFlags;
  unsigned __int16 caIlluminantIndex;
  unsigned __int16 caRedGamma;
  unsigned __int16 caGreenGamma;
  unsigned __int16 caBlueGamma;
  unsigned __int16 caReferenceBlack;
  unsigned __int16 caReferenceWhite;
  __int16 caContrast;
  __int16 caBrightness;
  __int16 caColorfulness;
  __int16 caRedGreenTint;
};

/* 3319 */
struct tagEMRSETCOLORADJUSTMENT
{
  tagEMR emr;
  tagCOLORADJUSTMENT ColorAdjustment;
};

/* 3320 */
struct tagNONCLIENTMETRICSW
{
  unsigned int cbSize;
  int iBorderWidth;
  int iScrollWidth;
  int iScrollHeight;
  int iCaptionWidth;
  int iCaptionHeight;
  tagLOGFONTW lfCaptionFont;
  int iSmCaptionWidth;
  int iSmCaptionHeight;
  tagLOGFONTW lfSmCaptionFont;
  int iMenuWidth;
  int iMenuHeight;
  tagLOGFONTW lfMenuFont;
  tagLOGFONTW lfStatusFont;
  tagLOGFONTW lfMessageFont;
};

/* 3321 */
struct tagEMRSETVIEWPORTORGEX
{
  tagEMR emr;
  _POINTL ptlOrigin;
};

/* 3322 */
struct _SERVICE_TABLE_ENTRYA
{
  char *lpServiceName;
  void (__stdcall *lpServiceProc)(unsigned int, char **);
};

/* 3323 */
struct _MENU_EVENT_RECORD
{
  unsigned int dwCommandId;
};

/* 3324 */
struct _RGNDATAHEADER
{
  unsigned int dwSize;
  unsigned int iType;
  unsigned int nCount;
  unsigned int nRgnSize;
  tagRECT rcBound;
};

/* 3325 */
struct _RGNDATA
{
  _RGNDATAHEADER rdh;
  char Buffer[1];
};

/* 3326 */
struct _REMOTE_NAME_INFOA
{
  char *lpUniversalName;
  char *lpConnectionName;
  char *lpRemainingPath;
};

/* 3327 */
struct tagFILTERKEYS
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iWaitMSec;
  unsigned int iDelayMSec;
  unsigned int iRepeatMSec;
  unsigned int iBounceMSec;
};

/* 3328 */
struct tagEMRSETTEXTCOLOR
{
  tagEMR emr;
  unsigned int crColor;
};

/* 3329 */
struct _DOCINFOW
{
  int cbSize;
  const unsigned __int16 *lpszDocName;
  const unsigned __int16 *lpszOutput;
  const unsigned __int16 *lpszDatatype;
  unsigned int fwType;
};

/* 3330 */
struct tagDELETEITEMSTRUCT
{
  unsigned int CtlType;
  unsigned int CtlID;
  unsigned int itemID;
  HWND__ *hwndItem;
  unsigned int itemData;
};

/* 3331 */
struct _WSANETWORKEVENTS
{
  int lNetworkEvents;
  int iErrorCode[10];
};

/* 3332 */
struct _s__ThrowInfo
{
  unsigned int attributes;
  void (__cdecl *pmfnUnwind)();
  int (__cdecl *pForwardCompat)();
  _s__CatchableTypeArray *pCatchableTypeArray;
};

/* 3333 */
struct tagMONITORINFOEXW
{
  tagMONITORINFO baseclass_0;
  unsigned __int16 szDevice[32];
};

/* 3334 */
struct _SYSTEM_POWER_POLICY
{
  unsigned int Revision;
  POWER_ACTION_POLICY PowerButton;
  POWER_ACTION_POLICY SleepButton;
  POWER_ACTION_POLICY LidClose;
  _SYSTEM_POWER_STATE LidOpenWake;
  unsigned int Reserved;
  POWER_ACTION_POLICY Idle;
  unsigned int IdleTimeout;
  char IdleSensitivity;
  char DynamicThrottle;
  char Spare2[2];
  _SYSTEM_POWER_STATE MinSleep;
  _SYSTEM_POWER_STATE MaxSleep;
  _SYSTEM_POWER_STATE ReducedLatencySleep;
  unsigned int WinLogonFlags;
  unsigned int Spare3;
  unsigned int DozeS4Timeout;
  unsigned int BroadcastCapacityResolution;
  SYSTEM_POWER_LEVEL DischargePolicy[4];
  unsigned int VideoTimeout;
  char VideoDimDisplay;
  unsigned int VideoReserved[3];
  unsigned int SpindownTimeout;
  char OptimizeForPower;
  char FanThrottleTolerance;
  char ForcedThrottle;
  char MinThrottle;
  POWER_ACTION_POLICY OverThrottled;
};

/* 3335 */
struct tagNEWTEXTMETRICW
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  unsigned __int16 tmFirstChar;
  unsigned __int16 tmLastChar;
  unsigned __int16 tmDefaultChar;
  unsigned __int16 tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
  unsigned int ntmFlags;
  unsigned int ntmSizeEM;
  unsigned int ntmCellHeight;
  unsigned int ntmAvgWidth;
};

/* 3336 */
struct _MINIDUMP_SYSTEM_INFO::_CPU_INFORMATION::__unnamed
{
  unsigned int VendorId[3];
  unsigned int VersionInformation;
  unsigned int FeatureInformation;
  unsigned int AMDExtendedCpuFeatures;
};

/* 3337 */
union _MINIDUMP_SYSTEM_INFO::_CPU_INFORMATION
{
  _MINIDUMP_SYSTEM_INFO::_CPU_INFORMATION::__unnamed X86CpuInfo;
  _MINIDUMP_SYSTEM_INFO::_CPU_INFORMATION::__unnamed OtherCpuInfo;
};

/* 3338 */
struct $1A2EF21622AC59D9D97D6BC08126477B
{
  char NumberOfProcessors;
  char ProductType;
};

/* 3339 */
union $7C063F3644D97FD3237D6A0B51789689
{
  unsigned __int16 Reserved0;
  $1A2EF21622AC59D9D97D6BC08126477B _s1;
};

/* 3340 */
struct $E9C8715B6438826DC7F871522AFE6DED
{
  unsigned __int16 SuiteMask;
  unsigned __int16 Reserved2;
};

/* 3341 */
union $759FE58948008C009AF77DF9EF9F3793
{
  unsigned int Reserved1;
  $E9C8715B6438826DC7F871522AFE6DED _s1;
};

/* 3342 */
struct _MINIDUMP_SYSTEM_INFO
{
  unsigned __int16 ProcessorArchitecture;
  unsigned __int16 ProcessorLevel;
  unsigned __int16 ProcessorRevision;
  $7C063F3644D97FD3237D6A0B51789689 ___u3;
  unsigned int MajorVersion;
  unsigned int MinorVersion;
  unsigned int BuildNumber;
  unsigned int PlatformId;
  unsigned int CSDVersionRva;
  $759FE58948008C009AF77DF9EF9F3793 ___u9;
  _MINIDUMP_SYSTEM_INFO::_CPU_INFORMATION Cpu;
};

/* 3343 */
struct _IMAGE_RESOURCE_DIR_STRING_U
{
  unsigned __int16 Length;
  unsigned __int16 NameString[1];
};

/* 3344 */
struct tagEMRMASKBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int xMask;
  int yMask;
  unsigned int iUsageMask;
  unsigned int offBmiMask;
  unsigned int cbBmiMask;
  unsigned int offBitsMask;
  unsigned int cbBitsMask;
};

/* 3345 */
struct BATTERY_REPORTING_SCALE
{
  unsigned int Granularity;
  unsigned int Capacity;
};

/* 3346 */
struct tagEMRPIXELFORMAT
{
  tagEMR emr;
  tagPIXELFORMATDESCRIPTOR pfd;
};

/* 3347 */
struct _SYSTEM_AUDIT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 3348 */
struct SERVICE_STATUS_HANDLE__
{
  int unused;
};

/* 3349 */
struct tagMENUINFO
{
  unsigned int cbSize;
  unsigned int fMask;
  unsigned int dwStyle;
  unsigned int cyMax;
  HBRUSH__ *hbrBack;
  unsigned int dwContextHelpID;
  unsigned int dwMenuData;
};

/* 3350 */
struct _ICONINFO
{
  int fIcon;
  unsigned int xHotspot;
  unsigned int yHotspot;
  HBITMAP__ *hbmMask;
  HBITMAP__ *hbmColor;
};

/* 3351 */
struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR
{
  unsigned int Length;
  _RTL_VERIFIER_DLL_DESCRIPTOR *ProviderDlls;
  void (__stdcall *ProviderDllLoadCallback)(unsigned __int16 *, void *, unsigned int, void *);
  void (__stdcall *ProviderDllUnloadCallback)(unsigned __int16 *, void *, unsigned int, void *);
  unsigned __int16 *VerifierImage;
  unsigned int VerifierFlags;
  unsigned int VerifierDebug;
  void *RtlpGetStackTraceAddress;
  void *RtlpDebugPageHeapCreate;
  void *RtlpDebugPageHeapDestroy;
};

/* 3352 */
struct _PROCESS_INFORMATION
{
  void *hProcess;
  void *hThread;
  unsigned int dwProcessId;
  unsigned int dwThreadId;
};

/* 3353 */
struct _cpinfo
{
  unsigned int MaxCharSize;
  char DefaultChar[2];
  char LeadByte[12];
};

/* 3354 */
struct SHELLHOOKINFO
{
  HWND__ *hwnd;
  tagRECT rc;
};

/* 3355 */
struct _PSFEATURE_OUTPUT
{
  int bPageIndependent;
  int bSetPageDevice;
};

/* 3356 */
struct _wfinddata_t
{
  unsigned int attrib;
  int time_create;
  int time_access;
  int time_write;
  unsigned int size;
  wchar_t name[260];
};

/* 3357 */
struct _SYSTEM_AUDIT_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 3358 */
struct netent
{
  char *n_name;
  char **n_aliases;
  __int16 n_addrtype;
  unsigned int n_net;
};

/* 3359 */
struct tagEMRGDICOMMENT
{
  tagEMR emr;
  unsigned int cbData;
  char Data[1];
};

/* 3360 */
struct tagCURSORSHAPE
{
  int xHotSpot;
  int yHotSpot;
  int cx;
  int cy;
  int cbWidth;
  char Planes;
  char BitsPixel;
};

/* 3361 */
struct _IMAGEHLP_CBA_EVENT
{
  unsigned int severity;
  unsigned int code;
  char *desc;
  void *object;
};

/* 3362 */
struct provider_info
{
  unsigned int (__cdecl *pi_R0_1val)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);
  unsigned int (__cdecl *pi_R0_allvals)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);
  unsigned int (__cdecl *pi_R3_1val)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);
  unsigned int (__cdecl *pi_R3_allvals)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);
  unsigned int pi_flags;
  void *pi_key_context;
};

/* 3363 */
struct HCOLORSPACE__
{
  int unused;
};

/* 3364 */
struct _TAPE_CREATE_PARTITION
{
  unsigned int Method;
  unsigned int Count;
  unsigned int Size;
};

/* 3365 */
struct tagEMRSETCOLORSPACE
{
  tagEMR emr;
  unsigned int ihCS;
};

/* 3366 */
struct tagSOUNDSENTRYW
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iFSTextEffect;
  unsigned int iFSTextEffectMSec;
  unsigned int iFSTextEffectColorBits;
  unsigned int iFSGrafEffect;
  unsigned int iFSGrafEffectMSec;
  unsigned int iFSGrafEffectColor;
  unsigned int iWindowsEffect;
  unsigned int iWindowsEffectMSec;
  unsigned __int16 *lpszWindowsEffectDLL;
  unsigned int iWindowsEffectOrdinal;
};

/* 3367 */
struct tagENUMLOGFONTW
{
  tagLOGFONTW elfLogFont;
  unsigned __int16 elfFullName[64];
  unsigned __int16 elfStyle[32];
};

/* 3368 */
struct _TOKEN_AUDIT_POLICY
{
  unsigned int PolicyCount;
  _TOKEN_AUDIT_POLICY_ELEMENT Policy[1];
};

/* 3369 */
union _IMAGE_SECTION_HEADER::__unnamed
{
  unsigned int PhysicalAddress;
  unsigned int VirtualSize;
};

/* 3370 */
struct _CONSOLE_FONT_INFO
{
  unsigned int nFont;
  _COORD dwFontSize;
};

/* 3371 */
struct _DISCDLGSTRUCTW
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  unsigned __int16 *lpLocalName;
  unsigned __int16 *lpRemoteName;
  unsigned int dwFlags;
};

/* 3372 */
struct _JOBOBJECT_BASIC_PROCESS_ID_LIST
{
  unsigned int NumberOfAssignedProcesses;
  unsigned int NumberOfProcessIdsInList;
  unsigned int ProcessIdList[1];
};

/* 3373 */
struct _FILE_NOTIFY_INFORMATION
{
  unsigned int NextEntryOffset;
  unsigned int Action;
  unsigned int FileNameLength;
  unsigned __int16 FileName[1];
};

/* 3374 */
struct type_info
{
  type_infoVtbl *vfptr;
  void *_m_data;
  char _m_d_name[1];
};

/* 3375 */
struct type_infoVtbl
{
  void *(__thiscall *__vecDelDtor)(type_info *this, unsigned int);
};

/* 3376 */
struct _MINIDUMP_UNLOADED_MODULE
{
  unsigned __int64 BaseOfImage;
  unsigned int SizeOfImage;
  unsigned int CheckSum;
  unsigned int TimeDateStamp;
  unsigned int ModuleNameRva;
};

/* 3377 */
struct _IMAGE_RESOURCE_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned __int16 NumberOfNamedEntries;
  unsigned __int16 NumberOfIdEntries;
};

/* 3378 */
struct tagCOMPOSITIONFORM
{
  unsigned int dwStyle;
  tagPOINT ptCurrentPos;
  tagRECT rcArea;
};

/* 3379 */
struct _SERVICE_DESCRIPTIONW
{
  unsigned __int16 *lpDescription;
};

/* 3380 */
struct _ldiv_t
{
  int quot;
  int rem;
};

/* 3381 */
union $E38888FFFF2E8047BDBD55C921E86469
{
  unsigned int FiberData;
  unsigned int Version;
};

/* 3382 */
struct _NT_TIB32
{
  unsigned int ExceptionList;
  unsigned int StackBase;
  unsigned int StackLimit;
  unsigned int SubSystemTib;
  $E38888FFFF2E8047BDBD55C921E86469 ___u4;
  unsigned int ArbitraryUserPointer;
  unsigned int Self;
};

/* 3383 */
struct _IMAGE_NT_HEADERS64
{
  unsigned int Signature;
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_OPTIONAL_HEADER64 OptionalHeader;
};

/* 3384 */
struct _IMAGE_TLS_DIRECTORY64
{
  unsigned __int64 StartAddressOfRawData;
  unsigned __int64 EndAddressOfRawData;
  unsigned __int64 AddressOfIndex;
  unsigned __int64 AddressOfCallBacks;
  unsigned int SizeOfZeroFill;
  unsigned int Characteristics;
};

/* 3385 */
struct stat
{
  unsigned int st_dev;
  unsigned __int16 st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  unsigned int st_rdev;
  int st_size;
  int st_atime;
  int st_mtime;
  int st_ctime;
};

/* 3386 */
struct tagEMRGRADIENTFILL
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int nVer;
  unsigned int nTri;
  unsigned int ulMode;
  _TRIVERTEX Ver[1];
};

/* 3387 */
struct _TI_FINDCHILDREN_PARAMS
{
  unsigned int Count;
  unsigned int Start;
  unsigned int ChildId[1];
};

/* 3388 */
struct _SE_IMPERSONATION_STATE
{
  void *Token;
  char CopyOnOpen;
  char EffectiveOnly;
  _SECURITY_IMPERSONATION_LEVEL Level;
};

/* 3389 */
struct tagEMREXTFLOODFILL
{
  tagEMR emr;
  _POINTL ptlStart;
  unsigned int crColor;
  unsigned int iMode;
};

/* 3390 */
struct _ACCESS_ALLOWED_CALLBACK_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 3391 */
struct _EVENTLOG_FULL_INFORMATION
{
  unsigned int dwFull;
};

/* 3392 */
struct tagCBT_CREATEWNDA
{
  tagCREATESTRUCTA *lpcs;
  HWND__ *hwndInsertAfter;
};

/* 3393 */
struct HHOOK__
{
  int unused;
};

/* 3394 */
struct _REPARSE_GUID_DATA_BUFFER::__unnamed
{
  char DataBuffer[1];
};

/* 3395 */
struct _REPARSE_GUID_DATA_BUFFER
{
  unsigned int ReparseTag;
  unsigned __int16 ReparseDataLength;
  unsigned __int16 Reserved;
  _GUID ReparseGuid;
  _REPARSE_GUID_DATA_BUFFER::__unnamed GenericReparseBuffer;
};

/* 3396 */
struct _SECURITY_DESCRIPTOR
{
  char Revision;
  char Sbz1;
  unsigned __int16 Control;
  void *Owner;
  void *Group;
  _ACL *Sacl;
  _ACL *Dacl;
};

/* 3397 */
struct __stat64
{
  unsigned int st_dev;
  unsigned __int16 st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  unsigned int st_rdev;
  __int64 st_size;
  __int64 st_atime;
  __int64 st_mtime;
  __int64 st_ctime;
};

/* 3398 */
struct tagTTPOLYCURVE
{
  unsigned __int16 wType;
  unsigned __int16 cpfx;
  tagPOINTFX apfx[1];
};

/* 3399 */
struct _TAPE_PREPARE
{
  unsigned int Operation;
  char Immediate;
};

/* 3400 */
union _CHAR_INFO::__unnamed
{
  unsigned __int16 UnicodeChar;
  char AsciiChar;
};

/* 3401 */
struct _CHAR_INFO
{
  _CHAR_INFO::__unnamed Char;
  unsigned __int16 Attributes;
};

/* 3402 */
struct tagEMRCREATEPALETTE
{
  tagEMR emr;
  unsigned int ihPal;
  tagLOGPALETTE lgpl;
};

/* 3403 */
struct _JOBOBJECT_BASIC_UI_RESTRICTIONS
{
  unsigned int UIRestrictionsClass;
};

/* 3404 */
struct LIST_ENTRY64
{
  unsigned __int64 Flink;
  unsigned __int64 Blink;
};

/* 3405 */
struct HPEN__
{
  int unused;
};

/* 3406 */
struct _SECURITY_QUALITY_OF_SERVICE
{
  unsigned int Length;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  char ContextTrackingMode;
  char EffectiveOnly;
};

/* 3407 */
struct tagDRAWITEMSTRUCT
{
  unsigned int CtlType;
  unsigned int CtlID;
  unsigned int itemID;
  unsigned int itemAction;
  unsigned int itemState;
  HWND__ *hwndItem;
  HDC__ *hDC;
  tagRECT rcItem;
  unsigned int itemData;
};

/* 3408 */
struct _stati64
{
  unsigned int st_dev;
  unsigned __int16 st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  unsigned int st_rdev;
  __int64 st_size;
  int st_atime;
  int st_mtime;
  int st_ctime;
};

/* 3409 */
struct _TAPE_GET_DRIVE_PARAMETERS
{
  char ECC;
  char Compression;
  char DataPadding;
  char ReportSetmarks;
  unsigned int DefaultBlockSize;
  unsigned int MaximumBlockSize;
  unsigned int MinimumBlockSize;
  unsigned int MaximumPartitionCount;
  unsigned int FeaturesLow;
  unsigned int FeaturesHigh;
  unsigned int EOTWarningZoneSize;
};

/* 3410 */
struct _TAPE_SET_MEDIA_PARAMETERS
{
  unsigned int BlockSize;
};

/* 3411 */
struct tagMDICREATESTRUCTW
{
  const unsigned __int16 *szClass;
  const unsigned __int16 *szTitle;
  void *hOwner;
  int x;
  int y;
  int cx;
  int cy;
  unsigned int style;
  int lParam;
};

/* 3412 */
struct SYSTEM_POWER_CAPABILITIES
{
  char PowerButtonPresent;
  char SleepButtonPresent;
  char LidPresent;
  char SystemS1;
  char SystemS2;
  char SystemS3;
  char SystemS4;
  char SystemS5;
  char HiberFilePresent;
  char FullWake;
  char VideoDimPresent;
  char ApmPresent;
  char UpsPresent;
  char ThermalControl;
  char ProcessorThrottle;
  char ProcessorMinThrottle;
  char ProcessorMaxThrottle;
  char spare2[4];
  char DiskSpinDown;
  char spare3[8];
  char SystemBatteriesPresent;
  char BatteriesAreShortTerm;
  BATTERY_REPORTING_SCALE BatteryScale[3];
  _SYSTEM_POWER_STATE AcOnLineWake;
  _SYSTEM_POWER_STATE SoftLidWake;
  _SYSTEM_POWER_STATE RtcWake;
  _SYSTEM_POWER_STATE MinDeviceWakeState;
  _SYSTEM_POWER_STATE DefaultLowLatencyWake;
};

/* 3413 */
struct _IMAGEHLP_SYMBOL64_PACKAGE
{
  _IMAGEHLP_SYMBOL64 sym;
  char name[2001];
};

/* 3414 */
struct tagEMRGLSBOUNDEDRECORD
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cbData;
  char Data[1];
};

/* 3415 */
union $980F6A28C67C8F3640106D01D4C85A6A
{
  unsigned int Characteristics;
  unsigned int OriginalFirstThunk;
};

/* 3416 */
struct _IMAGE_IMPORT_DESCRIPTOR
{
  $980F6A28C67C8F3640106D01D4C85A6A ___u0;
  unsigned int TimeDateStamp;
  unsigned int ForwarderChain;
  unsigned int Name;
  unsigned int FirstThunk;
};

/* 3417 */
struct _DRAWPATRECT
{
  tagPOINT ptPosition;
  tagPOINT ptSize;
  unsigned __int16 wStyle;
  unsigned __int16 wPattern;
};

/* 3418 */
struct tagEMRBITBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
};

/* 3419 */
struct _SERVICE_FAILURE_ACTIONSW
{
  unsigned int dwResetPeriod;
  unsigned __int16 *lpRebootMsg;
  unsigned __int16 *lpCommand;
  unsigned int cActions;
  _SC_ACTION *lpsaActions;
};

/* 3420 */
struct _SID
{
  char Revision;
  char SubAuthorityCount;
  _SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
  unsigned int SubAuthority[1];
};

/* 3421 */
struct tagEMRSETMAPPERFLAGS
{
  tagEMR emr;
  unsigned int dwFlags;
};

/* 3422 */
struct tagMDINEXTMENU
{
  HMENU__ *hmenuIn;
  HMENU__ *hmenuNext;
  HWND__ *hwndNext;
};

/* 3423 */
struct tagEMRSETPALETTEENTRIES
{
  tagEMR emr;
  unsigned int ihPal;
  unsigned int iStart;
  unsigned int cEntries;
  tagPALETTEENTRY aPalEntries[1];
};

/* 3424 */
struct _EXCEPTION_RECORD64
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  unsigned __int64 ExceptionRecord;
  unsigned __int64 ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int __unusedAlignment;
  unsigned __int64 ExceptionInformation[15];
};

/* 3425 */
struct tagEMRRESIZEPALETTE
{
  tagEMR emr;
  unsigned int ihPal;
  unsigned int cEntries;
};

/* 3426 */
struct _OBJECT_TYPE_LIST
{
  unsigned __int16 Level;
  unsigned __int16 Sbz;
  _GUID *ObjectType;
};

/* 3427 */
struct _TIME_ZONE_INFORMATION
{
  int Bias;
  unsigned __int16 StandardName[32];
  _SYSTEMTIME StandardDate;
  int StandardBias;
  unsigned __int16 DaylightName[32];
  _SYSTEMTIME DaylightDate;
  int DaylightBias;
};

/* 3428 */
struct tagTPMPARAMS
{
  unsigned int cbSize;
  tagRECT rcExclude;
};

/* 3429 */
struct pvalueW
{
  unsigned __int16 *pv_valuename;
  int pv_valuelen;
  void *pv_value_context;
  unsigned int pv_type;
};

/* 3430 */
struct _WINDOW_BUFFER_SIZE_RECORD
{
  _COORD dwSize;
};

/* 3431 */
union _INPUT_RECORD::__unnamed
{
  _KEY_EVENT_RECORD KeyEvent;
  _MOUSE_EVENT_RECORD MouseEvent;
  _WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
  _MENU_EVENT_RECORD MenuEvent;
  _FOCUS_EVENT_RECORD FocusEvent;
};

/* 3432 */
struct _INPUT_RECORD
{
  unsigned __int16 EventType;
  _INPUT_RECORD::__unnamed Event;
};

/* 3433 */
struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;
};

/* 3434 */
struct _MINIDUMP_LOCATION_DESCRIPTOR64
{
  unsigned __int64 DataSize;
  unsigned __int64 Rva;
};

/* 3435 */
struct _PSFEATURE_CUSTPAPER
{
  int lOrientation;
  int lWidth;
  int lHeight;
  int lWidthOffset;
  int lHeightOffset;
};

/* 3436 */
union _IMAGE_THUNK_DATA64::__unnamed
{
  unsigned __int64 ForwarderString;
  unsigned __int64 Function;
  unsigned __int64 Ordinal;
  unsigned __int64 AddressOfData;
};

/* 3437 */
struct _IMAGE_THUNK_DATA64
{
  _IMAGE_THUNK_DATA64::__unnamed u1;
};

/* 3438 */
struct protoent
{
  char *p_name;
  char **p_aliases;
  __int16 p_proto;
};

/* 3439 */
struct HDESK__
{
  int unused;
};

/* 3440 */
struct _QOS_SD_MODE
{
  QOS_OBJECT_HDR ObjectHdr;
  unsigned int ShapeDiscardMode;
};

/* 3441 */
struct MENUITEMTEMPLATE
{
  unsigned __int16 mtOption;
  unsigned __int16 mtID;
  unsigned __int16 mtString[1];
};

/* 3442 */
struct tagNEWTEXTMETRICEXW
{
  tagNEWTEXTMETRICW ntmTm;
  tagFONTSIGNATURE ntmFontSig;
};

/* 3443 */
struct tagGCP_RESULTSW
{
  unsigned int lStructSize;
  unsigned __int16 *lpOutString;
  unsigned int *lpOrder;
  int *lpDx;
  int *lpCaretPos;
  char *lpClass;
  unsigned __int16 *lpGlyphs;
  unsigned int nGlyphs;
  int nMaxFit;
};

/* 3444 */
struct tagHARDWAREHOOKSTRUCT
{
  HWND__ *hwnd;
  unsigned int message;
  unsigned int wParam;
  int lParam;
};

/* 3445 */
struct _QUOTA_LIMITS_EX
{
  unsigned int PagedPoolLimit;
  unsigned int NonPagedPoolLimit;
  unsigned int MinimumWorkingSetSize;
  unsigned int MaximumWorkingSetSize;
  unsigned int PagefileLimit;
  _LARGE_INTEGER TimeLimit;
  unsigned int Reserved1;
  unsigned int Reserved2;
  unsigned int Reserved3;
  unsigned int Reserved4;
  unsigned int Flags;
  unsigned int Reserved5;
};

/* 3446 */
struct _IMAGE_IMPORT_BY_NAME
{
  unsigned __int16 Hint;
  char Name[1];
};

/* 3447 */
struct __s_GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  char Data4[8];
};

/* 3448 */
struct HSTR__
{
  int unused;
};

/* 3449 */
struct _ACL_REVISION_INFORMATION
{
  unsigned int AclRevision;
};

/* 3450 */
struct TIME
{
  unsigned __int16 Year;
  unsigned __int16 Month;
  unsigned __int16 Day;
  unsigned __int16 Hour;
  unsigned __int16 Minute;
  unsigned __int16 Second;
  unsigned int MSecond;
};

/* 3451 */
struct CLogDispatch
{
  CRylServerDispatch baseclass_0;
};

/* 3452 */
struct std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1>
{
  std::less<unsigned long> comp;
};

/* 3453 */
struct boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mu
{
  char dummy[1];
};

/* 3454 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >
{
  std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mu _Alnod;
};

/* 3455 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node *_Right;
  std::pair<unsigned long const ,CTempCharacter *> _Myval;
  char _Color;
  char _Isnil;
};

/* 3456 */
#pragma pack(push, 1)
struct _CHAR_INFOEX
{
  unsigned int Total;
  unsigned int ServerID;
  char cNameChangeCount;
  char cAdminFlag;
  char GuildWarFlag;
  char RealmWarFlag;
  char RealmPoint;
  char RealmCheckPoint;
  char RealmMinute;
  TIME LoggoutTime;
};
#pragma pack(pop)

/* 3457 */
#pragma pack(push, 1)
struct _QUEST
{
  unsigned int dwSize;
  char Data[130];
};
#pragma pack(pop)

/* 3458 */
struct _HISTORY
{
  unsigned int dwSize;
  char Data[200];
};

/* 3459 */
#pragma pack(push, 1)
struct _CONFIG
{
  unsigned int dwSize;
  char Data[50];
};
#pragma pack(pop)

/* 3460 */
#pragma pack(push, 1)
struct _STORE_INFO
{
  char Password[5];
  unsigned int Flag;
  unsigned int Gold;
};
#pragma pack(pop)

/* 3461 */
#pragma pack(push, 1)
struct __declspec(align(4)) CTempCharacter
{
  unsigned int m_dwUID;
  unsigned int m_dwCID;
  int m_nDataRequestCount;
  char m_szCharacterName[16];
  _CHAR_INFOEX m_CharInfoEX;
  _QUEST m_Quest;
  _HISTORY m_History;
  _CONFIG m_Config;
  _STORE_INFO m_StoreInfo;
  char m_cGroup;
  char m_cFlag;
};
#pragma pack(pop)

/* 3462 */
struct std::pair<unsigned long const ,CTempCharacter *>
{
  const unsigned int first;
  CTempCharacter *second;
};

/* 3463 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 3464 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> > baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mu _Alptr;
};

/* 3465 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CPacketDispatch *> _Myval;
  char _Color;
  char _Isnil;
};

/* 3466 */
struct std::pair<unsigned long const ,CPacketDispatch *>
{
  const unsigned int first;
  CPacketDispatch *second;
};

/* 3467 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::_Node>
{
  char dummy[1];
};

/* 3468 */
struct std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0>
{
  std::less<unsigned long> comp;
};

/* 3469 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::_Node> baseclass_0;
};

/* 3470 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >
{
  std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::_Node> _Alnod;
};

/* 3471 */
struct std::_Allocator_base<std::pair<unsigned long const ,CPacketDispatch *> >
{
  char dummy[1];
};

/* 3472 */
struct std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >
{
  std::_Allocator_base<std::pair<unsigned long const ,CPacketDispatch *> > baseclass_0;
};

/* 3473 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 3474 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::_Node *> baseclass_0;
};

/* 3475 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::_Node *> _Alptr;
};

/* 3476 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> > baseclass_0;
  boost::fast_pool_allocator<std::pair<unsigned long const ,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 3477 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,CPacketDispatch *> > _Alval;
};

/* 3478 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 3479 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CPacketDispatch *>,int,std::pair<unsigned long const ,CPacketDispatch *> const *,std::pair<unsigned long const ,CPacketDispatch *> const &>
{
  char dummy[1];
};

/* 3480 */
struct std::_Bidit<std::pair<unsigned long const ,CPacketDispatch *>,int,std::pair<unsigned long const ,CPacketDispatch *> const *,std::pair<unsigned long const ,CPacketDispatch *> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CPacketDispatch *>,int,std::pair<unsigned long const ,CPacketDispatch *> const *,std::pair<unsigned long const ,CPacketDispatch *> const &> baseclass_0;
};

/* 3481 */
union $A0D070B1E6AFFDB92C3E3F56B69D4BCA
{
  std::_Bidit<std::pair<unsigned long const ,CPacketDispatch *>,int,std::pair<unsigned long const ,CPacketDispatch *> const *,std::pair<unsigned long const ,CPacketDispatch *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::_Node *_Ptr;
};

/* 3482 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::const_iterator
{
  $A0D070B1E6AFFDB92C3E3F56B69D4BCA ___u0;
};

/* 3483 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::const_iterator baseclass_0;
};

/* 3484 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::iterator first;
  bool second;
};

/* 3485 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 3486 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CTempCharacter *>,int,std::pair<unsigned long const ,CTempCharacter *> const *,std::pair<unsigned long const ,CTempCharacter *> const &>
{
  char dummy[1];
};

/* 3487 */
struct std::_Bidit<std::pair<unsigned long const ,CTempCharacter *>,int,std::pair<unsigned long const ,CTempCharacter *> const *,std::pair<unsigned long const ,CTempCharacter *> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CTempCharacter *>,int,std::pair<unsigned long const ,CTempCharacter *> const *,std::pair<unsigned long const ,CTempCharacter *> const &> baseclass_0;
};

/* 3488 */
union $47A0AA5B9F44F6D69CF7D5AE2BC444FA
{
  std::_Bidit<std::pair<unsigned long const ,CTempCharacter *>,int,std::pair<unsigned long const ,CTempCharacter *> const *,std::pair<unsigned long const ,CTempCharacter *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::_Node *_Ptr;
};

/* 3489 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::const_iterator
{
  $47A0AA5B9F44F6D69CF7D5AE2BC444FA ___u0;
};

/* 3490 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::const_iterator baseclass_0;
};

/* 3491 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::iterato
{
  std::_Tree<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >::iterator first;
  bool second;
};

/* 3492 */
struct std::multimap<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> > baseclass_0;
};

/* 3493 */
struct std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >::rebind<std::pair<unsigned long const ,CPacketDispatch *> >
{
  char dummy[1];
};

/* 3494 */
struct std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::_Node>
{
  char dummy[1];
};

/* 3495 */
struct std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 3496 */
struct std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 3497 */
struct std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >::rebind<char>
{
  char dummy[1];
};

/* 3498 */
struct std::map<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> >,0> > baseclass_0;
};

/* 3499 */
struct CPoolDispatchFactory<CRegularAgentDispatch>
{
  CDispatchFactory baseclass_0;
  boost::pool<boost::default_user_allocator_new_delete> m_DispatchPool;
};

/* 3500 */
struct boost::object_pool<CTempCharacter,boost::default_user_allocator_new_delete>
{
  boost::pool<boost::default_user_allocator_new_delete> baseclass_0;
};

/* 3501 */
struct CTempCharacterMgr
{
  boost::object_pool<CTempCharacter,boost::default_user_allocator_new_delete> m_tempCharPool;
  std::multimap<unsigned long,CTempCharacter *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_mapTempChar;
};

/* 3502 */
struct CStreamOverlappedFactory
{
  COverlappedFactory baseclass_0;
  CCSLock m_Lock;
  char FactoryLockPad[8];
  boost::pool<boost::default_user_allocator_new_delete> *m_lpOverlappedPool;
};

/* 3503 */
struct CPoolDispatchFactory<CFieldGameClientDispatch>
{
  CDispatchFactory baseclass_0;
  boost::pool<boost::default_user_allocator_new_delete> m_DispatchPool;
};

/* 3504 */
struct CDBComponent
{
  OleDB baseclass_0;
  char m_Query[32768];
};

/* 3505 */
struct CDBSingleObject
{
  CDBComponent baseclass_0;
};

/* 3506 */
struct CPoolDispatchFactory<CDBAgentDispatch>
{
  CDispatchFactory baseclass_0;
  boost::pool<boost::default_user_allocator_new_delete> m_DispatchPool;
};

/* 3507 */
struct CPoolDispatchFactory<CChatDispatch>
{
  CDispatchFactory baseclass_0;
  boost::pool<boost::default_user_allocator_new_delete> m_DispatchPool;
};

/* 3508 */
struct CPoolDispatchFactory<CLogDispatch>
{
  CDispatchFactory baseclass_0;
  boost::pool<boost::default_user_allocator_new_delete> m_DispatchPool;
};

/* 3509 */
struct CMultiDispatch
{
  CCSLock m_DispatchLock;
  char DispatchLockPad[8];
  std::map<unsigned long,CPacketDispatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPacketDispatch *> > > m_DispatchMap;
};

/* 3510 */
struct CMultiDispatch::Storage
{
  CPacketDispatch *m_lpDispatch;
  CMultiDispatch *m_MultiDispatch;
};

/* 3511 */
struct CRegularAgentDispatch
{
  CRylServerDispatch baseclass_0;
  char m_cGroup;
};

/* 3512 */
union $8C670BC566A8DA562FD42ECF9D02564B
{
  _GUID guid;
  _GUID *pguid;
};

/* 3513 */
union $B1183A3787A92E9C88A6C48CC1C3B1A0
{
  unsigned __int16 *pwszName;
  unsigned int ulPropid;
};

/* 3514 */
struct tagDBID
{
  $8C670BC566A8DA562FD42ECF9D02564B uGuid;
  unsigned int eKind;
  $B1183A3787A92E9C88A6C48CC1C3B1A0 uName;
};

/* 3515 */
struct CSendDataToManageClient
{
  CMsgProc baseclass_0;
};

/* 3516 */
struct _SHCREATEPROCESSINFOW
{
  unsigned int cbSize;
  unsigned int fMask;
  HWND__ *hwnd;
  const unsigned __int16 *pszFile;
  const unsigned __int16 *pszParameters;
  const unsigned __int16 *pszCurrentDirectory;
  void *hUserToken;
  _SECURITY_ATTRIBUTES *lpProcessAttributes;
  _SECURITY_ATTRIBUTES *lpThreadAttributes;
  int bInheritHandles;
  unsigned int dwCreationFlags;
  _STARTUPINFOW *lpStartupInfo;
  _PROCESS_INFORMATION *lpProcessInformation;
};

/* 3517 */
struct std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0>
{
  std::less<unsigned long> comp;
};

/* 3518 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node>
{
  char dummy[1];
};

/* 3519 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node> baseclass_0;
};

/* 3520 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >
{
  std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node> _Alnod;
};

/* 3521 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CServerRequest::RequestInfo> _Myval;
  char _Color;
  char _Isnil;
};

/* 3522 */
struct CServerRequest::RequestInfo
{
  CPacketDispatch *m_lpSrcDispatch;
  CPacketDispatch *m_lpDstDispatch;
  unsigned int m_dwDurationSec;
  void (__cdecl *m_lpTimeoutRequest)(CPacketDispatch *);
};

/* 3523 */
struct std::pair<unsigned long const ,CServerRequest::RequestInfo>
{
  const unsigned int first;
  CServerRequest::RequestInfo second;
};

/* 3524 */
struct std::_Allocator_base<std::pair<unsigned long const ,CServerRequest::RequestInfo> >
{
  char dummy[1];
};

/* 3525 */
struct std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >
{
  std::_Allocator_base<std::pair<unsigned long const ,CServerRequest::RequestInfo> > baseclass_0;
};

/* 3526 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *>
{
  char dummy[1];
};

/* 3527 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *> baseclass_0;
};

/* 3528 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *> _Alptr;
};

/* 3529 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> > _Alval;
};

/* 3530 */
struct std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >::rebind<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >
{
  char dummy[1];
};

/* 3531 */
struct std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::Inte
{
  char dummy[1];
};

/* 3532 */
struct std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >::rebind<unsigned int>
{
  char dummy[1];
};

/* 3533 */
struct std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >::rebind<char>
{
  char dummy[1];
};

/* 3534 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 3535 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CServerRequest::RequestInfo>,int,std::pair<unsigned long const ,CServerRequest::RequestInfo> const *,std::pair<unsigned long const ,CServerRequest::RequestInfo> const &>
{
  char dummy[1];
};

/* 3536 */
struct std::_Bidit<std::pair<unsigned long const ,CServerRequest::RequestInfo>,int,std::pair<unsigned long const ,CServerRequest::RequestInfo> const *,std::pair<unsigned long const ,CServerRequest::RequestInfo> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CServerRequest::RequestInfo>,int,std::pair<unsigned long const ,CServerRequest::RequestInfo> const *,std::pair<unsigned long const ,CServerRequest::RequestInfo> const &> baseclass_0;
};

/* 3537 */
union $0762DA62DFE473E068EC722155A2D42C
{
  std::_Bidit<std::pair<unsigned long const ,CServerRequest::RequestInfo>,int,std::pair<unsigned long const ,CServerRequest::RequestInfo> const *,std::pair<unsigned long const ,CServerRequest::RequestInfo> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::_Node *_Ptr;
};

/* 3538 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::const_iterator
{
  $0762DA62DFE473E068EC722155A2D42C ___u0;
};

/* 3539 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::const_iterator baseclass_0;
};

/* 3540 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> >::iterator first;
  bool second;
};

/* 3541 */
struct std::iterator<std::bidirectional_iterator_tag,CTimerProcMgr::InternalProcessData,int,CTimerProcMgr::InternalProcessData const *,CTimerProcMgr::InternalProcessData const &>
{
  char dummy[1];
};

/* 3542 */
struct std::_Bidit<CTimerProcMgr::InternalProcessData,int,CTimerProcMgr::InternalProcessData const *,CTimerProcMgr::InternalProcessData const &>
{
  std::iterator<std::bidirectional_iterator_tag,CTimerProcMgr::InternalProcessData,int,CTimerProcMgr::InternalProcessData const *,CTimerProcMgr::InternalProcessData const &> baseclass_0;
};

/* 3543 */
union $7559EDEA12BF3BB72A79A74C35F2447A
{
  std::_Bidit<CTimerProcMgr::InternalProcessData,int,CTimerProcMgr::InternalProcessData const *,CTimerProcMgr::InternalProcessData const &> baseclass_0;
  std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *_Ptr;
};

/* 3544 */
struct std::list<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::const_iterator
{
  $7559EDEA12BF3BB72A79A74C35F2447A ___u0;
};

/* 3545 */
struct std::list<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::iterator
{
  std::list<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::const_iterator baseclass_0;
};

/* 3546 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData>,int,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> const *,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> const
{
  char dummy[1];
};

/* 3547 */
struct std::_Bidit<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData>,int,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> const *,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData>,int,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> const *,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> const baseclass_0;
};

/* 3548 */
union $4DAC983AE86517941B1AA78C7477D068
{
  std::_Bidit<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData>,int,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> const *,std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::_Node *_Ptr;
};

/* 3549 */
struct std::_Tree<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::const_iterator
{
  $4DAC983AE86517941B1AA78C7477D068 ___u0;
};

/* 3550 */
struct std::_Tree<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::const_iterator baseclass_0;
};

/* 3551 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned int,CTimerProcMgr::InternalTimerData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,CTimerProcMgr::InternalTimerData> >,0> >::iterator first;
  bool second;
};

/* 3552 */
struct std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >::rebind<std::pair<unsigned long const ,CServerRequest::RequestInfo> >
{
  char dummy[1];
};

/* 3553 */
struct std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestIn
{
  char dummy[1];
};

/* 3554 */
struct std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 3555 */
struct std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >::rebind<char>
{
  char dummy[1];
};

/* 3556 */
struct std::allocator<CTimerProcMgr::InternalProcessData>::rebind<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node>
{
  char dummy[1];
};

/* 3557 */
struct std::allocator<CTimerProcMgr::InternalProcessData>::rebind<std::_List_nod<CTimerProcMgr::InternalProcessData,std::allocator<CTimerProcMgr::InternalProcessData> >::_Node *>
{
  char dummy[1];
};

/* 3558 */
struct std::allocator<CTimerProcMgr::InternalProcessData>::rebind<CTimerProcMgr::InternalProcessData>
{
  char dummy[1];
};

/* 3559 */
struct std::map<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> >,0> > baseclass_0;
};

/* 3560 */
#pragma pack(push, 1)
struct _SHFILEOPSTRUCTW
{
  HWND__ *hwnd;
  unsigned int wFunc;
  const unsigned __int16 *pFrom;
  const unsigned __int16 *pTo;
  unsigned __int16 fFlags;
  int fAnyOperationsAborted;
  void *hNameMappings;
  const unsigned __int16 *lpszProgressTitle;
};
#pragma pack(pop)

/* 3561 */
struct _SHFILEINFOW
{
  HICON__ *hIcon;
  int iIcon;
  unsigned int dwAttributes;
  unsigned __int16 szDisplayName[260];
  unsigned __int16 szTypeName[80];
};

/* 3562 */
struct _DRAGINFOA
{
  unsigned int uSize;
  tagPOINT pt;
  int fNC;
  char *lpFileList;
  unsigned int grfKeyState;
};

/* 3563 */
union $E5EC784184F61E2D1DB730C15D65FB8F
{
  void *hIcon;
  void *hMonitor;
};

/* 3564 */
struct _SHELLEXECUTEINFOA
{
  unsigned int cbSize;
  unsigned int fMask;
  HWND__ *hwnd;
  const char *lpVerb;
  const char *lpFile;
  const char *lpParameters;
  const char *lpDirectory;
  int nShow;
  HINSTANCE__ *hInstApp;
  void *lpIDList;
  const char *lpClass;
  HKEY__ *hkeyClass;
  unsigned int dwHotKey;
  $E5EC784184F61E2D1DB730C15D65FB8F ___u13;
  void *hProcess;
};

/* 3565 */
struct _SHNAMEMAPPINGA
{
  char *pszOldPath;
  char *pszNewPath;
  int cchOldPath;
  int cchNewPath;
};

/* 3566 */
struct CServerRequest
{
  CCSLock m_RequestLock;
  char RequestLock[8];
  std::map<unsigned long,CServerRequest::RequestInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CServerRequest::RequestInfo> > > m_RequestMap;
  unsigned int m_dwRequestCounter;
  unsigned int m_dwRequestFlags;
};

/* 3567 */
struct CServerRequest::Result
{
  CPacketDispatch *m_lpSrcDispatch;
  bool m_bRemove;
};

/* 3568 */
struct _SHELLEXECUTEINFOW
{
  unsigned int cbSize;
  unsigned int fMask;
  HWND__ *hwnd;
  const unsigned __int16 *lpVerb;
  const unsigned __int16 *lpFile;
  const unsigned __int16 *lpParameters;
  const unsigned __int16 *lpDirectory;
  int nShow;
  HINSTANCE__ *hInstApp;
  void *lpIDList;
  const unsigned __int16 *lpClass;
  HKEY__ *hkeyClass;
  unsigned int dwHotKey;
  $E5EC784184F61E2D1DB730C15D65FB8F ___u13;
  void *hProcess;
};

/* 3569 */
#pragma pack(push, 1)
struct _SHFILEOPSTRUCTA
{
  HWND__ *hwnd;
  unsigned int wFunc;
  const char *pFrom;
  const char *pTo;
  unsigned __int16 fFlags;
  int fAnyOperationsAborted;
  void *hNameMappings;
  const char *lpszProgressTitle;
};
#pragma pack(pop)

/* 3570 */
struct _SHFILEINFOA
{
  HICON__ *hIcon;
  int iIcon;
  unsigned int dwAttributes;
  char szDisplayName[260];
  char szTypeName[80];
};

/* 3571 */
struct _SHNAMEMAPPINGW
{
  unsigned __int16 *pszOldPath;
  unsigned __int16 *pszNewPath;
  int cchOldPath;
  int cchNewPath;
};

/* 3572 */
struct _NOTIFYICONDATAW
{
  unsigned int cbSize;
  HWND__ *hWnd;
  unsigned int uID;
  unsigned int uFlags;
  unsigned int uCallbackMessage;
  HICON__ *hIcon;
  unsigned __int16 szTip[64];
};

/* 3573 */
struct HDROP__
{
  int unused;
};

/* 3574 */
struct _DRAGINFOW
{
  unsigned int uSize;
  tagPOINT pt;
  int fNC;
  unsigned __int16 *lpFileList;
  unsigned int grfKeyState;
};

/* 3575 */
struct ServerManage::ManageCommand
{
  PktBase baseclass_0;
  unsigned int nMessage;
  unsigned int wParam;
  int lParam;
  unsigned int dwRunID;
  unsigned __int16 usFlags;
  unsigned __int16 usDataLen;
};

/* 3576 */
struct ServerManage::PktManagePacket
{
  PktBase baseclass_0;
  unsigned int m_dwPID;
  unsigned int m_dwStatusFlag;
  unsigned int m_dwSubCommand;
};

/* 3577 */
struct ServerManage::PktManagePing
{
  ServerManage::PktManagePacket baseclass_0;
  char m_szAppFullPathName[260];
  char m_szWindowName[260];
  char m_szCommandLine[520];
};

/* 3578 */
struct _AppBarData
{
  unsigned int cbSize;
  HWND__ *hWnd;
  unsigned int uCallbackMessage;
  unsigned int uEdge;
  tagRECT rc;
  int lParam;
};

/* 3579 */
struct timecaps_tag
{
  unsigned int wPeriodMin;
  unsigned int wPeriodMax;
};

/* 3580 */
struct CRecvCommandFromManageClient
{
  CMsgProc baseclass_0;
  CServerWindowFramework *m_ServerWindowFramework;
  CConsoleCMDFactory *m_CommandFactory;
  CCommandProcess *m_CommandProcess;
};

/* 3581 */
#pragma pack(push, 1)
struct _SHQUERYRBINFO
{
  unsigned int cbSize;
  __int64 i64Size;
  __int64 i64NumItems;
};
#pragma pack(pop)

/* 3582 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *_Right;
  std::pair<unsigned long const ,Registry::CSetupFile::Data> _Myval;
  char _Color;
  char _Isnil;
};

/* 3583 */
struct Registry::CSetupFile::Data
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > m_szSection;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > m_szKey;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > m_szValue;
};

/* 3584 */
struct std::pair<unsigned long const ,Registry::CSetupFile::Data>
{
  const unsigned int first;
  Registry::CSetupFile::Data second;
};

/* 3585 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *>
{
  char dummy[1];
};

/* 3586 */
struct std::_Allocator_base<std::pair<unsigned long const ,Registry::CSetupFile::Data> >
{
  char dummy[1];
};

/* 3587 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *> baseclass_0;
};

/* 3588 */
struct std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1>
{
  std::less<unsigned long> comp;
};

/* 3589 */
struct std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >
{
  std::_Allocator_base<std::pair<unsigned long const ,Registry::CSetupFile::Data> > baseclass_0;
};

/* 3590 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node>
{
  char dummy[1];
};

/* 3591 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node> baseclass_0;
};

/* 3592 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >
{
  std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node> _Alnod;
};

/* 3593 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *> _Alptr;
};

/* 3594 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> > _Alval;
};

/* 3595 */
struct std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 3596 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,Registry::CSetupFile::Data>,int,std::pair<unsigned long const ,Registry::CSetupFile::Data> const *,std::pair<unsigned long const ,Registry::CSetupFile::Data> const &>
{
  char dummy[1];
};

/* 3597 */
struct std::_Bidit<std::pair<unsigned long const ,Registry::CSetupFile::Data>,int,std::pair<unsigned long const ,Registry::CSetupFile::Data> const *,std::pair<unsigned long const ,Registry::CSetupFile::Data> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,Registry::CSetupFile::Data>,int,std::pair<unsigned long const ,Registry::CSetupFile::Data> const *,std::pair<unsigned long const ,Registry::CSetupFile::Data> const &> baseclass_0;
};

/* 3598 */
union $FA33D472BAFC36351B1031963F2A2809
{
  std::_Bidit<std::pair<unsigned long const ,Registry::CSetupFile::Data>,int,std::pair<unsigned long const ,Registry::CSetupFile::Data> const *,std::pair<unsigned long const ,Registry::CSetupFile::Data> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::_Node *_Ptr;
};

/* 3599 */
struct std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::const_iterator
{
  $FA33D472BAFC36351B1031963F2A2809 ___u0;
};

/* 3600 */
struct std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::const_iterator baseclass_0;
};

/* 3601 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::iterator first;
  bool second;
};

/* 3602 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupF
{
  std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::iterator first;
  std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> >::iterator second;
};

/* 3603 */
struct std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >::rebind<std::pair<unsigned long const ,Registry::CSetupFile::Data> >
{
  char dummy[1];
};

/* 3604 */
struct std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data>
{
  char dummy[1];
};

/* 3605 */
struct std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 3606 */
struct std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >::rebind<char>
{
  char dummy[1];
};

/* 3607 */
struct std::multimap<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> >,1> > baseclass_0;
};

/* 3608 */
struct Registry::CSetupFile
{
  std::multimap<unsigned long,Registry::CSetupFile::Data,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Registry::CSetupFile::Data> > > m_SetupMap;
};

/* 3609 */
struct Filter::FilterName
{
  unsigned __int16 Total;
  char FilterStrings[4000][15];
};

/* 3610 */
struct CEnsureCleanup<void *,&CloseHandle,0>
{
  unsigned int m_t;
};

/* 3611 */
struct CSingleton<CXORCrypt>
{
  char dummy[1];
};

/* 3612 */
union $6FB5F0EDE34F4B54E4A5F2BE33A84E96
{
  CSingleton<CXORCrypt> baseclass_0;
  char m_CodePage[100];
};

/* 3613 */
struct CXORCrypt
{
  $6FB5F0EDE34F4B54E4A5F2BE33A84E96 ___u0;
  unsigned int m_CodePageCount;
};

/* 3614 */
struct CEnsureDeleteArray<char>
{
  char *m_ptrArray;
};

/* 3615 */
struct CEnsureHeapFree
{
  void *m_hHeap;
  void *m_pv;
};

/* 3616 */
struct CEnsureReleaseRegion
{
  void *m_pv;
};

/* 3617 */
struct std::unary_function<CPacketStatistics::PacketData,void>
{
  char dummy[1];
};

/* 3618 */
union $F0436A77BD324A1C239BCE77D936E14F
{
  std::unary_function<CPacketStatistics::PacketData,void> baseclass_0;
  void (__thiscall *_Pmemfun)(CPacketStatistics::PacketData *this);
};

/* 3619 */
struct std::mem_fun_ref_t<void,CPacketStatistics::PacketData>
{
  $F0436A77BD324A1C239BCE77D936E14F ___u0;
};

/* 3620 */
struct std::unary_function<CPacketStatistics::CompressData,void>
{
  char dummy[1];
};

/* 3621 */
union $D5A1FD00D2CC8E8DF7084D7AA49C73C8
{
  std::unary_function<CPacketStatistics::CompressData,void> baseclass_0;
  void (__thiscall *_Pmemfun)(CPacketStatistics::CompressData *this);
};

/* 3622 */
struct std::mem_fun_ref_t<void,CPacketStatistics::CompressData>
{
  $D5A1FD00D2CC8E8DF7084D7AA49C73C8 ___u0;
};

/* 3623 */
struct std::_Allocator_base<std::pair<unsigned long,unsigned long> >
{
  char dummy[1];
};

/* 3624 */
struct std::allocator<std::pair<unsigned long,unsigned long> >
{
  std::_Allocator_base<std::pair<unsigned long,unsigned long> > baseclass_0;
};

/* 3625 */
struct std::_Vector_val<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >
{
  std::allocator<std::pair<unsigned long,unsigned long> > _Alval;
};

/* 3626 */
struct std::vector<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >
{
  std::_Vector_val<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > > baseclass_0;
  std::pair<unsigned long,unsigned long> *_Myfirst;
  std::pair<unsigned long,unsigned long> *_Mylast;
  std::pair<unsigned long,unsigned long> *_Myend;
};

/* 3627 */
struct std::iterator<std::random_access_iterator_tag,std::pair<unsigned long,unsigned long>,int,std::pair<unsigned long,unsigned long> const *,std::pair<unsigned long,unsigned long> const &>
{
  char dummy[1];
};

/* 3628 */
struct std::_Ranit<std::pair<unsigned long,unsigned long>,int,std::pair<unsigned long,unsigned long> const *,std::pair<unsigned long,unsigned long> const &>
{
  std::iterator<std::random_access_iterator_tag,std::pair<unsigned long,unsigned long>,int,std::pair<unsigned long,unsigned long> const *,std::pair<unsigned long,unsigned long> const &> baseclass_0;
};

/* 3629 */
union $D5668E6ABE8A698E0489D2710FFE5EAF
{
  std::_Ranit<std::pair<unsigned long,unsigned long>,int,std::pair<unsigned long,unsigned long> const *,std::pair<unsigned long,unsigned long> const &> baseclass_0;
  std::pair<unsigned long,unsigned long> *_Myptr;
};

/* 3630 */
struct std::vector<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >::const_iterator
{
  $D5668E6ABE8A698E0489D2710FFE5EAF ___u0;
};

/* 3631 */
struct std::vector<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >::iterator
{
  std::vector<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >::const_iterator baseclass_0;
};

/* 3632 */
struct std::allocator<std::pair<unsigned long,unsigned long> >::rebind<std::pair<unsigned long,unsigned long> >
{
  char dummy[1];
};

/* 3633 */
struct std::pair<std::vector<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >::iterator,std::vector<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >::iterator>
{
  std::vector<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >::iterator first;
  std::vector<std::pair<unsigned long,unsigned long>,std::allocator<std::pair<unsigned long,unsigned long> > >::iterator second;
};

/* 3634 */
struct CSendPacketAllServer
{
  const char *m_szData;
  unsigned int m_dwDataLen;
  char m_cPacketCmd;
};

/* 3635 */
struct std::pair<std::vector<unsigned long,std::allocator<unsigned long> >::iterator,std::vector<unsigned long,std::allocator<unsigned long> >::iterator>
{
  std::vector<unsigned long,std::allocator<unsigned long> >::iterator first;
  std::vector<unsigned long,std::allocator<unsigned long> >::iterator second;
};

/* 3636 */
struct tagMIDIINCAPS2W
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int dwSupport;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 3637 */
struct _CLASS_MEDIA_CHANGE_CONTEXT
{
  unsigned int MediaChangeCount;
  unsigned int NewState;
};

/* 3638 */
struct midiproptempo_tag
{
  unsigned int cbStruct;
  unsigned int dwTempo;
};

/* 3639 */
struct _CRYPTOAPI_BLOB
{
  unsigned int cbData;
  char *pbData;
};

/* 3640 */
struct _CRYPT_ALGORITHM_IDENTIFIER
{
  char *pszObjId;
  _CRYPTOAPI_BLOB Parameters;
};

/* 3641 */
struct _CRYPT_BIT_BLOB
{
  unsigned int cbData;
  char *pbData;
  unsigned int cUnusedBits;
};

/* 3642 */
struct _CERT_PUBLIC_KEY_INFO
{
  _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
  _CRYPT_BIT_BLOB PublicKey;
};

/* 3643 */
struct _CERT_EXTENSION
{
  char *pszObjId;
  int fCritical;
  _CRYPTOAPI_BLOB Value;
};

/* 3644 */
struct _CERT_INFO
{
  unsigned int dwVersion;
  _CRYPTOAPI_BLOB SerialNumber;
  _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  _CRYPTOAPI_BLOB Issuer;
  _FILETIME NotBefore;
  _FILETIME NotAfter;
  _CRYPTOAPI_BLOB Subject;
  _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  _CRYPT_BIT_BLOB IssuerUniqueId;
  _CRYPT_BIT_BLOB SubjectUniqueId;
  unsigned int cExtension;
  _CERT_EXTENSION *rgExtension;
};

/* 3645 */
struct _CMSG_ENVELOPED_ENCODE_INFO
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  void *pvEncryptionAuxInfo;
  unsigned int cRecipients;
  _CERT_INFO **rgpRecipients;
};

/* 3646 */
struct tagRemHGLOBAL
{
  int fNullHGlobal;
  unsigned int cbData;
  char data[1];
};

/* 3647 */
struct _DWORD_BLOB
{
  unsigned int clSize;
  unsigned int alData[1];
};

/* 3648 */
struct _CERT_ISSUER_SERIAL_NUMBER
{
  _CRYPTOAPI_BLOB Issuer;
  _CRYPTOAPI_BLOB SerialNumber;
};

/* 3649 */
union $1471CA518E05480E892A0D55B01586F2
{
  _CERT_ISSUER_SERIAL_NUMBER IssuerSerialNumber;
  _CRYPTOAPI_BLOB KeyId;
  _CRYPTOAPI_BLOB HashId;
};

/* 3650 */
struct _CERT_ID
{
  unsigned int dwIdChoice;
  $1471CA518E05480E892A0D55B01586F2 ___u1;
};

/* 3651 */
struct _CRYPT_ATTRIBUTE_TYPE_VALUE
{
  char *pszObjId;
  _CRYPTOAPI_BLOB Value;
};

/* 3652 */
struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO
{
  unsigned int cbSize;
  _CRYPT_BIT_BLOB RecipientPublicKey;
  _CERT_ID RecipientId;
  _FILETIME Date;
  _CRYPT_ATTRIBUTE_TYPE_VALUE *pOtherAttr;
};

/* 3653 */
union $3821B726A8181B48B1800D78220C30AE
{
  _CRYPT_ALGORITHM_IDENTIFIER *pEphemeralAlgorithm;
  _CERT_ID *pSenderId;
};

/* 3654 */
struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO
{
  unsigned int cbSize;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  void *pvKeyEncryptionAuxInfo;
  _CRYPT_ALGORITHM_IDENTIFIER KeyWrapAlgorithm;
  void *pvKeyWrapAuxInfo;
  unsigned int hCryptProv;
  unsigned int dwKeySpec;
  unsigned int dwKeyChoice;
  $3821B726A8181B48B1800D78220C30AE ___u8;
  _CRYPTOAPI_BLOB UserKeyingMaterial;
  unsigned int cRecipientEncryptedKeys;
  _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO **rgpRecipientEncryptedKeys;
};

/* 3655 */
struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO
{
  _CERT_ID RecipientId;
  _CRYPTOAPI_BLOB EncryptedKey;
  _FILETIME Date;
  _CRYPT_ATTRIBUTE_TYPE_VALUE *pOtherAttr;
};

/* 3656 */
struct IPropertyBag
{
  IUnknown baseclass_0;
};

/* 3657 */
struct tagPARAMDATA
{
  unsigned __int16 *szName;
  unsigned __int16 vt;
};

/* 3658 */
struct tagMETHODDATA
{
  unsigned __int16 *szName;
  tagPARAMDATA *ppdata;
  int dispid;
  unsigned int iMeth;
  tagCALLCONV cc;
  unsigned int cArgs;
  unsigned __int16 wFlags;
  unsigned __int16 vtReturn;
};

/* 3659 */
struct tagMCI_SAVE_PARMSA
{
  unsigned int dwCallback;
  const char *lpfilename;
};

/* 3660 */
struct tagRemHMETAFILEPICT
{
  int mm;
  int xExt;
  int yExt;
  unsigned int cbData;
  char data[1];
};

/* 3661 */
struct _FAT_STATISTICS
{
  unsigned int CreateHits;
  unsigned int SuccessfulCreates;
  unsigned int FailedCreates;
  unsigned int NonCachedReads;
  unsigned int NonCachedReadBytes;
  unsigned int NonCachedWrites;
  unsigned int NonCachedWriteBytes;
  unsigned int NonCachedDiskReads;
  unsigned int NonCachedDiskWrites;
};

/* 3662 */
struct HDRVR__
{
  int unused;
};

/* 3663 */
struct tagMCI_SEEK_PARMS
{
  unsigned int dwCallback;
  unsigned int dwTo;
};

/* 3664 */
struct _FULL_PTR_XLAT_TABLES::__unnamed
{
  void **XlatTable;
  char *StateTable;
  unsigned int NumberOfEntries;
};

/* 3665 */
struct _FULL_PTR_TO_REFID_ELEMENT
{
  _FULL_PTR_TO_REFID_ELEMENT *Next;
  void *Pointer;
  unsigned int RefId;
  char State;
};

/* 3666 */
struct _FULL_PTR_XLAT_TABLES
{
  _FULL_PTR_XLAT_TABLES::__unnamed RefIdToPointer;
  _FULL_PTR_XLAT_TABLES::__unnamed PointerToRefId;
  unsigned int NextRefId;
  XLAT_SIDE XlatSide;
};

/* 3667 */
struct _DOC_INFO_1W
{
  unsigned __int16 *pDocName;
  unsigned __int16 *pOutputFile;
  unsigned __int16 *pDatatype;
};

/* 3668 */
struct _DOC_INFO_2W
{
  unsigned __int16 *pDocName;
  unsigned __int16 *pOutputFile;
  unsigned __int16 *pDatatype;
  unsigned int dwMode;
  unsigned int JobId;
};

/* 3669 */
struct tagOFNA
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const char *lpstrFilter;
  char *lpstrCustomFilter;
  unsigned int nMaxCustFilter;
  unsigned int nFilterIndex;
  char *lpstrFile;
  unsigned int nMaxFile;
  char *lpstrFileTitle;
  unsigned int nMaxFileTitle;
  const char *lpstrInitialDir;
  const char *lpstrTitle;
  unsigned int Flags;
  unsigned __int16 nFileOffset;
  unsigned __int16 nFileExtension;
  const char *lpstrDefExt;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const char *lpTemplateName;
};

/* 3670 */
struct _OFNOTIFYEXA
{
  tagNMHDR hdr;
  tagOFNA *lpOFN;
  void *psf;
  void *pidl;
};

/* 3671 */
struct tagPRINTPAGERANGE
{
  unsigned int nFromPage;
  unsigned int nToPage;
};

/* 3672 */
struct tagPDEXA
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  void *hDevMode;
  void *hDevNames;
  HDC__ *hDC;
  unsigned int Flags;
  unsigned int Flags2;
  unsigned int ExclusionFlags;
  unsigned int nPageRanges;
  unsigned int nMaxPageRanges;
  tagPRINTPAGERANGE *lpPageRanges;
  unsigned int nMinPage;
  unsigned int nMaxPage;
  unsigned int nCopies;
  HINSTANCE__ *hInstance;
  const char *lpPrintTemplateName;
  IUnknown *lpCallback;
  unsigned int nPropertyPages;
  _PSP **lphPropertyPages;
  unsigned int nStartPage;
  unsigned int dwResultAction;
};

/* 3673 */
struct _TRUSTEE_A
{
  _TRUSTEE_A *pMultipleTrustee;
  _MULTIPLE_TRUSTEE_OPERATION MultipleTrusteeOperation;
  _TRUSTEE_FORM TrusteeForm;
  _TRUSTEE_TYPE TrusteeType;
  char *ptstrName;
};

/* 3674 */
struct _ACTRL_ACCESS_ENTRYA
{
  _TRUSTEE_A Trustee;
  unsigned int fAccessFlags;
  unsigned int Access;
  unsigned int ProvSpecificAccess;
  unsigned int Inheritance;
  char *lpInheritProperty;
};

/* 3675 */
struct _ACTRL_ACCESS_ENTRY_LISTA
{
  unsigned int cEntries;
  _ACTRL_ACCESS_ENTRYA *pAccessList;
};

/* 3676 */
struct _RPC_ASYNC_STATE
{
  unsigned int Size;
  unsigned int Signature;
  int Lock;
  unsigned int Flags;
  void *StubInfo;
  void *UserInfo;
  void *RuntimeInfo;
  _RPC_ASYNC_EVENT Event;
  _RPC_NOTIFICATION_TYPES NotificationType;
  _RPC_ASYNC_STATE::__unnamed u;
  _BYTE gap2c[8];
  int Reserved[4];
};

/* 3677 */
struct _RPC_ASYNC_STATE::__unnamed::__unnamed
{
  void (__stdcall *NotificationRoutine)(_RPC_ASYNC_STATE *, void *, _RPC_ASYNC_EVENT);
  void *hThread;
};

/* 3678 */
union _RPC_ASYNC_STATE::__unnamed
{
  _RPC_ASYNC_STATE::__unnamed::__unnamed APC;
  _RPC_ASYNC_STATE::__unnamed::__unnamed IOC;
  _RPC_ASYNC_STATE::__unnamed::__unnamed HWND;
  void *hEvent;
  void (__stdcall *NotificationRoutine)(_RPC_ASYNC_STATE *, void *, _RPC_ASYNC_EVENT);
};

/* 3679 */
struct _PROPSHEETPAGEA
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HINSTANCE__ *hInstance;
  $DB1DA47D7F5257745AF759FD0F136C2D ___u3;
  $34DED5F6CF764D81CB52C876B11C091E ___u4;
  const char *pszTitle;
  int (__stdcall *pfnDlgProc)(HWND__ *, unsigned int, unsigned int, int);
  int lParam;
  unsigned int (__stdcall *pfnCallback)(HWND__ *, unsigned int, _PROPSHEETPAGEA *);
  unsigned int *pcRefParent;
  const char *pszHeaderTitle;
  const char *pszHeaderSubTitle;
};

/* 3680 */
union $DB1DA47D7F5257745AF759FD0F136C2D
{
  const char *pszTemplate;
  DLGTEMPLATE *pResource;
};

/* 3681 */
union $34DED5F6CF764D81CB52C876B11C091E
{
  HICON__ *hIcon;
  const char *pszIcon;
};

/* 3682 */
struct _PROPSHEETPAGEA_V3
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HINSTANCE__ *hInstance;
  $DB1DA47D7F5257745AF759FD0F136C2D ___u3;
  $34DED5F6CF764D81CB52C876B11C091E ___u4;
  const char *pszTitle;
  int (__stdcall *pfnDlgProc)(HWND__ *, unsigned int, unsigned int, int);
  int lParam;
  unsigned int (__stdcall *pfnCallback)(HWND__ *, unsigned int, _PROPSHEETPAGEA *);
  unsigned int *pcRefParent;
  const char *pszHeaderTitle;
  const char *pszHeaderSubTitle;
  void *hActCtx;
};

/* 3683 */
struct _PRINTER_INFO_5A
{
  char *pPrinterName;
  char *pPortName;
  unsigned int Attributes;
  unsigned int DeviceNotSelectedTimeout;
  unsigned int TransmissionRetryTimeout;
};

/* 3684 */
struct _CERT_CONTEXT
{
  unsigned int dwCertEncodingType;
  char *pbCertEncoded;
  unsigned int cbCertEncoded;
  _CERT_INFO *pCertInfo;
  void *hCertStore;
};

/* 3685 */
struct _CERT_TRUST_STATUS
{
  unsigned int dwErrorStatus;
  unsigned int dwInfoStatus;
};

/* 3686 */
struct _CRL_ENTRY
{
  _CRYPTOAPI_BLOB SerialNumber;
  _FILETIME RevocationDate;
  unsigned int cExtension;
  _CERT_EXTENSION *rgExtension;
};

/* 3687 */
struct _CRL_INFO
{
  unsigned int dwVersion;
  _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  _CRYPTOAPI_BLOB Issuer;
  _FILETIME ThisUpdate;
  _FILETIME NextUpdate;
  unsigned int cCRLEntry;
  _CRL_ENTRY *rgCRLEntry;
  unsigned int cExtension;
  _CERT_EXTENSION *rgExtension;
};

/* 3688 */
const struct _CRL_CONTEXT
{
  unsigned int dwCertEncodingType;
  char *pbCrlEncoded;
  unsigned int cbCrlEncoded;
  _CRL_INFO *pCrlInfo;
  void *hCertStore;
};

/* 3689 */
struct _CERT_REVOCATION_CRL_INFO
{
  unsigned int cbSize;
  _CRL_CONTEXT *pBaseCrlContext;
  _CRL_CONTEXT *pDeltaCrlContext;
  _CRL_ENTRY *pCrlEntry;
  int fDeltaCrlEntry;
};

/* 3690 */
struct _CERT_REVOCATION_INFO
{
  unsigned int cbSize;
  unsigned int dwRevocationResult;
  const char *pszRevocationOid;
  void *pvOidSpecificInfo;
  int fHasFreshnessTime;
  unsigned int dwFreshnessTime;
  _CERT_REVOCATION_CRL_INFO *pCrlInfo;
};

/* 3691 */
struct _CTL_USAGE
{
  unsigned int cUsageIdentifier;
  char **rgpszUsageIdentifier;
};

/* 3692 */
struct _CERT_CHAIN_ELEMENT
{
  unsigned int cbSize;
  _CERT_CONTEXT *pCertContext;
  _CERT_TRUST_STATUS TrustStatus;
  _CERT_REVOCATION_INFO *pRevocationInfo;
  _CTL_USAGE *pIssuanceUsage;
  _CTL_USAGE *pApplicationUsage;
  const unsigned __int16 *pwszExtendedErrorInfo;
};

/* 3693 */
struct _PRINTER_NOTIFY_INFO_DATA::__unnamed::__unnamed
{
  unsigned int cbBuf;
  void *pBuf;
};

/* 3694 */
union _PRINTER_NOTIFY_INFO_DATA::__unnamed
{
  unsigned int adwData[2];
  _PRINTER_NOTIFY_INFO_DATA::__unnamed::__unnamed Data;
};

/* 3695 */
struct _PRINTER_NOTIFY_INFO_DATA
{
  unsigned __int16 Type;
  unsigned __int16 Field;
  unsigned int Reserved;
  unsigned int Id;
  _PRINTER_NOTIFY_INFO_DATA::__unnamed NotifyData;
};

/* 3696 */
struct tagJOYCAPSA
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  char szPname[32];
  unsigned int wXmin;
  unsigned int wXmax;
  unsigned int wYmin;
  unsigned int wYmax;
  unsigned int wZmin;
  unsigned int wZmax;
  unsigned int wNumButtons;
  unsigned int wPeriodMin;
  unsigned int wPeriodMax;
  unsigned int wRmin;
  unsigned int wRmax;
  unsigned int wUmin;
  unsigned int wUmax;
  unsigned int wVmin;
  unsigned int wVmax;
  unsigned int wCaps;
  unsigned int wMaxAxes;
  unsigned int wNumAxes;
  unsigned int wMaxButtons;
  char szRegKey[32];
  char szOEMVxD[260];
};

/* 3697 */
struct _CRYPT_ATTRIBUTE
{
  char *pszObjId;
  unsigned int cValue;
  _CRYPTOAPI_BLOB *rgValue;
};

/* 3698 */
struct _CRYPT_ATTRIBUTES
{
  unsigned int cAttr;
  _CRYPT_ATTRIBUTE *rgAttr;
};

/* 3699 */
struct _FLAGGED_BYTE_BLOB
{
  unsigned int fFlags;
  unsigned int clSize;
  char abData[1];
};

/* 3700 */
union _userHGLOBAL::__MIDL_IWinTypes_0003
{
  int hInproc;
  _FLAGGED_BYTE_BLOB *hRemote;
  __int64 hInproc64;
};

/* 3701 */
struct _userHGLOBAL
{
  int fContext;
  _userHGLOBAL::__MIDL_IWinTypes_0003 u;
};

/* 3702 */
struct IInternetProtocolSinkStackable
{
  IUnknown baseclass_0;
};

/* 3703 */
struct tagOFNW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpstrFilter;
  unsigned __int16 *lpstrCustomFilter;
  unsigned int nMaxCustFilter;
  unsigned int nFilterIndex;
  unsigned __int16 *lpstrFile;
  unsigned int nMaxFile;
  unsigned __int16 *lpstrFileTitle;
  unsigned int nMaxFileTitle;
  const unsigned __int16 *lpstrInitialDir;
  const unsigned __int16 *lpstrTitle;
  unsigned int Flags;
  unsigned __int16 nFileOffset;
  unsigned __int16 nFileExtension;
  const unsigned __int16 *lpstrDefExt;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpTemplateName;
};

/* 3704 */
struct tagMIDIOUTCAPSA
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wVoices;
  unsigned __int16 wNotes;
  unsigned __int16 wChannelMask;
  unsigned int dwSupport;
};

/* 3705 */
struct _CMC_ADD_EXTENSIONS_INFO
{
  unsigned int dwCmcDataReference;
  unsigned int cCertReference;
  unsigned int *rgdwCertReference;
  unsigned int cExtension;
  _CERT_EXTENSION *rgExtension;
};

/* 3706 */
struct _CRYPT_URL_ARRAY
{
  unsigned int cUrl;
  unsigned __int16 **rgwszUrl;
};

/* 3707 */
struct _CHANGER_ELEMENT
{
  _ELEMENT_TYPE ElementType;
  unsigned int ElementAddress;
};

/* 3708 */
struct _PRINTER_NOTIFY_OPTIONS_TYPE
{
  unsigned __int16 Type;
  unsigned __int16 Reserved0;
  unsigned int Reserved1;
  unsigned int Reserved2;
  unsigned int Count;
  unsigned __int16 *pFields;
};

/* 3709 */
struct _PRINTER_NOTIFY_OPTIONS
{
  unsigned int Version;
  unsigned int Flags;
  unsigned int Count;
  _PRINTER_NOTIFY_OPTIONS_TYPE *pTypes;
};

/* 3710 */
struct IOleCacheControl
{
  IUnknown baseclass_0;
};

/* 3711 */
struct tagRPC_CALL_ATTRIBUTES_V1_A
{
  unsigned int Version;
  unsigned int Flags;
  unsigned int ServerPrincipalNameBufferLength;
  char *ServerPrincipalName;
  unsigned int ClientPrincipalNameBufferLength;
  char *ClientPrincipalName;
  unsigned int AuthenticationLevel;
  unsigned int AuthenticationService;
  int NullSession;
};

/* 3712 */
struct _CRYPT_KEY_PROV_PARAM
{
  unsigned int dwParam;
  char *pbData;
  unsigned int cbData;
  unsigned int dwFlags;
};

/* 3713 */
struct _CRYPT_KEY_PROV_INFO
{
  unsigned __int16 *pwszContainerName;
  unsigned __int16 *pwszProvName;
  unsigned int dwProvType;
  unsigned int dwFlags;
  unsigned int cProvParam;
  _CRYPT_KEY_PROV_PARAM *rgProvParam;
  unsigned int dwKeySpec;
};

/* 3714 */
union $444B8AF3F414656C8F88F98B3D40B8AE
{
  unsigned int hKeyEncryptionKey;
  void *pvKeyEncryptionKey;
};

/* 3715 */
struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO
{
  unsigned int cbSize;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  void *pvKeyEncryptionAuxInfo;
  unsigned int hCryptProv;
  unsigned int dwKeyChoice;
  $444B8AF3F414656C8F88F98B3D40B8AE ___u5;
  _CRYPTOAPI_BLOB KeyId;
  _FILETIME Date;
  _CRYPT_ATTRIBUTE_TYPE_VALUE *pOtherAttr;
};

/* 3716 */
struct _PORT_INFO_1A
{
  char *pName;
};

/* 3717 */
struct _MONITOR_INFO_2A
{
  char *pName;
  char *pEnvironment;
  char *pDLLName;
};

/* 3718 */
struct ISynchronize
{
  IUnknown baseclass_0;
};

/* 3719 */
struct tagFINDREPLACEA
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  unsigned int Flags;
  char *lpstrFindWhat;
  char *lpstrReplaceWith;
  unsigned __int16 wFindWhatLen;
  unsigned __int16 wReplaceWithLen;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const char *lpTemplateName;
};

/* 3720 */
struct tagMIXERCONTROLDETAILS_LISTTEXTA
{
  unsigned int dwParam1;
  unsigned int dwParam2;
  char szName[64];
};

/* 3721 */
struct _DISK_GEOMETRY
{
  _LARGE_INTEGER Cylinders;
  _MEDIA_TYPE MediaType;
  unsigned int TracksPerCylinder;
  unsigned int SectorsPerTrack;
  unsigned int BytesPerSector;
};

/* 3722 */
struct tagDBIMPLICITSESSION
{
  IUnknown *pUnkOuter;
  _GUID *piid;
  IUnknown *pSession;
};

/* 3723 */
struct tagWAVEOUTCAPS2A
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 3724 */
struct tagMCI_ANIM_WINDOW_PARMSA
{
  unsigned int dwCallback;
  HWND__ *hWnd;
  unsigned int nCmdShow;
  const char *lpstrText;
};

/* 3725 */
struct _PORT_INFO_2A
{
  char *pPortName;
  char *pMonitorName;
  char *pDescription;
  unsigned int fPortType;
  unsigned int Reserved;
};

/* 3726 */
struct _PARTY_INFO
{
  unsigned int MemberCID[10];
  char Name[10][16];
};

/* 3727 */
#pragma pack(push, 1)
struct _RE_USPGRoomCurrent_DisConn
{
  char ClientID[20];
  unsigned int UID;
  char ServerID;
};
#pragma pack(pop)

/* 3728 */
struct _CRYPT_SIGN_MESSAGE_PARA
{
  unsigned int cbSize;
  unsigned int dwMsgEncodingType;
  _CERT_CONTEXT *pSigningCert;
  _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  void *pvHashAuxInfo;
  unsigned int cMsgCert;
  _CERT_CONTEXT **rgpMsgCert;
  unsigned int cMsgCrl;
  _CRL_CONTEXT **rgpMsgCrl;
  unsigned int cAuthAttr;
  _CRYPT_ATTRIBUTE *rgAuthAttr;
  unsigned int cUnauthAttr;
  _CRYPT_ATTRIBUTE *rgUnauthAttr;
  unsigned int dwFlags;
  unsigned int dwInnerContentType;
};

/* 3729 */
struct _DRIVER_INFO_5A
{
  unsigned int cVersion;
  char *pName;
  char *pEnvironment;
  char *pDriverPath;
  char *pDataFile;
  char *pConfigFile;
  unsigned int dwDriverAttributes;
  unsigned int dwConfigVersion;
  unsigned int dwDriverVersion;
};

/* 3730 */
struct IDropTarget
{
  IUnknown baseclass_0;
};

/* 3731 */
struct IDataObject
{
  IUnknown baseclass_0;
};

/* 3732 */
struct _CMSG_KEY_TRANS_RECIPIENT_INFO
{
  unsigned int dwVersion;
  _CERT_ID RecipientId;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  _CRYPTOAPI_BLOB EncryptedKey;
};

/* 3733 */
union $67396DE0F3A62FB26CCF66BABD16D969
{
  _CERT_ID OriginatorCertId;
  _CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
};

/* 3734 */
struct _CMSG_KEY_AGREE_RECIPIENT_INFO
{
  unsigned int dwVersion;
  unsigned int dwOriginatorChoice;
  $67396DE0F3A62FB26CCF66BABD16D969 ___u2;
  _CRYPTOAPI_BLOB UserKeyingMaterial;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  unsigned int cRecipientEncryptedKeys;
  _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO **rgpRecipientEncryptedKeys;
};

/* 3735 */
struct _CMSG_MAIL_LIST_RECIPIENT_INFO
{
  unsigned int dwVersion;
  _CRYPTOAPI_BLOB KeyId;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  _CRYPTOAPI_BLOB EncryptedKey;
  _FILETIME Date;
  _CRYPT_ATTRIBUTE_TYPE_VALUE *pOtherAttr;
};

/* 3736 */
union $01E5ADBE344C310F1E4D98B9743EA1D4
{
  _CMSG_KEY_TRANS_RECIPIENT_INFO *pKeyTrans;
  _CMSG_KEY_AGREE_RECIPIENT_INFO *pKeyAgree;
  _CMSG_MAIL_LIST_RECIPIENT_INFO *pMailList;
};

/* 3737 */
struct _CMSG_CMS_RECIPIENT_INFO
{
  unsigned int dwRecipientChoice;
  $01E5ADBE344C310F1E4D98B9743EA1D4 ___u1;
};

/* 3738 */
struct IWinInetInfo
{
  IUnknown baseclass_0;
};

/* 3739 */
struct IWinInetHttpInfo
{
  IWinInetInfo baseclass_0;
};

/* 3740 */
struct IQuickActivate
{
  IUnknown baseclass_0;
};

/* 3741 */
struct IOleClientSite
{
  IUnknown baseclass_0;
};

/* 3742 */
struct IAdviseSink
{
  IUnknown baseclass_0;
};

/* 3743 */
struct IAdviseSinkEx
{
  IAdviseSink baseclass_0;
};

/* 3744 */
struct IPropertyNotifySink
{
  IUnknown baseclass_0;
};

/* 3745 */
struct IFont
{
  IUnknown baseclass_0;
};

/* 3746 */
struct IOleUndoManager
{
  IUnknown baseclass_0;
};

/* 3747 */
struct IBindHost
{
  IUnknown baseclass_0;
};

/* 3748 */
struct IOleControlSite
{
  IUnknown baseclass_0;
};

/* 3749 */
struct IServiceProvider
{
  IUnknown baseclass_0;
};

/* 3750 */
struct tagQACONTAINER
{
  unsigned int cbSize;
  IOleClientSite *pClientSite;
  IAdviseSinkEx *pAdviseSink;
  IPropertyNotifySink *pPropertyNotifySink;
  IUnknown *pUnkEventSink;
  unsigned int dwAmbientFlags;
  unsigned int colorFore;
  unsigned int colorBack;
  IFont *pFont;
  IOleUndoManager *pUndoMgr;
  unsigned int dwAppearance;
  int lcid;
  HPALETTE__ *hpal;
  IBindHost *pBindHost;
  IOleControlSite *pOleControlSite;
  IServiceProvider *pServiceProvider;
};

/* 3751 */
struct tagQACONTROL
{
  unsigned int cbSize;
  unsigned int dwMiscStatus;
  unsigned int dwViewStatus;
  unsigned int dwEventCookie;
  unsigned int dwPropNotifyCookie;
  unsigned int dwPointerActivationPolicy;
};

/* 3752 */
struct tagDBPARAMS
{
  void *pData;
  unsigned int cParamSets;
  unsigned int hAccessor;
};

/* 3753 */
struct tagWAVEOUTCAPS2W
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 3754 */
struct _CERT_CHAIN_FIND_BY_ISSUER_PARA
{
  unsigned int cbSize;
  const char *pszUsageIdentifier;
  unsigned int dwKeySpec;
  unsigned int dwAcquirePrivateKeyFlags;
  unsigned int cIssuer;
  _CRYPTOAPI_BLOB *rgIssuer;
  int (__stdcall *pfnFindCallback)(_CERT_CONTEXT *, void *);
  void *pvFindArg;
};

/* 3755 */
struct _MONITOR_INFO_1W
{
  unsigned __int16 *pName;
};

/* 3756 */
struct _HMAC_Info
{
  unsigned int HashAlgid;
  char *pbInnerString;
  unsigned int cbInnerString;
  char *pbOuterString;
  unsigned int cbOuterString;
};

/* 3757 */
struct _DOC_INFO_3A
{
  char *pDocName;
  char *pOutputFile;
  char *pDatatype;
  unsigned int dwFlags;
};

/* 3758 */
struct _CRYPT_OID_FUNC_ENTRY
{
  const char *pszOID;
  void *pvFuncAddr;
};

/* 3759 */
struct HMIDIIN__
{
  int unused;
};

/* 3760 */
struct _CRYPT_DECRYPT_MESSAGE_PARA
{
  unsigned int cbSize;
  unsigned int dwMsgAndCertEncodingType;
  unsigned int cCertStore;
  void **rghCertStore;
};

/* 3761 */
struct tagJOYCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned __int16 szPname[32];
  unsigned int wXmin;
  unsigned int wXmax;
  unsigned int wYmin;
  unsigned int wYmax;
  unsigned int wZmin;
  unsigned int wZmax;
  unsigned int wNumButtons;
  unsigned int wPeriodMin;
  unsigned int wPeriodMax;
  unsigned int wRmin;
  unsigned int wRmax;
  unsigned int wUmin;
  unsigned int wUmax;
  unsigned int wVmin;
  unsigned int wVmax;
  unsigned int wCaps;
  unsigned int wMaxAxes;
  unsigned int wNumAxes;
  unsigned int wMaxButtons;
  unsigned __int16 szRegKey[32];
  unsigned __int16 szOEMVxD[260];
};

/* 3762 */
struct tagCONTROLINFO
{
  unsigned int cb;
  HACCEL__ *hAccel;
  unsigned __int16 cAccel;
  unsigned int dwFlags;
};

/* 3763 */
struct tagMCI_SYSINFO_PARMSA
{
  unsigned int dwCallback;
  char *lpstrReturn;
  unsigned int dwRetSize;
  unsigned int dwNumber;
  unsigned int wDeviceType;
};

/* 3764 */
struct _CTL_ENTRY
{
  _CRYPTOAPI_BLOB SubjectIdentifier;
  unsigned int cAttribute;
  _CRYPT_ATTRIBUTE *rgAttribute;
};

/* 3765 */
struct _CTL_INFO
{
  unsigned int dwVersion;
  _CTL_USAGE SubjectUsage;
  _CRYPTOAPI_BLOB ListIdentifier;
  _CRYPTOAPI_BLOB SequenceNumber;
  _FILETIME ThisUpdate;
  _FILETIME NextUpdate;
  _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
  unsigned int cCTLEntry;
  _CTL_ENTRY *rgCTLEntry;
  unsigned int cExtension;
  _CERT_EXTENSION *rgExtension;
};

/* 3766 */
struct _CTL_CONTEXT
{
  unsigned int dwMsgAndCertEncodingType;
  char *pbCtlEncoded;
  unsigned int cbCtlEncoded;
  _CTL_INFO *pCtlInfo;
  void *hCertStore;
  void *hCryptMsg;
  char *pbCtlContent;
  unsigned int cbCtlContent;
};

/* 3767 */
struct _CTL_VERIFY_USAGE_STATUS
{
  unsigned int cbSize;
  unsigned int dwError;
  unsigned int dwFlags;
  _CTL_CONTEXT **ppCtl;
  unsigned int dwCtlEntryIndex;
  _CERT_CONTEXT **ppSigner;
  unsigned int dwSignerIndex;
};

/* 3768 */
struct _CRYPT_BLOB_ARRAY
{
  unsigned int cBlob;
  _CRYPTOAPI_BLOB *rgBlob;
};

/* 3769 */
struct _CERT_TRUST_LIST_INFO
{
  unsigned int cbSize;
  _CTL_ENTRY *pCtlEntry;
  _CTL_CONTEXT *pCtlContext;
};

/* 3770 */
struct _CERT_SIMPLE_CHAIN
{
  unsigned int cbSize;
  _CERT_TRUST_STATUS TrustStatus;
  unsigned int cElement;
  _CERT_CHAIN_ELEMENT **rgpElement;
  _CERT_TRUST_LIST_INFO *pTrustListInfo;
  int fHasRevocationFreshnessTime;
  unsigned int dwRevocationFreshnessTime;
};

/* 3771 */
struct _CERT_CHAIN_CONTEXT
{
  unsigned int cbSize;
  _CERT_TRUST_STATUS TrustStatus;
  unsigned int cChain;
  _CERT_SIMPLE_CHAIN **rgpChain;
  unsigned int cLowerQualityChainContext;
  _CERT_CHAIN_CONTEXT **rgpLowerQualityChainContext;
  int fHasRevocationFreshnessTime;
  unsigned int dwRevocationFreshnessTime;
};

/* 3772 */
struct _PRINTPROCESSOR_INFO_1A
{
  char *pName;
};

/* 3773 */
struct IInternetThreadSwitch
{
  IUnknown baseclass_0;
};

/* 3774 */
struct tagMIXERLINEW::__unnamed
{
  unsigned int dwType;
  unsigned int dwDeviceID;
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
};

/* 3775 */
struct tagMIXERLINEW
{
  unsigned int cbStruct;
  unsigned int dwDestination;
  unsigned int dwSource;
  unsigned int dwLineID;
  unsigned int fdwLine;
  unsigned int dwUser;
  unsigned int dwComponentType;
  unsigned int cChannels;
  unsigned int cConnections;
  unsigned int cControls;
  unsigned __int16 szShortName[16];
  unsigned __int16 szName[64];
  tagMIXERLINEW::__unnamed Target;
};

/* 3776 */
struct tagRemHENHMETAFILE
{
  unsigned int cbData;
  char data[1];
};

/* 3777 */
struct DRVCONFIGINFOEX
{
  unsigned int dwDCISize;
  const unsigned __int16 *lpszDCISectionName;
  const unsigned __int16 *lpszDCIAliasName;
  unsigned int dnDevNode;
};

/* 3778 */
struct _CERT_LDAP_STORE_OPENED_PARA
{
  void *pvLdapSessionHandle;
  const unsigned __int16 *pwszLdapUrl;
};

/* 3779 */
struct _PRINTER_INFO_1A
{
  unsigned int Flags;
  char *pDescription;
  char *pName;
  char *pComment;
};

/* 3780 */
struct tagOLEVERB
{
  int lVerb;
  unsigned __int16 *lpszVerbName;
  unsigned int fuFlags;
  unsigned int grfAttribs;
};

/* 3781 */
struct _wireBRECORD
{
  unsigned int fFlags;
  unsigned int clSize;
  IRecordInfo *pRecInfo;
  char *pRecord;
};

/* 3782 */
struct _wireSAFEARR_BRECORD
{
  unsigned int Size;
  _wireBRECORD **aRecord;
};

/* 3783 */
struct tagCUSTDATAITEM
{
  _GUID guid;
  tagVARIANT varValue;
};

/* 3784 */
struct tagCADWORD
{
  unsigned int cElems;
  unsigned int *pElems;
};

/* 3785 */
struct $0D057425CB83406CCB6CB71DF3FA0A4C
{
  int lMinimum;
  int lMaximum;
};

/* 3786 */
struct $E50C0F09BB6F8C50FF087E1E76EA2CA0
{
  unsigned int dwMinimum;
  unsigned int dwMaximum;
};

/* 3787 */
union tagMIXERCONTROLW::__unnamed
{
  $0D057425CB83406CCB6CB71DF3FA0A4C _s0;
  $E50C0F09BB6F8C50FF087E1E76EA2CA0 _s1;
  unsigned int dwReserved[6];
};

/* 3788 */
struct tagMIXERCONTROLW
{
  unsigned int cbStruct;
  unsigned int dwControlID;
  unsigned int dwControlType;
  unsigned int fdwControl;
  unsigned int cMultipleItems;
  unsigned __int16 szShortName[16];
  unsigned __int16 szName[64];
  tagMIXERCONTROLW::__unnamed Bounds;
  tagMIXERCONTROLW::__unnamed Metrics;
};

/* 3789 */
union $476D211351DA30503E50D2F0E6E515B0
{
  unsigned int dwControlID;
  unsigned int dwControlType;
};

/* 3790 */
struct tagMIXERLINECONTROLSW
{
  unsigned int cbStruct;
  unsigned int dwLineID;
  $476D211351DA30503E50D2F0E6E515B0 ___u2;
  unsigned int cControls;
  unsigned int cbmxctrl;
  tagMIXERCONTROLW *pamxctrl;
};

/* 3791 */
struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE
{
  char *pszOrganization;
  unsigned int cNoticeNumbers;
  int *rgNoticeNumbers;
};

/* 3792 */
struct _CERT_POLICY_QUALIFIER_USER_NOTICE
{
  _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE *pNoticeReference;
  unsigned __int16 *pszDisplayText;
};

/* 3793 */
struct _TAPE_STATISTICS
{
  unsigned int Version;
  unsigned int Flags;
  _LARGE_INTEGER RecoveredWrites;
  _LARGE_INTEGER UnrecoveredWrites;
  _LARGE_INTEGER RecoveredReads;
  _LARGE_INTEGER UnrecoveredReads;
  char CompressionRatioReads;
  char CompressionRatioWrites;
};

/* 3794 */
struct _EXPLICIT_ACCESS_A
{
  unsigned int grfAccessPermissions;
  _ACCESS_MODE grfAccessMode;
  unsigned int grfInheritance;
  _TRUSTEE_A Trustee;
};

/* 3795 */
struct midistrmbuffver_tag
{
  unsigned int dwVersion;
  unsigned int dwMid;
  unsigned int dwOEMVersion;
};

/* 3796 */
struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  _CMSG_MAIL_LIST_RECIPIENT_INFO *pMailList;
  unsigned int dwRecipientIndex;
  unsigned int dwKeyChoice;
  $444B8AF3F414656C8F88F98B3D40B8AE ___u5;
};

/* 3797 */
struct _CHANGER_EXCHANGE_MEDIUM
{
  _CHANGER_ELEMENT Transport;
  _CHANGER_ELEMENT Source;
  _CHANGER_ELEMENT Destination1;
  _CHANGER_ELEMENT Destination2;
  char Flip1;
  char Flip2;
};

/* 3798 */
struct tagRMTPACK
{
  ISequentialStream *pISeqStream;
  unsigned int cbData;
  unsigned int cBSTR;
  unsigned __int16 **rgBSTR;
  unsigned int cVARIANT;
  tagVARIANT *rgVARIANT;
  unsigned int cIDISPATCH;
  IDispatch **rgIDISPATCH;
  unsigned int cIUNKNOWN;
  IUnknown **rgIUNKNOWN;
  unsigned int cPROPVARIANT;
  tagPROPVARIANT *rgPROPVARIANT;
  unsigned int cArray;
  tagVARIANT *rgArray;
};

/* 3799 */
struct _CRYPT_CREDENTIALS
{
  unsigned int cbSize;
  const char *pszCredentialsOid;
  void *pvCredentials;
};

/* 3800 */
#pragma pack(push, 1)
struct tagPDA
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  void *hDevMode;
  void *hDevNames;
  HDC__ *hDC;
  unsigned int Flags;
  unsigned __int16 nFromPage;
  unsigned __int16 nToPage;
  unsigned __int16 nMinPage;
  unsigned __int16 nMaxPage;
  unsigned __int16 nCopies;
  HINSTANCE__ *hInstance;
  int lCustData;
  unsigned int (__stdcall *lpfnPrintHook)(HWND__ *, unsigned int, unsigned int, int);
  unsigned int (__stdcall *lpfnSetupHook)(HWND__ *, unsigned int, unsigned int, int);
  const char *lpPrintTemplateName;
  const char *lpSetupTemplateName;
  void *hPrintTemplate;
  void *hSetupTemplate;
};
#pragma pack(pop)

/* 3801 */
struct _CRYPT_HASH_INFO
{
  _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  _CRYPTOAPI_BLOB Hash;
};

/* 3802 */
struct _CERT_OTHER_NAME
{
  char *pszObjId;
  _CRYPTOAPI_BLOB Value;
};

/* 3803 */
union $9A0E170934D355315222B6457DAC89BE
{
  _CERT_OTHER_NAME *pOtherName;
  unsigned __int16 *pwszRfc822Name;
  unsigned __int16 *pwszDNSName;
  _CRYPTOAPI_BLOB DirectoryName;
  unsigned __int16 *pwszURL;
  _CRYPTOAPI_BLOB IPAddress;
  char *pszRegisteredID;
};

/* 3804 */
struct _CERT_ALT_NAME_ENTRY
{
  unsigned int dwAltNameChoice;
  $9A0E170934D355315222B6457DAC89BE ___u1;
};

/* 3805 */
struct _CERT_ACCESS_DESCRIPTION
{
  char *pszAccessMethod;
  _CERT_ALT_NAME_ENTRY AccessLocation;
};

/* 3806 */
struct tMIXERCONTROLDETAILS_UNSIGNED
{
  unsigned int dwValue;
};

/* 3807 */
struct _BYTE_BLOB
{
  unsigned int clSize;
  char abData[1];
};

/* 3808 */
union _userHENHMETAFILE::__MIDL_IWinTypes_0006
{
  int hInproc;
  _BYTE_BLOB *hRemote;
  __int64 hInproc64;
};

/* 3809 */
struct _userHENHMETAFILE
{
  int fContext;
  _userHENHMETAFILE::__MIDL_IWinTypes_0006 u;
};

/* 3810 */
struct IXMLDOMNode
{
  IDispatch baseclass_0;
};

/* 3811 */
struct IXMLDOMDocumentFragment
{
  IXMLDOMNode baseclass_0;
};

/* 3812 */
struct _CERT_SIGNED_CONTENT_INFO
{
  _CRYPTOAPI_BLOB ToBeSigned;
  _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  _CRYPT_BIT_BLOB Signature;
};

/* 3813 */
struct _CMC_TAGGED_ATTRIBUTE
{
  unsigned int dwBodyPartID;
  _CRYPT_ATTRIBUTE Attribute;
};

/* 3814 */
struct _USER_MARSHAL_ROUTINE_QUADRUPLE
{
  unsigned int (__stdcall *pfnBufferSize)(unsigned int *, unsigned int, void *);
  char *(__stdcall *pfnMarshall)(unsigned int *, char *, void *);
  char *(__stdcall *pfnUnmarshall)(unsigned int *, char *, void *);
  void (__stdcall *pfnFree)(unsigned int *, void *);
};

/* 3815 */
struct tagOFN_NT4W
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpstrFilter;
  unsigned __int16 *lpstrCustomFilter;
  unsigned int nMaxCustFilter;
  unsigned int nFilterIndex;
  unsigned __int16 *lpstrFile;
  unsigned int nMaxFile;
  unsigned __int16 *lpstrFileTitle;
  unsigned int nMaxFileTitle;
  const unsigned __int16 *lpstrInitialDir;
  const unsigned __int16 *lpstrTitle;
  unsigned int Flags;
  unsigned __int16 nFileOffset;
  unsigned __int16 nFileExtension;
  const unsigned __int16 *lpstrDefExt;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpTemplateName;
};

/* 3816 */
struct IRowsetBookmark
{
  IUnknown baseclass_0;
};

/* 3817 */
struct IPersist
{
  IUnknown baseclass_0;
};

/* 3818 */
struct IPersistMemory
{
  IPersist baseclass_0;
};

/* 3819 */
struct tagPROPBAG2
{
  unsigned int dwType;
  unsigned __int16 vt;
  unsigned __int16 cfType;
  unsigned int dwHint;
  unsigned __int16 *pstrName;
  _GUID clsid;
};

/* 3820 */
struct IPerPropertyBrowsing
{
  IUnknown baseclass_0;
};

/* 3821 */
struct tagWAVEOUTCAPSA
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
};

/* 3822 */
struct _CTL_FIND_USAGE_PARA
{
  unsigned int cbSize;
  _CTL_USAGE SubjectUsage;
  _CRYPTOAPI_BLOB ListIdentifier;
  _CERT_INFO *pSigner;
};

/* 3823 */
struct _CTL_FIND_SUBJECT_PARA
{
  unsigned int cbSize;
  _CTL_FIND_USAGE_PARA *pUsagePara;
  unsigned int dwSubjectType;
  void *pvSubject;
};

/* 3824 */
struct IConnectionPoint
{
  IUnknown baseclass_0;
};

/* 3825 */
struct _CMC_TAGGED_CONTENT_INFO
{
  unsigned int dwBodyPartID;
  _CRYPTOAPI_BLOB EncodedContentInfo;
};

/* 3826 */
struct _CMC_TAGGED_OTHER_MSG
{
  unsigned int dwBodyPartID;
  char *pszObjId;
  _CRYPTOAPI_BLOB Value;
};

/* 3827 */
struct _CMC_RESPONSE_INFO
{
  unsigned int cTaggedAttribute;
  _CMC_TAGGED_ATTRIBUTE *rgTaggedAttribute;
  unsigned int cTaggedContentInfo;
  _CMC_TAGGED_CONTENT_INFO *rgTaggedContentInfo;
  unsigned int cTaggedOtherMsg;
  _CMC_TAGGED_OTHER_MSG *rgTaggedOtherMsg;
};

/* 3828 */
struct _CHANGER_SET_ACCESS
{
  _CHANGER_ELEMENT Element;
  unsigned int Control;
};

/* 3829 */
struct _REMSECURITY_ATTRIBUTES
{
  unsigned int nLength;
  unsigned int lpSecurityDescriptor;
  int bInheritHandle;
};

/* 3830 */
struct _CRYPT_SMIME_CAPABILITY
{
  char *pszObjId;
  _CRYPTOAPI_BLOB Parameters;
};

/* 3831 */
struct _CRYPT_SMIME_CAPABILITIES
{
  unsigned int cCapability;
  _CRYPT_SMIME_CAPABILITY *rgCapability;
};

/* 3832 */
struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA
{
  unsigned int cbSize;
  unsigned int dwRegPolicySettings;
  int fCommercial;
};

/* 3833 */
struct SCARD_READERSTATEA
{
  const char *szReader;
  void *pvUserData;
  unsigned int dwCurrentState;
  unsigned int dwEventState;
  unsigned int cbAtr;
  char rgbAtr[36];
};

/* 3834 */
struct tagAUXCAPS2W
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 3835 */
struct tagMIXERCAPS2W
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int fdwSupport;
  unsigned int cDestinations;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 3836 */
struct OPENCARD_SEARCH_CRITERIAA
{
  unsigned int dwStructSize;
  char *lpstrGroupNames;
  unsigned int nMaxGroupNames;
  _GUID *rgguidInterfaces;
  unsigned int cguidInterfaces;
  char *lpstrCardNames;
  unsigned int nMaxCardNames;
  int (__stdcall *lpfnCheck)(unsigned int, unsigned int, void *);
  unsigned int (__stdcall *lpfnConnect)(unsigned int, char *, char *, void *);
  void (__stdcall *lpfnDisconnect)(unsigned int, unsigned int, void *);
  void *pvUserData;
  unsigned int dwShareMode;
  unsigned int dwPreferredProtocols;
};

/* 3837 */
struct OPENCARDNAME_EXA
{
  unsigned int dwStructSize;
  unsigned int hSCardContext;
  HWND__ *hwndOwner;
  unsigned int dwFlags;
  const char *lpstrTitle;
  const char *lpstrSearchDesc;
  HICON__ *hIcon;
  OPENCARD_SEARCH_CRITERIAA *pOpenCardSearchCriteria;
  unsigned int (__stdcall *lpfnConnect)(unsigned int, char *, char *, void *);
  void *pvUserData;
  unsigned int dwShareMode;
  unsigned int dwPreferredProtocols;
  char *lpstrRdr;
  unsigned int nMaxRdr;
  char *lpstrCard;
  unsigned int nMaxCard;
  unsigned int dwActiveProtocol;
  unsigned int hCardHandle;
};

/* 3838 */
struct _SEC_WINNT_AUTH_IDENTITY_W
{
  unsigned __int16 *User;
  unsigned int UserLength;
  unsigned __int16 *Domain;
  unsigned int DomainLength;
  unsigned __int16 *Password;
  unsigned int PasswordLength;
  unsigned int Flags;
};

/* 3839 */
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W
{
  _SEC_WINNT_AUTH_IDENTITY_W *TransportCredentials;
  unsigned int Flags;
  unsigned int AuthenticationTarget;
  unsigned int NumberOfAuthnSchemes;
  unsigned int *AuthnSchemes;
  unsigned __int16 *ServerCertificateSubject;
};

/* 3840 */
union _RPC_SECURITY_QOS_V3_W::__unnamed
{
  _RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials;
};

/* 3841 */
struct _RPC_SECURITY_QOS_V3_W
{
  unsigned int Version;
  unsigned int Capabilities;
  unsigned int IdentityTracking;
  unsigned int ImpersonationType;
  unsigned int AdditionalSecurityInfoType;
  _RPC_SECURITY_QOS_V3_W::__unnamed u;
  void *Sid;
};

/* 3842 */
struct _FORM_INFO_1W
{
  unsigned int Flags;
  unsigned __int16 *pName;
  tagSIZE Size;
  _RECTL ImageableArea;
};

/* 3843 */
struct _tagSOFTDISTINFO
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int dwAdState;
  unsigned __int16 *szTitle;
  unsigned __int16 *szAbstract;
  unsigned __int16 *szHREF;
  unsigned int dwInstalledVersionMS;
  unsigned int dwInstalledVersionLS;
  unsigned int dwUpdateVersionMS;
  unsigned int dwUpdateVersionLS;
  unsigned int dwAdvertisedVersionMS;
  unsigned int dwAdvertisedVersionLS;
  unsigned int dwReserved;
};

/* 3844 */
struct IWaitMultiple
{
  IUnknown baseclass_0;
};

/* 3845 */
struct tagMCI_STATUS_PARMS
{
  unsigned int dwCallback;
  unsigned int dwReturn;
  unsigned int dwItem;
  unsigned int dwTrack;
};

/* 3846 */
struct _WORD_BLOB
{
  unsigned int clSize;
  unsigned __int16 asData[1];
};

/* 3847 */
struct IOleControl
{
  IUnknown baseclass_0;
};

/* 3848 */
struct _RE_CMS_CheckUserBlock
{
  char m_cFlags;
  char m_szCharName[20][5];
};

/* 3849 */
struct _SEC_WINNT_AUTH_IDENTITY_A
{
  char *User;
  unsigned int UserLength;
  char *Domain;
  unsigned int DomainLength;
  char *Password;
  unsigned int PasswordLength;
  unsigned int Flags;
};

/* 3850 */
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A
{
  _SEC_WINNT_AUTH_IDENTITY_A *TransportCredentials;
  unsigned int Flags;
  unsigned int AuthenticationTarget;
  unsigned int NumberOfAuthnSchemes;
  unsigned int *AuthnSchemes;
  char *ServerCertificateSubject;
};

/* 3851 */
union _RPC_SECURITY_QOS_V2_A::__unnamed
{
  _RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials;
};

/* 3852 */
struct _RPC_SECURITY_QOS_V2_A
{
  unsigned int Version;
  unsigned int Capabilities;
  unsigned int IdentityTracking;
  unsigned int ImpersonationType;
  unsigned int AdditionalSecurityInfoType;
  _RPC_SECURITY_QOS_V2_A::__unnamed u;
};

/* 3853 */
struct tagCHOOSEFONTA
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HDC__ *hDC;
  tagLOGFONTA *lpLogFont;
  int iPointSize;
  unsigned int Flags;
  unsigned int rgbColors;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const char *lpTemplateName;
  HINSTANCE__ *hInstance;
  char *lpszStyle;
  unsigned __int16 nFontType;
  unsigned __int16 ___MISSING_ALIGNMENT__;
  int nSizeMin;
  int nSizeMax;
};

/* 3854 */
struct _CRYPT_X942_OTHER_INFO
{
  char *pszContentEncryptionObjId;
  char rgbCounter[4];
  char rgbKeyLength[4];
  _CRYPTOAPI_BLOB PubInfo;
};

/* 3855 */
struct _TRUSTEE_W
{
  _TRUSTEE_W *pMultipleTrustee;
  _MULTIPLE_TRUSTEE_OPERATION MultipleTrusteeOperation;
  _TRUSTEE_FORM TrusteeForm;
  _TRUSTEE_TYPE TrusteeType;
  unsigned __int16 *ptstrName;
};

/* 3856 */
struct _ACTRL_ACCESS_ENTRYW
{
  _TRUSTEE_W Trustee;
  unsigned int fAccessFlags;
  unsigned int Access;
  unsigned int ProvSpecificAccess;
  unsigned int Inheritance;
  unsigned __int16 *lpInheritProperty;
};

/* 3857 */
struct _ACTRL_ACCESS_ENTRY_LISTW
{
  unsigned int cEntries;
  _ACTRL_ACCESS_ENTRYW *pAccessList;
};

/* 3858 */
struct tagAUXCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
};

/* 3859 */
struct tagMCI_OVLY_SAVE_PARMSW
{
  unsigned int dwCallback;
  const unsigned __int16 *lpfilename;
  tagRECT rc;
};

/* 3860 */
struct tagMCI_VD_ESCAPE_PARMSA
{
  unsigned int dwCallback;
  const char *lpstrCommand;
};

/* 3861 */
struct _PORT_INFO_3W
{
  unsigned int dwStatus;
  unsigned __int16 *pszStatus;
  unsigned int dwSeverity;
};

/* 3862 */
struct _tagPROTOCOLDATA
{
  unsigned int grfFlags;
  unsigned int dwState;
  void *pData;
  unsigned int cbData;
};

/* 3863 */
struct IDBDataSourceAdmin
{
  IUnknown baseclass_0;
};

/* 3864 */
#pragma pack(push, 1)
struct tagDBPROP
{
  unsigned int dwPropertyID;
  unsigned int dwOptions;
  unsigned int dwStatus;
  tagDBID colid;
  tagVARIANT vValue;
};
#pragma pack(pop)

/* 3865 */
struct tagDBPROPSET
{
  tagDBPROP *rgProperties;
  unsigned int cProperties;
  _GUID guidPropertySet;
};

/* 3866 */
struct tagDBPROPIDSET
{
  unsigned int *rgPropertyIDs;
  unsigned int cPropertyIDs;
  _GUID guidPropertySet;
};

/* 3867 */
#pragma pack(push, 1)
struct tagDBPROPINFO
{
  unsigned __int16 *pwszDescription;
  unsigned int dwPropertyID;
  unsigned int dwFlags;
  unsigned __int16 vtType;
  tagVARIANT vValues;
};
#pragma pack(pop)

/* 3868 */
struct tagDBPROPINFOSET
{
  tagDBPROPINFO *rgPropertyInfos;
  unsigned int cPropertyInfos;
  _GUID guidPropertySet;
};

/* 3869 */
#pragma pack(push, 1)
struct _PARTY_USER_INFO
{
  unsigned __int16 m_wClass[10];
  char m_cLevel[10];
  unsigned int m_dwGID[10];
};
#pragma pack(pop)

/* 3870 */
struct tagWAVEINCAPS2A
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 3871 */
struct _CERT_ALT_NAME_INFO
{
  unsigned int cAltEntry;
  _CERT_ALT_NAME_ENTRY *rgAltEntry;
};

/* 3872 */
struct _STORAGE_DEVICE_NUMBER
{
  unsigned int DeviceType;
  unsigned int DeviceNumber;
  unsigned int PartitionNumber;
};

/* 3873 */
struct tagMCI_OPEN_PARMSW
{
  unsigned int dwCallback;
  unsigned int wDeviceID;
  const unsigned __int16 *lpstrDeviceType;
  const unsigned __int16 *lpstrElementName;
  const unsigned __int16 *lpstrAlias;
};

/* 3874 */
struct _CERT_BASIC_CONSTRAINTS2_INFO
{
  int fCA;
  int fPathLenConstraint;
  unsigned int dwPathLenConstraint;
};

/* 3875 */
struct _BIN_RANGE
{
  _LARGE_INTEGER StartValue;
  _LARGE_INTEGER Length;
};

/* 3876 */
struct _BIN_COUNT
{
  _BIN_RANGE BinRange;
  unsigned int BinCount;
};

/* 3877 */
struct _BIN_RESULTS
{
  unsigned int NumberOfBins;
  _BIN_COUNT BinCounts[1];
};

/* 3878 */
struct IDataAdviseHolder
{
  IUnknown baseclass_0;
};

/* 3879 */
struct tagDVTARGETDEVICE
{
  unsigned int tdSize;
  unsigned __int16 tdDriverNameOffset;
  unsigned __int16 tdDeviceNameOffset;
  unsigned __int16 tdPortNameOffset;
  unsigned __int16 tdExtDevmodeOffset;
  char tdData[1];
};

/* 3880 */
struct tagFORMATETC
{
  unsigned __int16 cfFormat;
  tagDVTARGETDEVICE *ptd;
  unsigned int dwAspect;
  int lindex;
  unsigned int tymed;
};

/* 3881 */
struct IEnumSTATDATA
{
  IUnknown baseclass_0;
};

/* 3882 */
struct tagBIND_OPTS
{
  unsigned int cbStruct;
  unsigned int grfFlags;
  unsigned int grfMode;
  unsigned int dwTickCountDeadline;
};

/* 3883 */
struct IXMLDOMNodeList
{
  IDispatch baseclass_0;
};

/* 3884 */
struct IXMLDOMNamedNodeMap
{
  IDispatch baseclass_0;
};

/* 3885 */
struct IXMLDOMDocument
{
  IXMLDOMNode baseclass_0;
};

/* 3886 */
struct tagRemBRUSH
{
  unsigned int cbData;
  char data[1];
};

/* 3887 */
struct _SET_PARTITION_INFORMATION
{
  char PartitionType;
};

/* 3888 */
struct ITransaction
{
  IUnknown baseclass_0;
};

/* 3889 */
struct ITransactionLocal
{
  ITransaction baseclass_0;
};

/* 3890 */
struct ITransactionOptions
{
  IUnknown baseclass_0;
};

/* 3891 */
struct tagMIXERCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int fdwSupport;
  unsigned int cDestinations;
};

/* 3892 */
struct tagMIDIOUTCAPS2W
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wVoices;
  unsigned __int16 wNotes;
  unsigned __int16 wChannelMask;
  unsigned int dwSupport;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 3893 */
struct _CRL_FIND_ISSUED_FOR_PARA
{
  _CERT_CONTEXT *pSubjectCert;
  _CERT_CONTEXT *pIssuerCert;
};

/* 3894 */
struct _PROPSHEETPAGEW
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HINSTANCE__ *hInstance;
  $E93DF8936326ACA187BC53A1FCC7B851 ___u3;
  $652A26583FA38B82C7D68FD3BB1B6B71 ___u4;
  const unsigned __int16 *pszTitle;
  int (__stdcall *pfnDlgProc)(HWND__ *, unsigned int, unsigned int, int);
  int lParam;
  unsigned int (__stdcall *pfnCallback)(HWND__ *, unsigned int, _PROPSHEETPAGEW *);
  unsigned int *pcRefParent;
  const unsigned __int16 *pszHeaderTitle;
  const unsigned __int16 *pszHeaderSubTitle;
};

/* 3895 */
union $E93DF8936326ACA187BC53A1FCC7B851
{
  const unsigned __int16 *pszTemplate;
  DLGTEMPLATE *pResource;
};

/* 3896 */
union $652A26583FA38B82C7D68FD3BB1B6B71
{
  HICON__ *hIcon;
  const unsigned __int16 *pszIcon;
};

/* 3897 */
union $4B8A0BB10F5C4B9D8BBE7645A6566273
{
  unsigned int nStartPage;
  const unsigned __int16 *pStartPage;
};

/* 3898 */
union $B84F623339F855D64D0C6983B074A795
{
  _PROPSHEETPAGEW *ppsp;
  _PSP **phpage;
};

/* 3899 */
union $7E9E4724B36630610639488D76E262BF
{
  HBITMAP__ *hbmWatermark;
  const unsigned __int16 *pszbmWatermark;
};

/* 3900 */
union $23C97EAC58E02D381DC8E2D0617293CB
{
  HBITMAP__ *hbmHeader;
  const unsigned __int16 *pszbmHeader;
};

/* 3901 */
struct _PROPSHEETHEADERW
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HWND__ *hwndParent;
  HINSTANCE__ *hInstance;
  $652A26583FA38B82C7D68FD3BB1B6B71 ___u4;
  const unsigned __int16 *pszCaption;
  unsigned int nPages;
  $4B8A0BB10F5C4B9D8BBE7645A6566273 ___u7;
  $B84F623339F855D64D0C6983B074A795 ___u8;
  int (__stdcall *pfnCallback)(HWND__ *, unsigned int, int);
  $7E9E4724B36630610639488D76E262BF ___u10;
  HPALETTE__ *hplWatermark;
  $23C97EAC58E02D381DC8E2D0617293CB ___u12;
};

/* 3902 */
struct tagCHOOSECOLORA
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HWND__ *hInstance;
  unsigned int rgbResult;
  unsigned int *lpCustColors;
  unsigned int Flags;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const char *lpTemplateName;
};

/* 3903 */
struct tagPROPPAGEINFO
{
  unsigned int cb;
  unsigned __int16 *pszTitle;
  tagSIZE size;
  unsigned __int16 *pszDocString;
  unsigned __int16 *pszHelpFile;
  unsigned int dwHelpContext;
};

/* 3904 */
struct HMMIO__
{
  int unused;
};

/* 3905 */
struct _MMIOINFO
{
  unsigned int dwFlags;
  unsigned int fccIOProc;
  int (__stdcall *pIOProc)(char *, unsigned int, int, int);
  unsigned int wErrorRet;
  HTASK__ *htask;
  int cchBuffer;
  char *pchBuffer;
  char *pchNext;
  char *pchEndRead;
  char *pchEndWrite;
  int lBufOffset;
  int lDiskOffset;
  unsigned int adwInfo[3];
  unsigned int dwReserved1;
  unsigned int dwReserved2;
  HMMIO__ *hmmio;
};

/* 3906 */
struct _CMSG_SIGNER_INFO
{
  unsigned int dwVersion;
  _CRYPTOAPI_BLOB Issuer;
  _CRYPTOAPI_BLOB SerialNumber;
  _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
  _CRYPTOAPI_BLOB EncryptedHash;
  _CRYPT_ATTRIBUTES AuthAttrs;
  _CRYPT_ATTRIBUTES UnauthAttrs;
};

/* 3907 */
struct _JOB_INFO_2A
{
  unsigned int JobId;
  char *pPrinterName;
  char *pMachineName;
  char *pUserName;
  char *pDocument;
  char *pNotifyName;
  char *pDatatype;
  char *pPrintProcessor;
  char *pParameters;
  char *pDriverName;
  _devicemodeA *pDevMode;
  char *pStatus;
  void *pSecurityDescriptor;
  unsigned int Status;
  unsigned int Priority;
  unsigned int Position;
  unsigned int StartTime;
  unsigned int UntilTime;
  unsigned int TotalPages;
  unsigned int Size;
  _SYSTEMTIME Submitted;
  unsigned int Time;
  unsigned int PagesPrinted;
};

/* 3908 */
struct _JOB_INFO_3
{
  unsigned int JobId;
  unsigned int NextJobId;
  unsigned int Reserved;
};

/* 3909 */
struct _ADDJOB_INFO_1W
{
  unsigned __int16 *Path;
  unsigned int JobId;
};

/* 3910 */
struct IContext
{
  IUnknown baseclass_0;
};

/* 3911 */
struct IObjContext
{
  IContext baseclass_0;
};

/* 3912 */
struct _TRUSTEE_ACCESSW
{
  unsigned __int16 *lpProperty;
  unsigned int Access;
  unsigned int fAccessFlags;
  unsigned int fReturnedAccess;
};

/* 3913 */
struct _SCARD_IO_REQUEST
{
  unsigned int dwProtocol;
  unsigned int cbPciLength;
};

/* 3914 */
#pragma pack(push, 1)
struct waveformat_tag
{
  unsigned __int16 wFormatTag;
  unsigned __int16 nChannels;
  unsigned int nSamplesPerSec;
  unsigned int nAvgBytesPerSec;
  unsigned __int16 nBlockAlign;
};
#pragma pack(pop)

/* 3915 */
struct _PROVIDOR_INFO_1A
{
  char *pName;
  char *pEnvironment;
  char *pDLLName;
};

/* 3916 */
struct IDBProperties
{
  IUnknown baseclass_0;
};

/* 3917 */
struct IDBBinderProperties
{
  IDBProperties baseclass_0;
};

/* 3918 */
struct tagMIXERCAPS2A
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned int fdwSupport;
  unsigned int cDestinations;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 3919 */
struct _CERT_POLICY_ID
{
  unsigned int cCertPolicyElementId;
  char **rgpszCertPolicyElementId;
};

/* 3920 */
struct _CERT_KEY_USAGE_RESTRICTION_INFO
{
  unsigned int cCertPolicyId;
  _CERT_POLICY_ID *rgCertPolicyId;
  _CRYPT_BIT_BLOB RestrictedKeyUsage;
};

/* 3921 */
struct _PRINTER_INFO_1W
{
  unsigned int Flags;
  unsigned __int16 *pDescription;
  unsigned __int16 *pName;
  unsigned __int16 *pComment;
};

/* 3922 */
struct tagJOYCAPS2A
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  char szPname[32];
  unsigned int wXmin;
  unsigned int wXmax;
  unsigned int wYmin;
  unsigned int wYmax;
  unsigned int wZmin;
  unsigned int wZmax;
  unsigned int wNumButtons;
  unsigned int wPeriodMin;
  unsigned int wPeriodMax;
  unsigned int wRmin;
  unsigned int wRmax;
  unsigned int wUmin;
  unsigned int wUmax;
  unsigned int wVmin;
  unsigned int wVmax;
  unsigned int wCaps;
  unsigned int wMaxAxes;
  unsigned int wNumAxes;
  unsigned int wMaxButtons;
  char szRegKey[32];
  char szOEMVxD[260];
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 3923 */
struct tagMCI_ANIM_OPEN_PARMSA
{
  unsigned int dwCallback;
  unsigned int wDeviceID;
  const char *lpstrDeviceType;
  const char *lpstrElementName;
  const char *lpstrAlias;
  unsigned int dwStyle;
  HWND__ *hWndParent;
};

/* 3924 */
struct _SCHANNEL_ALG
{
  unsigned int dwUse;
  unsigned int Algid;
  unsigned int cBits;
  unsigned int dwFlags;
  unsigned int dwReserved;
};

/* 3925 */
struct _CERT_CREATE_CONTEXT_PARA
{
  unsigned int cbSize;
  void (__stdcall *pfnFree)(void *);
  void *pvFree;
};

/* 3926 */
struct _RPC_VERSION
{
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
};

/* 3927 */
struct _RPC_SYNTAX_IDENTIFIER
{
  _GUID SyntaxGUID;
  _RPC_VERSION SyntaxVersion;
};

/* 3928 */
struct _RPC_MESSAGE
{
  void *Handle;
  unsigned int DataRepresentation;
  void *Buffer;
  unsigned int BufferLength;
  unsigned int ProcNum;
  _RPC_SYNTAX_IDENTIFIER *TransferSyntax;
  void *RpcInterfaceInformation;
  void *ReservedForRuntime;
  void *ManagerEpv;
  void *ImportContext;
  unsigned int RpcFlags;
};

/* 3929 */
struct RPC_DISPATCH_TABLE
{
  unsigned int DispatchTableCount;
  void (__stdcall **DispatchTable)(_RPC_MESSAGE *);
  int Reserved;
};

/* 3930 */
struct _MIDL_SYNTAX_INFO
{
  _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  RPC_DISPATCH_TABLE *DispatchTable;
  const char *ProcString;
  const unsigned __int16 *FmtStringOffset;
  const char *TypeString;
  const void *aUserMarshalQuadruple;
  unsigned int pReserved1;
  unsigned int pReserved2;
};

/* 3931 */
struct IColumnsInfo
{
  IUnknown baseclass_0;
};

/* 3932 */
struct _DSSSEED
{
  unsigned int counter;
  char seed[20];
};

/* 3933 */
struct _PUBKEYVER3
{
  unsigned int magic;
  unsigned int bitlenP;
  unsigned int bitlenQ;
  unsigned int bitlenJ;
  _DSSSEED DSSSeed;
};

/* 3934 */
struct _CERT_REGISTRY_STORE_ROAMING_PARA
{
  HKEY__ *hKey;
  unsigned __int16 *pwszStoreDirectory;
};

/* 3935 */
struct IRpcChannelBuffer
{
  IUnknown baseclass_0;
};

/* 3936 */
struct _NDR_USER_MARSHAL_INFO_LEVEL1
{
  void *Buffer;
  unsigned int BufferSize;
  void *(__stdcall *pfnAllocate)(unsigned int);
  void (__stdcall *pfnFree)(void *);
  IRpcChannelBuffer *pRpcChannelBuffer;
  unsigned int Reserved[5];
};

/* 3937 */
struct _DATATYPES_INFO_1A
{
  char *pName;
};

/* 3938 */
struct _userBITMAP
{
  int bmType;
  int bmWidth;
  int bmHeight;
  int bmWidthBytes;
  unsigned __int16 bmPlanes;
  unsigned __int16 bmBitsPixel;
  unsigned int cbSize;
  char pBuffer[1];
};

/* 3939 */
union _userHBITMAP::__MIDL_IWinTypes_0007
{
  int hInproc;
  _userBITMAP *hRemote;
  __int64 hInproc64;
};

/* 3940 */
struct _userHBITMAP
{
  int fContext;
  _userHBITMAP::__MIDL_IWinTypes_0007 u;
};

/* 3941 */
union _userHPALETTE::__MIDL_IWinTypes_0008
{
  int hInproc;
  tagLOGPALETTE *hRemote;
  __int64 hInproc64;
};

/* 3942 */
struct _userHPALETTE
{
  int fContext;
  _userHPALETTE::__MIDL_IWinTypes_0008 u;
};

/* 3943 */
union _GDI_OBJECT::__MIDL_IAdviseSink_0002
{
  _userHBITMAP *hBitmap;
  _userHPALETTE *hPalette;
  _userHGLOBAL *hGeneric;
};

/* 3944 */
struct _GDI_OBJECT
{
  unsigned int ObjectType;
  _GDI_OBJECT::__MIDL_IAdviseSink_0002 u;
};

/* 3945 */
union _RPC_SECURITY_QOS_V3_A::__unnamed
{
  _RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials;
};

/* 3946 */
struct _RPC_SECURITY_QOS_V3_A
{
  unsigned int Version;
  unsigned int Capabilities;
  unsigned int IdentityTracking;
  unsigned int ImpersonationType;
  unsigned int AdditionalSecurityInfoType;
  _RPC_SECURITY_QOS_V3_A::__unnamed u;
  void *Sid;
};

/* 3947 */
struct IComThreadingInfo
{
  IUnknown baseclass_0;
};

/* 3948 */
struct _OLESTREAM
{
  _OLESTREAMVTBL *lpstbl;
};

/* 3949 */
struct _OLESTREAMVTBL
{
  unsigned int (__stdcall *Get)(_OLESTREAM *, void *, unsigned int);
  unsigned int (__stdcall *Put)(_OLESTREAM *, const void *, unsigned int);
};

/* 3950 */
struct IRowsetIndex
{
  IUnknown baseclass_0;
};

/* 3951 */
struct IRowsetCurrentIndex
{
  IRowsetIndex baseclass_0;
};

/* 3952 */
struct _PRINTER_INFO_8A
{
  _devicemodeA *pDevMode;
};

/* 3953 */
struct tagMCI_OPEN_PARMSA
{
  unsigned int dwCallback;
  unsigned int wDeviceID;
  const char *lpstrDeviceType;
  const char *lpstrElementName;
  const char *lpstrAlias;
};

/* 3954 */
struct tagMCI_SAVE_PARMSW
{
  unsigned int dwCallback;
  const unsigned __int16 *lpfilename;
};

/* 3955 */
struct __GENERIC_BINDING_INFO
{
  void *pObj;
  unsigned int Size;
  void *(__stdcall *pfnBind)(void *);
  void (__stdcall *pfnUnbind)(void *, char *);
};

/* 3956 */
union _MIDL_STUB_DESC::__unnamed
{
  void **pAutoHandle;
  void **pPrimitiveHandle;
  __GENERIC_BINDING_INFO *pGenericBindingInfo;
};

/* 3957 */
struct _GENERIC_BINDING_ROUTINE_PAIR
{
  void *(__stdcall *pfnBind)(void *);
  void (__stdcall *pfnUnbind)(void *, char *);
};

/* 3958 */
struct _MIDL_STUB_MESSAGE
{
  _RPC_MESSAGE *RpcMsg;
  char *Buffer;
  char *BufferStart;
  char *BufferEnd;
  char *BufferMark;
  unsigned int BufferLength;
  unsigned int MemorySize;
  char *Memory;
  int IsClient;
  int ReuseBuffer;
  struct NDR_ALLOC_ALL_NODES_CONTEXT *pAllocAllNodesContext;
  struct NDR_POINTER_QUEUE_STATE *pPointerQueueState;
  int IgnoreEmbeddedPointers;
  char *PointerBufferMark;
  char fBufferValid;
  char uFlags;
  unsigned __int16 UniquePtrCount;
  unsigned int MaxCount;
  unsigned int Offset;
  unsigned int ActualCount;
  void *(__stdcall *pfnAllocate)(unsigned int);
  void (__stdcall *pfnFree)(void *);
  char *StackTop;
  char *pPresentedType;
  char *pTransmitType;
  void *SavedHandle;
  _MIDL_STUB_DESC *StubDesc;
  _FULL_PTR_XLAT_TABLES *FullPtrXlatTables;
  unsigned int FullPtrRefId;
  unsigned int PointerLength;
  int _bf112;
  unsigned int dwDestContext;
  void *pvDestContext;
  $3FA64165D15A4602C29B2D9B0DA4A5E9 **SavedContextHandles;
  int ParamNumber;
  IRpcChannelBuffer *pRpcChannelBuffer;
  ARRAY_INFO *pArrayInfo;
  unsigned int *SizePtrCountArray;
  unsigned int *SizePtrOffsetArray;
  unsigned int *SizePtrLengthArray;
  void *pArgQueue;
  unsigned int dwStubPhase;
  void *LowStackMark;
  struct _NDR_ASYNC_MESSAGE *pAsyncMsg;
  _NDR_CORRELATION_INFO *pCorrInfo;
  char *pCorrMemory;
  void *pMemoryList;
  CS_STUB_INFO *pCSInfo;
  char *ConformanceMark;
  char *VarianceMark;
  int Unused;
  struct _NDR_PROC_CONTEXT *pContext;
  int Reserved51_1;
  int Reserved51_2;
  int Reserved51_3;
  int Reserved51_4;
  int Reserved51_5;
};

/* 3959 */
const struct _XMIT_ROUTINE_QUINTUPLE
{
  void (__stdcall *pfnTranslateToXmit)(_MIDL_STUB_MESSAGE *);
  void (__stdcall *pfnTranslateFromXmit)(_MIDL_STUB_MESSAGE *);
  void (__stdcall *pfnFreeXmit)(_MIDL_STUB_MESSAGE *);
  void (__stdcall *pfnFreeInst)(_MIDL_STUB_MESSAGE *);
};

/* 3960 */
struct _MALLOC_FREE_STRUCT
{
  void *(__stdcall *pfnAllocate)(unsigned int);
  void (__stdcall *pfnFree)(void *);
};

/* 3961 */
const struct _COMM_FAULT_OFFSETS
{
  __int16 CommOffset;
  __int16 FaultOffset;
};

/* 3962 */
struct _NDR_CS_SIZE_CONVERT_ROUTINES
{
  void (__stdcall *pfnNetSize)(void *, unsigned int, unsigned int, _IDL_CS_CONVERT *, unsigned int *, unsigned int *);
  void (__stdcall *pfnToNetCs)(void *, unsigned int, void *, unsigned int, char *, unsigned int *, unsigned int *);
  void (__stdcall *pfnLocalSize)(void *, unsigned int, unsigned int, _IDL_CS_CONVERT *, unsigned int *, unsigned int *);
  void (__stdcall *pfnFromNetCs)(void *, unsigned int, char *, unsigned int, unsigned int, void *, unsigned int *, unsigned int *);
};

/* 3963 */
const struct _NDR_CS_ROUTINES
{
  _NDR_CS_SIZE_CONVERT_ROUTINES *pSizeConvertRoutines;
  void (__stdcall **pTagGettingRoutines)(void *, int, unsigned int *, unsigned int *, unsigned int *, unsigned int *);
};

/* 3964 */
const struct _MIDL_STUB_DESC
{
  void *RpcInterfaceInformation;
  void *(__stdcall *pfnAllocate)(unsigned int);
  void (__stdcall *pfnFree)(void *);
  _MIDL_STUB_DESC::__unnamed IMPLICIT_HANDLE_INFO;
  void (__stdcall *const *apfnNdrRundownRoutines)(void *);
  _GENERIC_BINDING_ROUTINE_PAIR *aGenericBindingRoutinePairs;
  void (__stdcall *const *apfnExprEval)(_MIDL_STUB_MESSAGE *);
  _XMIT_ROUTINE_QUINTUPLE *aXmitQuintuple;
  const char *pFormatTypes;
  int fCheckBounds;
  unsigned int Version;
  _MALLOC_FREE_STRUCT *pMallocFreeStruct;
  int MIDLVersion;
  _COMM_FAULT_OFFSETS *CommFaultOffsets;
  _USER_MARSHAL_ROUTINE_QUADRUPLE *aUserMarshalQuadruple;
  void (__stdcall *const *NotifyRoutineTable)();
  unsigned int mFlags;
  _NDR_CS_ROUTINES *CsRoutineTables;
  void *Reserved4;
  unsigned int Reserved5;
};

/* 3965 */
struct $3FA64165D15A4602C29B2D9B0DA4A5E9
{
  void *pad[2];
  void *userContext;
};

/* 3966 */
struct ARRAY_INFO
{
  int Dimension;
  unsigned int *BufferConformanceMark;
  unsigned int *BufferVarianceMark;
  unsigned int *MaxCountArray;
  unsigned int *OffsetArray;
  unsigned int *ActualCountArray;
};

/* 3967 */
struct CS_STUB_INFO
{
  unsigned int WireCodeset;
  unsigned int DesiredReceivingCodeset;
  void *CSArrayInfo;
};

/* 3968 */
union $598610CC988E402B9A82B84B75BDDF21
{
  unsigned int dwValue;
  unsigned int Algid;
  unsigned int dwLength;
};

/* 3969 */
struct _CRYPT_OID_INFO
{
  unsigned int cbSize;
  const char *pszOID;
  const unsigned __int16 *pwszName;
  unsigned int dwGroupId;
  $598610CC988E402B9A82B84B75BDDF21 ___u4;
  _CRYPTOAPI_BLOB ExtraInfo;
};

/* 3970 */
struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION
{
  void (__stdcall *pfnCompletion)(void *, unsigned int, const char *, char *, void *);
  void *pvCompletion;
};

/* 3971 */
struct SCARD_T1_REQUEST
{
  _SCARD_IO_REQUEST ioRequest;
};

/* 3972 */
struct _DRIVER_INFO_4A
{
  unsigned int cVersion;
  char *pName;
  char *pEnvironment;
  char *pDriverPath;
  char *pDataFile;
  char *pConfigFile;
  char *pHelpFile;
  char *pDependentFiles;
  char *pMonitorName;
  char *pDefaultDataType;
  char *pszzPreviousNames;
};

/* 3973 */
struct CHAR_CREATE
{
  char Name[16];
  char Sex;
  char Hair;
  char Face;
  char Race;
  unsigned __int16 Class;
  unsigned __int16 Equip[15];
  unsigned __int16 STR;
  unsigned __int16 DEX;
  unsigned __int16 CON;
  unsigned __int16 INT;
  unsigned __int16 WIS;
};

/* 3974 */
struct tagOBJECTDESCRIPTOR
{
  unsigned int cbSize;
  _GUID clsid;
  unsigned int dwDrawAspect;
  tagSIZE sizel;
  _POINTL pointl;
  unsigned int dwStatus;
  unsigned int dwFullUserTypeName;
  unsigned int dwSrcOfCopy;
};

/* 3975 */
struct _OFNOTIFYW
{
  tagNMHDR hdr;
  tagOFNW *lpOFN;
  unsigned __int16 *pszFile;
};

/* 3976 */
struct HSZ__
{
  int unused;
};

/* 3977 */
struct HCONV__
{
  int unused;
};

/* 3978 */
struct tagMONCONVSTRUCT
{
  unsigned int cb;
  int fConnect;
  unsigned int dwTime;
  void *hTask;
  HSZ__ *hszSvc;
  HSZ__ *hszTopic;
  HCONV__ *hConvClient;
  HCONV__ *hConvServer;
};

/* 3979 */
struct tagMCI_PLAY_PARMS
{
  unsigned int dwCallback;
  unsigned int dwFrom;
  unsigned int dwTo;
};

/* 3980 */
struct IPropertyPage
{
  IUnknown baseclass_0;
};

/* 3981 */
struct IPropertyPage2
{
  IPropertyPage baseclass_0;
};

/* 3982 */
union _CLIENT_CALL_RETURN
{
  void *Pointer;
  int Simple;
};

/* 3983 */
struct _ADDJOB_INFO_1A
{
  char *Path;
  unsigned int JobId;
};

/* 3984 */
struct _ACTRL_ACCESS_INFOA
{
  unsigned int fAccessPermission;
  char *lpAccessPermissionName;
};

/* 3985 */
struct tagMCI_WAVE_OPEN_PARMSA
{
  unsigned int dwCallback;
  unsigned int wDeviceID;
  const char *lpstrDeviceType;
  const char *lpstrElementName;
  const char *lpstrAlias;
  unsigned int dwBufferSeconds;
};

/* 3986 */
struct _CERT_RDN_ATTR
{
  char *pszObjId;
  unsigned int dwValueType;
  _CRYPTOAPI_BLOB Value;
};

/* 3987 */
struct _CERT_RDN
{
  unsigned int cRDNAttr;
  _CERT_RDN_ATTR *rgRDNAttr;
};

/* 3988 */
struct _CERT_STORE_PROV_INFO
{
  unsigned int cbSize;
  unsigned int cStoreProvFunc;
  void **rgpvStoreProvFunc;
  void *hStoreProv;
  unsigned int dwStoreProvFlags;
  void *hStoreProvFuncAddr2;
};

/* 3989 */
struct IXMLDOMAttribute
{
  IXMLDOMNode baseclass_0;
};

/* 3990 */
struct ITypeMarshal
{
  IUnknown baseclass_0;
};

/* 3991 */
struct tagMCI_GENERIC_PARMS
{
  unsigned int dwCallback;
};

/* 3992 */
struct _PRINTER_INFO_2A
{
  char *pServerName;
  char *pPrinterName;
  char *pShareName;
  char *pPortName;
  char *pDriverName;
  char *pComment;
  char *pLocation;
  _devicemodeA *pDevMode;
  char *pSepFile;
  char *pPrintProcessor;
  char *pDatatype;
  char *pParameters;
  void *pSecurityDescriptor;
  unsigned int Attributes;
  unsigned int Priority;
  unsigned int DefaultPriority;
  unsigned int StartTime;
  unsigned int UntilTime;
  unsigned int Status;
  unsigned int cJobs;
  unsigned int AveragePPM;
};

/* 3993 */
struct IParseDisplayName
{
  IUnknown baseclass_0;
};

/* 3994 */
struct IOleContainer
{
  IParseDisplayName baseclass_0;
};

/* 3995 */
struct IOleItemContainer
{
  IOleContainer baseclass_0;
};

/* 3996 */
struct IWindowForBindingUI
{
  IUnknown baseclass_0;
};

/* 3997 */
struct XACTSTATS
{
  unsigned int cOpen;
  unsigned int cCommitting;
  unsigned int cCommitted;
  unsigned int cAborting;
  unsigned int cAborted;
  unsigned int cInDoubt;
  unsigned int cHeuristicDecision;
  _FILETIME timeTransactionsUp;
};

/* 3998 */
struct _CMC_PEND_INFO
{
  _CRYPTOAPI_BLOB PendToken;
  _FILETIME PendTime;
};

/* 3999 */
union $AE27D42E088674A8D8D377654F6450AE
{
  unsigned int dwFailInfo;
  _CMC_PEND_INFO *pPendInfo;
};

/* 4000 */
struct _CMC_STATUS_INFO
{
  unsigned int dwStatus;
  unsigned int cBodyList;
  unsigned int *rgdwBodyList;
  unsigned __int16 *pwszStatusString;
  unsigned int dwOtherInfoChoice;
  $AE27D42E088674A8D8D377654F6450AE ___u5;
};

/* 4001 */
struct tagMCI_ANIM_OPEN_PARMSW
{
  unsigned int dwCallback;
  unsigned int wDeviceID;
  const unsigned __int16 *lpstrDeviceType;
  const unsigned __int16 *lpstrElementName;
  const unsigned __int16 *lpstrAlias;
  unsigned int dwStyle;
  HWND__ *hWndParent;
};

/* 4002 */
struct _DEVICE_MEDIA_INFO::__unnamed::__unnamed
{
  _LARGE_INTEGER Cylinders;
  _STORAGE_MEDIA_TYPE MediaType;
  unsigned int TracksPerCylinder;
  unsigned int SectorsPerTrack;
  unsigned int BytesPerSector;
  unsigned int NumberMediaSides;
  unsigned int MediaCharacteristics;
};

/* 4003 */
union _DEVICE_MEDIA_INFO::__unnamed
{
  _DEVICE_MEDIA_INFO::__unnamed::__unnamed DiskInfo;
  _DEVICE_MEDIA_INFO::__unnamed::__unnamed RemovableDiskInfo;
  _DEVICE_MEDIA_INFO::__unnamed::__unnamed TapeInfo;
};

/* 4004 */
struct _DEVICE_MEDIA_INFO
{
  _DEVICE_MEDIA_INFO::__unnamed DeviceSpecific;
};

/* 4005 */
struct _GET_MEDIA_TYPES
{
  unsigned int DeviceType;
  unsigned int MediaInfoCount;
  _DEVICE_MEDIA_INFO MediaInfo[1];
};

/* 4006 */
struct IInternetZoneManager
{
  IUnknown baseclass_0;
};

/* 4007 */
struct _ZONEATTRIBUTES
{
  unsigned int cbSize;
  unsigned __int16 szDisplayName[260];
  unsigned __int16 szDescription[200];
  unsigned __int16 szIconPath[260];
  unsigned int dwTemplateMinLevel;
  unsigned int dwTemplateRecommended;
  unsigned int dwTemplateCurrentLevel;
  unsigned int dwFlags;
};

/* 4008 */
struct ICreateTypeLib
{
  IUnknown baseclass_0;
};

/* 4009 */
struct ICreateTypeLib2
{
  ICreateTypeLib baseclass_0;
};

/* 4010 */
struct tagPSDA
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  void *hDevMode;
  void *hDevNames;
  unsigned int Flags;
  tagPOINT ptPaperSize;
  tagRECT rtMinMargin;
  tagRECT rtMargin;
  HINSTANCE__ *hInstance;
  int lCustData;
  unsigned int (__stdcall *lpfnPageSetupHook)(HWND__ *, unsigned int, unsigned int, int);
  unsigned int (__stdcall *lpfnPagePaintHook)(HWND__ *, unsigned int, unsigned int, int);
  const char *lpPageSetupTemplateName;
  void *hPageSetupTemplate;
};

/* 4011 */
struct _PRINTER_DEFAULTSA
{
  char *pDatatype;
  _devicemodeA *pDevMode;
  unsigned int DesiredAccess;
};

/* 4012 */
struct _CMS_DH_KEY_INFO
{
  unsigned int dwVersion;
  unsigned int Algid;
  char *pszContentEncObjId;
  _CRYPTOAPI_BLOB PubInfo;
  void *pReserved;
};

/* 4013 */
struct IInternetProtocolRoot
{
  IUnknown baseclass_0;
};

/* 4014 */
struct IInternetProtocol
{
  IInternetProtocolRoot baseclass_0;
};

/* 4015 */
struct tagCONVCONTEXT
{
  unsigned int cb;
  unsigned int wFlags;
  unsigned int wCountryID;
  int iCodePage;
  unsigned int dwLangID;
  unsigned int dwSecurity;
  _SECURITY_QUALITY_OF_SERVICE qos;
};

/* 4016 */
struct _PATHNAME_BUFFER
{
  unsigned int PathNameLength;
  unsigned __int16 Name[1];
};

/* 4017 */
struct _JOB_INFO_1A
{
  unsigned int JobId;
  char *pPrinterName;
  char *pMachineName;
  char *pUserName;
  char *pDocument;
  char *pDatatype;
  char *pStatus;
  unsigned int Status;
  unsigned int Priority;
  unsigned int Position;
  unsigned int TotalPages;
  unsigned int PagesPrinted;
  _SYSTEMTIME Submitted;
};

/* 4018 */
union _RPC_SECURITY_QOS_V2_W::__unnamed
{
  _RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials;
};

/* 4019 */
struct _RPC_SECURITY_QOS_V2_W
{
  unsigned int Version;
  unsigned int Capabilities;
  unsigned int IdentityTracking;
  unsigned int ImpersonationType;
  unsigned int AdditionalSecurityInfoType;
  _RPC_SECURITY_QOS_V2_W::__unnamed u;
};

/* 4020 */
struct _CERTIFICATE_BLOB
{
  unsigned int dwCertEncodingType;
  unsigned int cbData;
  char *pbData;
};

/* 4021 */
struct _ENCRYPTION_CERTIFICATE
{
  unsigned int cbTotalLength;
  _SID *pUserSid;
  _CERTIFICATE_BLOB *pCertBlob;
};

/* 4022 */
struct _STORAGE_PREDICT_FAILURE
{
  unsigned int PredictFailure;
  char VendorSpecific[512];
};

/* 4023 */
struct midievent_tag
{
  unsigned int dwDeltaTime;
  unsigned int dwStreamID;
  unsigned int dwEvent;
  unsigned int dwParms[1];
};

/* 4024 */
struct tagAUXCAPSA
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
};

/* 4025 */
union _userCLIPFORMAT::__MIDL_IWinTypes_0001
{
  unsigned int dwValue;
  wchar_t *pwszName;
};

/* 4026 */
struct _userCLIPFORMAT
{
  int fContext;
  _userCLIPFORMAT::__MIDL_IWinTypes_0001 u;
};

/* 4027 */
struct ITransactionCloner
{
  ITransaction baseclass_0;
};

/* 4028 */
struct ITransaction2
{
  ITransactionCloner baseclass_0;
};

/* 4029 */
struct BOID
{
  char rgb[16];
};

/* 4030 */
struct XACTTRANSINFO
{
  BOID uow;
  int isoLevel;
  unsigned int isoFlags;
  unsigned int grfTCSupported;
  unsigned int grfRMSupported;
  unsigned int grfTCSupportedRetaining;
  unsigned int grfRMSupportedRetaining;
};

/* 4031 */
struct _CRYPT_RC2_CBC_PARAMETERS
{
  unsigned int dwVersion;
  int fIV;
  char rgbIV[8];
};

/* 4032 */
struct _PREVENT_MEDIA_REMOVAL
{
  char PreventMediaRemoval;
};

/* 4033 */
struct _DOC_INFO_2A
{
  char *pDocName;
  char *pOutputFile;
  char *pDatatype;
  unsigned int dwMode;
  unsigned int JobId;
};

/* 4034 */
struct _PROPSHEETPAGEW_V3
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HINSTANCE__ *hInstance;
  $E93DF8936326ACA187BC53A1FCC7B851 ___u3;
  $652A26583FA38B82C7D68FD3BB1B6B71 ___u4;
  const unsigned __int16 *pszTitle;
  int (__stdcall *pfnDlgProc)(HWND__ *, unsigned int, unsigned int, int);
  int lParam;
  unsigned int (__stdcall *pfnCallback)(HWND__ *, unsigned int, _PROPSHEETPAGEW *);
  unsigned int *pcRefParent;
  const unsigned __int16 *pszHeaderTitle;
  const unsigned __int16 *pszHeaderSubTitle;
  void *hActCtx;
};

/* 4035 */
struct _PRINTER_INFO_4A
{
  char *pPrinterName;
  char *pServerName;
  unsigned int Attributes;
};

/* 4036 */
struct tagOFN_NT4A
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const char *lpstrFilter;
  char *lpstrCustomFilter;
  unsigned int nMaxCustFilter;
  unsigned int nFilterIndex;
  char *lpstrFile;
  unsigned int nMaxFile;
  char *lpstrFileTitle;
  unsigned int nMaxFileTitle;
  const char *lpstrInitialDir;
  const char *lpstrTitle;
  unsigned int Flags;
  unsigned __int16 nFileOffset;
  unsigned __int16 nFileExtension;
  const char *lpstrDefExt;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const char *lpTemplateName;
};

/* 4037 */
struct _OFNOTIFYA
{
  tagNMHDR hdr;
  tagOFNA *lpOFN;
  char *pszFile;
};

/* 4038 */
struct _CERT_FORTEZZA_DATA_PROP
{
  char SerialNumber[8];
  int CertIndex;
  char CertLabel[36];
};

/* 4039 */
struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA
{
  unsigned int cbSize;
  unsigned int dwSignerIndex;
  unsigned int dwUnauthAttrIndex;
};

/* 4040 */
struct _PRINTER_INFO_8W
{
  _devicemodeW *pDevMode;
};

/* 4041 */
struct pcmwaveformat_tag
{
  waveformat_tag wf;
  unsigned __int16 wBitsPerSample;
};

/* 4042 */
struct tagMCI_OVLY_OPEN_PARMSW
{
  unsigned int dwCallback;
  unsigned int wDeviceID;
  const unsigned __int16 *lpstrDeviceType;
  const unsigned __int16 *lpstrElementName;
  const unsigned __int16 *lpstrAlias;
  unsigned int dwStyle;
  HWND__ *hWndParent;
};

/* 4043 */
struct _DRIVER_INFO_1A
{
  char *pName;
};

/* 4044 */
struct _PRINTER_DEFAULTSW
{
  unsigned __int16 *pDatatype;
  _devicemodeW *pDevMode;
  unsigned int DesiredAccess;
};

/* 4045 */
struct ISourcesRowset
{
  IUnknown baseclass_0;
};

/* 4046 */
struct PARTY_USERINFO
{
  unsigned int m_dwGID[10];
};

/* 4047 */
struct IInternet
{
  IUnknown baseclass_0;
};

/* 4048 */
struct IInternetProtocolInfo
{
  IUnknown baseclass_0;
};

/* 4049 */
struct _BINARY_CONTAINER
{
  unsigned int cbBuf;
  char *pData;
};

/* 4050 */
union _BIDI_DATA::__unnamed
{
  int bData;
  int iData;
  unsigned __int16 *sData;
  float fData;
  _BINARY_CONTAINER biData;
};

/* 4051 */
struct _BIDI_DATA
{
  unsigned int dwBidiType;
  _BIDI_DATA::__unnamed u;
};

/* 4052 */
struct _BIDI_RESPONSE_DATA
{
  unsigned int dwResult;
  unsigned int dwReqNumber;
  unsigned __int16 *pSchema;
  _BIDI_DATA data;
};

/* 4053 */
struct _BIDI_RESPONSE_CONTAINER
{
  unsigned int Version;
  unsigned int Flags;
  unsigned int Count;
  _BIDI_RESPONSE_DATA aData[1];
};

/* 4054 */
struct IBindCtx
{
  IUnknown baseclass_0;
};

/* 4055 */
struct IRunningObjectTable
{
  IUnknown baseclass_0;
};

/* 4056 */
struct IEnumString
{
  IUnknown baseclass_0;
};

/* 4057 */
struct _STORAGE_HOTPLUG_INFO
{
  unsigned int Size;
  char MediaRemovable;
  char MediaHotplug;
  char DeviceHotplug;
  char WriteCacheEnableOverride;
};

/* 4058 */
struct IPropertyStorage
{
  IUnknown baseclass_0;
};

/* 4059 */
union $3CCD9A809E379FE498328B9C7C4CD0C6
{
  unsigned int propid;
  unsigned __int16 *lpwstr;
};

/* 4060 */
struct tagPROPSPEC
{
  unsigned int ulKind;
  $3CCD9A809E379FE498328B9C7C4CD0C6 ___u1;
};

/* 4061 */
struct IEnumSTATPROPSTG
{
  IUnknown baseclass_0;
};

/* 4062 */
struct tagSTATPROPSETSTG
{
  _GUID fmtid;
  _GUID clsid;
  unsigned int grfFlags;
  _FILETIME mtime;
  _FILETIME ctime;
  _FILETIME atime;
  unsigned int dwOSVersion;
};

/* 4063 */
#pragma pack(push, 1)
struct tagPDW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  void *hDevMode;
  void *hDevNames;
  HDC__ *hDC;
  unsigned int Flags;
  unsigned __int16 nFromPage;
  unsigned __int16 nToPage;
  unsigned __int16 nMinPage;
  unsigned __int16 nMaxPage;
  unsigned __int16 nCopies;
  HINSTANCE__ *hInstance;
  int lCustData;
  unsigned int (__stdcall *lpfnPrintHook)(HWND__ *, unsigned int, unsigned int, int);
  unsigned int (__stdcall *lpfnSetupHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpPrintTemplateName;
  const unsigned __int16 *lpSetupTemplateName;
  void *hPrintTemplate;
  void *hSetupTemplate;
};
#pragma pack(pop)

/* 4064 */
struct _CERT_CRL_CONTEXT_PAIR
{
  _CERT_CONTEXT *pCertContext;
  _CRL_CONTEXT *pCrlContext;
};

/* 4065 */
struct tagRemHPALETTE
{
  unsigned int cbData;
  char data[1];
};

/* 4066 */
struct ICommandProperties
{
  IUnknown baseclass_0;
};

/* 4067 */
struct HDDEDATA__
{
  int unused;
};

/* 4068 */
struct _DRIVER_INFO_6W
{
  unsigned int cVersion;
  unsigned __int16 *pName;
  unsigned __int16 *pEnvironment;
  unsigned __int16 *pDriverPath;
  unsigned __int16 *pDataFile;
  unsigned __int16 *pConfigFile;
  unsigned __int16 *pHelpFile;
  unsigned __int16 *pDependentFiles;
  unsigned __int16 *pMonitorName;
  unsigned __int16 *pDefaultDataType;
  unsigned __int16 *pszzPreviousNames;
  _FILETIME ftDriverDate;
  unsigned __int64 dwlDriverVersion;
  unsigned __int16 *pszMfgName;
  unsigned __int16 *pszOEMUrl;
  unsigned __int16 *pszHardwareID;
  unsigned __int16 *pszProvider;
};

/* 4069 */
struct _FLAGGED_WORD_BLOB
{
  unsigned int fFlags;
  unsigned int clSize;
  unsigned __int16 asData[1];
};

/* 4070 */
struct _CHANGER_ELEMENT_LIST
{
  _CHANGER_ELEMENT Element;
  unsigned int NumberOfElements;
};

/* 4071 */
struct _CHANGER_READ_ELEMENT_STATUS
{
  _CHANGER_ELEMENT_LIST ElementList;
  char VolumeTagInfo;
};

/* 4072 */
struct IUrlMon
{
  IUnknown baseclass_0;
};

/* 4073 */
struct _RPC_PROTSEQ_VECTORW
{
  unsigned int Count;
  unsigned __int16 *Protseq[1];
};

/* 4074 */
struct _PUBKEY
{
  unsigned int magic;
  unsigned int bitlen;
};

/* 4075 */
struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO
{
  unsigned int cbSize;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  void *pvKeyEncryptionAuxInfo;
  unsigned int hCryptProv;
  _CRYPT_BIT_BLOB RecipientPublicKey;
  _CERT_ID RecipientId;
};

/* 4076 */
union $EE206B3D8927447B33769758DD6A37DB
{
  _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO *pKeyTrans;
  _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO *pKeyAgree;
  _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO *pMailList;
};

/* 4077 */
struct _CMSG_RECIPIENT_ENCODE_INFO
{
  unsigned int dwRecipientChoice;
  $EE206B3D8927447B33769758DD6A37DB ___u1;
};

/* 4078 */
struct _CMSG_CONTENT_ENCRYPT_INFO
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  void *pvEncryptionAuxInfo;
  unsigned int cRecipients;
  _CMSG_RECIPIENT_ENCODE_INFO *rgCmsRecipients;
  void *(__stdcall *pfnAlloc)(unsigned int);
  void (__stdcall *pfnFree)(void *);
  unsigned int dwEncryptFlags;
  unsigned int hContentEncryptKey;
  unsigned int dwFlags;
};

/* 4079 */
struct IPSFactoryBuffer
{
  IUnknown baseclass_0;
};

/* 4080 */
struct IRpcProxyBuffer
{
  IUnknown baseclass_0;
};

/* 4081 */
struct IRpcStubBuffer
{
  IUnknown baseclass_0;
};

/* 4082 */
struct IInternetProtocolSink
{
  IUnknown baseclass_0;
};

/* 4083 */
struct IXMLElement2
{
  IDispatch baseclass_0;
};

/* 4084 */
struct IXMLElementCollection
{
  IDispatch baseclass_0;
};

/* 4085 */
union AUTH::COMMENT
{
  unsigned int Point;
  TIME Time;
};

/* 4086 */
struct AUTH
{
  unsigned int Errcode;
  unsigned int UID;
  AUTH::COMMENT Comment;
  unsigned int Dumy[4];
};

/* 4087 */
struct _CERT_PRIVATE_KEY_VALIDITY
{
  _FILETIME NotBefore;
  _FILETIME NotAfter;
};

/* 4088 */
struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO
{
  unsigned int cbSize;
  _CRYPTOAPI_BLOB EncryptedKey;
};

/* 4089 */
struct _CMSG_KEY_AGREE_ENCRYPT_INFO
{
  unsigned int cbSize;
  unsigned int dwRecipientIndex;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  _CRYPTOAPI_BLOB UserKeyingMaterial;
  unsigned int dwOriginatorChoice;
  $67396DE0F3A62FB26CCF66BABD16D969 ___u5;
  unsigned int cKeyAgreeKeyEncryptInfo;
  _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO **rgpKeyAgreeKeyEncryptInfo;
  unsigned int dwFlags;
};

/* 4090 */
struct tagRPCOLEMESSAGE
{
  void *reserved1;
  unsigned int dataRepresentation;
  void *Buffer;
  unsigned int cbBuffer;
  unsigned int iMethod;
  void *reserved2[5];
  unsigned int rpcFlags;
};

/* 4091 */
struct _PROVIDOR_INFO_2W
{
  unsigned __int16 *pOrder;
};

/* 4092 */
struct IFontDisp
{
  IDispatch baseclass_0;
};

/* 4093 */
struct _KEY_TYPE_SUBTYPE
{
  unsigned int dwKeySpec;
  _GUID Type;
  _GUID Subtype;
};

/* 4094 */
struct IProcessInitControl
{
  IUnknown baseclass_0;
};

/* 4095 */
struct tagAUXCAPS2A
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 4096 */
struct _CHANGER_ELEMENT_STATUS_EX
{
  _CHANGER_ELEMENT Element;
  _CHANGER_ELEMENT SrcElementAddress;
  unsigned int Flags;
  unsigned int ExceptionCode;
  char TargetId;
  char Lun;
  unsigned __int16 Reserved;
  char PrimaryVolumeID[36];
  char AlternateVolumeID[36];
  char VendorIdentification[8];
  char ProductIdentification[16];
  char SerialNumber[32];
};

/* 4097 */
struct tagRemSTGMEDIUM
{
  unsigned int tymed;
  unsigned int dwHandleType;
  unsigned int pData;
  unsigned int pUnkForRelease;
  unsigned int cbData;
  char data[1];
};

/* 4098 */
struct _RPC_PROTSEQ_ENDPOINT
{
  char *RpcProtocolSequence;
  char *Endpoint;
};

/* 4099 */
struct _DRIVER_INFO_5W
{
  unsigned int cVersion;
  unsigned __int16 *pName;
  unsigned __int16 *pEnvironment;
  unsigned __int16 *pDriverPath;
  unsigned __int16 *pDataFile;
  unsigned __int16 *pConfigFile;
  unsigned int dwDriverAttributes;
  unsigned int dwConfigVersion;
  unsigned int dwDriverVersion;
};

/* 4100 */
struct IPersistMoniker
{
  IUnknown baseclass_0;
};

/* 4101 */
struct tagLICINFO
{
  int cbLicInfo;
  int fRuntimeKeyAvail;
  int fLicVerified;
};

/* 4102 */
struct _PROV_ENUMALGS_EX
{
  unsigned int aiAlgid;
  unsigned int dwDefaultLen;
  unsigned int dwMinLen;
  unsigned int dwMaxLen;
  unsigned int dwProtocols;
  unsigned int dwNameLen;
  char szName[20];
  unsigned int dwLongNameLen;
  char szLongName[40];
};

/* 4103 */
struct _CERT_X942_DH_VALIDATION_PARAMS
{
  _CRYPT_BIT_BLOB seed;
  unsigned int pgenCounter;
};

/* 4104 */
struct _CERT_X942_DH_PARAMETERS
{
  _CRYPTOAPI_BLOB p;
  _CRYPTOAPI_BLOB g;
  _CRYPTOAPI_BLOB q;
  _CRYPTOAPI_BLOB j;
  _CERT_X942_DH_VALIDATION_PARAMS *pValidationParams;
};

/* 4105 */
struct IOleWindow
{
  IUnknown baseclass_0;
};

/* 4106 */
struct IOleInPlaceActiveObject
{
  IOleWindow baseclass_0;
};

/* 4107 */
struct IOleInPlaceUIWindow
{
  IOleWindow baseclass_0;
};

/* 4108 */
struct IPicture
{
  IUnknown baseclass_0;
};

/* 4109 */
struct _ACTRL_CONTROL_INFOA
{
  char *lpControlId;
  char *lpControlName;
};

/* 4110 */
struct _CHANGER_INITIALIZE_ELEMENT_STATUS
{
  _CHANGER_ELEMENT_LIST ElementList;
  char BarCodeScan;
};

/* 4111 */
struct _PRINTER_ENUM_VALUESW
{
  unsigned __int16 *pValueName;
  unsigned int cbValueName;
  unsigned int dwType;
  char *pData;
  unsigned int cbData;
};

/* 4112 */
struct _TRUSTEE_ACCESSA
{
  char *lpProperty;
  unsigned int Access;
  unsigned int fAccessFlags;
  unsigned int fReturnedAccess;
};

/* 4113 */
struct _NAME_BUFFER
{
  char name[16];
  char name_num;
  char name_flags;
};

/* 4114 */
struct _CMSG_ENCRYPTED_ENCODE_INFO
{
  unsigned int cbSize;
  _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  void *pvEncryptionAuxInfo;
};

/* 4115 */
struct _PARTITION_INFORMATION
{
  _LARGE_INTEGER StartingOffset;
  _LARGE_INTEGER PartitionLength;
  unsigned int HiddenSectors;
  unsigned int PartitionNumber;
  char PartitionType;
  char BootIndicator;
  char RecognizedPartition;
  char RewritePartition;
};

/* 4116 */
struct _DOC_INFO_1A
{
  char *pDocName;
  char *pOutputFile;
  char *pDatatype;
};

/* 4117 */
struct tagMCI_VD_ESCAPE_PARMSW
{
  unsigned int dwCallback;
  const unsigned __int16 *lpstrCommand;
};

/* 4118 */
struct _DRIVER_INFO_4W
{
  unsigned int cVersion;
  unsigned __int16 *pName;
  unsigned __int16 *pEnvironment;
  unsigned __int16 *pDriverPath;
  unsigned __int16 *pDataFile;
  unsigned __int16 *pConfigFile;
  unsigned __int16 *pHelpFile;
  unsigned __int16 *pDependentFiles;
  unsigned __int16 *pMonitorName;
  unsigned __int16 *pDefaultDataType;
  unsigned __int16 *pszzPreviousNames;
};

/* 4119 */
struct ISQLErrorInfo
{
  IUnknown baseclass_0;
};

/* 4120 */
struct tagMIDIOUTCAPS2A
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wVoices;
  unsigned __int16 wNotes;
  unsigned __int16 wChannelMask;
  unsigned int dwSupport;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 4121 */
struct _CERT_REVOCATION_PARA
{
  unsigned int cbSize;
  _CERT_CONTEXT *pIssuerCert;
  unsigned int cCertStore;
  void **rgCertStore;
  void *hCrlStore;
  _FILETIME *pftTimeToUse;
};

/* 4122 */
struct _DISK_RECORD
{
  _LARGE_INTEGER ByteOffset;
  _LARGE_INTEGER StartTime;
  _LARGE_INTEGER EndTime;
  void *VirtualAddress;
  unsigned int NumberOfBytes;
  char DeviceNumber;
  char ReadRequest;
};

/* 4123 */
struct _CMSG_CTRL_DECRYPT_PARA
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  unsigned int dwKeySpec;
  unsigned int dwRecipientIndex;
};

/* 4124 */
struct tagMIDIINCAPSA
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned int dwSupport;
};

/* 4125 */
struct tagMCI_WAVE_SET_PARMS
{
  unsigned int dwCallback;
  unsigned int dwTimeFormat;
  unsigned int dwAudio;
  unsigned int wInput;
  unsigned int wOutput;
  unsigned __int16 wFormatTag;
  unsigned __int16 wReserved2;
  unsigned __int16 nChannels;
  unsigned __int16 wReserved3;
  unsigned int nSamplesPerSec;
  unsigned int nAvgBytesPerSec;
  unsigned __int16 nBlockAlign;
  unsigned __int16 wReserved4;
  unsigned __int16 wBitsPerSample;
  unsigned __int16 wReserved5;
};

/* 4126 */
struct _HISTOGRAM_BUCKET
{
  unsigned int Reads;
  unsigned int Writes;
};

/* 4127 */
struct _OBJECTS_AND_NAME_W
{
  unsigned int ObjectsPresent;
  _SE_OBJECT_TYPE ObjectType;
  unsigned __int16 *ObjectTypeName;
  unsigned __int16 *InheritedObjectTypeName;
  unsigned __int16 *ptstrName;
};

/* 4128 */
struct _STORAGE_BUS_RESET_REQUEST
{
  char PathId;
};

/* 4129 */
struct _PRINTER_INFO_4W
{
  unsigned __int16 *pPrinterName;
  unsigned __int16 *pServerName;
  unsigned int Attributes;
};

/* 4130 */
struct _CMSG_CMS_SIGNER_INFO
{
  unsigned int dwVersion;
  _CERT_ID SignerId;
  _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
  _CRYPTOAPI_BLOB EncryptedHash;
  _CRYPT_ATTRIBUTES AuthAttrs;
  _CRYPT_ATTRIBUTES UnauthAttrs;
};

/* 4131 */
struct IPropertySetStorage
{
  IUnknown baseclass_0;
};

/* 4132 */
struct HCONVLIST__
{
  int unused;
};

/* 4133 */
struct tagCONVINFO
{
  unsigned int cb;
  unsigned int hUser;
  HCONV__ *hConvPartner;
  HSZ__ *hszSvcPartner;
  HSZ__ *hszServiceReq;
  HSZ__ *hszTopic;
  HSZ__ *hszItem;
  unsigned int wFmt;
  unsigned int wType;
  unsigned int wStatus;
  unsigned int wConvst;
  unsigned int wLastError;
  HCONVLIST__ *hConvList;
  tagCONVCONTEXT ConvCtxt;
  HWND__ *hwnd;
  HWND__ *hwndPartner;
};

/* 4134 */
struct IEnumSTATPROPSETSTG
{
  IUnknown baseclass_0;
};

/* 4135 */
struct _PROPSHEETPAGEA_V1
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HINSTANCE__ *hInstance;
  $DB1DA47D7F5257745AF759FD0F136C2D ___u3;
  $34DED5F6CF764D81CB52C876B11C091E ___u4;
  const char *pszTitle;
  int (__stdcall *pfnDlgProc)(HWND__ *, unsigned int, unsigned int, int);
  int lParam;
  unsigned int (__stdcall *pfnCallback)(HWND__ *, unsigned int, _PROPSHEETPAGEA *);
  unsigned int *pcRefParent;
};

/* 4136 */
struct IWrappedProtocol
{
  IUnknown baseclass_0;
};

/* 4137 */
struct midihdr_tag
{
  char *lpData;
  unsigned int dwBufferLength;
  unsigned int dwBytesRecorded;
  unsigned int dwUser;
  unsigned int dwFlags;
  midihdr_tag *lpNext;
  unsigned int reserved;
  unsigned int dwOffset;
  unsigned int dwReserved[8];
};

/* 4138 */
struct tagMCI_WAVE_DELETE_PARMS
{
  unsigned int dwCallback;
  unsigned int dwFrom;
  unsigned int dwTo;
};

/* 4139 */
struct _CRYPT_PASSWORD_CREDENTIALSA
{
  unsigned int cbSize;
  char *pszUsername;
  char *pszPassword;
};

/* 4140 */
struct IPersistStream
{
  IPersist baseclass_0;
};

/* 4141 */
struct IMoniker
{
  IPersistStream baseclass_0;
};

/* 4142 */
struct tagERRORINFO
{
  HRESULT hrError;
  unsigned int dwMinor;
  _GUID clsid;
  _GUID iid;
  int dispid;
};

/* 4143 */
struct _CERT_REQUEST_INFO
{
  unsigned int dwVersion;
  _CRYPTOAPI_BLOB Subject;
  _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  unsigned int cAttribute;
  _CRYPT_ATTRIBUTE *rgAttribute;
};

/* 4144 */
struct _PRINTPROCESSOR_CAPS_1
{
  unsigned int dwLevel;
  unsigned int dwNupOptions;
  unsigned int dwPageOrderFlags;
  unsigned int dwNumberOfCopies;
};

/* 4145 */
struct _PORT_INFO_3A
{
  unsigned int dwStatus;
  char *pszStatus;
  unsigned int dwSeverity;
};

/* 4146 */
struct tagMIXERLINEA::__unnamed
{
  unsigned int dwType;
  unsigned int dwDeviceID;
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
};

/* 4147 */
struct tagMIXERLINEA
{
  unsigned int cbStruct;
  unsigned int dwDestination;
  unsigned int dwSource;
  unsigned int dwLineID;
  unsigned int fdwLine;
  unsigned int dwUser;
  unsigned int dwComponentType;
  unsigned int cChannels;
  unsigned int cConnections;
  unsigned int cControls;
  char szShortName[16];
  char szName[64];
  tagMIXERLINEA::__unnamed Target;
};

/* 4148 */
struct _CERT_POLICY_QUALIFIER_INFO
{
  char *pszPolicyQualifierId;
  _CRYPTOAPI_BLOB Qualifier;
};

/* 4149 */
struct _CERT_POLICY_INFO
{
  char *pszPolicyIdentifier;
  unsigned int cPolicyQualifier;
  _CERT_POLICY_QUALIFIER_INFO *rgPolicyQualifier;
};

/* 4150 */
struct _CERT_POLICIES_INFO
{
  unsigned int cPolicyInfo;
  _CERT_POLICY_INFO *rgPolicyInfo;
};

/* 4151 */
struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  unsigned int dwKeySpec;
  _CMSG_KEY_TRANS_RECIPIENT_INFO *pKeyTrans;
  unsigned int dwRecipientIndex;
};

/* 4152 */
struct _MONITOR_INFO_1A
{
  char *pName;
};

/* 4153 */
struct _PRINTER_INFO_6
{
  unsigned int dwStatus;
};

/* 4154 */
struct AsyncIPipeDouble
{
  IUnknown baseclass_0;
};

/* 4155 */
struct _OFNOTIFYEXW
{
  tagNMHDR hdr;
  tagOFNW *lpOFN;
  void *psf;
  void *pidl;
};

/* 4156 */
struct tagMCI_BREAK_PARMS
{
  unsigned int dwCallback;
  int nVirtKey;
  HWND__ *hwndBreak;
};

/* 4157 */
struct _CERT_PHYSICAL_STORE_INFO
{
  unsigned int cbSize;
  char *pszOpenStoreProvider;
  unsigned int dwOpenEncodingType;
  unsigned int dwOpenFlags;
  _CRYPTOAPI_BLOB OpenParameters;
  unsigned int dwFlags;
  unsigned int dwPriority;
};

/* 4158 */
struct _FILESYSTEM_STATISTICS
{
  unsigned __int16 FileSystemType;
  unsigned __int16 Version;
  unsigned int SizeOfCompleteStructure;
  unsigned int UserFileReads;
  unsigned int UserFileReadBytes;
  unsigned int UserDiskReads;
  unsigned int UserFileWrites;
  unsigned int UserFileWriteBytes;
  unsigned int UserDiskWrites;
  unsigned int MetaDataReads;
  unsigned int MetaDataReadBytes;
  unsigned int MetaDataDiskReads;
  unsigned int MetaDataWrites;
  unsigned int MetaDataWriteBytes;
  unsigned int MetaDataDiskWrites;
};

/* 4159 */
struct tagMCI_ANIM_WINDOW_PARMSW
{
  unsigned int dwCallback;
  HWND__ *hWnd;
  unsigned int nCmdShow;
  const unsigned __int16 *lpstrText;
};

/* 4160 */
struct _CERT_KEYGEN_REQUEST_INFO
{
  unsigned int dwVersion;
  _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  unsigned __int16 *pwszChallengeString;
};

/* 4161 */
struct tagDBLITERALINFO
{
  unsigned __int16 *pwszLiteralValue;
  unsigned __int16 *pwszInvalidChars;
  unsigned __int16 *pwszInvalidStartingChars;
  unsigned int lt;
  int fSupported;
  unsigned int cchMaxLen;
};

/* 4162 */
struct __MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005::__unnamed
{
  unsigned __int16 *pPackageName;
  _GUID PolicyId;
};

/* 4163 */
union __MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005
{
  _GUID clsid;
  unsigned __int16 *pFileExt;
  unsigned __int16 *pMimeType;
  unsigned __int16 *pProgId;
  unsigned __int16 *pFileName;
  __MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005::__unnamed ByName;
  __MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005::__unnamed ByObjectId;
};

/* 4164 */
struct __MIDL___MIDL_itf_wtypes_0003_0001
{
  unsigned int tyspec;
  __MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005 tagged_union;
  _BYTE gap18[12];
};

/* 4165 */
struct tagDBINDEXCOLUMNDESC
{
  tagDBID *pColumnID;
  unsigned int eIndexColOrder;
};

/* 4166 */
struct _ACTRL_PROPERTY_ENTRYA
{
  char *lpProperty;
  _ACTRL_ACCESS_ENTRY_LISTA *pAccessEntryList;
  unsigned int fListFlags;
};

/* 4167 */
struct _ACTRL_ALISTA
{
  unsigned int cEntries;
  _ACTRL_PROPERTY_ENTRYA *pPropertyAccessList;
};

/* 4168 */
struct IEnumMoniker
{
  IUnknown baseclass_0;
};

/* 4169 */
struct IPersistPropertyBag
{
  IPersist baseclass_0;
};

/* 4170 */
struct IErrorLog
{
  IUnknown baseclass_0;
};

/* 4171 */
struct _FN_OBJECT_MGR_FUNCTIONS
{
  unsigned int Placeholder;
};

/* 4172 */
struct _INHERITED_FROMW
{
  int GenerationGap;
  unsigned __int16 *AncestorName;
};

/* 4173 */
struct _CRYPT_ENCODE_PARA
{
  unsigned int cbSize;
  void *(__stdcall *pfnAlloc)(unsigned int);
  void (__stdcall *pfnFree)(void *);
};

/* 4174 */
struct _DOC_INFO_3W
{
  unsigned __int16 *pDocName;
  unsigned __int16 *pOutputFile;
  unsigned __int16 *pDatatype;
  unsigned int dwFlags;
};

/* 4175 */
struct IAddrExclusionControl
{
  IUnknown baseclass_0;
};

/* 4176 */
struct IPrintDialogServices
{
  IUnknown baseclass_0;
};

/* 4177 */
struct IOleUndoUnit
{
  IUnknown baseclass_0;
};

/* 4178 */
struct _CERT_TEMPLATE_EXT
{
  char *pszObjId;
  unsigned int dwMajorVersion;
  int fMinorVersion;
  unsigned int dwMinorVersion;
};

/* 4179 */
struct _FORM_INFO_1A
{
  unsigned int Flags;
  char *pName;
  tagSIZE Size;
  _RECTL ImageableArea;
};

/* 4180 */
struct tagMCI_SEQ_SET_PARMS
{
  unsigned int dwCallback;
  unsigned int dwTimeFormat;
  unsigned int dwAudio;
  unsigned int dwTempo;
  unsigned int dwPort;
  unsigned int dwSlave;
  unsigned int dwMaster;
  unsigned int dwOffset;
};

/* 4181 */
struct _RPC_IF_ID
{
  _GUID Uuid;
  unsigned __int16 VersMajor;
  unsigned __int16 VersMinor;
};

/* 4182 */
struct _CERT_KEY_ATTRIBUTES_INFO
{
  _CRYPTOAPI_BLOB KeyId;
  _CRYPT_BIT_BLOB IntendedKeyUsage;
  _CERT_PRIVATE_KEY_VALIDITY *pPrivateKeyUsagePeriod;
};

/* 4183 */
struct _DRIVER_INFO_2W
{
  unsigned int cVersion;
  unsigned __int16 *pName;
  unsigned __int16 *pEnvironment;
  unsigned __int16 *pDriverPath;
  unsigned __int16 *pDataFile;
  unsigned __int16 *pConfigFile;
};

/* 4184 */
struct IAlterTable
{
  IUnknown baseclass_0;
};

/* 4185 */
struct tagDBCOLUMNDESC
{
  unsigned __int16 *pwszTypeName;
  ITypeInfo *pTypeInfo;
  tagDBPROPSET *rgPropertySets;
  _GUID *pclsid;
  unsigned int cPropertySets;
  unsigned int ulColumnSize;
  tagDBID dbcid;
  unsigned __int16 wType;
  char bPrecision;
  char bScale;
};

/* 4186 */
struct _COAUTHIDENTITY
{
  unsigned __int16 *User;
  unsigned int UserLength;
  unsigned __int16 *Domain;
  unsigned int DomainLength;
  unsigned __int16 *Password;
  unsigned int PasswordLength;
  unsigned int Flags;
};

/* 4187 */
struct _COAUTHINFO
{
  unsigned int dwAuthnSvc;
  unsigned int dwAuthzSvc;
  unsigned __int16 *pwszServerPrincName;
  unsigned int dwAuthnLevel;
  unsigned int dwImpersonationLevel;
  _COAUTHIDENTITY *pAuthIdentityData;
  unsigned int dwCapabilities;
};

/* 4188 */
struct _COSERVERINFO
{
  unsigned int dwReserved1;
  unsigned __int16 *pwszName;
  _COAUTHINFO *pAuthInfo;
  unsigned int dwReserved2;
};

/* 4189 */
struct tagBIND_OPTS2
{
  tagBIND_OPTS baseclass_0;
  unsigned int dwTrackFlags;
  unsigned int dwClassContext;
  unsigned int locale;
  _COSERVERINFO *pServerInfo;
};

/* 4190 */
union _userHMETAFILE::__MIDL_IWinTypes_0004
{
  int hInproc;
  _BYTE_BLOB *hRemote;
  __int64 hInproc64;
};

/* 4191 */
struct _userHMETAFILE
{
  int fContext;
  _userHMETAFILE::__MIDL_IWinTypes_0004 u;
};

/* 4192 */
struct _OBJECTS_AND_NAME_A
{
  unsigned int ObjectsPresent;
  _SE_OBJECT_TYPE ObjectType;
  char *ObjectTypeName;
  char *InheritedObjectTypeName;
  char *ptstrName;
};

/* 4193 */
struct _DRIVER_INFO_3A
{
  unsigned int cVersion;
  char *pName;
  char *pEnvironment;
  char *pDriverPath;
  char *pDataFile;
  char *pConfigFile;
  char *pHelpFile;
  char *pDependentFiles;
  char *pMonitorName;
  char *pDefaultDataType;
};

/* 4194 */
struct _PORT_INFO_2W
{
  unsigned __int16 *pPortName;
  unsigned __int16 *pMonitorName;
  unsigned __int16 *pDescription;
  unsigned int fPortType;
  unsigned int Reserved;
};

/* 4195 */
struct tagRemFORMATETC
{
  unsigned int cfFormat;
  unsigned int ptd;
  unsigned int dwAspect;
  int lindex;
  unsigned int tymed;
};

/* 4196 */
struct IPropertyBag2
{
  IUnknown baseclass_0;
};

/* 4197 */
union tagMIXERCONTROLA::__unnamed
{
  $0D057425CB83406CCB6CB71DF3FA0A4C _s0;
  $E50C0F09BB6F8C50FF087E1E76EA2CA0 _s1;
  unsigned int dwReserved[6];
};

/* 4198 */
struct tagMIXERCONTROLA
{
  unsigned int cbStruct;
  unsigned int dwControlID;
  unsigned int dwControlType;
  unsigned int fdwControl;
  unsigned int cMultipleItems;
  char szShortName[16];
  char szName[64];
  tagMIXERCONTROLA::__unnamed Bounds;
  tagMIXERCONTROLA::__unnamed Metrics;
};

/* 4199 */
struct _CRYPT_CONTENT_INFO
{
  char *pszObjId;
  _CRYPTOAPI_BLOB Content;
};

/* 4200 */
struct IPersistStorage
{
  IPersist baseclass_0;
};

/* 4201 */
struct tagDDEML_MSG_HOOK_DATA
{
  unsigned int uiLo;
  unsigned int uiHi;
  unsigned int cbData;
  unsigned int Data[8];
};

/* 4202 */
struct tagMONMSGSTRUCT
{
  unsigned int cb;
  HWND__ *hwndTo;
  unsigned int dwTime;
  void *hTask;
  unsigned int wMsg;
  unsigned int wParam;
  int lParam;
  tagDDEML_MSG_HOOK_DATA dmhd;
};

/* 4203 */
struct _PSHNOTIFY
{
  tagNMHDR hdr;
  int lParam;
};

/* 4204 */
struct _RPC_POLICY
{
  unsigned int Length;
  unsigned int EndpointFlags;
  unsigned int NICFlags;
};

/* 4205 */
struct IRowsetInfo
{
  IUnknown baseclass_0;
};

/* 4206 */
struct _remoteMETAFILEPICT
{
  int mm;
  int xExt;
  int yExt;
  _userHMETAFILE *hMF;
};

/* 4207 */
union _userHMETAFILEPICT::__MIDL_IWinTypes_0005
{
  int hInproc;
  _remoteMETAFILEPICT *hRemote;
  __int64 hInproc64;
};

/* 4208 */
struct _userHMETAFILEPICT
{
  int fContext;
  _userHMETAFILEPICT::__MIDL_IWinTypes_0005 u;
};

/* 4209 */
union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003
{
  _userHMETAFILEPICT *hMetaFilePict;
  _userHENHMETAFILE *hHEnhMetaFile;
  _GDI_OBJECT *hGdiHandle;
  _userHGLOBAL *hGlobal;
  unsigned __int16 *lpszFileName;
  _BYTE_BLOB *pstm;
  _BYTE_BLOB *pstg;
};

/* 4210 */
struct _userSTGMEDIUM::_STGMEDIUM_UNION
{
  unsigned int tymed;
  _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003 u;
};

/* 4211 */
struct _userSTGMEDIUM
{
  IUnknown *pUnkForRelease;
};

/* 4212 */
struct _REASSIGN_BLOCKS
{
  unsigned __int16 Reserved;
  unsigned __int16 Count;
  unsigned int BlockNumber[1];
};

/* 4213 */
struct _DISK_EXTENT
{
  unsigned int DiskNumber;
  _LARGE_INTEGER StartingOffset;
  _LARGE_INTEGER ExtentLength;
};

/* 4214 */
struct _VOLUME_DISK_EXTENTS
{
  unsigned int NumberOfDiskExtents;
  _DISK_EXTENT Extents[1];
};

/* 4215 */
struct IInternetPriority
{
  IUnknown baseclass_0;
};

/* 4216 */
struct _wireSAFEARR_HAVEIID
{
  unsigned int Size;
  IUnknown **apUnknown;
  _GUID iid;
};

/* 4217 */
struct tagMCI_ANIM_RECT_PARMS
{
  unsigned int dwCallback;
  tagRECT rc;
};

/* 4218 */
struct tagMIDIINCAPS2A
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned int dwSupport;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 4219 */
struct ITrusteeAdmin
{
  IUnknown baseclass_0;
};

/* 4220 */
struct midiproptimediv_tag
{
  unsigned int cbStruct;
  unsigned int dwTimeDiv;
};

/* 4221 */
struct _SESSION_HEADER
{
  char sess_name;
  char num_sess;
  char rcv_dg_outstanding;
  char rcv_any_outstanding;
};

/* 4222 */
struct tagCUSTDATA
{
  unsigned int cCustData;
  tagCUSTDATAITEM *prgCustData;
};

/* 4223 */
struct tagDBVECTOR
{
  unsigned int size;
  void *ptr;
};

/* 4224 */
union _RemotableHandle::__MIDL_IWinTypes_0009
{
  int hInproc;
  int hRemote;
};

/* 4225 */
struct _RemotableHandle
{
  int fContext;
  _RemotableHandle::__MIDL_IWinTypes_0009 u;
};

/* 4226 */
struct _ACTRL_CONTROL_INFOW
{
  unsigned __int16 *lpControlId;
  unsigned __int16 *lpControlName;
};

/* 4227 */
struct _DISK_HISTOGRAM
{
  _LARGE_INTEGER DiskSize;
  _LARGE_INTEGER Start;
  _LARGE_INTEGER End;
  _LARGE_INTEGER Average;
  _LARGE_INTEGER AverageRead;
  _LARGE_INTEGER AverageWrite;
  unsigned int Granularity;
  unsigned int Size;
  unsigned int ReadCount;
  unsigned int WriteCount;
  _HISTOGRAM_BUCKET *Histogram;
};

/* 4228 */
struct ITableDefinition
{
  IUnknown baseclass_0;
};

/* 4229 */
struct ITableCreation
{
  ITableDefinition baseclass_0;
};

/* 4230 */
struct tagDBCONSTRAINTDESC
{
  tagDBID *pConstraintID;
  unsigned int ConstraintType;
  unsigned int cColumns;
  tagDBID *rgColumnList;
  tagDBID *pReferencedTableID;
  unsigned int cForeignKeyColumns;
  tagDBID *rgForeignKeyColumnList;
  unsigned __int16 *pwszConstraintText;
  unsigned int UpdateRule;
  unsigned int DeleteRule;
  unsigned int MatchType;
  unsigned int Deferrability;
  unsigned int cReserved;
  tagDBPROPSET *rgReserved;
};

/* 4231 */
struct _CERT_POLICY_MAPPING
{
  char *pszIssuerDomainPolicy;
  char *pszSubjectDomainPolicy;
};

/* 4232 */
struct _CERT_POLICY_MAPPINGS_INFO
{
  unsigned int cPolicyMapping;
  _CERT_POLICY_MAPPING *rgPolicyMapping;
};

/* 4233 */
struct ISynchronizeHandle
{
  IUnknown baseclass_0;
};

/* 4234 */
struct ISynchronizeEvent
{
  ISynchronizeHandle baseclass_0;
};

/* 4235 */
struct _CMSG_MAIL_LIST_ENCRYPT_INFO
{
  unsigned int cbSize;
  unsigned int dwRecipientIndex;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  _CRYPTOAPI_BLOB EncryptedKey;
  unsigned int dwFlags;
};

/* 4236 */
struct _CERT_CHAIN_POLICY_PARA
{
  unsigned int cbSize;
  unsigned int dwFlags;
  void *pvExtraPolicyPara;
};

/* 4237 */
struct IViewObject
{
  IUnknown baseclass_0;
};

/* 4238 */
struct _HAN_UID
{
  unsigned int hUID;
  unsigned int lUID;
};

/* 4239 */
struct _CERT_POLICY_CONSTRAINTS_INFO
{
  int fRequireExplicitPolicy;
  unsigned int dwRequireExplicitPolicySkipCerts;
  int fInhibitPolicyMapping;
  unsigned int dwInhibitPolicyMappingSkipCerts;
};

/* 4240 */
struct _MONITOR_INFO_2W
{
  unsigned __int16 *pName;
  unsigned __int16 *pEnvironment;
  unsigned __int16 *pDLLName;
};

/* 4241 */
struct _MMCKINFO
{
  unsigned int ckid;
  unsigned int cksize;
  unsigned int fccType;
  unsigned int dwDataOffset;
  unsigned int dwFlags;
};

/* 4242 */
struct _PRINTER_INFO_9A
{
  _devicemodeA *pDevMode;
};

/* 4243 */
struct _JOB_INFO_1W
{
  unsigned int JobId;
  unsigned __int16 *pPrinterName;
  unsigned __int16 *pMachineName;
  unsigned __int16 *pUserName;
  unsigned __int16 *pDocument;
  unsigned __int16 *pDatatype;
  unsigned __int16 *pStatus;
  unsigned int Status;
  unsigned int Priority;
  unsigned int Position;
  unsigned int TotalPages;
  unsigned int PagesPrinted;
  _SYSTEMTIME Submitted;
};

/* 4244 */
struct _PRINTER_ENUM_VALUESA
{
  char *pValueName;
  unsigned int cbValueName;
  unsigned int dwType;
  char *pData;
  unsigned int cbData;
};

/* 4245 */
struct _CRL_DIST_POINT_NAME
{
  unsigned int dwDistPointNameChoice;
  _CERT_ALT_NAME_INFO FullName;
};

/* 4246 */
struct _CRYPT_PASSWORD_CREDENTIALSW
{
  unsigned int cbSize;
  unsigned __int16 *pszUsername;
  unsigned __int16 *pszPassword;
};

/* 4247 */
struct tMIXERCONTROLDETAILS_SIGNED
{
  int lValue;
};

/* 4248 */
struct IEncodingFilterFactory
{
  IUnknown baseclass_0;
};

/* 4249 */
struct _BYTE_SIZEDARR
{
  unsigned int clSize;
  char *pData;
};

/* 4250 */
struct _DRIVER_INFO_3W
{
  unsigned int cVersion;
  unsigned __int16 *pName;
  unsigned __int16 *pEnvironment;
  unsigned __int16 *pDriverPath;
  unsigned __int16 *pDataFile;
  unsigned __int16 *pConfigFile;
  unsigned __int16 *pHelpFile;
  unsigned __int16 *pDependentFiles;
  unsigned __int16 *pMonitorName;
  unsigned __int16 *pDefaultDataType;
};

/* 4251 */
struct tagINTERFACEINFO
{
  IUnknown *pUnk;
  _GUID iid;
  unsigned __int16 wMethod;
};

/* 4252 */
struct IXMLDOMEntityReference
{
  IXMLDOMNode baseclass_0;
};

/* 4253 */
struct HWAVEIN__
{
  int unused;
};

/* 4254 */
struct tagDB_VARNUMERIC
{
  char precision;
  char scale;
  char sign;
  char val[1];
};

/* 4255 */
struct tagMIXERCAPSA
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned int fdwSupport;
  unsigned int cDestinations;
};

/* 4256 */
struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY
{
  char *pszObjId;
  unsigned int cValue;
  _CRYPTOAPI_BLOB *rgValue;
};

/* 4257 */
struct tagJOYCAPS2W
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned __int16 szPname[32];
  unsigned int wXmin;
  unsigned int wXmax;
  unsigned int wYmin;
  unsigned int wYmax;
  unsigned int wZmin;
  unsigned int wZmax;
  unsigned int wNumButtons;
  unsigned int wPeriodMin;
  unsigned int wPeriodMax;
  unsigned int wRmin;
  unsigned int wRmax;
  unsigned int wUmin;
  unsigned int wUmax;
  unsigned int wVmin;
  unsigned int wVmax;
  unsigned int wCaps;
  unsigned int wMaxAxes;
  unsigned int wNumAxes;
  unsigned int wMaxButtons;
  unsigned __int16 szRegKey[32];
  unsigned __int16 szOEMVxD[260];
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 4258 */
struct joyinfoex_tag
{
  unsigned int dwSize;
  unsigned int dwFlags;
  unsigned int dwXpos;
  unsigned int dwYpos;
  unsigned int dwZpos;
  unsigned int dwRpos;
  unsigned int dwUpos;
  unsigned int dwVpos;
  unsigned int dwButtons;
  unsigned int dwButtonNumber;
  unsigned int dwPOV;
  unsigned int dwReserved1;
  unsigned int dwReserved2;
};

/* 4259 */
struct _PRINTER_INFO_5W
{
  unsigned __int16 *pPrinterName;
  unsigned __int16 *pPortName;
  unsigned int Attributes;
  unsigned int DeviceNotSelectedTimeout;
  unsigned int TransmissionRetryTimeout;
};

/* 4260 */
struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  unsigned int dwKeySpec;
  _CMSG_KEY_AGREE_RECIPIENT_INFO *pKeyAgree;
  unsigned int dwRecipientIndex;
  unsigned int dwRecipientEncryptedKeyIndex;
  _CRYPT_BIT_BLOB OriginatorPublicKey;
};

/* 4261 */
struct IObjectWithSite
{
  IUnknown baseclass_0;
};

/* 4262 */
struct tagMCI_SYSINFO_PARMSW
{
  unsigned int dwCallback;
  unsigned __int16 *lpstrReturn;
  unsigned int dwRetSize;
  unsigned int dwNumber;
  unsigned int wDeviceType;
};

/* 4263 */
struct IRow
{
  IUnknown baseclass_0;
};

/* 4264 */
struct tagDBCOLUMNACCESS
{
  void *pData;
  tagDBID columnid;
  unsigned int cbDataLen;
  unsigned int dwStatus;
  unsigned int cbMaxLen;
  unsigned int dwReserved;
  unsigned __int16 wType;
  char bPrecision;
  char bScale;
};

/* 4265 */
struct IPropertyPageSite
{
  IUnknown baseclass_0;
};

/* 4266 */
struct OPENCARD_SEARCH_CRITERIAW
{
  unsigned int dwStructSize;
  unsigned __int16 *lpstrGroupNames;
  unsigned int nMaxGroupNames;
  _GUID *rgguidInterfaces;
  unsigned int cguidInterfaces;
  unsigned __int16 *lpstrCardNames;
  unsigned int nMaxCardNames;
  int (__stdcall *lpfnCheck)(unsigned int, unsigned int, void *);
  unsigned int (__stdcall *lpfnConnect)(unsigned int, unsigned __int16 *, unsigned __int16 *, void *);
  void (__stdcall *lpfnDisconnect)(unsigned int, unsigned int, void *);
  void *pvUserData;
  unsigned int dwShareMode;
  unsigned int dwPreferredProtocols;
};

/* 4267 */
struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA
{
  unsigned int cOID;
  char **rgpszOID;
};

/* 4268 */
struct _PRINTER_NOTIFY_INFO
{
  unsigned int Version;
  unsigned int Flags;
  unsigned int Count;
  _PRINTER_NOTIFY_INFO_DATA aData[1];
};

/* 4269 */
struct ISurrogate
{
  IUnknown baseclass_0;
};

/* 4270 */
struct tagMCI_OVLY_WINDOW_PARMSA
{
  unsigned int dwCallback;
  HWND__ *hWnd;
  unsigned int nCmdShow;
  const char *lpstrText;
};

/* 4271 */
struct _PRINTER_INFO_7A
{
  char *pszObjectGUID;
  unsigned int dwAction;
};

/* 4272 */
struct ISimpleFrameSite
{
  IUnknown baseclass_0;
};

/* 4273 */
struct _CERT_AUTHORITY_INFO_ACCESS
{
  unsigned int cAccDescr;
  _CERT_ACCESS_DESCRIPTION *rgAccDescr;
};

/* 4274 */
struct _BAN
{
  unsigned int dwSize;
  char Data[2000];
  unsigned int dwInfoSize;
  char Info[700];
};

/* 4275 */
struct _CERT_GENERAL_SUBTREE
{
  _CERT_ALT_NAME_ENTRY Base;
  unsigned int dwMinimum;
  int fMaximum;
  unsigned int dwMaximum;
};

/* 4276 */
struct _CERT_KEY_CONTEXT
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  unsigned int dwKeySpec;
};

/* 4277 */
struct _TAPE_GET_STATISTICS
{
  unsigned int Operation;
};

/* 4278 */
struct _PROVIDOR_INFO_1W
{
  unsigned __int16 *pName;
  unsigned __int16 *pEnvironment;
  unsigned __int16 *pDLLName;
};

/* 4279 */
struct IDataFilter
{
  IUnknown baseclass_0;
};

/* 4280 */
struct ITypeLib2
{
  ITypeLib baseclass_0;
};

/* 4281 */
struct _PERF_COUNTER_DEFINITION
{
  unsigned int ByteLength;
  unsigned int CounterNameTitleIndex;
  unsigned __int16 *CounterNameTitle;
  unsigned int CounterHelpTitleIndex;
  unsigned __int16 *CounterHelpTitle;
  int DefaultScale;
  unsigned int DetailLevel;
  unsigned int CounterType;
  unsigned int CounterSize;
  unsigned int CounterOffset;
};

/* 4282 */
union $B5432B5766EACA8D7A891B0C9CA17601
{
  unsigned int cbStruct;
  unsigned int cbSize;
};

/* 4283 */
struct _HTTPSPolicyCallbackData
{
  $B5432B5766EACA8D7A891B0C9CA17601 ___u0;
  unsigned int dwAuthType;
  unsigned int fdwChecks;
  unsigned __int16 *pwszServerName;
};

/* 4284 */
struct tagWAVEINCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
};

/* 4285 */
struct tagMCI_OVLY_LOAD_PARMSA
{
  unsigned int dwCallback;
  const char *lpfilename;
  tagRECT rc;
};

/* 4286 */
struct _wireSAFEARR_BSTR
{
  unsigned int Size;
  _FLAGGED_WORD_BLOB **aBstr;
};

/* 4287 */
struct _wireSAFEARR_UNKNOWN
{
  unsigned int Size;
  IUnknown **apUnknown;
};

/* 4288 */
struct _wireSAFEARR_DISPATCH
{
  unsigned int Size;
  IDispatch **apDispatch;
};

/* 4289 */
union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001
{
  _wireSAFEARR_BSTR BstrStr;
  _wireSAFEARR_UNKNOWN UnknownStr;
  _wireSAFEARR_DISPATCH DispatchStr;
  _wireSAFEARR_VARIANT VariantStr;
  _wireSAFEARR_BRECORD RecordStr;
  _wireSAFEARR_HAVEIID HaveIidStr;
  _BYTE_SIZEDARR ByteStr;
  _SHORT_SIZEDARR WordStr;
  _LONG_SIZEDARR LongStr;
  _HYPER_SIZEDARR HyperStr;
};

/* 4290 */
#pragma pack(push, 1)
struct _wireSAFEARRAY_UNION
{
  unsigned int sfType;
  _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001 u;
};
#pragma pack(pop)

/* 4291 */
#pragma pack(push, 1)
struct _wireSAFEARRAY
{
  unsigned __int16 cDims;
  unsigned __int16 fFeatures;
  unsigned int cbElements;
  unsigned int cLocks;
  _wireSAFEARRAY_UNION uArrayStructs;
  tagSAFEARRAYBOUND rgsabound[1];
};
#pragma pack(pop)

/* 4292 */
struct _wireVARIANT
{
  unsigned int clSize;
  unsigned int rpcReserved;
  unsigned __int16 vt;
  unsigned __int16 wReserved1;
  unsigned __int16 wReserved2;
  unsigned __int16 wReserved3;
  $A41A471A4587856889FCC698B7D1AB94 ___u6;
};

/* 4293 */
union $A41A471A4587856889FCC698B7D1AB94
{
  __int64 llVal;
  int lVal;
  char bVal;
  __int16 iVal;
  float fltVal;
  long double dblVal;
  __int16 boolVal;
  int scode;
  tagCY cyVal;
  long double date;
  _FLAGGED_WORD_BLOB *bstrVal;
  IUnknown *punkVal;
  IDispatch *pdispVal;
  _wireSAFEARRAY **parray;
  _wireBRECORD *brecVal;
  char *pbVal;
  __int16 *piVal;
  int *plVal;
  __int64 *pllVal;
  float *pfltVal;
  long double *pdblVal;
  __int16 *pboolVal;
  int *pscode;
  tagCY *pcyVal;
  long double *pdate;
  _FLAGGED_WORD_BLOB **pbstrVal;
  IUnknown **ppunkVal;
  IDispatch **ppdispVal;
  _wireSAFEARRAY ***pparray;
  _wireVARIANT **pvarVal;
  char cVal;
  unsigned __int16 uiVal;
  unsigned int ulVal;
  unsigned __int64 ullVal;
  int intVal;
  unsigned int uintVal;
  tagDEC decVal;
  tagDEC *pdecVal;
  char *pcVal;
  unsigned __int16 *puiVal;
  unsigned int *pulVal;
  unsigned __int64 *pullVal;
  int *pintVal;
  unsigned int *puintVal;
};

/* 4294 */
struct _wireSAFEARR_VARIANT
{
  unsigned int Size;
  _wireVARIANT **aVariant;
};

/* 4295 */
struct _SHORT_SIZEDARR
{
  unsigned int clSize;
  unsigned __int16 *pData;
};

/* 4296 */
struct _LONG_SIZEDARR
{
  unsigned int clSize;
  unsigned int *pData;
};

/* 4297 */
struct _HYPER_SIZEDARR
{
  unsigned int clSize;
  __int64 *pData;
};

/* 4298 */
struct _ACTRL_ACCESS_INFOW
{
  unsigned int fAccessPermission;
  unsigned __int16 *lpAccessPermissionName;
};

/* 4299 */
struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA
{
  unsigned int cbSize;
  unsigned int dwSignerIndex;
  _CRYPTOAPI_BLOB blob;
};

/* 4300 */
struct tagMCI_OVLY_OPEN_PARMSA
{
  unsigned int dwCallback;
  unsigned int wDeviceID;
  const char *lpstrDeviceType;
  const char *lpstrElementName;
  const char *lpstrAlias;
  unsigned int dwStyle;
  HWND__ *hWndParent;
};

/* 4301 */
struct _CMC_TAGGED_CERT_REQUEST
{
  unsigned int dwBodyPartID;
  _CRYPTOAPI_BLOB SignedCertRequest;
};

/* 4302 */
struct _CMC_TAGGED_REQUEST
{
  unsigned int dwTaggedRequestChoice;
  _CMC_TAGGED_CERT_REQUEST *pTaggedCertRequest;
};

/* 4303 */
struct _userFLAG_STGMEDIUM
{
  int ContextFlags;
  int fPassOwnership;
  _userSTGMEDIUM Stgmed;
};

/* 4304 */
struct IInternetBindInfo
{
  IUnknown baseclass_0;
};

/* 4305 */
#pragma pack(push, 1)
struct tWAVEFORMATEX
{
  unsigned __int16 wFormatTag;
  unsigned __int16 nChannels;
  unsigned int nSamplesPerSec;
  unsigned int nAvgBytesPerSec;
  unsigned __int16 nBlockAlign;
  unsigned __int16 wBitsPerSample;
  unsigned __int16 cbSize;
};
#pragma pack(pop)

/* 4306 */
struct _CMS_KEY_INFO
{
  unsigned int dwVersion;
  unsigned int Algid;
  char *pbOID;
  unsigned int cbOID;
};

/* 4307 */
struct _CTL_VERIFY_USAGE_PARA
{
  unsigned int cbSize;
  _CRYPTOAPI_BLOB ListIdentifier;
  unsigned int cCtlStore;
  void **rghCtlStore;
  unsigned int cSignerStore;
  void **rghSignerStore;
};

/* 4308 */
struct tagPOINTF
{
  float x;
  float y;
};

/* 4309 */
struct _CMSG_KEY_TRANS_ENCRYPT_INFO
{
  unsigned int cbSize;
  unsigned int dwRecipientIndex;
  _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  _CRYPTOAPI_BLOB EncryptedKey;
  unsigned int dwFlags;
};

/* 4310 */
struct tagMCI_LOAD_PARMSA
{
  unsigned int dwCallback;
  const char *lpfilename;
};

/* 4311 */
struct _CRYPT_RETRIEVE_AUX_INFO
{
  unsigned int cbSize;
  _FILETIME *pLastSyncTime;
  unsigned int dwMaxUrlRetrievalByteCount;
};

/* 4312 */
struct IViewRowset
{
  IUnknown baseclass_0;
};

/* 4313 */
struct OPENCARDNAMEW
{
  unsigned int dwStructSize;
  HWND__ *hwndOwner;
  unsigned int hSCardContext;
  unsigned __int16 *lpstrGroupNames;
  unsigned int nMaxGroupNames;
  unsigned __int16 *lpstrCardNames;
  unsigned int nMaxCardNames;
  _GUID *rgguidInterfaces;
  unsigned int cguidInterfaces;
  unsigned __int16 *lpstrRdr;
  unsigned int nMaxRdr;
  unsigned __int16 *lpstrCard;
  unsigned int nMaxCard;
  const unsigned __int16 *lpstrTitle;
  unsigned int dwFlags;
  void *pvUserData;
  unsigned int dwShareMode;
  unsigned int dwPreferredProtocols;
  unsigned int dwActiveProtocol;
  unsigned int (__stdcall *lpfnConnect)(unsigned int, unsigned __int16 *, unsigned __int16 *, void *);
  int (__stdcall *lpfnCheck)(unsigned int, unsigned int, void *);
  void (__stdcall *lpfnDisconnect)(unsigned int, unsigned int, void *);
  unsigned int hCardHandle;
};

/* 4314 */
struct _PORT_INFO_1W
{
  unsigned __int16 *pName;
};

/* 4315 */
struct _OBJECTS_AND_SID
{
  unsigned int ObjectsPresent;
  _GUID ObjectTypeGuid;
  _GUID InheritedObjectTypeGuid;
  _SID *pSid;
};

/* 4316 */
struct tagWAVEINCAPSA
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  char szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
};

/* 4317 */
struct _CRL_REVOCATION_INFO
{
  _CRL_ENTRY *pCrlEntry;
  _CRL_CONTEXT *pCrlContext;
  _CERT_CHAIN_CONTEXT *pCrlIssuerChain;
};

/* 4318 */
struct _BIDI_REQUEST_DATA
{
  unsigned int dwReqNumber;
  unsigned __int16 *pSchema;
  _BIDI_DATA data;
};

/* 4319 */
struct _BIDI_REQUEST_CONTAINER
{
  unsigned int Version;
  unsigned int Flags;
  unsigned int Count;
  _BIDI_REQUEST_DATA aData[1];
};

/* 4320 */
struct IDropSource
{
  IUnknown baseclass_0;
};

/* 4321 */
struct _EFS_HASH_BLOB
{
  unsigned int cbData;
  char *pbData;
};

/* 4322 */
struct tagFINDREPLACEW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  unsigned int Flags;
  unsigned __int16 *lpstrFindWhat;
  unsigned __int16 *lpstrReplaceWith;
  unsigned __int16 wFindWhatLen;
  unsigned __int16 wReplaceWithLen;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpTemplateName;
};

/* 4323 */
struct wavehdr_tag
{
  char *lpData;
  unsigned int dwBufferLength;
  unsigned int dwBytesRecorded;
  unsigned int dwUser;
  unsigned int dwFlags;
  unsigned int dwLoops;
  wavehdr_tag *lpNext;
  unsigned int reserved;
};

/* 4324 */
struct _EVENTITEM
{
  unsigned int nItemIndex;
  char strItemName[32];
  unsigned int nItemAmount;
  TIME UpdateTime;
};

/* 4325 */
struct _CRYPT_HASH_MESSAGE_PARA
{
  unsigned int cbSize;
  unsigned int dwMsgEncodingType;
  unsigned int hCryptProv;
  _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  void *pvHashAuxInfo;
};

/* 4326 */
struct _CERT_BASIC_CONSTRAINTS_INFO
{
  _CRYPT_BIT_BLOB SubjectType;
  int fPathLenConstraint;
  unsigned int dwPathLenConstraint;
  unsigned int cSubtreesConstraint;
  _CRYPTOAPI_BLOB *rgSubtreesConstraint;
};

/* 4327 */
struct _CERT_STORE_PROV_FIND_INFO
{
  unsigned int cbSize;
  unsigned int dwMsgAndCertEncodingType;
  unsigned int dwFindFlags;
  unsigned int dwFindType;
  const void *pvFindPara;
};

/* 4328 */
struct tagBinaryParam
{
  void *Buffer;
  __int16 Size;
};

/* 4329 */
struct _NTFS_STATISTICS::__unnamed
{
  unsigned __int16 Write;
  unsigned __int16 Create;
  unsigned __int16 SetInfo;
  unsigned __int16 Flush;
};

/* 4330 */
#pragma pack(push, 1)
struct _TITLE
{
  __int64 dlTitle;
  unsigned __int16 wScore;
};
#pragma pack(pop)

/* 4331 */
struct _CMC_ADD_ATTRIBUTES_INFO
{
  unsigned int dwCmcDataReference;
  unsigned int cCertReference;
  unsigned int *rgdwCertReference;
  unsigned int cAttribute;
  _CRYPT_ATTRIBUTE *rgAttribute;
};

/* 4332 */
struct IContinue
{
  IUnknown baseclass_0;
};

/* 4333 */
struct _CRYPT_TIME_STAMP_REQUEST_INFO
{
  char *pszTimeStampAlgorithm;
  char *pszContentType;
  _CRYPTOAPI_BLOB Content;
  unsigned int cAttribute;
  _CRYPT_ATTRIBUTE *rgAttribute;
};

/* 4334 */
struct _CERT_AUTHORITY_KEY_ID2_INFO
{
  _CRYPTOAPI_BLOB KeyId;
  _CERT_ALT_NAME_INFO AuthorityCertIssuer;
  _CRYPTOAPI_BLOB AuthorityCertSerialNumber;
};

/* 4335 */
struct _EXPLICIT_ACCESS_W
{
  unsigned int grfAccessPermissions;
  _ACCESS_MODE grfAccessMode;
  unsigned int grfInheritance;
  _TRUSTEE_W Trustee;
};

/* 4336 */
struct ICancelMethodCalls
{
  IUnknown baseclass_0;
};

/* 4337 */
union $4A723A00E336ED2DC61B6B97ADF4413F
{
  HBITMAP__ *hBitmap;
  void *hMetaFilePict;
  HENHMETAFILE__ *hEnhMetaFile;
  void *hGlobal;
  unsigned __int16 *lpszFileName;
  IStream *pstm;
  IStorage *pstg;
};

/* 4338 */
struct tagSTGMEDIUM
{
  unsigned int tymed;
  $4A723A00E336ED2DC61B6B97ADF4413F ___u1;
  IUnknown *pUnkForRelease;
};

/* 4339 */
struct tagMONERRSTRUCT
{
  unsigned int cb;
  unsigned int wLastError;
  unsigned int dwTime;
  void *hTask;
};

/* 4340 */
struct _PRINTPROCESSOR_INFO_1W
{
  unsigned __int16 *pName;
};

/* 4341 */
struct _RPC_SERVER_INTERFACE
{
  unsigned int Length;
  _RPC_SYNTAX_IDENTIFIER InterfaceId;
  _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  RPC_DISPATCH_TABLE *DispatchTable;
  unsigned int RpcProtseqEndpointCount;
  _RPC_PROTSEQ_ENDPOINT *RpcProtseqEndpoint;
  void *DefaultManagerEpv;
  const void *InterpreterInfo;
  unsigned int Flags;
};

/* 4342 */
struct IStdMarshalInfo
{
  IUnknown baseclass_0;
};

/* 4343 */
struct IDBSchemaRowset
{
  IUnknown baseclass_0;
};

/* 4344 */
struct IGetSourceRow
{
  IUnknown baseclass_0;
};

/* 4345 */
struct _CRYPT_OBJID_TABLE
{
  unsigned int dwAlgId;
  const char *pszObjId;
};

/* 4346 */
struct _PERF_DATA_BLOCK
{
  unsigned __int16 Signature[4];
  unsigned int LittleEndian;
  unsigned int Version;
  unsigned int Revision;
  unsigned int TotalByteLength;
  unsigned int HeaderLength;
  unsigned int NumObjectTypes;
  int DefaultObject;
  _SYSTEMTIME SystemTime;
  _LARGE_INTEGER PerfTime;
  _LARGE_INTEGER PerfFreq;
  _LARGE_INTEGER PerfTime100nSec;
  unsigned int SystemNameLength;
  unsigned int SystemNameOffset;
};

/* 4347 */
struct ISpecifyPropertyPages
{
  IUnknown baseclass_0;
};

/* 4348 */
struct tagCAUUID
{
  unsigned int cElems;
  _GUID *pElems;
};

/* 4349 */
struct tagWAVEOUTCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
};

/* 4350 */
struct _CERT_AUTHORITY_KEY_ID_INFO
{
  _CRYPTOAPI_BLOB KeyId;
  _CRYPTOAPI_BLOB CertIssuer;
  _CRYPTOAPI_BLOB CertSerialNumber;
};

/* 4351 */
struct _CERT_PAIR
{
  _CRYPTOAPI_BLOB Forward;
  _CRYPTOAPI_BLOB Reverse;
};

/* 4352 */
struct tagMCI_INFO_PARMSW
{
  unsigned int dwCallback;
  unsigned __int16 *lpstrReturn;
  unsigned int dwRetSize;
};

/* 4353 */
struct _CROSS_CERT_DIST_POINTS_INFO
{
  unsigned int dwSyncDeltaTime;
  unsigned int cDistPoint;
  _CERT_ALT_NAME_INFO *rgDistPoint;
};

/* 4354 */
struct _CHANGER_MOVE_MEDIUM
{
  _CHANGER_ELEMENT Transport;
  _CHANGER_ELEMENT Source;
  _CHANGER_ELEMENT Destination;
  char Flip;
};

/* 4355 */
struct _ENCRYPTION_CERTIFICATE_LIST
{
  unsigned int nUsers;
  _ENCRYPTION_CERTIFICATE **pUsers;
};

/* 4356 */
struct _EFS_RPC_BLOB
{
  unsigned int cbData;
  char *pbData;
};

/* 4357 */
struct tagMULTI_QI
{
  _GUID *pIID;
  IUnknown *pItf;
  HRESULT hr;
};

/* 4358 */
struct IParentRowset
{
  IUnknown baseclass_0;
};

/* 4359 */
struct IHttpNegotiate
{
  IUnknown baseclass_0;
};

/* 4360 */
struct IHttpNegotiate2
{
  IHttpNegotiate baseclass_0;
};

/* 4361 */
struct IGetRow
{
  IUnknown baseclass_0;
};

/* 4362 */
struct IPersistFile
{
  IPersist baseclass_0;
};

/* 4363 */
struct tagMCI_VD_STEP_PARMS
{
  unsigned int dwCallback;
  unsigned int dwFrames;
};

/* 4364 */
struct _CRL_DIST_POINT
{
  _CRL_DIST_POINT_NAME DistPointName;
  _CRYPT_BIT_BLOB ReasonFlags;
  _CERT_ALT_NAME_INFO CRLIssuer;
};

/* 4365 */
struct _CRL_DIST_POINTS_INFO
{
  unsigned int cDistPoint;
  _CRL_DIST_POINT *rgDistPoint;
};

/* 4366 */
struct _EQUIP
{
  unsigned int dwSize;
  char Data[1436];
};

/* 4367 */
struct TEMPINVEN
{
  unsigned int dwSize;
  char Data[1436];
};

/* 4368 */
struct tagRPC_ERROR_ENUM_HANDLE
{
  unsigned int Signature;
  void *CurrentPos;
  void *Head;
};

/* 4369 */
struct _PERF_BIN
{
  unsigned int NumberOfBins;
  unsigned int TypeOfBin;
  _BIN_RANGE BinsRanges[1];
};

/* 4370 */
struct _UUID_VECTOR
{
  unsigned int Count;
  _GUID *Uuid[1];
};

/* 4371 */
struct SCARD_T0_COMMAND
{
  char bCla;
  char bIns;
  char bP1;
  char bP2;
  char bP3;
};

/* 4372 */
struct IPointerInactive
{
  IUnknown baseclass_0;
};

/* 4373 */
struct _EFS_KEY_INFO
{
  unsigned int dwVersion;
  unsigned int Entropy;
  unsigned int Algorithm;
  unsigned int KeyLength;
};

/* 4374 */
struct tagMONHSZSTRUCTW
{
  unsigned int cb;
  int fsAction;
  unsigned int dwTime;
  HSZ__ *hsz;
  void *hTask;
  unsigned __int16 str[1];
};

/* 4375 */
struct IOleInPlaceSite
{
  IOleWindow baseclass_0;
};

/* 4376 */
struct IOleInPlaceSiteEx
{
  IOleInPlaceSite baseclass_0;
};

/* 4377 */
struct IOleInPlaceSiteWindowless
{
  IOleInPlaceSiteEx baseclass_0;
};

/* 4378 */
struct _SCONTEXT_QUEUE
{
  unsigned int NumberOfObjects;
  $3FA64165D15A4602C29B2D9B0DA4A5E9 **ArrayOfObjects;
};

/* 4379 */
struct IMallocSpy
{
  IUnknown baseclass_0;
};

/* 4380 */
struct IOpenRowset
{
  IUnknown baseclass_0;
};

/* 4381 */
struct tagMIDIOUTCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wVoices;
  unsigned __int16 wNotes;
  unsigned __int16 wChannelMask;
  unsigned int dwSupport;
};

/* 4382 */
struct tagMCI_WAVE_OPEN_PARMSW
{
  unsigned int dwCallback;
  unsigned int wDeviceID;
  const unsigned __int16 *lpstrDeviceType;
  const unsigned __int16 *lpstrElementName;
  const unsigned __int16 *lpstrAlias;
  unsigned int dwBufferSeconds;
};

/* 4383 */
struct _RPC_TRANSFER_SYNTAX
{
  _GUID Uuid;
  unsigned __int16 VersMajor;
  unsigned __int16 VersMinor;
};

/* 4384 */
struct _CRYPT_VERIFY_MESSAGE_PARA
{
  unsigned int cbSize;
  unsigned int dwMsgAndCertEncodingType;
  unsigned int hCryptProv;
  _CERT_CONTEXT *(__stdcall *pfnGetSignerCertificate)(void *, unsigned int, _CERT_INFO *, void *);
  void *pvGetArg;
};

/* 4385 */
struct tagDBFAILUREINFO
{
  unsigned int hRow;
  unsigned int iColumn;
  HRESULT failure;
};

/* 4386 */
struct _CMSG_SIGNER_ENCODE_INFO
{
  unsigned int cbSize;
  _CERT_INFO *pCertInfo;
  unsigned int hCryptProv;
  unsigned int dwKeySpec;
  _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  void *pvHashAuxInfo;
  unsigned int cAuthAttr;
  _CRYPT_ATTRIBUTE *rgAuthAttr;
  unsigned int cUnauthAttr;
  _CRYPT_ATTRIBUTE *rgUnauthAttr;
};

/* 4387 */
struct _CMSG_SIGNED_ENCODE_INFO
{
  unsigned int cbSize;
  unsigned int cSigners;
  _CMSG_SIGNER_ENCODE_INFO *rgSigners;
  unsigned int cCertEncoded;
  _CRYPTOAPI_BLOB *rgCertEncoded;
  unsigned int cCrlEncoded;
  _CRYPTOAPI_BLOB *rgCrlEncoded;
};

/* 4388 */
struct _CHANGER_PRODUCT_DATA
{
  char VendorId[8];
  char ProductId[16];
  char Revision[4];
  char SerialNumber[32];
  char DeviceType;
};

/* 4389 */
struct PAY_AUTH
{
  unsigned int Errcode;
  char Account[20];
  unsigned int UID;
  unsigned int Time;
  int WarningCode;
};

/* 4390 */
struct tagMCI_OVLY_SAVE_PARMSA
{
  unsigned int dwCallback;
  const char *lpfilename;
  tagRECT rc;
};

/* 4391 */
union $E3CAD8411F77256CCB020CE77D197F57
{
  unsigned int nStartPage;
  const char *pStartPage;
};

/* 4392 */
union $5AB4A76BDB690DE111963E8662F1CCDF
{
  _PROPSHEETPAGEA *ppsp;
  _PSP **phpage;
};

/* 4393 */
union $5A84FF42EF68AB647E3FE84972C30852
{
  HBITMAP__ *hbmWatermark;
  const char *pszbmWatermark;
};

/* 4394 */
union $6C9D3FBCC202162895103EDD69D52E68
{
  HBITMAP__ *hbmHeader;
  const char *pszbmHeader;
};

/* 4395 */
struct _PROPSHEETHEADERA
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HWND__ *hwndParent;
  HINSTANCE__ *hInstance;
  $34DED5F6CF764D81CB52C876B11C091E ___u4;
  const char *pszCaption;
  unsigned int nPages;
  $E3CAD8411F77256CCB020CE77D197F57 ___u7;
  $5AB4A76BDB690DE111963E8662F1CCDF ___u8;
  int (__stdcall *pfnCallback)(HWND__ *, unsigned int, int);
  $5A84FF42EF68AB647E3FE84972C30852 ___u10;
  HPALETTE__ *hplWatermark;
  $6C9D3FBCC202162895103EDD69D52E68 ___u12;
};

/* 4396 */
struct tagCHOOSEFONTW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HDC__ *hDC;
  tagLOGFONTW *lpLogFont;
  int iPointSize;
  unsigned int Flags;
  unsigned int rgbColors;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpTemplateName;
  HINSTANCE__ *hInstance;
  unsigned __int16 *lpszStyle;
  unsigned __int16 nFontType;
  unsigned __int16 ___MISSING_ALIGNMENT__;
  int nSizeMin;
  int nSizeMax;
};

/* 4397 */
struct _SCARD_ATRMASK
{
  unsigned int cbAtr;
  char rgbAtr[36];
  char rgbMask[36];
};

/* 4398 */
struct _LANA_ENUM
{
  char length;
  char lana[255];
};

/* 4399 */
struct tagMDAXISINFO
{
  unsigned int cbSize;
  unsigned int iAxis;
  unsigned int cDimensions;
  unsigned int cCoordinates;
  unsigned int *rgcColumns;
  unsigned __int16 **rgpwszDimensionNames;
};

/* 4400 */
struct _PRINTER_INFO_7W
{
  unsigned __int16 *pszObjectGUID;
  unsigned int dwAction;
};

/* 4401 */
struct IEnumUnknown
{
  IUnknown baseclass_0;
};

/* 4402 */
struct ISupportErrorInfo
{
  IUnknown baseclass_0;
};

/* 4403 */
struct tagMCI_OVLY_LOAD_PARMSW
{
  unsigned int dwCallback;
  const unsigned __int16 *lpfilename;
  tagRECT rc;
};

/* 4404 */
struct IXMLDOMCharacterData
{
  IXMLDOMNode baseclass_0;
};

/* 4405 */
struct IMDFind
{
  IUnknown baseclass_0;
};

/* 4406 */
struct _RPC_SECURITY_QOS
{
  unsigned int Version;
  unsigned int Capabilities;
  unsigned int IdentityTracking;
  unsigned int ImpersonationType;
};

/* 4407 */
struct tagMONHSZSTRUCTA
{
  unsigned int cb;
  int fsAction;
  unsigned int dwTime;
  HSZ__ *hsz;
  void *hTask;
  char str[1];
};

/* 4408 */
struct mmtime_tag::__unnamed::__unnamed
{
  char hour;
  char min;
  char sec;
  char frame;
  char fps;
  char dummy;
  char pad[2];
};

/* 4409 */
union mmtime_tag::__unnamed
{
  unsigned int ms;
  unsigned int sample;
  unsigned int cb;
  unsigned int ticks;
  mmtime_tag::__unnamed::__unnamed smpte;
  mmtime_tag::__unnamed::__unnamed midi;
};

/* 4410 */
struct mmtime_tag
{
  unsigned int wType;
  mmtime_tag::__unnamed u;
};

/* 4411 */
struct tagCHOOSECOLORW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HWND__ *hInstance;
  unsigned int rgbResult;
  unsigned int *lpCustColors;
  unsigned int Flags;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpTemplateName;
};

/* 4412 */
struct tagMCI_OVLY_WINDOW_PARMSW
{
  unsigned int dwCallback;
  HWND__ *hWnd;
  unsigned int nCmdShow;
  const unsigned __int16 *lpstrText;
};

/* 4413 */
struct _CERT_USAGE_MATCH
{
  unsigned int dwType;
  _CTL_USAGE Usage;
};

/* 4414 */
struct _CERT_CHAIN_PARA
{
  unsigned int cbSize;
  _CERT_USAGE_MATCH RequestedUsage;
};

/* 4415 */
struct IMarshal
{
  IUnknown baseclass_0;
};

/* 4416 */
struct IMarshal2
{
  IMarshal baseclass_0;
};

/* 4417 */
struct IClassFactory
{
  IUnknown baseclass_0;
};

/* 4418 */
struct ICallFactory
{
  IUnknown baseclass_0;
};

/* 4419 */
struct IRootStorage
{
  IUnknown baseclass_0;
};

/* 4420 */
struct IRowsetView
{
  IUnknown baseclass_0;
};

/* 4421 */
struct IXMLDSOControl
{
  IDispatch baseclass_0;
};

/* 4422 */
struct tagDEVNAMES
{
  unsigned __int16 wDriverOffset;
  unsigned __int16 wDeviceOffset;
  unsigned __int16 wOutputOffset;
  unsigned __int16 wDefault;
};

/* 4423 */
struct ITypeChangeEvents
{
  IUnknown baseclass_0;
};

/* 4424 */
struct IEnumOleUndoUnits
{
  IUnknown baseclass_0;
};

/* 4425 */
struct tagPSDW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  void *hDevMode;
  void *hDevNames;
  unsigned int Flags;
  tagPOINT ptPaperSize;
  tagRECT rtMinMargin;
  tagRECT rtMargin;
  HINSTANCE__ *hInstance;
  int lCustData;
  unsigned int (__stdcall *lpfnPageSetupHook)(HWND__ *, unsigned int, unsigned int, int);
  unsigned int (__stdcall *lpfnPagePaintHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpPageSetupTemplateName;
  void *hPageSetupTemplate;
};

/* 4426 */
struct IConnectionPointContainer
{
  IUnknown baseclass_0;
};

/* 4427 */
struct tagMIXERCONTROLDETAILS_LISTTEXTW
{
  unsigned int dwParam1;
  unsigned int dwParam2;
  unsigned __int16 szName[64];
};

/* 4428 */
struct _FSCTL_QUERY_FAT_BPB_BUFFER
{
  char First0x24BytesOfBootSector[36];
};

/* 4429 */
struct _DRIVER_INFO_6A
{
  unsigned int cVersion;
  char *pName;
  char *pEnvironment;
  char *pDriverPath;
  char *pDataFile;
  char *pConfigFile;
  char *pHelpFile;
  char *pDependentFiles;
  char *pMonitorName;
  char *pDefaultDataType;
  char *pszzPreviousNames;
  _FILETIME ftDriverDate;
  unsigned __int64 dwlDriverVersion;
  char *pszMfgName;
  char *pszOEMUrl;
  char *pszHardwareID;
  char *pszProvider;
};

/* 4430 */
struct AsyncIMultiQI
{
  IUnknown baseclass_0;
};

/* 4431 */
struct _tagBINDINFO
{
  unsigned int cbSize;
  unsigned __int16 *szExtraInfo;
  tagSTGMEDIUM stgmedData;
  unsigned int grfBindInfoF;
  unsigned int dwBindVerb;
  unsigned __int16 *szCustomVerb;
  unsigned int cbstgmedData;
  unsigned int dwOptions;
  unsigned int dwOptionsFlags;
  unsigned int dwCodePage;
  _SECURITY_ATTRIBUTES securityAttributes;
  _GUID iid;
  IUnknown *pUnk;
  unsigned int dwReserved;
};

/* 4432 */
#pragma pack(push, 1)
struct _ADMIN
{
  unsigned int UID;
  unsigned __int16 Level;
  char IP_S[16];
  char IP_E[16];
};
#pragma pack(pop)

/* 4433 */
struct _CERT_NAME_CONSTRAINTS_INFO
{
  unsigned int cPermittedSubtree;
  _CERT_GENERAL_SUBTREE *rgPermittedSubtree;
  unsigned int cExcludedSubtree;
  _CERT_GENERAL_SUBTREE *rgExcludedSubtree;
};

/* 4434 */
struct HMIDIOUT__
{
  int unused;
};

/* 4435 */
struct tagCLEANLOCALSTORAGE
{
  IUnknown *pInterface;
  void *pStorage;
  unsigned int flags;
};

/* 4436 */
struct IBindProtocol
{
  IUnknown baseclass_0;
};

/* 4437 */
struct IBinding
{
  IUnknown baseclass_0;
};

/* 4438 */
struct tagCALPOLESTR
{
  unsigned int cElems;
  unsigned __int16 **pElems;
};

/* 4439 */
struct _ACTRL_PROPERTY_ENTRYW
{
  unsigned __int16 *lpProperty;
  _ACTRL_ACCESS_ENTRY_LISTW *pAccessEntryList;
  unsigned int fListFlags;
};

/* 4440 */
struct _ACTRL_ALISTW
{
  unsigned int cEntries;
  _ACTRL_PROPERTY_ENTRYW *pPropertyAccessList;
};

/* 4441 */
struct UnifiedCharData
{
  char szName[16];
  char szBeforeCharName[20];
  unsigned int dwNewCID;
  unsigned int dwBeforeCID;
  __int16 sClass;
  char cLevel;
  char cOldServerGroupID;
};

/* 4442 */
struct _CERT_DSS_PARAMETERS
{
  _CRYPTOAPI_BLOB p;
  _CRYPTOAPI_BLOB q;
  _CRYPTOAPI_BLOB g;
};

/* 4443 */
struct _NCB
{
  char ncb_command;
  char ncb_retcode;
  char ncb_lsn;
  char ncb_num;
  char *ncb_buffer;
  unsigned __int16 ncb_length;
  char ncb_callname[16];
  char ncb_name[16];
  char ncb_rto;
  char ncb_sto;
  void (__stdcall *ncb_post)(_NCB *);
  char ncb_lana_num;
  char ncb_cmd_cplt;
  char ncb_reserve[10];
  void *ncb_event;
};

/* 4444 */
struct _CERT_CHAIN
{
  unsigned int cCerts;
  _CRYPTOAPI_BLOB *certs;
  _CRYPT_KEY_PROV_INFO keyLocatorInfo;
};

/* 4445 */
struct _CHANGER_ELEMENT_STATUS
{
  _CHANGER_ELEMENT Element;
  _CHANGER_ELEMENT SrcElementAddress;
  unsigned int Flags;
  unsigned int ExceptionCode;
  char TargetId;
  char Lun;
  unsigned __int16 Reserved;
  char PrimaryVolumeID[36];
  char AlternateVolumeID[36];
};

/* 4446 */
struct _READ_ELEMENT_ADDRESS_INFO
{
  unsigned int NumberOfElements;
  _CHANGER_ELEMENT_STATUS ElementStatus[1];
};

/* 4447 */
struct _CRYPT_KEY_SIGN_MESSAGE_PARA
{
  unsigned int cbSize;
  unsigned int dwMsgAndCertEncodingType;
  unsigned int hCryptProv;
  unsigned int dwKeySpec;
  _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  void *pvHashAuxInfo;
  _CRYPT_ALGORITHM_IDENTIFIER PubKeyAlgorithm;
};

/* 4448 */
struct IOleInPlaceObject
{
  IOleWindow baseclass_0;
};

/* 4449 */
struct IEnumConnections
{
  IUnknown baseclass_0;
};

/* 4450 */
struct tagCONNECTDATA
{
  IUnknown *pUnk;
  unsigned int dwCookie;
};

/* 4451 */
struct _CMSG_HASHED_ENCODE_INFO
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  void *pvHashAuxInfo;
};

/* 4452 */
struct _DRIVE_LAYOUT_INFORMATION
{
  unsigned int PartitionCount;
  unsigned int Signature;
  _PARTITION_INFORMATION PartitionEntry[1];
};

/* 4453 */
struct IRowsetIdentity
{
  IUnknown baseclass_0;
};

/* 4454 */
struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA
{
  unsigned int cbSize;
  unsigned int hCryptProv;
  unsigned int dwSignerIndex;
  unsigned int dwSignerType;
  void *pvSigner;
};

/* 4455 */
struct _ENCRYPTION_CERTIFICATE_HASH
{
  unsigned int cbTotalLength;
  _SID *pUserSid;
  _EFS_HASH_BLOB *pHash;
  unsigned __int16 *lpDisplayInformation;
};

/* 4456 */
struct _ENCRYPTION_CERTIFICATE_HASH_LIST
{
  unsigned int nCert_Hash;
  _ENCRYPTION_CERTIFICATE_HASH **pUsers;
};

/* 4457 */
struct DDEADVISE
{
  __int16 _bf0;
  __int16 cfFormat;
};

/* 4458 */
struct IXMLDOMElement
{
  IXMLDOMNode baseclass_0;
};

/* 4459 */
union tagRPC_EE_INFO_PARAM::__unnamed
{
  char *AnsiString;
  unsigned __int16 *UnicodeString;
  int LVal;
  __int16 SVal;
  unsigned __int64 PVal;
  tagBinaryParam BVal;
};

/* 4460 */
struct tagRPC_EE_INFO_PARAM
{
  tagExtendedErrorParamTypes ParameterType;
  tagRPC_EE_INFO_PARAM::__unnamed u;
};

/* 4461 */
struct tagStorageLayout
{
  unsigned int LayoutType;
  unsigned __int16 *pwcsElementName;
  _LARGE_INTEGER cOffset;
  _LARGE_INTEGER cBytes;
};

/* 4462 */
struct IProvideClassInfo
{
  IUnknown baseclass_0;
};

/* 4463 */
struct IProvideClassInfo2
{
  IProvideClassInfo baseclass_0;
};

/* 4464 */
struct _FORMAT_EX_PARAMETERS
{
  _MEDIA_TYPE MediaType;
  unsigned int StartCylinderNumber;
  unsigned int EndCylinderNumber;
  unsigned int StartHeadNumber;
  unsigned int EndHeadNumber;
  unsigned __int16 FormatGapLength;
  unsigned __int16 SectorsPerTrack;
  unsigned __int16 SectorNumber[1];
};

/* 4465 */
struct _MIDL_FORMAT_STRING
{
  __int16 Pad;
  char Format[];
};

/* 4466 */
struct tagMCI_ANIM_STEP_PARMS
{
  unsigned int dwCallback;
  unsigned int dwFrames;
};

/* 4467 */
struct _CERT_DH_PARAMETERS
{
  _CRYPTOAPI_BLOB p;
  _CRYPTOAPI_BLOB g;
};

/* 4468 */
struct IInternetSecurityManager
{
  IUnknown baseclass_0;
};

/* 4469 */
struct IInternetSecurityMgrSite
{
  IUnknown baseclass_0;
};

/* 4470 */
struct IPersistStreamInit
{
  IPersist baseclass_0;
};

/* 4471 */
struct _INHERITED_FROMA
{
  int GenerationGap;
  char *AncestorName;
};

/* 4472 */
#pragma pack(push, 1)
struct _HAN_AUTH
{
  char Num;
  unsigned __int16 Extra;
  unsigned int UID;
  char Dump;
};
#pragma pack(pop)

/* 4473 */
union _HAN_CONVERT
{
  unsigned __int64 iValue;
  _HAN_AUTH sValue;
};

/* 4474 */
struct ITrusteeGroupAdmin
{
  IUnknown baseclass_0;
};

/* 4475 */
struct _CERT_REVOCATION_STATUS
{
  unsigned int cbSize;
  unsigned int dwIndex;
  unsigned int dwError;
  unsigned int dwReason;
  int fHasFreshnessTime;
  unsigned int dwFreshnessTime;
};

/* 4476 */
struct tagMIXERLINECONTROLSA
{
  unsigned int cbStruct;
  unsigned int dwLineID;
  $476D211351DA30503E50D2F0E6E515B0 ___u2;
  unsigned int cControls;
  unsigned int cbmxctrl;
  tagMIXERCONTROLA *pamxctrl;
};

/* 4477 */
struct IXMLDOMComment
{
  IXMLDOMCharacterData baseclass_0;
};

/* 4478 */
struct tagCSPLATFORM
{
  unsigned int dwPlatformId;
  unsigned int dwVersionHi;
  unsigned int dwVersionLo;
  unsigned int dwProcessorArch;
};

/* 4479 */
struct tagQUERYCONTEXT
{
  unsigned int dwContext;
  tagCSPLATFORM Platform;
  unsigned int Locale;
  unsigned int dwVersionHi;
  unsigned int dwVersionLo;
};

/* 4480 */
struct _CERT_CHAIN_POLICY_STATUS
{
  unsigned int cbSize;
  unsigned int dwError;
  int lChainIndex;
  int lElementIndex;
  void *pvExtraPolicyStatus;
};

/* 4481 */
struct _CRYPT_PKCS8_EXPORT_PARAMS
{
  unsigned int hCryptProv;
  unsigned int dwKeySpec;
  char *pszPrivateKeyObjId;
  int (__stdcall *pEncryptPrivateKeyFunc)(_CRYPT_ALGORITHM_IDENTIFIER *, _CRYPTOAPI_BLOB *, char *, unsigned int *, void *);
  void *pVoidEncryptFunc;
};

/* 4482 */
struct tagMCI_GETDEVCAPS_PARMS
{
  unsigned int dwCallback;
  unsigned int dwReturn;
  unsigned int dwItem;
};

/* 4483 */
struct _tagHIT_LOGGING_INFO
{
  unsigned int dwStructSize;
  char *lpszLoggedUrlName;
  _SYSTEMTIME StartTime;
  _SYSTEMTIME EndTime;
  char *lpszExtendedInfo;
};

/* 4484 */
struct tagRPC_CALL_ATTRIBUTES_V1_W
{
  unsigned int Version;
  unsigned int Flags;
  unsigned int ServerPrincipalNameBufferLength;
  unsigned __int16 *ServerPrincipalName;
  unsigned int ClientPrincipalNameBufferLength;
  unsigned __int16 *ClientPrincipalName;
  unsigned int AuthenticationLevel;
  unsigned int AuthenticationService;
  int NullSession;
};

/* 4485 */
struct tagMCI_LOAD_PARMSW
{
  unsigned int dwCallback;
  const unsigned __int16 *lpfilename;
};

/* 4486 */
struct IErrorInfo
{
  IUnknown baseclass_0;
};

/* 4487 */
struct _RSAPUBKEY
{
  unsigned int magic;
  unsigned int bitlen;
  unsigned int pubexp;
};

/* 4488 */
struct _VERIFY_INFORMATION
{
  _LARGE_INTEGER StartingOffset;
  unsigned int Length;
};

/* 4489 */
struct _SESSION_BUFFER
{
  char lsn;
  char state;
  char local_name[16];
  char remote_name[16];
  char rcvs_outstanding;
  char sends_outstanding;
};

/* 4490 */
struct IOleLink
{
  IUnknown baseclass_0;
};

/* 4491 */
struct _CMSG_SP3_COMPATIBLE_AUX_INFO
{
  unsigned int cbSize;
  unsigned int dwFlags;
};

/* 4492 */
struct IOleCache
{
  IUnknown baseclass_0;
};

/* 4493 */
struct ITransactionDispenser
{
  IUnknown baseclass_0;
};

/* 4494 */
struct _CRYPT_PRIVATE_KEY_INFO
{
  unsigned int Version;
  _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
  _CRYPTOAPI_BLOB PrivateKey;
  _CRYPT_ATTRIBUTES *pAttributes;
};

/* 4495 */
struct _FLAG_STGMEDIUM
{
  int ContextFlags;
  int fPassOwnership;
  tagSTGMEDIUM Stgmed;
};

/* 4496 */
struct _PRINTER_INFO_9W
{
  _devicemodeW *pDevMode;
};

/* 4497 */
struct IViewObject2
{
  IViewObject baseclass_0;
};

/* 4498 */
struct IRunnableObject
{
  IUnknown baseclass_0;
};

/* 4499 */
struct tagDRVCONFIGINFO
{
  unsigned int dwDCISize;
  const unsigned __int16 *lpszDCISectionName;
  const unsigned __int16 *lpszDCIAliasName;
};

/* 4500 */
struct _FILE_PREFETCH
{
  unsigned int Type;
  unsigned int Count;
  unsigned __int64 Prefetch[1];
};

/* 4501 */
struct _CMSG_RC2_AUX_INFO
{
  unsigned int cbSize;
  unsigned int dwBitLen;
};

/* 4502 */
struct IMultiQI
{
  IUnknown baseclass_0;
};

/* 4503 */
struct _MIDL_STUBLESS_PROXY_INFO
{
  _MIDL_STUB_DESC *pStubDesc;
  const char *ProcFormatString;
  const unsigned __int16 *FormatStringOffset;
  _RPC_SYNTAX_IDENTIFIER *pTransferSyntax;
  unsigned int nCount;
  _MIDL_SYNTAX_INFO *pSyntaxInfo;
};

/* 4504 */
struct _GET_CHANGER_PARAMETERS
{
  unsigned int Size;
  unsigned __int16 NumberTransportElements;
  unsigned __int16 NumberStorageElements;
  unsigned __int16 NumberCleanerSlots;
  unsigned __int16 NumberIEElements;
  unsigned __int16 NumberDataTransferElements;
  unsigned __int16 NumberOfDoors;
  unsigned __int16 FirstSlotNumber;
  unsigned __int16 FirstDriveNumber;
  unsigned __int16 FirstTransportNumber;
  unsigned __int16 FirstIEPortNumber;
  unsigned __int16 FirstCleanerSlotAddress;
  unsigned __int16 MagazineSize;
  unsigned int DriveCleanTimeout;
  unsigned int Features0;
  unsigned int Features1;
  char MoveFromTransport;
  char MoveFromSlot;
  char MoveFromIePort;
  char MoveFromDrive;
  char ExchangeFromTransport;
  char ExchangeFromSlot;
  char ExchangeFromIePort;
  char ExchangeFromDrive;
  char LockUnlockCapabilities;
  char PositionCapabilities;
  char Reserved1[2];
  unsigned int Reserved2[2];
};

/* 4505 */
struct _PROPSHEETPAGEW_V1
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HINSTANCE__ *hInstance;
  $E93DF8936326ACA187BC53A1FCC7B851 ___u3;
  $652A26583FA38B82C7D68FD3BB1B6B71 ___u4;
  const unsigned __int16 *pszTitle;
  int (__stdcall *pfnDlgProc)(HWND__ *, unsigned int, unsigned int, int);
  int lParam;
  unsigned int (__stdcall *pfnCallback)(HWND__ *, unsigned int, _PROPSHEETPAGEW *);
  unsigned int *pcRefParent;
};

/* 4506 */
struct IXMLDOMDocumentType
{
  IXMLDOMNode baseclass_0;
};

/* 4507 */
struct IGetSession
{
  IUnknown baseclass_0;
};

/* 4508 */
struct _PERF_INSTANCE_DEFINITION
{
  unsigned int ByteLength;
  unsigned int ParentObjectTitleIndex;
  unsigned int ParentObjectInstance;
  int UniqueID;
  unsigned int NameOffset;
  unsigned int NameLength;
};

/* 4509 */
struct _PROVIDOR_INFO_2A
{
  char *pOrder;
};

/* 4510 */
struct HMIDISTRM__
{
  int unused;
};

/* 4511 */
struct _FRIEND
{
  unsigned int dwSize;
  char Data[2400];
  unsigned int dwInfoSize;
  char Info[700];
};

/* 4512 */
struct _CERT_NAME_VALUE
{
  unsigned int dwValueType;
  _CRYPTOAPI_BLOB Value;
};

/* 4513 */
struct _CPS_URLS
{
  unsigned __int16 *pszURL;
  _CRYPT_ALGORITHM_IDENTIFIER *pAlgorithm;
  _CRYPTOAPI_BLOB *pDigest;
};

/* 4514 */
struct IMessageFilter
{
  IUnknown baseclass_0;
};

/* 4515 */
struct _PROV_ENUMALGS
{
  unsigned int aiAlgid;
  unsigned int dwBitLen;
  unsigned int dwNameLen;
  char szName[20];
};

/* 4516 */
struct IAsyncManager
{
  IUnknown baseclass_0;
};

/* 4517 */
struct IReleaseMarshalBuffers
{
  IUnknown baseclass_0;
};

/* 4518 */
struct _CRL_ISSUING_DIST_POINT
{
  _CRL_DIST_POINT_NAME DistPointName;
  int fOnlyContainsUserCerts;
  int fOnlyContainsCACerts;
  _CRYPT_BIT_BLOB OnlySomeReasonFlags;
  int fIndirectCRL;
};

/* 4519 */
struct tagSTATDATA
{
  tagFORMATETC formatetc;
  unsigned int advf;
  IAdviseSink *pAdvSink;
  unsigned int dwConnection;
};

/* 4520 */
struct tagCRGB
{
  char bRed;
  char bGreen;
  char bBlue;
  char bExtra;
};

/* 4521 */
struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR
{
  unsigned __int16 *pwszName;
  unsigned __int16 *pwszValue;
};

/* 4522 */
struct IOleObject
{
  IUnknown baseclass_0;
};

/* 4523 */
struct tagRemHBITMAP
{
  unsigned int cbData;
  char data[1];
};

/* 4524 */
struct _INVEN
{
  unsigned int dwSize;
  char Data[5116];
};

/* 4525 */
struct _CMSG_RC4_AUX_INFO
{
  unsigned int cbSize;
  unsigned int dwBitLen;
};

/* 4526 */
struct _tagRemBINDINFO
{
  unsigned int cbSize;
  unsigned __int16 *szExtraInfo;
  unsigned int grfBindInfoF;
  unsigned int dwBindVerb;
  unsigned __int16 *szCustomVerb;
  unsigned int cbstgmedData;
  unsigned int dwOptions;
  unsigned int dwOptionsFlags;
  unsigned int dwCodePage;
  _REMSECURITY_ATTRIBUTES securityAttributes;
  _GUID iid;
  IUnknown *pUnk;
  unsigned int dwReserved;
};

/* 4527 */
struct IXMLHttpRequest
{
  IDispatch baseclass_0;
};

/* 4528 */
struct PktUnifiedCharSelectReq
{
  PktBase baseclass_0;
  char szPassword[33];
  char cSelectedServerGroupID;
  char cSelectedNation;
  unsigned int dwRequestKey;
  unsigned int dwUID;
  unsigned int dwCID[5];
};

/* 4529 */
struct tMIXERCONTROLDETAILS_BOOLEAN
{
  int fValue;
};

/* 4530 */
struct _CRYPT_CSP_PROVIDER
{
  unsigned int dwKeySpec;
  unsigned __int16 *pwszProviderName;
  _CRYPT_BIT_BLOB Signature;
};

/* 4531 */
struct _ADAPTER_STATUS
{
  char adapter_address[6];
  char rev_major;
  char reserved0;
  char adapter_type;
  char rev_minor;
  unsigned __int16 duration;
  unsigned __int16 frmr_recv;
  unsigned __int16 frmr_xmit;
  unsigned __int16 iframe_recv_err;
  unsigned __int16 xmit_aborts;
  unsigned int xmit_success;
  unsigned int recv_success;
  unsigned __int16 iframe_xmit_err;
  unsigned __int16 recv_buff_unavail;
  unsigned __int16 t1_timeouts;
  unsigned __int16 ti_timeouts;
  unsigned int reserved1;
  unsigned __int16 free_ncbs;
  unsigned __int16 max_cfg_ncbs;
  unsigned __int16 max_ncbs;
  unsigned __int16 xmit_buf_unavail;
  unsigned __int16 max_dgram_size;
  unsigned __int16 pending_sess;
  unsigned __int16 max_cfg_sess;
  unsigned __int16 max_sess;
  unsigned __int16 max_sess_pkt_size;
  unsigned __int16 name_count;
};

/* 4532 */
struct _CTL_ANY_SUBJECT_INFO
{
  _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
  _CRYPTOAPI_BLOB SubjectIdentifier;
};

/* 4533 */
struct _PRIVKEYVER3
{
  unsigned int magic;
  unsigned int bitlenP;
  unsigned int bitlenQ;
  unsigned int bitlenJ;
  unsigned int bitlenX;
  _DSSSEED DSSSeed;
};

/* 4534 */
struct _FORMAT_PARAMETERS
{
  _MEDIA_TYPE MediaType;
  unsigned int StartCylinderNumber;
  unsigned int EndCylinderNumber;
  unsigned int StartHeadNumber;
  unsigned int EndHeadNumber;
};

/* 4535 */
struct IViewSort
{
  IUnknown baseclass_0;
};

/* 4536 */
struct _CERT_NAME_INFO
{
  unsigned int cRDN;
  _CERT_RDN *rgRDN;
};

/* 4537 */
struct tagDB_NUMERIC
{
  char precision;
  char scale;
  char sign;
  char val[16];
};

/* 4538 */
struct _NDR_USER_MARSHAL_INFO
{
  unsigned int InformationLevel;
  _NDR_USER_MARSHAL_INFO_LEVEL1 Level1;
};

/* 4539 */
struct _RPC_PROTSEQ_VECTORA
{
  unsigned int Count;
  char *Protseq[1];
};

/* 4540 */
struct _CMSG_STREAM_INFO
{
  unsigned int cbContent;
  int (__stdcall *pfnStreamOutput)(const void *, char *, unsigned int, int);
  void *pvArg;
};

/* 4541 */
struct _DATATYPES_INFO_1W
{
  unsigned __int16 *pName;
};

/* 4542 */
struct _FIND_NAME_HEADER
{
  unsigned __int16 node_count;
  char reserved;
  char unique_group;
};

/* 4543 */
struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO
{
  unsigned int cbSize;
  _CMSG_SIGNED_ENCODE_INFO SignedInfo;
  _CMSG_ENVELOPED_ENCODE_INFO EnvelopedInfo;
};

/* 4544 */
struct _FIND_NAME_BUFFER
{
  char length;
  char access_control;
  char frame_control;
  char destination_addr[6];
  char source_addr[6];
  char routing_info[18];
};

/* 4545 */
struct _ACTION_HEADER
{
  unsigned int transport_id;
  unsigned __int16 action_code;
  unsigned __int16 reserved;
};

/* 4546 */
struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA
{
  unsigned int cbSize;
  unsigned int dwRegPolicySettings;
  _CMSG_SIGNER_INFO *pSignerInfo;
};

/* 4547 */
struct IOleCache2
{
  IOleCache baseclass_0;
};

/* 4548 */
struct ISynchronizeMutex
{
  ISynchronize baseclass_0;
};

/* 4549 */
struct tagSTATPROPSTG
{
  unsigned __int16 *lpwstrName;
  unsigned int propid;
  unsigned __int16 vt;
};

/* 4550 */
struct HMIDI__
{
  int unused;
};

/* 4551 */
struct tagHSZPAIR
{
  HSZ__ *hszSvc;
  HSZ__ *hszTopic;
};

/* 4552 */
struct ISessionProperties
{
  IUnknown baseclass_0;
};

/* 4553 */
union tagRPC_EXTENDED_ERROR_INFO::__unnamed
{
  _SYSTEMTIME SystemTime;
  _FILETIME FileTime;
};

/* 4554 */
struct tagRPC_EXTENDED_ERROR_INFO
{
  unsigned int Version;
  unsigned __int16 *ComputerName;
  unsigned int ProcessID;
  tagRPC_EXTENDED_ERROR_INFO::__unnamed u;
  unsigned int GeneratingComponent;
  unsigned int Status;
  unsigned __int16 DetectionLocation;
  unsigned __int16 Flags;
  int NumberOfParameters;
  tagRPC_EE_INFO_PARAM Parameters[4];
};

/* 4555 */
struct IOleInPlaceFrame
{
  IOleInPlaceUIWindow baseclass_0;
};

/* 4556 */
struct tagOleMenuGroupWidths
{
  int width[6];
};

/* 4557 */
struct _SEC_OBJECT_ELEMENT
{
  _GUID guidObjectType;
  tagDBID ObjectID;
};

/* 4558 */
struct HMIXER__
{
  int unused;
};

/* 4559 */
struct IAdviseSink2
{
  IAdviseSink baseclass_0;
};

/* 4560 */
struct IOleAdviseHolder
{
  IUnknown baseclass_0;
};

/* 4561 */
struct ICommandStream
{
  IUnknown baseclass_0;
};

/* 4562 */
struct _complex
{
  long double x;
  long double y;
};

/* 4563 */
struct tagMCI_OVLY_RECT_PARMS
{
  unsigned int dwCallback;
  tagRECT rc;
};

/* 4564 */
struct tagMCI_RECORD_PARMS
{
  unsigned int dwCallback;
  unsigned int dwFrom;
  unsigned int dwTo;
};

/* 4565 */
struct ITypeInfo2
{
  ITypeInfo baseclass_0;
};

/* 4566 */
struct XACTOPT
{
  unsigned int ulTimeout;
  char szDescription[40];
};

/* 4567 */
#pragma pack(push, 1)
struct _PARTY_DB_INFO
{
  _PARTY_INFO PartyInfo;
  _PARTY_USER_INFO PartyUserInfo;
};
#pragma pack(pop)

/* 4568 */
#pragma pack(push, 1)
struct _RE_USPCheckBilling_Login
{
  unsigned int Flag;
  char strBillingType[2];
  int PlayTime;
  unsigned int intCRMIndex1;
};
#pragma pack(pop)

/* 4569 */
struct tagINTERFACEDATA
{
  tagMETHODDATA *pmethdata;
  unsigned int cMembers;
};

/* 4570 */
struct IPersistPropertyBag2
{
  IPersist baseclass_0;
};

/* 4571 */
struct tagMCI_VD_PLAY_PARMS
{
  unsigned int dwCallback;
  unsigned int dwFrom;
  unsigned int dwTo;
  unsigned int dwSpeed;
};

/* 4572 */
struct _DRIVER_INFO_1W
{
  unsigned __int16 *pName;
};

/* 4573 */
struct _CRYPTPROTECT_PROMPTSTRUCT
{
  unsigned int cbSize;
  unsigned int dwPromptFlags;
  HWND__ *hwndApp;
  const unsigned __int16 *szPrompt;
};

/* 4574 */
struct OPENCARDNAME_EXW
{
  unsigned int dwStructSize;
  unsigned int hSCardContext;
  HWND__ *hwndOwner;
  unsigned int dwFlags;
  const unsigned __int16 *lpstrTitle;
  const unsigned __int16 *lpstrSearchDesc;
  HICON__ *hIcon;
  OPENCARD_SEARCH_CRITERIAW *pOpenCardSearchCriteria;
  unsigned int (__stdcall *lpfnConnect)(unsigned int, unsigned __int16 *, unsigned __int16 *, void *);
  void *pvUserData;
  unsigned int dwShareMode;
  unsigned int dwPreferredProtocols;
  unsigned __int16 *lpstrRdr;
  unsigned int nMaxRdr;
  unsigned __int16 *lpstrCard;
  unsigned int nMaxCard;
  unsigned int dwActiveProtocol;
  unsigned int hCardHandle;
};

/* 4575 */
struct IExternalConnection
{
  IUnknown baseclass_0;
};

/* 4576 */
struct IProvideMultipleClassInfo
{
  IProvideClassInfo2 baseclass_0;
};

/* 4577 */
struct _exception
{
  int type;
  char *name;
  long double arg1;
  long double arg2;
  long double retval;
};

/* 4578 */
struct HWAVE__
{
  int unused;
};

/* 4579 */
struct _DRIVER_INFO_2A
{
  unsigned int cVersion;
  char *pName;
  char *pEnvironment;
  char *pDriverPath;
  char *pDataFile;
  char *pConfigFile;
};

/* 4580 */
struct IXMLDOMParseError
{
  IDispatch baseclass_0;
};

/* 4581 */
#pragma pack(push, 1)
struct tagDBPARAMBINDINFO
{
  unsigned __int16 *pwszDataSourceType;
  unsigned __int16 *pwszName;
  unsigned int ulParamSize;
  unsigned int dwFlags;
  char bPrecision;
  char bScale;
};
#pragma pack(pop)

/* 4582 */
struct _CRYPT_SEQUENCE_OF_ANY
{
  unsigned int cValue;
  _CRYPTOAPI_BLOB *rgValue;
};

/* 4583 */
struct IMonikerProp
{
  IUnknown baseclass_0;
};

/* 4584 */
struct tagMIDIINCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int dwSupport;
};

/* 4585 */
struct IEnumVARIANT
{
  IUnknown baseclass_0;
};

/* 4586 */
struct tagMONCBSTRUCT
{
  unsigned int cb;
  unsigned int dwTime;
  void *hTask;
  unsigned int dwRet;
  unsigned int wType;
  unsigned int wFmt;
  HCONV__ *hConv;
  HSZ__ *hsz1;
  HSZ__ *hsz2;
  HDDEDATA__ *hData;
  unsigned int dwData1;
  unsigned int dwData2;
  tagCONVCONTEXT cc;
  unsigned int cbData;
  unsigned int Data[8];
};

/* 4587 */
struct _CRYPT_PKCS8_IMPORT_PARAMS
{
  _CRYPTOAPI_BLOB PrivateKey;
  int (__stdcall *pResolvehCryptProvFunc)(_CRYPT_PRIVATE_KEY_INFO *, unsigned int *, void *);
  void *pVoidResolveFunc;
  int (__stdcall *pDecryptPrivateKeyFunc)(_CRYPT_ALGORITHM_IDENTIFIER, _CRYPTOAPI_BLOB, char *, unsigned int *, void *);
  void *pVoidDecryptFunc;
};

/* 4588 */
struct _CRYPT_ENCRYPT_MESSAGE_PARA
{
  unsigned int cbSize;
  unsigned int dwMsgEncodingType;
  unsigned int hCryptProv;
  _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  void *pvEncryptionAuxInfo;
  unsigned int dwFlags;
  unsigned int dwInnerContentType;
};

/* 4589 */
struct ICommandPrepare
{
  IUnknown baseclass_0;
};

/* 4590 */
struct IBindStatusCallback
{
  IUnknown baseclass_0;
};

/* 4591 */
struct IRowChange
{
  IUnknown baseclass_0;
};

/* 4592 */
struct _CERT_SYSTEM_STORE_INFO
{
  unsigned int cbSize;
};

/* 4593 */
struct ICodeInstall
{
  IWindowForBindingUI baseclass_0;
};

/* 4594 */
struct IRegisterProvider
{
  IUnknown baseclass_0;
};

/* 4595 */
struct XMLDOMDocumentEvents
{
  IDispatch baseclass_0;
};

/* 4596 */
struct IEnumConnectionPoints
{
  IUnknown baseclass_0;
};

/* 4597 */
struct joyinfo_tag
{
  unsigned int wXpos;
  unsigned int wYpos;
  unsigned int wZpos;
  unsigned int wButtons;
};

/* 4598 */
struct _JOB_INFO_2W
{
  unsigned int JobId;
  unsigned __int16 *pPrinterName;
  unsigned __int16 *pMachineName;
  unsigned __int16 *pUserName;
  unsigned __int16 *pDocument;
  unsigned __int16 *pNotifyName;
  unsigned __int16 *pDatatype;
  unsigned __int16 *pPrintProcessor;
  unsigned __int16 *pParameters;
  unsigned __int16 *pDriverName;
  _devicemodeW *pDevMode;
  unsigned __int16 *pStatus;
  void *pSecurityDescriptor;
  unsigned int Status;
  unsigned int Priority;
  unsigned int Position;
  unsigned int StartTime;
  unsigned int UntilTime;
  unsigned int TotalPages;
  unsigned int Size;
  _SYSTEMTIME Submitted;
  unsigned int Time;
  unsigned int PagesPrinted;
};

/* 4599 */
struct ITransactionOutcomeEvents
{
  IUnknown baseclass_0;
};

/* 4600 */
struct _CHANGER_SEND_VOLUME_TAG_INFORMATION
{
  _CHANGER_ELEMENT StartingElement;
  unsigned int ActionCode;
  char VolumeIDTemplate[40];
};

/* 4601 */
struct tagMCI_SET_PARMS
{
  unsigned int dwCallback;
  unsigned int dwTimeFormat;
  unsigned int dwAudio;
};

/* 4602 */
struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA
{
  HKEY__ *hKeyBase;
  unsigned __int16 *pwszRegPath;
};

/* 4603 */
struct IDummyHICONIncluder
{
  IUnknown baseclass_0;
};

/* 4604 */
struct tagDBTIME
{
  unsigned __int16 hour;
  unsigned __int16 minute;
  unsigned __int16 second;
};

/* 4605 */
struct _EXCHANGE
{
  unsigned int dwSize;
  char Data[1280];
};

/* 4606 */
struct _PRINTER_INFO_3
{
  void *pSecurityDescriptor;
};

/* 4607 */
struct IRpcHelper
{
  IUnknown baseclass_0;
};

/* 4608 */
struct IAlterIndex
{
  IUnknown baseclass_0;
};

/* 4609 */
struct IBindResource
{
  IUnknown baseclass_0;
};

/* 4610 */
struct IAuthenticate
{
  IUnknown baseclass_0;
};

/* 4611 */
struct tagSTGOPTIONS
{
  unsigned __int16 usVersion;
  unsigned __int16 reserved;
  unsigned int ulSectorSize;
  const unsigned __int16 *pwcsTemplateFile;
};

/* 4612 */
struct IMalloc
{
  IUnknown baseclass_0;
};

/* 4613 */
struct NUMPARSE
{
  int cDig;
  unsigned int dwInFlags;
  unsigned int dwOutFlags;
  int cchUsed;
  int nBaseShift;
  int nPwr10;
};

/* 4614 */
struct _PERF_OBJECT_TYPE
{
  unsigned int TotalByteLength;
  unsigned int DefinitionLength;
  unsigned int HeaderLength;
  unsigned int ObjectNameTitleIndex;
  unsigned __int16 *ObjectNameTitle;
  unsigned int ObjectHelpTitleIndex;
  unsigned __int16 *ObjectHelpTitle;
  unsigned int DetailLevel;
  unsigned int NumCounters;
  int DefaultCounter;
  int NumInstances;
  unsigned int CodePage;
  _LARGE_INTEGER PerfTime;
  _LARGE_INTEGER PerfFreq;
};

/* 4615 */
struct IDBAsynchStatus
{
  IUnknown baseclass_0;
};

/* 4616 */
struct IForegroundTransfer
{
  IUnknown baseclass_0;
};

/* 4617 */
struct _tagPROTOCOLFILTERDATA
{
  unsigned int cbSize;
  IInternetProtocolSink *pProtocolSink;
  IInternetProtocol *pProtocol;
  IUnknown *pUnk;
  unsigned int dwFilterFlags;
};

/* 4618 */
struct _CERT_EXTENSIONS
{
  unsigned int cExtension;
  _CERT_EXTENSION *rgExtension;
};

/* 4619 */
struct _CMC_DATA_INFO
{
  unsigned int cTaggedAttribute;
  _CMC_TAGGED_ATTRIBUTE *rgTaggedAttribute;
  unsigned int cTaggedRequest;
  _CMC_TAGGED_REQUEST *rgTaggedRequest;
  unsigned int cTaggedContentInfo;
  _CMC_TAGGED_CONTENT_INFO *rgTaggedContentInfo;
  unsigned int cTaggedOtherMsg;
  _CMC_TAGGED_OTHER_MSG *rgTaggedOtherMsg;
};

/* 4620 */
struct HWAVEOUT__
{
  int unused;
};

/* 4621 */
struct tagOIFI
{
  unsigned int cb;
  int fMDIApp;
  HWND__ *hwndFrame;
  HACCEL__ *haccel;
  unsigned int cAccelEntries;
};

/* 4622 */
struct DDEDATA
{
  __int16 _bf0;
  __int16 cfFormat;
  char Value[1];
};

/* 4623 */
struct _CRYPT_DECODE_PARA
{
  unsigned int cbSize;
  void *(__stdcall *pfnAlloc)(unsigned int);
  void (__stdcall *pfnFree)(void *);
};

/* 4624 */
union $5C3AB022937A1F2AF38EB49A826521F4
{
  HWND__ *hwndOwner;
  unsigned int cMultipleItems;
};

/* 4625 */
struct tMIXERCONTROLDETAILS
{
  unsigned int cbStruct;
  unsigned int dwControlID;
  unsigned int cChannels;
  $5C3AB022937A1F2AF38EB49A826521F4 ___u3;
  unsigned int cbDetails;
  void *paDetails;
};

/* 4626 */
struct IXMLDOMText
{
  IXMLDOMCharacterData baseclass_0;
};

/* 4627 */
struct IXMLDOMCDATASection
{
  IXMLDOMText baseclass_0;
};

/* 4628 */
struct _EXTRA
{
  unsigned int dwSize;
  char Data[508];
};

/* 4629 */
struct tagWAVEINCAPS2W
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
  _GUID ManufacturerGuid;
  _GUID ProductGuid;
  _GUID NameGuid;
};

/* 4630 */
struct IEnumOLEVERB
{
  IUnknown baseclass_0;
};

/* 4631 */
struct AsyncIAdviseSink
{
  IUnknown baseclass_0;
};

/* 4632 */
struct AsyncIAdviseSink2
{
  AsyncIAdviseSink baseclass_0;
};

/* 4633 */
struct IRowsetNotify
{
  IUnknown baseclass_0;
};

/* 4634 */
struct ILockBytes
{
  IUnknown baseclass_0;
};

/* 4635 */
struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS
{
  unsigned int cbSize;
  int fCommercial;
};

/* 4636 */
struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO
{
  _CRYPT_ALGORITHM_IDENTIFIER EncryptionAlgorithm;
  _CRYPTOAPI_BLOB EncryptedPrivateKey;
};

/* 4637 */
struct IMultipleResults
{
  IUnknown baseclass_0;
};

/* 4638 */
struct _USER_MARSHAL_CB
{
  unsigned int Flags;
  _MIDL_STUB_MESSAGE *pStubMsg;
  const char *pReserve;
  unsigned int Signature;
  _USER_MARSHAL_CB_TYPE CBType;
  const char *pFormat;
  const char *pTypeFormat;
};

/* 4639 */
struct IRowsetUpdate
{
  IRowsetChange baseclass_0;
};

/* 4640 */
struct OPENCARDNAMEA
{
  unsigned int dwStructSize;
  HWND__ *hwndOwner;
  unsigned int hSCardContext;
  char *lpstrGroupNames;
  unsigned int nMaxGroupNames;
  char *lpstrCardNames;
  unsigned int nMaxCardNames;
  _GUID *rgguidInterfaces;
  unsigned int cguidInterfaces;
  char *lpstrRdr;
  unsigned int nMaxRdr;
  char *lpstrCard;
  unsigned int nMaxCard;
  const char *lpstrTitle;
  unsigned int dwFlags;
  void *pvUserData;
  unsigned int dwShareMode;
  unsigned int dwPreferredProtocols;
  unsigned int dwActiveProtocol;
  unsigned int (__stdcall *lpfnConnect)(unsigned int, char *, char *, void *);
  int (__stdcall *lpfnCheck)(unsigned int, unsigned int, void *);
  void (__stdcall *lpfnDisconnect)(unsigned int, unsigned int, void *);
  unsigned int hCardHandle;
};

/* 4641 */
struct _PERF_COUNTER_BLOCK
{
  unsigned int ByteLength;
};

/* 4642 */
struct IColumnsInfo2
{
  IColumnsInfo baseclass_0;
};

/* 4643 */
struct IErrorRecords
{
  IUnknown baseclass_0;
};

/* 4644 */
union $47EB8F0D2329C8A22424B82AF83D9347
{
  SCARD_T0_COMMAND CmdBytes;
  char rgbHeader[5];
};

/* 4645 */
struct SCARD_T0_REQUEST
{
  _SCARD_IO_REQUEST ioRequest;
  char bSw1;
  char bSw2;
  $47EB8F0D2329C8A22424B82AF83D9347 ___u3;
};

/* 4646 */
struct ICatalogFileInfo
{
  IUnknown baseclass_0;
};

/* 4647 */
struct IRowsetChapterMember
{
  IUnknown baseclass_0;
};

/* 4648 */
struct IRowsetResynch
{
  IUnknown baseclass_0;
};

/* 4649 */
struct RPC_CLIENT_INFORMATION1
{
  char *UserName;
  char *ComputerName;
  unsigned __int16 Privilege;
  unsigned int AuthFlags;
};

/* 4650 */
struct IBlockingLock
{
  IUnknown baseclass_0;
};

/* 4651 */
struct _CHANGER_SET_POSITION
{
  _CHANGER_ELEMENT Transport;
  _CHANGER_ELEMENT Destination;
  char Flip;
};

/* 4652 */
struct ICreateTypeInfo
{
  IUnknown baseclass_0;
};

/* 4653 */
struct ITimeAndNoticeControl
{
  IUnknown baseclass_0;
};

/* 4654 */
struct ITransactionJoin
{
  IUnknown baseclass_0;
};

/* 4655 */
struct tagI_RpcProxyCallbackInterface
{
  int (__stdcall *IsValidMachineFn)(char *, char *, unsigned int);
  int (__stdcall *GetClientAddressFn)(void *, char *, unsigned int *);
  int (__stdcall *GetConnectionTimeoutFn)(unsigned int *);
};

/* 4656 */
struct _tagStartParam
{
  _GUID iid;
  IBindCtx *pIBindCtx;
  IUnknown *pItf;
};

/* 4657 */
struct tagExtentInfo
{
  unsigned int cb;
  unsigned int dwExtentMode;
  tagSIZE sizelProposed;
};

/* 4658 */
struct _DEVICE_MEDIA_INFO::__unnamed::__unnamed::__unnamed::__unnamed
{
  char MediumType;
  char DensityCode;
};

/* 4659 */
union _DEVICE_MEDIA_INFO::__unnamed::__unnamed::__unnamed
{
  _DEVICE_MEDIA_INFO::__unnamed::__unnamed::__unnamed::__unnamed ScsiInformation;
};

/* 4660 */
struct _STORE
{
  unsigned int dwSize;
  char Data[7296];
};

/* 4661 */
struct tagPDEXW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  void *hDevMode;
  void *hDevNames;
  HDC__ *hDC;
  unsigned int Flags;
  unsigned int Flags2;
  unsigned int ExclusionFlags;
  unsigned int nPageRanges;
  unsigned int nMaxPageRanges;
  tagPRINTPAGERANGE *lpPageRanges;
  unsigned int nMinPage;
  unsigned int nMaxPage;
  unsigned int nCopies;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpPrintTemplateName;
  IUnknown *lpCallback;
  unsigned int nPropertyPages;
  _PSP **lphPropertyPages;
  unsigned int nStartPage;
  unsigned int dwResultAction;
};

/* 4662 */
struct AsyncIUnknown
{
  IUnknown baseclass_0;
};

/* 4663 */
struct IEnumFORMATETC
{
  IUnknown baseclass_0;
};

/* 4664 */
struct _tagCODEBASEHOLD
{
  unsigned int cbSize;
  unsigned __int16 *szDistUnit;
  unsigned __int16 *szCodeBase;
  unsigned int dwVersionMS;
  unsigned int dwVersionLS;
  unsigned int dwStyle;
};

/* 4665 */
struct IOleInPlaceObjectWindowless
{
  IOleInPlaceObject baseclass_0;
};

/* 4666 */
struct tagDBDATE
{
  __int16 year;
  unsigned __int16 month;
  unsigned __int16 day;
};

/* 4667 */
struct _PRINTER_INFO_2W
{
  unsigned __int16 *pServerName;
  unsigned __int16 *pPrinterName;
  unsigned __int16 *pShareName;
  unsigned __int16 *pPortName;
  unsigned __int16 *pDriverName;
  unsigned __int16 *pComment;
  unsigned __int16 *pLocation;
  _devicemodeW *pDevMode;
  unsigned __int16 *pSepFile;
  unsigned __int16 *pPrintProcessor;
  unsigned __int16 *pDatatype;
  unsigned __int16 *pParameters;
  void *pSecurityDescriptor;
  unsigned int Attributes;
  unsigned int Priority;
  unsigned int DefaultPriority;
  unsigned int StartTime;
  unsigned int UntilTime;
  unsigned int Status;
  unsigned int cJobs;
  unsigned int AveragePPM;
};

/* 4668 */
struct _CRYPT_URL_INFO
{
  unsigned int cbSize;
  unsigned int dwSyncDeltaTime;
  unsigned int cGroup;
  unsigned int *rgcGroupEntry;
};

/* 4669 */
struct IXMLDOMProcessingInstruction
{
  IXMLDOMNode baseclass_0;
};

/* 4670 */
#pragma pack(push, 1)
struct UnifiedStoreInfo
{
  char cOldServerGroupID;
  char Password[5];
  unsigned int Flag;
  unsigned int Gold;
};
#pragma pack(pop)

/* 4671 */
struct ISurrogateService
{
  IUnknown baseclass_0;
};

/* 4672 */
struct IProcessLock
{
  IUnknown baseclass_0;
};

/* 4673 */
struct IFontEventsDisp
{
  IDispatch baseclass_0;
};

/* 4674 */
struct tagMONLINKSTRUCT
{
  unsigned int cb;
  unsigned int dwTime;
  void *hTask;
  int fEstablished;
  int fNoData;
  HSZ__ *hszSvc;
  HSZ__ *hszTopic;
  HSZ__ *hszItem;
  unsigned int wFmt;
  int fServer;
  HCONV__ *hConvServer;
  HCONV__ *hConvClient;
};

/* 4675 */
struct RPC_IF_ID_VECTOR
{
  unsigned int Count;
  _RPC_IF_ID *IfId[1];
};

/* 4676 */
struct _RPC_CLIENT_INTERFACE
{
  unsigned int Length;
  _RPC_SYNTAX_IDENTIFIER InterfaceId;
  _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  RPC_DISPATCH_TABLE *DispatchTable;
  unsigned int RpcProtseqEndpointCount;
  _RPC_PROTSEQ_ENDPOINT *RpcProtseqEndpoint;
  unsigned int Reserved;
  const void *InterpreterInfo;
  unsigned int Flags;
};

/* 4677 */
struct IAccessor
{
  IUnknown baseclass_0;
};

/* 4678 */
struct _CTL_USAGE_MATCH
{
  unsigned int dwType;
  _CTL_USAGE Usage;
};

/* 4679 */
struct ISecurityInfo
{
  IUnknown baseclass_0;
};

/* 4680 */
struct DDEACK
{
  __int16 _bf0;
};

/* 4681 */
struct _RPC_BINDING_VECTOR
{
  unsigned int Count;
  void *BindingH[1];
};

/* 4682 */
struct RPC_IMPORT_CONTEXT_P
{
  void *LookupContext;
  void *ProposedHandle;
  _RPC_BINDING_VECTOR *Bindings;
};

/* 4683 */
struct IOleParentUndoUnit
{
  IOleUndoUnit baseclass_0;
};

/* 4684 */
struct IRowsetRefresh
{
  IUnknown baseclass_0;
};

/* 4685 */
struct ICreateRow
{
  IUnknown baseclass_0;
};

/* 4686 */
struct tagMCI_ANIM_PLAY_PARMS
{
  unsigned int dwCallback;
  unsigned int dwFrom;
  unsigned int dwTo;
  unsigned int dwSpeed;
};

/* 4687 */
struct IChapteredRowset
{
  IUnknown baseclass_0;
};

/* 4688 */
struct IGlobalInterfaceTable
{
  IUnknown baseclass_0;
};

/* 4689 */
struct IDirectWriterLock
{
  IUnknown baseclass_0;
};

/* 4690 */
struct SCARD_READERSTATEW
{
  const unsigned __int16 *szReader;
  void *pvUserData;
  unsigned int dwCurrentState;
  unsigned int dwEventState;
  unsigned int cbAtr;
  char rgbAtr[36];
};

/* 4691 */
struct tagContextProperty
{
  _GUID policyId;
  unsigned int flags;
  IUnknown *pUnk;
};

/* 4692 */
#pragma pack(push, 1)
struct __declspec(align(2)) PktUnifiedCharInfo
{
  PktBase baseclass_0;
  unsigned int dwUID;
  char cStoreInfoNum;
  char cCharDataNum;
  char cRestrictedPart1ToPart2Level;
  char cRemainCharTransferCount;
  USER_INFO userInfo;
  UnifiedStoreInfo unifiedStoreInfo[10];
  UnifiedCharData unifiedCharData[30];
};
#pragma pack(pop)

/* 4693 */
struct tagDBTIMESTAMP
{
  __int16 year;
  unsigned __int16 month;
  unsigned __int16 day;
  unsigned __int16 hour;
  unsigned __int16 minute;
  unsigned __int16 second;
  unsigned int fraction;
};

/* 4694 */
struct ILayoutStorage
{
  IUnknown baseclass_0;
};

/* 4695 */
struct _tagDATAINFO
{
  unsigned int ulTotalSize;
  unsigned int ulavrPacketSize;
  unsigned int ulConnectSpeed;
  unsigned int ulProcessorSpeed;
};

/* 4696 */
struct ICommand
{
  IUnknown baseclass_0;
};

/* 4697 */
struct IXMLDocument
{
  IDispatch baseclass_0;
};

/* 4698 */
struct IXMLElement
{
  IDispatch baseclass_0;
};

/* 4699 */
struct UDATE
{
  _SYSTEMTIME st;
  unsigned __int16 wDayOfYear;
};

/* 4700 */
struct _DISK_LOGGING
{
  char Function;
  void *BufferAddress;
  unsigned int BufferSize;
};

/* 4701 */
struct IConvertType
{
  IUnknown baseclass_0;
};

/* 4702 */
struct CONFIRMSAFETY
{
  _GUID clsid;
  IUnknown *pUnk;
  unsigned int dwFlags;
};

/* 4703 */
struct tagAspectInfo
{
  unsigned int cb;
  unsigned int dwFlags;
};

/* 4704 */
struct IXMLDocument2
{
  IDispatch baseclass_0;
};

/* 4705 */
struct ICreateTypeInfo2
{
  ICreateTypeInfo baseclass_0;
};

/* 4706 */
struct IViewFilter
{
  IUnknown baseclass_0;
};

/* 4707 */
struct IRowsetLocate
{
  IRowset baseclass_0;
};

/* 4708 */
struct IRowsetScroll
{
  IRowsetLocate baseclass_0;
};

/* 4709 */
struct _CERT_POLICY95_QUALIFIER1
{
  unsigned __int16 *pszPracticesReference;
  char *pszNoticeIdentifier;
  char *pszNSINoticeIdentifier;
  unsigned int cCPSURLs;
  _CPS_URLS *rgCPSURLs;
};

/* 4710 */
struct IViewObjectEx
{
  IViewObject2 baseclass_0;
};

/* 4711 */
struct tagMCI_INFO_PARMSA
{
  unsigned int dwCallback;
  char *lpstrReturn;
  unsigned int dwRetSize;
};

/* 4712 */
struct IFillLockBytes
{
  IUnknown baseclass_0;
};

/* 4713 */
struct IColumnsRowset
{
  IUnknown baseclass_0;
};

/* 4714 */
union $5499CBCE90D104B09BDC64E231339B46
{
  HKEY__ *hKeyBase;
  void *pvBase;
};

/* 4715 */
union $644E3772CE471009796AF877D4363EF9
{
  void *pvSystemStore;
  const char *pszSystemStore;
  const unsigned __int16 *pwszSystemStore;
};

/* 4716 */
struct _CERT_SYSTEM_STORE_RELOCATE_PARA
{
  $5499CBCE90D104B09BDC64E231339B46 ___u0;
  $644E3772CE471009796AF877D4363EF9 ___u1;
};

/* 4717 */
struct IInternetSession
{
  IUnknown baseclass_0;
};

/* 4718 */
struct IRowSchemaChange
{
  IRowChange baseclass_0;
};

/* 4719 */
struct IXMLDOMImplementation
{
  IDispatch baseclass_0;
};

/* 4720 */
struct _DISK_PERFORMANCE
{
  _LARGE_INTEGER BytesRead;
  _LARGE_INTEGER BytesWritten;
  _LARGE_INTEGER ReadTime;
  _LARGE_INTEGER WriteTime;
  _LARGE_INTEGER IdleTime;
  unsigned int ReadCount;
  unsigned int WriteCount;
  unsigned int QueueDepth;
  unsigned int SplitCount;
  _LARGE_INTEGER QueryTime;
  unsigned int StorageDeviceNumber;
  unsigned __int16 StorageManagerName[8];
};

/* 4721 */
#pragma pack(push, 1)
struct CHAR_CREATE_DB
{
  unsigned int dwUID;
  unsigned int dwSlotPos;
  char szName[16];
  char cSex;
  char cHair;
  char cFace;
  char cRace;
  __int16 sClass;
  unsigned int dwGold;
  __int16 sSTR;
  __int16 sDEX;
  __int16 sCON;
  __int16 sINT;
  __int16 sWIS;
  float fPointX;
  float fPointY;
  float fPointZ;
  unsigned __int16 Equip[15];
  SKILL skill;
  char cServerGroupID;
  int dwCID_Out;
};
#pragma pack(pop)

/* 4722 */
struct _MIDL_SERVER_INFO_
{
  _MIDL_STUB_DESC *pStubDesc;
  int (__stdcall *const *DispatchTable)();
  const char *ProcString;
  const unsigned __int16 *FmtStringOffset;
  void (__stdcall *const *ThunkTable)(_MIDL_STUB_MESSAGE *);
  _RPC_SYNTAX_IDENTIFIER *pTransferSyntax;
  unsigned int nCount;
  _MIDL_SYNTAX_INFO *pSyntaxInfo;
};

/* 4723 */
union $CBDF26DEDED3E9DC12C57AC677A7070E
{
  void *Provider;
  unsigned int Reserved1;
};

/* 4724 */
struct _ACTRL_OVERLAPPED
{
  $CBDF26DEDED3E9DC12C57AC677A7070E ___u0;
  unsigned int Reserved2;
  void *hEvent;
};

/* 4725 */
struct IProgressNotify
{
  IUnknown baseclass_0;
};

/* 4726 */
struct _xml_error
{
  unsigned int _nLine;
  unsigned __int16 *_pchBuf;
  unsigned int _cchBuf;
  unsigned int _ich;
  unsigned __int16 *_pszFound;
  unsigned __int16 *_pszExpected;
  unsigned int _reserved1;
  unsigned int _reserved2;
};

/* 4727 */
struct ICommandText
{
  ICommand baseclass_0;
};

/* 4728 */
struct DDEPOKE
{
  __int16 _bf0;
  __int16 cfFormat;
  char Value[1];
};

/* 4729 */
struct DDELN
{
  __int16 _bf0;
  __int16 cfFormat;
};

/* 4730 */
struct DDEUP
{
  __int16 _bf0;
  __int16 cfFormat;
  char rgb[1];
};

/* 4731 */
struct RPC_STATS_VECTOR
{
  unsigned int Count;
  unsigned int Stats[1];
};

/* 4732 */
struct tagRemSNB
{
  unsigned int ulCntStr;
  unsigned int ulCntChar;
  unsigned __int16 rgString[1];
};

/* 4733 */
struct _PUBLICKEYSTRUC
{
  char bType;
  char bVersion;
  unsigned __int16 reserved;
  unsigned int aiKeyAlg;
};

/* 4734 */
struct IRpcChannelBuffer2
{
  IRpcChannelBuffer baseclass_0;
};

/* 4735 */
struct AsyncIPipeByte
{
  IUnknown baseclass_0;
};

/* 4736 */
struct IOplockStorage
{
  IUnknown baseclass_0;
};

/* 4737 */
struct IEnumContextProps
{
  IUnknown baseclass_0;
};

/* 4738 */
struct IPrintDialogCallback
{
  IUnknown baseclass_0;
};

/* 4739 */
struct IRpcChannelBuffer3
{
  IRpcChannelBuffer2 baseclass_0;
};

/* 4740 */
struct IPipeByte
{
  IUnknown baseclass_0;
};

/* 4741 */
struct IAddrTrackingControl
{
  IUnknown baseclass_0;
};

/* 4742 */
struct IXTLRuntime
{
  IXMLDOMNode baseclass_0;
};

/* 4743 */
struct IClassFactory2
{
  IClassFactory baseclass_0;
};

/* 4744 */
struct IPictureDisp
{
  IDispatch baseclass_0;
};

/* 4745 */
struct IGetDataSource
{
  IUnknown baseclass_0;
};

/* 4746 */
struct IRpcSyntaxNegotiate
{
  IUnknown baseclass_0;
};

/* 4747 */
struct ISynchronizeContainer
{
  IUnknown baseclass_0;
};

/* 4748 */
struct IHttpSecurity
{
  IWindowForBindingUI baseclass_0;
};

/* 4749 */
struct IScopedOperations
{
  IBindResource baseclass_0;
};

/* 4750 */
struct ICommandWithParameters
{
  IUnknown baseclass_0;
};

/* 4751 */
struct tagDBPARAMINFO
{
  unsigned int dwFlags;
  unsigned int iOrdinal;
  unsigned __int16 *pwszName;
  ITypeInfo *pTypeInfo;
  unsigned int ulParamSize;
  unsigned __int16 wType;
  char bPrecision;
  char bScale;
};

/* 4752 */
struct tagMCI_ANIM_UPDATE_PARMS
{
  unsigned int dwCallback;
  tagRECT rc;
  HDC__ *hDC;
};

/* 4753 */
struct IRowsetFind
{
  IUnknown baseclass_0;
};

/* 4754 */
struct IXMLDOMNotation
{
  IXMLDOMNode baseclass_0;
};

/* 4755 */
struct IMDDataset
{
  IUnknown baseclass_0;
};

/* 4756 */
struct IXMLDOMEntity
{
  IXMLDOMNode baseclass_0;
};

/* 4757 */
struct _CRYPT_KEY_VERIFY_MESSAGE_PARA
{
  unsigned int cbSize;
  unsigned int dwMsgEncodingType;
  unsigned int hCryptProv;
};

/* 4758 */
struct IRowPosition
{
  IUnknown baseclass_0;
};

/* 4759 */
struct IObjectAccessControl
{
  IUnknown baseclass_0;
};

/* 4760 */
struct _SEC_OBJECT
{
  unsigned int cObjects;
  _SEC_OBJECT_ELEMENT *prgObjects;
};

/* 4761 */
struct IAsyncRpcChannelBuffer
{
  IRpcChannelBuffer2 baseclass_0;
};

/* 4762 */
struct IThumbnailExtractor
{
  IUnknown baseclass_0;
};

/* 4763 */
struct _CERT_CHAIN_ENGINE_CONFIG
{
  unsigned int cbSize;
  void *hRestrictedRoot;
  void *hRestrictedTrust;
  void *hRestrictedOther;
  unsigned int cAdditionalStore;
  void **rghAdditionalStore;
  unsigned int dwFlags;
  unsigned int dwUrlRetrievalTimeout;
  unsigned int MaximumCachedCertificates;
  unsigned int CycleDetectionModulus;
};

/* 4764 */
struct IDBInfo
{
  IUnknown baseclass_0;
};

/* 4765 */
struct AsyncIPipeLong
{
  IUnknown baseclass_0;
};

/* 4766 */
struct PktUnifiedCharSelectAck
{
  PktBase baseclass_0;
  unsigned int dwUID;
  unsigned int dwRequestKey;
};

/* 4767 */
struct ITypeFactory
{
  IUnknown baseclass_0;
};

/* 4768 */
struct IViewChapter
{
  IUnknown baseclass_0;
};

/* 4769 */
struct IInternetHostSecurityManager
{
  IUnknown baseclass_0;
};

/* 4770 */
union _GDI_NONREMOTE::__MIDL_IWinTypes_0002
{
  int hInproc;
  _DWORD_BLOB *hRemote;
};

/* 4771 */
struct _GDI_NONREMOTE
{
  int fContext;
  _GDI_NONREMOTE::__MIDL_IWinTypes_0002 u;
};

/* 4772 */
struct ICreateErrorInfo
{
  IUnknown baseclass_0;
};

/* 4773 */
struct IMDRangeRowset
{
  IUnknown baseclass_0;
};

/* 4774 */
struct ITransactionObject
{
  IUnknown baseclass_0;
};

/* 4775 */
struct IInternalUnknown
{
  IUnknown baseclass_0;
};

/* 4776 */
struct IRowPositionChange
{
  IUnknown baseclass_0;
};

/* 4777 */
struct ICommandPersist
{
  IUnknown baseclass_0;
};

/* 4778 */
struct IROTData
{
  IUnknown baseclass_0;
};

/* 4779 */
struct HMIXEROBJ__
{
  int unused;
};

/* 4780 */
struct IIndexDefinition
{
  IUnknown baseclass_0;
};

/* 4781 */
struct IXMLError
{
  IUnknown baseclass_0;
};

/* 4782 */
struct ISoftDistExt
{
  IUnknown baseclass_0;
};

/* 4783 */
struct IXMLAttribute
{
  IDispatch baseclass_0;
};

/* 4784 */
struct sGuildData
{
  char m_cNation;
  char m_szName[16];
};

/* 4785 */
struct IErrorLookup
{
  IUnknown baseclass_0;
};

/* 4786 */
struct IPipeLong
{
  IUnknown baseclass_0;
};

/* 4787 */
struct ITableDefinitionWithConstraints
{
  ITableCreation baseclass_0;
};

/* 4788 */
struct IDBAsynchNotify
{
  IUnknown baseclass_0;
};

/* 4789 */
struct IPipeDouble
{
  IUnknown baseclass_0;
};

/* 4790 */
struct tagTRACKMOUSEEVENT
{
  unsigned int cbSize;
  unsigned int dwFlags;
  HWND__ *hwndTrack;
  unsigned int dwHoverTime;
};

/* 4791 */
struct tagKBDLLHOOKSTRUCT
{
  unsigned int vkCode;
  unsigned int scanCode;
  unsigned int flags;
  unsigned int time;
  unsigned int dwExtraInfo;
};

/* 4792 */
struct tagDESIGNVECTOR
{
  unsigned int dvReserved;
  unsigned int dvNumAxes;
  int dvValues[16];
};

/* 4793 */
struct tagENUMLOGFONTEXDVA
{
  tagENUMLOGFONTEXA elfEnumLogfontEx;
  tagDESIGNVECTOR elfDesignVector;
};

/* 4794 */
struct tagACTCTXA
{
  unsigned int cbSize;
  unsigned int dwFlags;
  const char *lpSource;
  unsigned __int16 wProcessorArchitecture;
  unsigned __int16 wLangId;
  const char *lpAssemblyDirectory;
  const char *lpResourceName;
  const char *lpApplicationName;
  HINSTANCE__ *hModule;
};

/* 4795 */
struct tagACTCTXW
{
  unsigned int cbSize;
  unsigned int dwFlags;
  const unsigned __int16 *lpSource;
  unsigned __int16 wProcessorArchitecture;
  unsigned __int16 wLangId;
  const unsigned __int16 *lpAssemblyDirectory;
  const unsigned __int16 *lpResourceName;
  const unsigned __int16 *lpApplicationName;
  HINSTANCE__ *hModule;
};

/* 4796 */
struct tagMSLLHOOKSTRUCT
{
  tagPOINT pt;
  unsigned int mouseData;
  unsigned int flags;
  unsigned int time;
  unsigned int dwExtraInfo;
};

/* 4797 */
struct tagAXISINFOA
{
  int axMinValue;
  int axMaxValue;
  char axAxisName[16];
};

/* 4798 */
struct tagAXESLISTA
{
  unsigned int axlReserved;
  unsigned int axlNumAxes;
  tagAXISINFOA axlAxisInfo[16];
};

/* 4799 */
struct tagENUMTEXTMETRICA
{
  tagNEWTEXTMETRICEXA etmNewTextMetricEx;
  tagAXESLISTA etmAxesList;
};

/* 4800 */
struct _ACTIVATION_CONTEXT_BASIC_INFORMATION
{
  void *hActCtx;
  unsigned int dwFlags;
};

/* 4801 */
struct tagMOUSEINPUT
{
  int dx;
  int dy;
  unsigned int mouseData;
  unsigned int dwFlags;
  unsigned int time;
  unsigned int dwExtraInfo;
};

/* 4802 */
struct tagKEYBDINPUT
{
  unsigned __int16 wVk;
  unsigned __int16 wScan;
  unsigned int dwFlags;
  unsigned int time;
  unsigned int dwExtraInfo;
};

/* 4803 */
struct tagHARDWAREINPUT
{
  unsigned int uMsg;
  unsigned __int16 wParamL;
  unsigned __int16 wParamH;
};

/* 4804 */
union $4A59F91A1B5ABA9657042F57547A05B1
{
  tagMOUSEINPUT mi;
  tagKEYBDINPUT ki;
  tagHARDWAREINPUT hi;
};

/* 4805 */
struct tagINPUT
{
  unsigned int type;
  $4A59F91A1B5ABA9657042F57547A05B1 ___u1;
};

/* 4806 */
struct tagWCRANGE
{
  unsigned __int16 wcLow;
  unsigned __int16 cGlyphs;
};

/* 4807 */
struct tagAXISINFOW
{
  int axMinValue;
  int axMaxValue;
  unsigned __int16 axAxisName[16];
};

/* 4808 */
struct tagAXESLISTW
{
  unsigned int axlReserved;
  unsigned int axlNumAxes;
  tagAXISINFOW axlAxisInfo[16];
};

/* 4809 */
struct tagACTCTX_SECTION_KEYED_DATA_2600
{
  unsigned int cbSize;
  unsigned int ulDataFormatVersion;
  void *lpData;
  unsigned int ulLength;
  void *lpSectionGlobalData;
  unsigned int ulSectionGlobalDataLength;
  void *lpSectionBase;
  unsigned int ulSectionTotalLength;
  void *hActCtx;
  unsigned int ulAssemblyRosterIndex;
};

/* 4810 */
struct tagENUMLOGFONTEXDVW
{
  tagENUMLOGFONTEXW elfEnumLogfontEx;
  tagDESIGNVECTOR elfDesignVector;
};

/* 4811 */
struct tagENUMTEXTMETRICW
{
  tagNEWTEXTMETRICEXW etmNewTextMetricEx;
  tagAXESLISTW etmAxesList;
};

/* 4812 */
struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA
{
  void *lpInformation;
  void *lpSectionBase;
  unsigned int ulSectionLength;
  void *lpSectionGlobalDataBase;
  unsigned int ulSectionGlobalDataLength;
};

/* 4813 */
struct tagACTCTX_SECTION_KEYED_DATA
{
  unsigned int cbSize;
  unsigned int ulDataFormatVersion;
  void *lpData;
  unsigned int ulLength;
  void *lpSectionGlobalData;
  unsigned int ulSectionGlobalDataLength;
  void *lpSectionBase;
  unsigned int ulSectionTotalLength;
  void *hActCtx;
  unsigned int ulAssemblyRosterIndex;
  unsigned int ulFlags;
  tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
};

/* 4814 */
struct tagMOUSEHOOKSTRUCTEX
{
  tagMOUSEHOOKSTRUCT baseclass_0;
  unsigned int mouseData;
};

/* 4815 */
struct tagHW_PROFILE_INFOA
{
  unsigned int dwDockInfo;
  char szHwProfileGuid[39];
  char szHwProfileName[80];
};

/* 4816 */
struct tagGLYPHSET
{
  unsigned int cbThis;
  unsigned int flAccel;
  unsigned int cGlyphsSupported;
  unsigned int cRanges;
  tagWCRANGE ranges[1];
};

/* 4817 */
struct tagLASTINPUTINFO
{
  unsigned int cbSize;
  unsigned int dwTime;
};

/* 4818 */
struct tagHW_PROFILE_INFOW
{
  unsigned int dwDockInfo;
  unsigned __int16 szHwProfileGuid[39];
  unsigned __int16 szHwProfileName[80];
};

/* 4819 */
struct _CONSOLE_SELECTION_INFO
{
  unsigned int dwFlags;
  _COORD dwSelectionAnchor;
  _SMALL_RECT srSelection;
};

/* 4820 */
struct IDBPromptInitialize
{
  IUnknown baseclass_0;
};

/* 4821 */
struct std::unary_function<CCommand *,bool>
{
  char dummy[1];
};

/* 4822 */
union $0B6666F9881AF55A618BF3BF4E0AC908
{
  std::unary_function<CCommand *,bool> baseclass_0;
  bool (__thiscall *_Pmemfun)(CCommand *this);
};

/* 4823 */
struct std::mem_fun_t<bool,CCommand>
{
  $0B6666F9881AF55A618BF3BF4E0AC908 ___u0;
};

/* 4824 */
union lzo_full_align_t
{
  char a_char;
  char a_uchar;
  __int16 a_short;
  unsigned __int16 a_ushort;
  int a_int;
  unsigned int a_uint;
  int a_long;
  unsigned int a_ulong;
  int a_lzo_int;
  unsigned int a_lzo_uint;
  int a_lzo_int32;
  unsigned int a_lzo_uint32;
  int a_ptrdiff_t;
  int a_lzo_ptrdiff_t;
  unsigned int a_lzo_ptr_t;
  void *a_lzo_voidp;
  void *a_void_p;
  char *a_lzo_bytep;
  char **a_lzo_bytepp;
  unsigned int *a_lzo_uintp;
  unsigned int *a_lzo_uint_p;
  unsigned int *a_lzo_uint32p;
  unsigned int *a_lzo_uint32_p;
  char *a_uchar_p;
  char *a_char_p;
};

/* 4825 */
struct std::pair<unsigned long,CPerformanceCheck::Instrument>
{
  unsigned int first;
  CPerformanceCheck::Instrument second;
};

/* 4826 */
struct SymEnumSymbols_UserData
{
  _tagSTACKFRAME *m_lpsf;
  char *m_szBuffer_Out;
  int m_nBufferSize_In;
  int m_nWritten_Out;
};

/* 4827 */
struct CExceptionReport::DumpTypeIndex::__l16::FINDCHILDREN
{
  _TI_FINDCHILDREN_PARAMS baseclass_0;
  unsigned int MoreChildIds[1024];
};

/* 4828 */
struct DbgUtils::CConvertErrorToText
{
  HINSTANCE__ *m_hNetMsg;
};

/* 4829 */
struct std::unary_function<CThread *,int>
{
  char dummy[1];
};

/* 4830 */
union $ED2A0FAA7CE5E6E1D34264E63D01CE9A
{
  std::unary_function<CThread *,int> baseclass_0;
  int (__thiscall *_Pmemfun)(CThread *this);
};

/* 4831 */
struct std::mem_fun_t<int,CThread>
{
  $ED2A0FAA7CE5E6E1D34264E63D01CE9A ___u0;
};

/* 4832 */
struct CBufferFactoryTest
{
  char dummy[1];
};

/* 4833 */
struct CDefaultBufferFactory
{
  CBufferFactory baseclass_0;
};

/* 4834 */
struct _NLA_BLOB::__unnamed
{
  _NLA_BLOB_DATA_TYPE type;
  unsigned int dwSize;
  unsigned int nextOffset;
};

/* 4835 */
struct _NLA_BLOB
{
  _NLA_BLOB::__unnamed header;
  _NLA_BLOB::__unnamed data;
  _BYTE gap18[1024];
};

/* 4836 */
struct std::iterator<std::bidirectional_iterator_tag,CSession *,int,CSession * const *,CSession * const &>
{
  char dummy[1];
};

/* 4837 */
struct std::_Bidit<CSession *,int,CSession * const *,CSession * const &>
{
  std::iterator<std::bidirectional_iterator_tag,CSession *,int,CSession * const *,CSession * const &> baseclass_0;
};

/* 4838 */
union $67A694703FA7CD5CA5E66B5C7779C30E
{
  std::_Bidit<CSession *,int,CSession * const *,CSession * const &> baseclass_0;
  std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *_Ptr;
};

/* 4839 */
struct std::list<CSession *,std::allocator<CSession *> >::const_iterator
{
  $67A694703FA7CD5CA5E66B5C7779C30E ___u0;
};

/* 4840 */
struct std::list<CSession *,std::allocator<CSession *> >::iterator
{
  std::list<CSession *,std::allocator<CSession *> >::const_iterator baseclass_0;
};

/* 4841 */
struct std::allocator<CSession *>::rebind<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node>
{
  char dummy[1];
};

/* 4842 */
struct std::allocator<CSession *>::rebind<std::_List_nod<CSession *,std::allocator<CSession *> >::_Node *>
{
  char dummy[1];
};

/* 4843 */
struct std::allocator<CSession *>::rebind<CSession *>
{
  char dummy[1];
};

/* 4844 */
struct _WSAMSG
{
  sockaddr *name;
  int namelen;
  _WSABUF *lpBuffers;
  unsigned int dwBufferCount;
  _WSABUF Control;
  unsigned int dwFlags;
};

/* 4845 */
struct _WSACMSGHDR
{
  unsigned int cmsg_len;
  int cmsg_level;
  int cmsg_type;
};

/* 4846 */
struct _TRANSMIT_FILE_BUFFERS
{
  void *Head;
  unsigned int HeadLength;
  void *Tail;
  unsigned int TailLength;
};

/* 4847 */
struct boost::type_traits::ice_and<1,1,1,1,1,1,1>
{
  char dummy[1];
};

/* 4848 */
struct boost::type_traits::no_type
{
  char padding[8];
};

/* 4849 */
struct boost::type_traits::ice_or<0,0,0,0,0,0,0>
{
  char dummy[1];
};

/* 4850 */
struct boost::type_traits::ice_not<1>
{
  char dummy[1];
};

/* 4851 */
struct boost::STATIC_ASSERTION_FAILURE<1>
{
  char dummy[1];
};

/* 4852 */
union $E212B2F0523A473370E216B3C230453F
{
  _LARGE_INTEGER nFileOffset;
  void *pBuffer;
};

/* 4853 */
struct _TRANSMIT_PACKETS_ELEMENT
{
  unsigned int dwElFlags;
  unsigned int cLength;
  $E212B2F0523A473370E216B3C230453F ___u2;
  void *hFile;
};

/* 4854 */
struct _NLA_BLOB::__unnamed::__unnamed
{
  unsigned int dwType;
  unsigned int dwSpeed;
  char adapterName[1];
};

/* 4855 */
struct _NLA_BLOB::__unnamed::__unnamed::__unnamed
{
  unsigned int speed;
  unsigned int type;
  unsigned int state;
  unsigned __int16 machineName[256];
  unsigned __int16 sharedAdapterName[256];
};

/* 4856 */
struct CAcceptOverlapped
{
  COverlapped baseclass_0;
  CListener *m_Listener;
  unsigned int m_hSocket;
};

/* 4857 */
struct CStreamRecvOverlapped
{
  COverlapped baseclass_0;
};

/* 4858 */
struct CDatagramRecvOverlapped
{
  COverlapped baseclass_0;
};

/* 4859 */
struct CSendOverlapped
{
  COverlapped baseclass_0;
};

/* 4860 */
struct CIOWorker
{
  CThread baseclass_0;
  CCompletionHandler *m_SocketHandler;
};

/* 4861 */
struct std::pair<unsigned long,CServerRequest::RequestInfo>
{
  unsigned int first;
  CServerRequest::RequestInfo second;
};

/* 4862 */
struct ATL::CComCriticalSection
{
  _RTL_CRITICAL_SECTION m_sec;
};

/* 4863 */
struct ATL::CSimpleArray<HINSTANCE__ *,ATL::CSimpleArrayEqualHelper<HINSTANCE__ *> >
{
  HINSTANCE__ **m_aT;
  int m_nSize;
  int m_nAllocSize;
};

/* 4864 */
struct ATL::_ATL_BASE_MODULE70
{
  unsigned int cbSize;
  HINSTANCE__ *m_hInst;
  HINSTANCE__ *m_hInstResource;
  bool m_bNT5orWin98;
  unsigned int dwAtlBuildVer;
  _GUID *pguidVer;
  ATL::CComCriticalSection m_csResource;
  ATL::CSimpleArray<HINSTANCE__ *,ATL::CSimpleArrayEqualHelper<HINSTANCE__ *> > m_rgResourceInstance;
};

/* 4865 */
struct ATL::CAtlBaseModule
{
  ATL::_ATL_BASE_MODULE70 baseclass_0;
};

/* 4866 */
union $1A48E2E26DB93D34BE160BC0E565E429
{
  unsigned __int16 *pOleStr;
  unsigned int uOffset;
  char cStr[260];
};

/* 4867 */
struct _STRRET
{
  unsigned int uType;
  $1A48E2E26DB93D34BE160BC0E565E429 ___u1;
};

/* 4868 */
struct _SHELLDETAILS
{
  int fmt;
  int cxChar;
  _STRRET str;
};

/* 4869 */
#pragma pack(push, 1)
struct _SHITEMID
{
  unsigned __int16 cb;
  char abID[1];
};
#pragma pack(pop)

/* 4870 */
struct _ITEMIDLIST
{
  _SHITEMID mkid;
};

/* 4871 */
struct tagFONTDESC
{
  unsigned int cbSizeofstruct;
  unsigned __int16 *lpstrName;
  tagCY cySize;
  __int16 sWeight;
  __int16 sCharset;
  int fItalic;
  int fUnderline;
  int fStrikethrough;
};

/* 4872 */
struct _C_float_complex
{
  float _Val[2];
};

/* 4873 */
struct std::_Ctraits<long double>
{
  char dummy[1];
};

/* 4874 */
struct std::_Ctraits<double>
{
  char dummy[1];
};

/* 4875 */
struct std::numpunct<char>
{
  std::locale::facet baseclass_0;
  const char *_Grouping;
  char _Dp;
  char _Kseparator;
  const char *_Falsename;
  const char *_Truename;
};

/* 4876 */
struct _C_double_complex
{
  long double _Val[2];
};

/* 4877 */
struct std::_Complex_base<double,_C_double_complex>
{
  _C_double_complex baseclass_0;
};

/* 4878 */
struct std::complex<double>
{
  std::_Complex_base<double,_C_double_complex> baseclass_0;
};

/* 4879 */
struct std::_Complex_base<float,_C_float_complex>
{
  _C_float_complex baseclass_0;
};

/* 4880 */
struct std::complex<float>
{
  std::_Complex_base<float,_C_float_complex> baseclass_0;
};

/* 4881 */
struct _C_ldouble_complex
{
  long double _Val[2];
};

/* 4882 */
struct std::_Complex_base<long double,_C_ldouble_complex>
{
  _C_ldouble_complex baseclass_0;
};

/* 4883 */
struct std::complex<long double>
{
  std::_Complex_base<long double,_C_ldouble_complex> baseclass_0;
};

/* 4884 */
struct std::_Ctraits<float>
{
  char dummy[1];
};

/* 4885 */
struct IAccessible
{
  IDispatch baseclass_0;
};

/* 4886 */
struct _DLLVERSIONINFO
{
  unsigned int cbSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformID;
};

/* 4887 */
struct ATL::ATLSTRINGRESOURCEIMAGE
{
  unsigned __int16 nLength;
  unsigned __int16 achString[];
};

/* 4888 */
struct ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>
{
  char **m_aKey;
  unsigned __int16 **m_aVal;
  int m_nSize;
};

/* 4889 */
struct ATL::CExpansionVector
{
  ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper> baseclass_0;
};

/* 4890 */
struct ATL::CComPtrBase<IPersistStream>
{
  IPersistStream *p;
};

/* 4891 */
struct ATL::_NoAddRefReleaseOnCComPtr<IPersistStream>
{
  IPersistStream baseclass_0;
};

/* 4892 */
struct ATL::_AtlCreateWndData
{
  void *m_pThis;
  unsigned int m_dwThreadID;
  ATL::_AtlCreateWndData *m_pNext;
};

/* 4893 */
struct ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
{
  unsigned __int16 *m_aT;
  int m_nSize;
  int m_nAllocSize;
};

/* 4894 */
struct ATL::_ATL_WIN_MODULE70
{
  unsigned int cbSize;
  ATL::CComCriticalSection m_csWindowCreate;
  ATL::_AtlCreateWndData *m_pCreateWndList;
  ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> > m_rgWindowClassAtoms;
};

/* 4895 */
const struct ATL::_ATL_CATMAP_ENTRY
{
  int iType;
  _GUID *pcatid;
};

/* 4896 */
struct ATL::_ATL_OBJMAP_ENTRY30
{
  _GUID *pclsid;
  HRESULT (__stdcall *pfnUpdateRegistry)(int);
  HRESULT (__stdcall *pfnGetClassObject)(void *, _GUID *, void **);
  HRESULT (__stdcall *pfnCreateInstance)(void *, _GUID *, void **);
  IUnknown *pCF;
  unsigned int dwRegister;
  const char *(__stdcall *pfnGetObjectDescription)();
  ATL::_ATL_CATMAP_ENTRY *(__cdecl *pfnGetCategoryMap)();
  void (__stdcall *pfnObjectMain)(bool);
};

/* 4897 */
struct ATL::_ATL_COM_MODULE70
{
  unsigned int cbSize;
  HINSTANCE__ *m_hInstTypeLib;
  ATL::_ATL_OBJMAP_ENTRY30 **m_ppAutoObjMapFirst;
  ATL::_ATL_OBJMAP_ENTRY30 **m_ppAutoObjMapLast;
  ATL::CComCriticalSection m_csObjMap;
};

/* 4898 */
struct ATL::CStringData
{
  ATL::IAtlStringMgr *pStringMgr;
  int nDataLength;
  int nAllocLength;
  int nRefs;
};

/* 4899 */
struct ATL::IAtlStringMgr
{
  ATL::IAtlStringMgrVtbl *vfptr;
};

/* 4900 */
struct ATL::IAtlStringMgrVtbl
{
  ATL::CStringData *(__thiscall *Allocate)(ATL::IAtlStringMgr *this, int, int);
  void (__thiscall *Free)(ATL::IAtlStringMgr *this, ATL::CStringData *);
  ATL::CStringData *(__thiscall *Reallocate)(ATL::IAtlStringMgr *this, ATL::CStringData *, int, int);
  ATL::CStringData *(__thiscall *GetNilString)(ATL::IAtlStringMgr *this);
  ATL::IAtlStringMgr *(__thiscall *Clone)(ATL::IAtlStringMgr *this);
};

/* 4901 */
struct ATL::CTempBuffer<char,256,ATL::CCRTAllocator>
{
  char *m_p;
  char m_abFixedBuffer[256];
};

/* 4902 */
struct ATL::CComMultiThreadModel
{
  char dummy[1];
};

/* 4903 */
struct ATL::CComAutoCriticalSection
{
  ATL::CComCriticalSection baseclass_0;
};

/* 4904 */
struct ATL::CComMultiThreadModelNoCS
{
  char dummy[1];
};

/* 4905 */
struct ATL::IAtlMemMgr
{
  ATL::IAtlMemMgrVtbl *vfptr;
};

/* 4906 */
struct ATL::IAtlMemMgrVtbl
{
  void *(__thiscall *Allocate)(ATL::IAtlMemMgr *this, unsigned int);
  void (__thiscall *Free)(ATL::IAtlMemMgr *this, void *);
  void *(__thiscall *Reallocate)(ATL::IAtlMemMgr *this, void *, unsigned int);
  unsigned int (__thiscall *GetSize)(ATL::IAtlMemMgr *this, void *);
};

/* 4907 */
struct ATL::CGlobalHeap
{
  ATL::IAtlMemMgr baseclass_0;
};

/* 4908 */
struct ATL::ChTraitsBase<char>
{
  char dummy[1];
};

/* 4909 */
struct ATL::ChTraitsCRT<char>
{
  ATL::ChTraitsBase<char> baseclass_0;
};

/* 4910 */
struct ATL::CTime
{
  __int64 m_time;
};

/* 4911 */
struct ATL::CTimeSpan
{
  __int64 m_timeSpan;
};

/* 4912 */
struct ATL::CSimpleStringT<char,0>
{
  char *m_pszData;
};

/* 4913 */
struct ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
{
  ATL::CSimpleStringT<char,0> baseclass_0;
};

/* 4914 */
struct ATL::CVarTypeInfo<unsigned __int64>
{
  char dummy[1];
};

/* 4915 */
struct ATL::IFixedStringLog
{
  ATL::IFixedStringLogVtbl *vfptr;
};

/* 4916 */
struct ATL::IFixedStringLogVtbl
{
  void (__thiscall *OnAllocateSpill)(ATL::IFixedStringLog *this, int, int, ATL::CStringData *);
  void (__thiscall *OnReallocateSpill)(ATL::IFixedStringLog *this, int, int, ATL::CStringData *);
};

/* 4917 */
struct ATL::CComPtrBase<IConnectionPointContainer>
{
  IConnectionPointContainer *p;
};

/* 4918 */
struct ATL::_NoAddRefReleaseOnCComPtr<IConnectionPointContainer>
{
  IConnectionPointContainer baseclass_0;
};

/* 4919 */
struct ATL::CComPtrBase<IConnectionPoint>
{
  IConnectionPoint *p;
};

/* 4920 */
struct ATL::_NoAddRefReleaseOnCComPtr<IConnectionPoint>
{
  IConnectionPoint baseclass_0;
};

/* 4921 */
struct ATL::CVarTypeInfo<char>
{
  char dummy[1];
};

/* 4922 */
struct ATL::CSimpleStringT<char,1>
{
  char *m_pszData;
};

/* 4923 */
struct ATL::CVarTypeInfo<unsigned int>
{
  char dummy[1];
};

/* 4924 */
struct ATL::_NoAddRefReleaseOnCComPtr<IMalloc>
{
  IMalloc baseclass_0;
};

/* 4925 */
struct ATL::IAtlAutoThreadModule
{
  ATL::IAtlAutoThreadModuleVtbl *vfptr;
};

/* 4926 */
struct ATL::IAtlAutoThreadModuleVtbl
{
  HRESULT (__thiscall *CreateInstance)(ATL::IAtlAutoThreadModule *this, void *, _GUID *, void **);
};

/* 4927 */
struct ATL::CComApartment
{
  unsigned int m_dwThreadID;
  void *m_hThread;
  int m_nLockCnt;
};

/* 4928 */
struct ATL::CComSimpleThreadAllocator
{
  int m_nThread;
};

/* 4929 */
struct ATL::CAtlAutoThreadModuleT<ATL::CAtlAutoThreadModule,ATL::CComSimpleThreadAllocator,4294967295>
{
  ATL::IAtlAutoThreadModule baseclass_0;
  unsigned int dwThreadID;
  int m_nThreads;
  ATL::CComApartment *m_pApartments;
  ATL::CComSimpleThreadAllocator m_Allocator;
};

/* 4930 */
struct ATL::CAtlAutoThreadModule
{
  ATL::CAtlAutoThreadModuleT<ATL::CAtlAutoThreadModule,ATL::CComSimpleThreadAllocator,4294967295> baseclass_0;
};

/* 4931 */
struct ATL::CSimpleStringT<unsigned short,0>
{
  unsigned __int16 *m_pszData;
};

/* 4932 */
struct ATL::ChTraitsBase<unsigned short>
{
  char dummy[1];
};

/* 4933 */
struct ATL::ChTraitsCRT<unsigned short>
{
  ATL::ChTraitsBase<unsigned short> baseclass_0;
};

/* 4934 */
struct ATL::StrTraitATL<unsigned short,ATL::ChTraitsCRT<unsigned short> >
{
  ATL::ChTraitsCRT<unsigned short> baseclass_0;
};

/* 4935 */
struct ATL::CStringT<unsigned short,ATL::StrTraitATL<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
{
  ATL::CSimpleStringT<unsigned short,0> baseclass_0;
};

/* 4936 */
struct ATL::CVarTypeInfo<int>
{
  char dummy[1];
};

/* 4937 */
struct ATL::_ATL_REGMAP_ENTRY
{
  const unsigned __int16 *szKey;
  const unsigned __int16 *szData;
};

/* 4938 */
struct ATL::CLocalHeap
{
  ATL::IAtlMemMgr baseclass_0;
};

/* 4939 */
struct ATL::CAtlComModule
{
  ATL::_ATL_COM_MODULE70 baseclass_0;
};

/* 4940 */
struct ATL::_ATL_TERMFUNC_ELEM
{
  void (__stdcall *pFunc)(unsigned int);
  unsigned int dw;
  ATL::_ATL_TERMFUNC_ELEM *pNext;
};

/* 4941 */
struct ATL::_ATL_MODULE70
{
  unsigned int cbSize;
  int m_nLockCnt;
  ATL::_ATL_TERMFUNC_ELEM *m_pTermFuncs;
  ATL::CComCriticalSection m_csStaticDataInitAndTypeInfo;
};

/* 4942 */
struct ATL::CComPtrBase<IUnknown>
{
  IUnknown *p;
};

/* 4943 */
struct ATL::CTempBuffer<char,128,ATL::CCRTAllocator>
{
  char *m_p;
  char m_abFixedBuffer[128];
};

/* 4944 */
struct ATL::CStringElementTraits<ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > >
{
  char dummy[1];
};

/* 4945 */
struct ATL::CVarTypeInfo<IDispatch *>
{
  char dummy[1];
};

/* 4946 */
struct ATL::CVarTypeInfo<tagVARIANT>
{
  char dummy[1];
};

/* 4947 */
struct ATL::CStringElementTraits<ATL::CStringT<unsigned short,ATL::StrTraitATL<unsigned short,ATL::ChTraitsCRT<unsigned short> > > >
{
  char dummy[1];
};

/* 4948 */
struct ATL::CElementTraits<ATL::CStringT<unsigned short,ATL::StrTraitATL<unsigned short,ATL::ChTraitsCRT<unsigned short> > > >
{
  ATL::CStringElementTraits<ATL::CStringT<unsigned short,ATL::StrTraitATL<unsigned short,ATL::ChTraitsCRT<unsigned short> > > > baseclass_0;
};

/* 4949 */
struct ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> >
{
  ATL::ChTraitsCRT<char> baseclass_0;
};

/* 4950 */
struct ATL::CVarTypeInfo<unsigned short *>
{
  char dummy[1];
};

/* 4951 */
struct ATL::CVarTypeInfo<long *>
{
  char dummy[1];
};

/* 4952 */
struct ATL::CVarTypeInfo<double>
{
  char dummy[1];
};

/* 4953 */
struct ATL::CVarTypeInfo<char *>
{
  char dummy[1];
};

/* 4954 */
struct ATL::CAtlModule
{
  ATL::CAtlModuleVtbl *vfptr;
  ATL::_ATL_MODULE70 baseclass_4;
  IGlobalInterfaceTable *m_pGIT;
};

/* 4955 */
struct IRegistrarBase
{
  IUnknown baseclass_0;
};

/* 4956 */
struct ATL::CAtlModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(ATL::CAtlModule *this, unsigned int);
  int (__thiscall *Lock)(ATL::CAtlModule *this);
  int (__thiscall *Unlock)(ATL::CAtlModule *this);
  int (__thiscall *GetLockCount)(ATL::CAtlModule *this);
  HRESULT (__thiscall *GetGITPtr)(ATL::CAtlModule *this, IGlobalInterfaceTable **);
  HRESULT (__thiscall *AddCommonRGSReplacements)(ATL::CAtlModule *this, IRegistrarBase *);
};

/* 4957 */
struct ATL::CAtlModuleT<ATL::CComModule>
{
  ATL::CAtlModule baseclass_0;
};

/* 4958 */
struct ATL::CComModule
{
  ATL::CAtlModuleT<ATL::CComModule> baseclass_0;
  ATL::_ATL_OBJMAP_ENTRY30 *m_pObjMap;
};

/* 4959 */
struct ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode
{
  ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode *m_pNext;
  char _pad[4];
};

/* 4960 */
struct ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
{
  ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode *m_pHead;
};

/* 4961 */
struct ATL::CVarTypeInfo<unsigned short>
{
  char dummy[1];
};

/* 4962 */
struct ATL::CRTThreadTraits
{
  char dummy[1];
};

/* 4963 */
struct ATL::CComPtr<IConnectionPoint>
{
  ATL::CComPtrBase<IConnectionPoint> baseclass_0;
};

/* 4964 */
struct ATL::CTempBuffer<unsigned short,128,ATL::CCRTAllocator>
{
  unsigned __int16 *m_p;
  char m_abFixedBuffer[128];
};

/* 4965 */
struct ATL::CLocalAllocator
{
  char dummy[1];
};

/* 4966 */
struct ATL::CVarTypeInfo<unsigned __int64 *>
{
  char dummy[1];
};

/* 4967 */
struct ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::Wrapper<unsigned short *>
{
  unsigned __int16 *t;
};

/* 4968 */
struct ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::Wrapper<char *>
{
  char *t;
};

/* 4969 */
struct ATL::CComPtr<IPersistStream>
{
  ATL::CComPtrBase<IPersistStream> baseclass_0;
};

/* 4970 */
struct ATL::_AtlAptCreateObjData
{
  HRESULT (__stdcall *pfnCreateInstance)(void *, _GUID *, void **);
  _GUID *piid;
  void *hEvent;
  IStream *pStream;
  HRESULT hRes;
};

/* 4971 */
struct ATL::ChTraitsOS<unsigned short>
{
  ATL::ChTraitsBase<unsigned short> baseclass_0;
};

/* 4972 */
struct ATL::CVarTypeInfo<float>
{
  char dummy[1];
};

/* 4973 */
struct ATL::CComPtrBase<IDispatch>
{
  IDispatch *p;
};

/* 4974 */
struct ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
{
  char dummy[1];
};

/* 4975 */
struct ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<unsigned short,ATL::StrTraitATL<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
{
  char dummy[1];
};

/* 4976 */
struct ATL::CComPtr<IUnknown>
{
  ATL::CComPtrBase<IUnknown> baseclass_0;
};

/* 4977 */
struct ATL::CComQIPtr<IUnknown,&IID_IUnknown>
{
  ATL::CComPtr<IUnknown> baseclass_0;
};

/* 4978 */
struct ATL::CVarTypeInfo<__int64>
{
  char dummy[1];
};

/* 4979 */
struct ATL::CRegObject
{
  IRegistrarBase baseclass_0;
  ATL::CExpansionVector m_RepMap;
  ATL::CComAutoCriticalSection m_csMap;
};

/* 4980 */
struct ATL::CRegParser
{
  char *m_pchCur;
  ATL::CRegObject *m_pRegObj;
};

/* 4981 */
struct ATL::CRegKey
{
  HKEY__ *m_hKey;
};

/* 4982 */
struct ATL::CRegParser::CParseBuffer
{
  int nPos;
  int nSize;
  char *p;
};

/* 4983 */
struct ATL::CCRTHeap
{
  ATL::IAtlMemMgr baseclass_0;
};

/* 4984 */
struct ATL::CSimpleArray<HINSTANCE__ *,ATL::CSimpleArrayEqualHelper<HINSTANCE__ *> >::Wrapper
{
  HINSTANCE__ *t;
};

/* 4985 */
struct ATL::CComBSTR
{
  unsigned __int16 *m_str;
};

/* 4986 */
struct ATL::CComPtrBase<IMalloc>
{
  IMalloc *p;
};

/* 4987 */
struct ATL::CAtlException
{
  HRESULT m_hr;
};

/* 4988 */
struct ATL::CVarTypeInfo<unsigned int *>
{
  char dummy[1];
};

/* 4989 */
struct ATL::CVarTypeInfo<double *>
{
  char dummy[1];
};

/* 4990 */
struct ATL::CTempBuffer<char,1024,ATL::CCRTAllocator>
{
  char *m_p;
  char m_abFixedBuffer[1024];
};

/* 4991 */
struct ATL::CVarTypeInfo<tagCY *>
{
  char dummy[1];
};

/* 4992 */
struct ATL::CFileTimeSpan
{
  __int64 m_nSpan;
};

/* 4993 */
struct ATL::CComAllocator
{
  char dummy[1];
};

/* 4994 */
struct ATL::CComPtr<IConnectionPointContainer>
{
  ATL::CComPtrBase<IConnectionPointContainer> baseclass_0;
};

/* 4995 */
struct ATL::CComPtrBase<ITypeLib>
{
  ITypeLib *p;
};

/* 4996 */
struct ATL::_NoAddRefReleaseOnCComPtr<ITypeLib>
{
  ITypeLib baseclass_0;
};

/* 4997 */
struct ICatRegister
{
  IUnknown baseclass_0;
};

/* 4998 */
struct ATL::_NoAddRefReleaseOnCComPtr<ICatRegister>
{
  ICatRegister baseclass_0;
};

/* 4999 */
struct ATL::CGlobalAllocator
{
  char dummy[1];
};

/* 5000 */
struct ATL::CHandle
{
  void *m_h;
};

/* 5001 */
struct ATL::CVarTypeInfo<int *>
{
  char dummy[1];
};

/* 5002 */
struct ATL::CVarTypeInfo<IUnknown * *>
{
  char dummy[1];
};

/* 5003 */
struct ATL::CVarTypeInfo<short>
{
  char dummy[1];
};

/* 5004 */
struct ATL::CCritSecLock
{
  _RTL_CRITICAL_SECTION *m_cs;
  bool m_bLocked;
};

/* 5005 */
struct ATL::CComSingleThreadModel
{
  char dummy[1];
};

/* 5006 */
struct ATL::CComFakeCriticalSection
{
  char dummy[1];
};

/* 5007 */
struct ATL::CVarTypeInfo<unsigned short * *>
{
  char dummy[1];
};

/* 5008 */
struct ATL::CComHeap
{
  ATL::IAtlMemMgr baseclass_0;
};

/* 5009 */
struct ATL::CW2AEX<128>
{
  char *m_psz;
  char m_szBuffer[128];
};

/* 5010 */
struct ATL::CVarTypeInfo<tagCY>
{
  char dummy[1];
};

/* 5011 */
struct ATL::CComPtr<ITypeLib>
{
  ATL::CComPtrBase<ITypeLib> baseclass_0;
};

/* 5012 */
struct ATL::CVarTypeInfo<long>
{
  char dummy[1];
};

/* 5013 */
struct ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>
{
  char *m_p;
  char m_abFixedBuffer[256];
};

/* 5014 */
struct ATL::CNilStringData
{
  ATL::CStringData baseclass_0;
  wchar_t achNil[2];
};

/* 5015 */
struct ATL::CComVariant
{
  tagVARIANT baseclass_0;
};

/* 5016 */
struct ATL::_ATL_INTMAP_ENTRY
{
  _GUID *piid;
  unsigned int dw;
  HRESULT (__stdcall *pFunc)(void *, _GUID *, void **, unsigned int);
};

/* 5017 */
struct ATL::CVarTypeInfo<unsigned char>
{
  char dummy[1];
};

/* 5018 */
#pragma pack(push, 1)
struct ATL::_stdcallthunk
{
  unsigned int m_mov;
  unsigned int m_this;
  char m_jmp;
  unsigned int m_relproc;
};
#pragma pack(pop)

/* 5019 */
struct ATL::_AtlStringThunks
{
  int (__stdcall *pfnCompareStringW)(unsigned int, unsigned int, const unsigned __int16 *, int, const unsigned __int16 *, int);
  int (__stdcall *pfnGetStringTypeExW)(unsigned int, unsigned int, const unsigned __int16 *, int, unsigned __int16 *);
  int (__stdcall *pfnlstrcmpiW)(const unsigned __int16 *, const unsigned __int16 *);
  unsigned __int16 *(__stdcall *pfnCharLowerW)(unsigned __int16 *);
  unsigned __int16 *(__stdcall *pfnCharUpperW)(unsigned __int16 *);
  unsigned int (__stdcall *pfnGetEnvironmentVariableW)(const unsigned __int16 *, unsigned __int16 *, unsigned int);
};

/* 5020 */
struct ATL::CElementTraits<ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > >
{
  ATL::CStringElementTraits<ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > baseclass_0;
};

/* 5021 */
struct ATL::CComPtr<IMalloc>
{
  ATL::CComPtrBase<IMalloc> baseclass_0;
};

/* 5022 */
struct ATL::CDynamicStdCallThunk
{
  ATL::_stdcallthunk *pThunk;
};

/* 5023 */
struct ATL::CFixedStringLog
{
  ATL::IFixedStringLog baseclass_0;
};

/* 5024 */
struct ATL::CVarTypeInfo<unsigned long *>
{
  char dummy[1];
};

/* 5025 */
struct ATL::CVarTypeInfo<float *>
{
  char dummy[1];
};

/* 5026 */
struct ATL::CVarTypeInfo<IDispatch * *>
{
  char dummy[1];
};

/* 5027 */
struct ATL::CFileTime
{
  _FILETIME baseclass_0;
};

/* 5028 */
struct ATL::CAtlWinModule
{
  ATL::_ATL_WIN_MODULE70 baseclass_0;
};

/* 5029 */
struct ATL::CComPtrBase<ICatRegister>
{
  ICatRegister *p;
};

/* 5030 */
struct ATL::CCRTAllocator
{
  char dummy[1];
};

/* 5031 */
struct ATL::CExpansionVectorEqualHelper
{
  char dummy[1];
};

/* 5032 */
struct ATL::CWin32Heap
{
  ATL::IAtlMemMgr baseclass_0;
  void *m_hHeap;
  bool m_bOwnHeap;
};

/* 5033 */
struct ATL::CVarTypeInfo<__int64 *>
{
  char dummy[1];
};

/* 5034 */
struct ATL::CVarTypeInfo<short *>
{
  char dummy[1];
};

/* 5035 */
struct ATL::CVarTypeInfo<IUnknown *>
{
  char dummy[1];
};

/* 5036 */
struct ATL::CComPtr<ICatRegister>
{
  ATL::CComPtrBase<ICatRegister> baseclass_0;
};

/* 5037 */
struct ATL::CComCritSecLock<ATL::CComCriticalSection>
{
  ATL::CComCriticalSection *m_cs;
  bool m_bLocked;
};

/* 5038 */
struct ATL::CComPtr<IDispatch>
{
  ATL::CComPtrBase<IDispatch> baseclass_0;
};

/* 5039 */
struct ATL::CVarTypeInfo<unsigned long>
{
  char dummy[1];
};

/* 5040 */
struct ATL::CVarTypeInfo<unsigned char *>
{
  char dummy[1];
};

/* 5041 */
struct ATL::CFixedStringMgr
{
  ATL::IAtlStringMgr baseclass_0;
  ATL::IAtlStringMgr *m_pMgr;
  ATL::CStringData *m_pData;
};

/* 5042 */
struct ATL::CTraceCategory
{
  char dummy[1];
};

/* 5043 */
struct ATL::Win32ThreadTraits
{
  char dummy[1];
};

/* 5044 */
struct ATL::CAtlStringMgr
{
  ATL::IAtlStringMgr baseclass_0;
  ATL::IAtlMemMgr *m_pMemMgr;
  ATL::CNilStringData m_nil;
};

/* 5045 */
struct IAccessibleHandler
{
  IUnknown baseclass_0;
};

/* 5046 */
struct tagOCPFIPARAMS
{
  unsigned int cbStructSize;
  HWND__ *hWndOwner;
  int x;
  int y;
  const unsigned __int16 *lpszCaption;
  unsigned int cObjects;
  IUnknown **lplpUnk;
  unsigned int cPages;
  _GUID *lpPages;
  unsigned int lcid;
  int dispidInitialProperty;
};

/* 5047 */
struct IAccIdentity
{
  IUnknown baseclass_0;
};

/* 5048 */
struct IAxWinAmbientDispatch
{
  IDispatch baseclass_0;
};

/* 5049 */
struct IAxWinAmbientDispatchEx
{
  IAxWinAmbientDispatch baseclass_0;
};

/* 5050 */
struct IDocHostUIHandlerDispatch
{
  IDispatch baseclass_0;
};

/* 5051 */
struct IAccPropServices
{
  IUnknown baseclass_0;
};

/* 5052 */
struct IAccPropServer
{
  IUnknown baseclass_0;
};

/* 5053 */
union _STRRET::__unnamed
{
  unsigned __int16 *pOleStr;
  unsigned int uOffset;
  char cStr[260];
};

/* 5054 */
struct tagCATEGORYINFO
{
  _GUID catid;
  unsigned int lcid;
  unsigned __int16 szDescription[128];
};

/* 5055 */
struct ICatInformation
{
  IUnknown baseclass_0;
};

/* 5056 */
struct tagMSAAMENUINFO
{
  unsigned int dwMSAASignature;
  unsigned int cchWText;
  unsigned __int16 *pszWText;
};

/* 5057 */
struct IEnumGUID
{
  IUnknown baseclass_0;
};

/* 5058 */
struct IAxWinHostWindow
{
  IUnknown baseclass_0;
};

/* 5059 */
struct IAxWinHostWindowLic
{
  IAxWinHostWindow baseclass_0;
};

/* 5060 */
struct IInternalConnection
{
  IUnknown baseclass_0;
};

/* 5061 */
struct tagPICTDESC::__unnamed::__unnamed
{
  HBITMAP__ *hbitmap;
  HPALETTE__ *hpal;
};

/* 5062 */
union $A8EF3A84A09564CB5518CA226177E28E
{
  tagPICTDESC::__unnamed::__unnamed bmp;
  tagPICTDESC::__unnamed::__unnamed wmf;
  tagPICTDESC::__unnamed::__unnamed icon;
  tagPICTDESC::__unnamed::__unnamed emf;
};

/* 5063 */
struct tagPICTDESC
{
  unsigned int cbSizeofstruct;
  unsigned int picType;
  $A8EF3A84A09564CB5518CA226177E28E ___u2;
  _BYTE gap10[4];
};

/* 5064 */
struct IEnumCATEGORYINFO
{
  IUnknown baseclass_0;
};

/* 5065 */
struct IRegistrar
{
  IRegistrarBase baseclass_0;
};

/* 5066 */
struct _CrtMemState
{
  _CrtMemBlockHeader *pBlockHeader;
  unsigned int lCounts[5];
  unsigned int lSizes[5];
  unsigned int lHighWaterCount;
  unsigned int lTotalCount;
};

/* 5067 */
struct IQueryAssociations
{
  IUnknown baseclass_0;
};

/* 5068 */
struct bad_typeid
{
  exception baseclass_0;
};

/* 5069 */
struct __non_rtti_object
{
  bad_typeid baseclass_0;
};

/* 5070 */
struct _WINBASE_DEFINED_STRUCT
{
  int dummy;
};

/* 5071 */
struct _DLLVERSIONINFO2
{
  _DLLVERSIONINFO info1;
  unsigned int dwFlags;
  unsigned __int64 ullVersion;
};

/* 5072 */
struct IAccessibleServer
{
  IUnknown baseclass_0;
};

/* 5073 */
struct IAccessibleProxy
{
  IUnknown baseclass_0;
};

/* 5074 */
struct std::pair<std::vector<enum Item::ItemType::Type,std::allocator<enum Item::ItemType::Type> >::iterator,std::vector<enum Item::ItemType::Type,std::allocator<enum Item::ItemType::Type> >::iterator>
{
  std::vector<enum Item::ItemType::Type,std::allocator<enum Item::ItemType::Type> >::iterator first;
  std::vector<enum Item::ItemType::Type,std::allocator<enum Item::ItemType::Type> >::iterator second;
};

/* 5075 */
struct ItemDataParser::ParseData
{
  const char *m_szColumnName;
  bool (__cdecl *m_fnParseFunc)(Item::ItemInfo *, const char *);
};

/* 5076 */
struct std::iterator<std::random_access_iterator_tag,ItemDataParser::ParseData,int,ItemDataParser::ParseData const *,ItemDataParser::ParseData const &>
{
  char dummy[1];
};

/* 5077 */
struct std::_Allocator_base<ItemDataParser::ParseData>
{
  char dummy[1];
};

/* 5078 */
struct std::_Ranit<ItemDataParser::ParseData,int,ItemDataParser::ParseData const *,ItemDataParser::ParseData const &>
{
  std::iterator<std::random_access_iterator_tag,ItemDataParser::ParseData,int,ItemDataParser::ParseData const *,ItemDataParser::ParseData const &> baseclass_0;
};

/* 5079 */
struct std::allocator<ItemDataParser::ParseData>
{
  std::_Allocator_base<ItemDataParser::ParseData> baseclass_0;
};

/* 5080 */
struct std::allocator<ItemDataParser::ParseData>::rebind<ItemDataParser::ParseData>
{
  char dummy[1];
};

/* 5081 */
struct std::_Vector_val<ItemDataParser::ParseData,std::allocator<ItemDataParser::ParseData> >
{
  std::allocator<ItemDataParser::ParseData> _Alval;
};

/* 5082 */
struct std::vector<ItemDataParser::ParseData,std::allocator<ItemDataParser::ParseData> >
{
  std::_Vector_val<ItemDataParser::ParseData,std::allocator<ItemDataParser::ParseData> > baseclass_0;
  ItemDataParser::ParseData *_Myfirst;
  ItemDataParser::ParseData *_Mylast;
  ItemDataParser::ParseData *_Myend;
};

/* 5083 */
union $9A88D8BA694088FA850944FE05D6E75A
{
  std::_Ranit<ItemDataParser::ParseData,int,ItemDataParser::ParseData const *,ItemDataParser::ParseData const &> baseclass_0;
  ItemDataParser::ParseData *_Myptr;
};

/* 5084 */
struct std::vector<ItemDataParser::ParseData,std::allocator<ItemDataParser::ParseData> >::const_iterator
{
  $9A88D8BA694088FA850944FE05D6E75A ___u0;
};

/* 5085 */
struct std::vector<ItemDataParser::ParseData,std::allocator<ItemDataParser::ParseData> >::iterator
{
  std::vector<ItemDataParser::ParseData,std::allocator<ItemDataParser::ParseData> >::const_iterator baseclass_0;
};

/* 5086 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned __int64 const ,Item::CItemOwnerInfo>,int,std::pair<unsigned __int64 const ,Item::CItemOwnerInfo> const *,std::pair<unsigned __int64 const ,Item::CItemOwnerInfo> const &>
{
  char dummy[1];
};

/* 5087 */
struct std::_Bidit<std::pair<unsigned __int64 const ,Item::CItemOwnerInfo>,int,std::pair<unsigned __int64 const ,Item::CItemOwnerInfo> const *,std::pair<unsigned __int64 const ,Item::CItemOwnerInfo> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned __int64 const ,Item::CItemOwnerInfo>,int,std::pair<unsigned __int64 const ,Item::CItemOwnerInfo> const *,std::pair<unsigned __int64 const ,Item::CItemOwnerInfo> const &> baseclass_0;
};

/* 5088 */
struct std::binary_function<void *,void *,bool>
{
  char dummy[1];
};

/* 5089 */
struct std::greater<void *>
{
  std::binary_function<void *,void *,bool> baseclass_0;
};

/* 5090 */
struct boost::fast_pool_allocator<unsigned __int64,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 5091 */
struct boost::singleton_pool<boost::fast_pool_allocator_tag,56,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type
{
  boost::details::pool::win32_mutex baseclass_0;
  boost::pool<boost::default_user_allocator_new_delete> p;
};

/* 5092 */
struct boost::details::pool::singleton_default<boost::singleton_pool<boost::fast_pool_allocator_tag,56,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>
{
  char dummy[1];
};

/* 5093 */
struct boost::singleton_pool<boost::fast_pool_allocator_tag,56,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 5094 */
struct boost::fast_pool_allocator<std::pair<unsigned __int64 const ,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::pair<unsigned __int64 const ,Item::CItemOwnerInfo> >
{
  char dummy[1];
};

/* 5095 */
struct boost::fast_pool_allocator<std::pair<unsigned __int64 const ,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,Item::CItemOwnerInfo,std::less<unsig
{
  char dummy[1];
};

/* 5096 */
struct boost::fast_pool_allocator<std::pair<unsigned __int64 const ,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<unsigned __int64>
{
  char dummy[1];
};

/* 5097 */
struct boost::fast_pool_allocator<std::pair<unsigned __int64 const ,Item::CItemOwnerInfo>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<char>
{
  char dummy[1];
};

/* 5098 */
struct boost::details::pool::singleton_default<boost::singleton_pool<boost::fast_pool_allocator_tag,56,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>::object_creator
{
  char dummy[1];
};

/* 5099 */
struct std::iterator<std::bidirectional_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator
{
  char dummy[1];
};

/* 5100 */
struct std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocat
{
  std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocat *_Left;
  std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocat *_Parent;
  std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocat *_Right;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Myval;
  char _Color;
  char _Isnil;
};

/* 5101 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_trai
{
  char dummy[1];
};

/* 5102 */
struct std::allocator<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<cha
{
  std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_trai baseclass_0;
};

/* 5103 */
struct std::set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
{
  std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<c baseclass_0;
  _BYTE gap4[8];
};

/* 5104 */
struct std::_Allocator_base<Item::ItemInfo>
{
  char dummy[1];
};

/* 5105 */
struct std::_Allocator_base<Item::ChemicalInfo>
{
  char dummy[1];
};

/* 5106 */
struct std::allocator<Item::ChemicalInfo>
{
  std::_Allocator_base<Item::ChemicalInfo> baseclass_0;
};

/* 5107 */
struct std::_Vector_val<Item::ChemicalInfo,std::allocator<Item::ChemicalInfo> >
{
  std::allocator<Item::ChemicalInfo> _Alval;
};

/* 5108 */
struct std::_Tree_val<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocat
{
  _BYTE gap0[3];
  std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > _Alval;
};

/* 5109 */
struct std::pair<std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::a
{
  std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<c first;
  bool second;
};

/* 5110 */
struct std::allocator<Item::ItemInfo>
{
  std::_Allocator_base<Item::ItemInfo> baseclass_0;
};

/* 5111 */
struct std::allocator<Item::ItemInfo>::rebind<Item::ItemInfo>
{
  char dummy[1];
};

/* 5112 */
struct std::vector<Item::ChemicalInfo,std::allocator<Item::ChemicalInfo> >
{
  std::_Vector_val<Item::ChemicalInfo,std::allocator<Item::ChemicalInfo> > baseclass_0;
  Item::ChemicalInfo *_Myfirst;
  Item::ChemicalInfo *_Mylast;
  Item::ChemicalInfo *_Myend;
};

/* 5113 */
struct std::iterator<std::random_access_iterator_tag,Item::ChemicalInfo,int,Item::ChemicalInfo const *,Item::ChemicalInfo const &>
{
  char dummy[1];
};

/* 5114 */
struct std::_Ranit<Item::ChemicalInfo,int,Item::ChemicalInfo const *,Item::ChemicalInfo const &>
{
  std::iterator<std::random_access_iterator_tag,Item::ChemicalInfo,int,Item::ChemicalInfo const *,Item::ChemicalInfo const &> baseclass_0;
};

/* 5115 */
union $598236EFBDDB6063F150061203DE2CC9
{
  std::_Ranit<Item::ChemicalInfo,int,Item::ChemicalInfo const *,Item::ChemicalInfo const &> baseclass_0;
  Item::ChemicalInfo *_Myptr;
};

/* 5116 */
struct std::vector<Item::ChemicalInfo,std::allocator<Item::ChemicalInfo> >::const_iterator
{
  $598236EFBDDB6063F150061203DE2CC9 ___u0;
};

/* 5117 */
struct std::vector<Item::ChemicalInfo,std::allocator<Item::ChemicalInfo> >::iterator
{
  std::vector<Item::ChemicalInfo,std::allocator<Item::ChemicalInfo> >::const_iterator baseclass_0;
};

/* 5118 */
struct std::_Bidit<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator baseclass_0;
};

/* 5119 */
struct std::allocator<Item::ChemicalInfo>::rebind<Item::ChemicalInfo>
{
  char dummy[1];
};

/* 5120 */
struct CTokenlizedFile::ColumnInfo
{
  unsigned int m_dwHashKey;
  unsigned int m_dwIndex;
  const char *m_szColumnName;
};

/* 5121 */
struct std::_Allocator_base<CTokenlizedFile::ColumnInfo>
{
  char dummy[1];
};

/* 5122 */
struct std::iterator<std::random_access_iterator_tag,Item::ItemInfo,int,Item::ItemInfo const *,Item::ItemInfo const &>
{
  char dummy[1];
};

/* 5123 */
struct std::allocator<CTokenlizedFile::ColumnInfo>
{
  std::_Allocator_base<CTokenlizedFile::ColumnInfo> baseclass_0;
};

/* 5124 */
struct std::_Vector_val<CTokenlizedFile::ColumnInfo,std::allocator<CTokenlizedFile::ColumnInfo> >
{
  std::allocator<CTokenlizedFile::ColumnInfo> _Alval;
};

/* 5125 */
struct std::pair<std::vector<Item::ChemicalInfo,std::allocator<Item::ChemicalInfo> >::iterator,std::vector<Item::ChemicalInfo,std::allocator<Item::ChemicalInfo> >::iterator>
{
  std::vector<Item::ChemicalInfo,std::allocator<Item::ChemicalInfo> >::iterator first;
  std::vector<Item::ChemicalInfo,std::allocator<Item::ChemicalInfo> >::iterator second;
};

/* 5126 */
struct std::_Vector_val<Item::ItemInfo,std::allocator<Item::ItemInfo> >
{
  std::allocator<Item::ItemInfo> _Alval;
};

/* 5127 */
struct std::vector<Item::ItemInfo,std::allocator<Item::ItemInfo> >
{
  std::_Vector_val<Item::ItemInfo,std::allocator<Item::ItemInfo> > baseclass_0;
  Item::ItemInfo *_Myfirst;
  Item::ItemInfo *_Mylast;
  Item::ItemInfo *_Myend;
};

/* 5128 */
struct std::_Ranit<Item::ItemInfo,int,Item::ItemInfo const *,Item::ItemInfo const &>
{
  std::iterator<std::random_access_iterator_tag,Item::ItemInfo,int,Item::ItemInfo const *,Item::ItemInfo const &> baseclass_0;
};

/* 5129 */
union $A394164B62F2C03B01C5E55EB1BFDBDD
{
  std::_Ranit<Item::ItemInfo,int,Item::ItemInfo const *,Item::ItemInfo const &> baseclass_0;
  Item::ItemInfo *_Myptr;
};

/* 5130 */
struct std::vector<Item::ItemInfo,std::allocator<Item::ItemInfo> >::const_iterator
{
  $A394164B62F2C03B01C5E55EB1BFDBDD ___u0;
};

/* 5131 */
struct std::vector<Item::ItemInfo,std::allocator<Item::ItemInfo> >::iterator
{
  std::vector<Item::ItemInfo,std::allocator<Item::ItemInfo> >::const_iterator baseclass_0;
};

/* 5132 */
struct std::vector<CTokenlizedFile::ColumnInfo,std::allocator<CTokenlizedFile::ColumnInfo> >
{
  std::_Vector_val<CTokenlizedFile::ColumnInfo,std::allocator<CTokenlizedFile::ColumnInfo> > baseclass_0;
  CTokenlizedFile::ColumnInfo *_Myfirst;
  CTokenlizedFile::ColumnInfo *_Mylast;
  CTokenlizedFile::ColumnInfo *_Myend;
};

/* 5133 */
struct std::iterator<std::random_access_iterator_tag,CTokenlizedFile::ColumnInfo,int,CTokenlizedFile::ColumnInfo const *,CTokenlizedFile::ColumnInfo const &>
{
  char dummy[1];
};

/* 5134 */
struct std::_Ranit<CTokenlizedFile::ColumnInfo,int,CTokenlizedFile::ColumnInfo const *,CTokenlizedFile::ColumnInfo const &>
{
  std::iterator<std::random_access_iterator_tag,CTokenlizedFile::ColumnInfo,int,CTokenlizedFile::ColumnInfo const *,CTokenlizedFile::ColumnInfo const &> baseclass_0;
};

/* 5135 */
union $9DB7A058E02D3676A6564D1D792BE6AB
{
  std::_Ranit<CTokenlizedFile::ColumnInfo,int,CTokenlizedFile::ColumnInfo const *,CTokenlizedFile::ColumnInfo const &> baseclass_0;
  CTokenlizedFile::ColumnInfo *_Myptr;
};

/* 5136 */
struct std::vector<CTokenlizedFile::ColumnInfo,std::allocator<CTokenlizedFile::ColumnInfo> >::const_iterator
{
  $9DB7A058E02D3676A6564D1D792BE6AB ___u0;
};

/* 5137 */
struct std::vector<CTokenlizedFile::ColumnInfo,std::allocator<CTokenlizedFile::ColumnInfo> >::iterator
{
  std::vector<CTokenlizedFile::ColumnInfo,std::allocator<CTokenlizedFile::ColumnInfo> >::const_iterator baseclass_0;
};

/* 5138 */
struct std::pair<enum Item::ItemType::Type,int>
{
  Item::ItemType::Type first;
  int second;
};

/* 5139 */
struct std::allocator<CTokenlizedFile::ColumnInfo>::rebind<CTokenlizedFile::ColumnInfo>
{
  char dummy[1];
};

/* 5140 */
struct std::pair<std::vector<Item::ItemInfo,std::allocator<Item::ItemInfo> >::iterator,std::vector<Item::ItemInfo,std::allocator<Item::ItemInfo> >::iterator>
{
  std::vector<Item::ItemInfo,std::allocator<Item::ItemInfo> >::iterator first;
  std::vector<Item::ItemInfo,std::allocator<Item::ItemInfo> >::iterator second;
};

/* 5141 */
struct std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::rebind<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
{
  char dummy[1];
};

/* 5142 */
struct std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::rebind<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std:
{
  char dummy[1];
};

/* 5143 */
struct std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::rebind<char>
{
  char dummy[1];
};

/* 5144 */
struct std::unary_function<Item::ChemicalInfo,bool>
{
  char dummy[1];
};

/* 5145 */
struct CEnsureDeleteArray<unsigned short>
{
  unsigned __int16 *m_ptrArray;
};

/* 5146 */
union $7AFF323D7E61FEAD0FBB219D26B8E06A
{
  std::unary_function<Item::ChemicalInfo,bool> baseclass_0;
  const unsigned __int16 m_wPickkingItemID;
};

/* 5147 */
struct CFindChemical
{
  $7AFF323D7E61FEAD0FBB219D26B8E06A ___u0;
  const unsigned __int16 m_wTargetItemID;
};

/* 5148 */
struct CTokenlizedFile
{
  _iobuf *m_lpFile;
  unsigned int m_nLine;
  char m_szDelimiter[16];
  char m_szColumn[16384];
  char m_szLine[16384];
  std::vector<CTokenlizedFile::ColumnInfo,std::allocator<CTokenlizedFile::ColumnInfo> > m_ColumnInfo;
  std::vector<char *,std::allocator<char *> > m_ColumnValues;
};

/* 5149 */
struct CParseDelimitedData
{
  CTokenlizedFile *m_TokenlizedFile;
};

/* 5150 */
struct GAMELOG::sLogBase
{
  unsigned int m_dwUID;
  unsigned int m_dwCID;
  int m_time;
  unsigned __int16 m_usXPos;
  unsigned __int16 m_usYPos;
  unsigned __int16 m_usZPos;
  char m_cCmd;
  char m_cErr;
};

/* 5151 */
#pragma pack(push, 1)
struct GAMELOG::sInstallSocketLog
{
  GAMELOG::sLogBase baseclass_0;
  TakeType m_GemAndEquip;
  char m_cGemSize;
  char m_cEquipSize;
};
#pragma pack(pop)

/* 5152 */
#pragma pack(push, 1)
struct GAMELOG::sPickupItemLog
{
  GAMELOG::sLogBase baseclass_0;
  unsigned int m_dwGold;
  Item::ItemPos m_itemPos;
};
#pragma pack(pop)

/* 5153 */
#pragma pack(push, 1)
struct GAMELOG::sCharLoginOut
{
  GAMELOG::sLogBase baseclass_0;
  unsigned int m_nIP;
  unsigned __int16 m_usPort;
  char m_cAdmin;
  unsigned __int16 m_usDataSize[9];
  unsigned __int16 m_usDepositData;
  unsigned int m_dwDepositMoney;
};
#pragma pack(pop)

/* 5154 */
struct GAMELOG::sItemDump
{
  unsigned __int16 m_usDataSize[4];
};

/* 5155 */
#pragma pack(push, 1)
struct GAMELOG::sMinItemInfo
{
  unsigned __int64 m_dwItemUID;
  unsigned __int16 m_usProtoTypeID;
  char m_cNowDurability;
};
#pragma pack(pop)

/* 5156 */
struct GAMELOG::sRepairItemLog
{
  GAMELOG::sLogBase baseclass_0;
  unsigned int m_dwUsed;
  GAMELOG::sMinItemInfo m_RepairedItem;
  char m_cPreRepairDurability;
};

/* 5157 */
#pragma pack(push, 1)
struct GAMELOG::sDropItemLog
{
  GAMELOG::sLogBase baseclass_0;
  unsigned int m_dwGold;
  Item::ItemPos m_itemPos;
};
#pragma pack(pop)

/* 5158 */
#pragma pack(push, 1)
struct GAMELOG::sStallRegisterRemoveItemLog
{
  GAMELOG::sLogBase baseclass_0;
  TakeType m_takeType;
  GAMELOG::sMinItemInfo m_itemInfo;
  unsigned int m_dwStallPrice;
  char m_cMode;
};
#pragma pack(pop)

/* 5159 */
#pragma pack(push, 1)
struct GAMELOG::sTakeGoldLog
{
  GAMELOG::sLogBase baseclass_0;
  unsigned int m_SrcGold;
  unsigned int m_DstGold;
  char m_cSrcPos;
  char m_cDstPos;
};
#pragma pack(pop)

/* 5160 */
struct GAMELOG::sMoveItemLog
{
  GAMELOG::sLogBase baseclass_0;
  TakeType m_takeType;
  GAMELOG::sMinItemInfo m_itemInfo;
};

/* 5161 */
#pragma pack(push, 1)
struct GAMELOG::sCharLevelUpLog
{
  GAMELOG::sLogBase baseclass_0;
  char m_cLevel;
  unsigned __int16 m_usIP;
};
#pragma pack(pop)

/* 5162 */
struct GAMELOG::sCharBindPosLog
{
  GAMELOG::sLogBase baseclass_0;
  unsigned int m_dwNPCID;
};

/* 5163 */
#pragma pack(push, 1)
struct GAMELOG::sUpgradeItemLog
{
  GAMELOG::sLogBase baseclass_0;
  unsigned int m_dwCurrentGold;
  unsigned int m_dwUsedGold;
  char m_cMineralSize;
  char m_cEquipSize;
};
#pragma pack(pop)

/* 5164 */
#pragma pack(push, 1)
struct GAMELOG::sStallOpenCloseLog
{
  GAMELOG::sLogBase baseclass_0;
  char m_cMode;
  char m_szStallName[32];
};
#pragma pack(pop)

/* 5165 */
#pragma pack(push, 1)
struct GAMELOG::sCharRespawnLog
{
  GAMELOG::sLogBase baseclass_0;
  unsigned __int64 m_nPrevExp;
  unsigned __int64 m_nNextExp;
};
#pragma pack(pop)

/* 5166 */
#pragma pack(push, 1)
struct GAMELOG::sUseItemLog
{
  GAMELOG::sLogBase baseclass_0;
  Item::ItemPos m_usePos;
  GAMELOG::sMinItemInfo m_itemInfo;
};
#pragma pack(pop)

/* 5167 */
#pragma pack(push, 1)
struct GAMELOG::sCharCreateDelete
{
  GAMELOG::sLogBase baseclass_0;
  unsigned int m_nIP;
  unsigned __int16 m_usPort;
};
#pragma pack(pop)

/* 5168 */
#pragma pack(push, 1)
struct GAMELOG::sTradeItemLog
{
  GAMELOG::sLogBase baseclass_0;
  unsigned int m_dwTraderCID;
  unsigned int m_dwGold;
  Item::ItemPos m_itemPos;
};
#pragma pack(pop)

/* 5169 */
#pragma pack(push, 1)
struct GAMELOG::sExchangeItemLog
{
  GAMELOG::sLogBase baseclass_0;
  unsigned int m_dwGold;
  unsigned int m_dwDstCID;
  unsigned __int16 m_usItemSize;
};
#pragma pack(pop)

/* 5170 */
#pragma pack(push, 1)
struct GAMELOG::sSplitItemLog
{
  GAMELOG::sLogBase baseclass_0;
  TakeType m_splitTake;
  GAMELOG::sMinItemInfo m_prevItem;
  GAMELOG::sMinItemInfo m_splitItem;
};
#pragma pack(pop)

/* 5171 */
#pragma pack(push, 1)
struct GAMELOG::sCharDeadLog
{
  GAMELOG::sLogBase baseclass_0;
  unsigned __int64 m_nPrevExp;
  unsigned __int64 m_nNextExp;
  unsigned int m_dwAttackerCID;
  char m_cLevel;
};
#pragma pack(pop)

/* 5172 */
#pragma pack(push, 1)
struct GAMELOG::sUpgradeItemLogV2
{
  GAMELOG::sLogBase baseclass_0;
  unsigned int m_dwCurrentGold;
  unsigned int m_dwUsedGold;
  char m_cLastUpgradeLevel;
  char m_cMineralSize;
  char m_cEquipSize;
};
#pragma pack(pop)

/* 5173 */
#pragma pack(push, 1)
struct GAMELOG::sChangeWeaponLog
{
  GAMELOG::sLogBase baseclass_0;
  char m_cCurrentHand;
};
#pragma pack(pop)

/* 5174 */
#pragma pack(push, 1)
struct GAMELOG::sStallEnterLeaveLog
{
  GAMELOG::sLogBase baseclass_0;
  unsigned int m_dwCustomerCID;
  char m_cMode;
};
#pragma pack(pop)

/* 5175 */
struct GAMELOG::sSwapItemLog
{
  GAMELOG::sLogBase baseclass_0;
  TakeType m_srcTake;
  TakeType m_dstTake;
  GAMELOG::sMinItemInfo m_srcItemInfo;
  GAMELOG::sMinItemInfo m_dstItemInfo;
};

/* 5176 */
#pragma pack(push, 1)
struct PktDepositUpdateDB
{
  PktDD baseclass_0;
  unsigned int m_dwUID;
  unsigned int m_dwCID;
  unsigned int m_dwTabFlag;
  unsigned __int16 m_usDataSize;
  char m_cTabNum;
  bool m_bUpdateComplete;
};
#pragma pack(pop)

/* 5177 */
struct CSingleton<Item::CNullItem>
{
  char dummy[1];
};

/* 5178 */
struct std::iterator<std::random_access_iterator_tag,Item::ItemGarbage,int,Item::ItemGarbage const *,Item::ItemGarbage const &>
{
  char dummy[1];
};

/* 5179 */
struct std::allocator<Item::ItemGarbage>::rebind<Item::ItemGarbage>
{
  char dummy[1];
};

/* 5180 */
struct std::_Ranit<Item::ItemGarbage,int,Item::ItemGarbage const *,Item::ItemGarbage const &>
{
  std::iterator<std::random_access_iterator_tag,Item::ItemGarbage,int,Item::ItemGarbage const *,Item::ItemGarbage const &> baseclass_0;
};

/* 5181 */
union $9527E7208AC4AB2A552F845919A8CF72
{
  std::_Ranit<Item::ItemGarbage,int,Item::ItemGarbage const *,Item::ItemGarbage const &> baseclass_0;
  Item::ItemGarbage *_Myptr;
};

/* 5182 */
struct std::vector<Item::ItemGarbage,std::allocator<Item::ItemGarbage> >::const_iterator
{
  $9527E7208AC4AB2A552F845919A8CF72 ___u0;
};

/* 5183 */
struct std::vector<Item::ItemGarbage,std::allocator<Item::ItemGarbage> >::iterator
{
  std::vector<Item::ItemGarbage,std::allocator<Item::ItemGarbage> >::const_iterator baseclass_0;
};

/* 5184 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Guild::CGuild *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_
{
  char dummy[1];
};

/* 5185 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Guild::CGuild *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Guild::CGuild *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_ baseclass_0;
};

/* 5186 */
struct std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Guild::CGuild *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Guild::CGuild *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char *_Left;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Guild::CGuild *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char *_Parent;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Guild::CGuild *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char *_Right;
  std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Guild::CGuild *> _Myval;
  char _Color;
  char _Isnil;
};

/* 5187 */ typedef unsigned __int32 Guild::CGuildVtbl;

/* 5188 */
struct GuildRight
{
  char m_aryRight[50];
};

/* 5189 */
struct std::_Allocator_base<Guild::MemberInfo>
{
  char dummy[1];
};

/* 5190 */
struct std::allocator<Guild::MemberInfo>
{
  std::_Allocator_base<Guild::MemberInfo> baseclass_0;
};

/* 5191 */
struct std::_Vector_val<Guild::MemberInfo,std::allocator<Guild::MemberInfo> >
{
  std::allocator<Guild::MemberInfo> _Alval;
};

/* 5192 */
struct Guild::MemberListInfo
{
  char m_cRank;
  char m_cTitle;
  char m_cLevel;
  char m_cClass;
  char m_cGuildWarFlag;
};

/* 5193 */
struct Guild::MemberDetailInfo
{
  unsigned int m_dwFame;
  unsigned int m_dwGold;
};

/* 5194 */
struct Guild::MemberInfo
{
  unsigned int m_dwCID;
  char m_strName[16];
  unsigned int m_dwServerID;
  TIME m_LeaveGuildTime;
  char m_cUpdateCount;
  char m_cTactics;
  Guild::MemberListInfo m_MemberListInfo;
  Guild::MemberDetailInfo m_MemberDetailInfo;
};

/* 5195 */
struct std::vector<Guild::MemberInfo,std::allocator<Guild::MemberInfo> >
{
  std::_Vector_val<Guild::MemberInfo,std::allocator<Guild::MemberInfo> > baseclass_0;
  Guild::MemberInfo *_Myfirst;
  Guild::MemberInfo *_Mylast;
  Guild::MemberInfo *_Myend;
};

/* 5196 */
struct std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0>
{
  std::less<unsigned long> comp;
};

/* 5197 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::_Node>
{
  char dummy[1];
};

/* 5198 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::_Node> baseclass_0;
};

/* 5199 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >
{
  std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::_Node> _Alnod;
};

/* 5200 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::_Node *>
{
  char dummy[1];
};

/* 5201 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::_Node *> baseclass_0;
};

/* 5202 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::_Node *> _Alptr;
};

/* 5203 */
struct std::_Allocator_base<std::pair<unsigned long const ,unsigned char> >
{
  char dummy[1];
};

/* 5204 */
struct std::allocator<std::pair<unsigned long const ,unsigned char> >
{
  std::_Allocator_base<std::pair<unsigned long const ,unsigned char> > baseclass_0;
};

/* 5205 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,unsigned char> > _Alval;
};

/* 5206 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,unsigned char> _Myval;
  char _Color;
  char _Isnil;
};

/* 5207 */
struct std::pair<unsigned long const ,unsigned char>
{
  const unsigned int first;
  char second;
};

/* 5208 */
struct std::_Tree<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 5209 */
struct std::map<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> > baseclass_0;
};

/* 5210 */
#pragma pack(push, 1)
struct Guild::CGuild
{
  Guild::CGuildVtbl *vfptr;
  unsigned int m_dwGID;
  char m_strName[11];
  char m_szMark[433];
  char m_cInclination;
  char m_cLevel;
  __declspec(align(4)) unsigned int m_dwFame;
  unsigned int m_dwGold;
  char m_cGuildPointFlag;
  TIME m_tmLastLogout;
  TIME m_tmCheckMember;
  TIME m_tmGMLastLogout;
  TIME m_tmChangeInclination;
  TIME m_tmGuildPoint;
  GuildRight m_GuildRight;
  __declspec(align(2)) std::vector<Guild::MemberInfo,std::allocator<Guild::MemberInfo> > m_MemberList;
  std::map<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> > > m_Relation[2];
};
#pragma pack(pop)

/* 5211 */
struct std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Guild::CGuild *>
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > first;
  Guild::CGuild *second;
};

/* 5212 */
struct std::_Allocator_base<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Guild::CGuild *> >
{
  char dummy[1];
};

/* 5213 */
struct std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Guild::CGuild *> >
{
  std::_Allocator_base<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Guild::CGuild *> > baseclass_0;
};

/* 5214 */
struct std::pair<unsigned long const ,Guild::CGuild *>
{
  const unsigned int first;
  Guild::CGuild *second;
};

/* 5215 */
struct std::_Allocator_base<std::pair<unsigned long const ,Guild::CGuild *> >
{
  char dummy[1];
};

/* 5216 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,Guild::CGuild *> _Myval;
  char _Color;
  char _Isnil;
};

/* 5217 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::_Node>
{
  char dummy[1];
};

/* 5218 */
struct std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Guild::CGuild *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char
{
  _BYTE gap0[3];
  std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Guild::CGuild *> > _Alval;
};

/* 5219 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 5220 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::_Node *> baseclass_0;
};

/* 5221 */
struct std::pair<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Guild::CGuild *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std
{
  std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Guild::CGuild *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_tra first;
  bool second;
};

/* 5222 */
struct std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >
{
  std::_Allocator_base<std::pair<unsigned long const ,Guild::CGuild *> > baseclass_0;
};

/* 5223 */
struct std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0>
{
  std::less<unsigned long> comp;
};

/* 5224 */
struct std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >::rebind<std::pair<unsigned long const ,Guild::CGuild *> >
{
  char dummy[1];
};

/* 5225 */
struct std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::_Node>
{
  char dummy[1];
};

/* 5226 */
struct std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 5227 */
struct std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 5228 */
struct std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >::rebind<char>
{
  char dummy[1];
};

/* 5229 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::_Node> baseclass_0;
};

/* 5230 */
struct std::allocator<unsigned long>::rebind<std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Node>
{
  char dummy[1];
};

/* 5231 */
struct std::allocator<unsigned long>::rebind<std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Node *>
{
  char dummy[1];
};

/* 5232 */
struct std::allocator<unsigned long>::rebind<char>
{
  char dummy[1];
};

/* 5233 */
struct std::allocator<std::pair<unsigned long const ,unsigned char> >::rebind<std::pair<unsigned long const ,unsigned char> >
{
  char dummy[1];
};

/* 5234 */
struct std::allocator<std::pair<unsigned long const ,unsigned char> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::_Node>
{
  char dummy[1];
};

/* 5235 */
struct std::allocator<std::pair<unsigned long const ,unsigned char> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::_Node *>
{
  char dummy[1];
};

/* 5236 */
struct std::allocator<std::pair<unsigned long const ,unsigned char> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 5237 */
struct std::allocator<std::pair<unsigned long const ,unsigned char> >::rebind<char>
{
  char dummy[1];
};

/* 5238 */
union $14C58B48BA6497A00213F420D4D0A541
{
  std::_Bidit<unsigned long,int,unsigned long const *,unsigned long const &> baseclass_0;
  std::_Tree_nod<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Node *_Ptr;
};

/* 5239 */
struct std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::const_iterator
{
  $14C58B48BA6497A00213F420D4D0A541 ___u0;
};

/* 5240 */
struct std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::iterator
{
  std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::const_iterator baseclass_0;
};

/* 5241 */
struct std::pair<std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::iterator,bool>
{
  std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::iterator first;
  bool second;
};

/* 5242 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >
{
  std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::_Node> _Alnod;
};

/* 5243 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,unsigned char>,int,std::pair<unsigned long const ,unsigned char> const *,std::pair<unsigned long const ,unsigned char> const &>
{
  char dummy[1];
};

/* 5244 */
struct std::_Bidit<std::pair<unsigned long const ,unsigned char>,int,std::pair<unsigned long const ,unsigned char> const *,std::pair<unsigned long const ,unsigned char> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,unsigned char>,int,std::pair<unsigned long const ,unsigned char> const *,std::pair<unsigned long const ,unsigned char> const &> baseclass_0;
};

/* 5245 */
union $CBCA79ACFDA0A93AC9D488A4F3C54875
{
  std::_Bidit<std::pair<unsigned long const ,unsigned char>,int,std::pair<unsigned long const ,unsigned char> const *,std::pair<unsigned long const ,unsigned char> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::_Node *_Ptr;
};

/* 5246 */
struct std::_Tree<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::const_iterator
{
  $CBCA79ACFDA0A93AC9D488A4F3C54875 ___u0;
};

/* 5247 */
struct std::_Tree<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::const_iterator baseclass_0;
};

/* 5248 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::_Node *> _Alptr;
};

/* 5249 */
struct std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Guild::CGuild *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::alloc
{
  std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Guild::CGuild *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_tra baseclass_0;
  _BYTE gap4[8];
};

/* 5250 */
struct std::iterator<std::random_access_iterator_tag,Guild::MemberInfo,int,Guild::MemberInfo const *,Guild::MemberInfo const &>
{
  char dummy[1];
};

/* 5251 */
struct std::_Ranit<Guild::MemberInfo,int,Guild::MemberInfo const *,Guild::MemberInfo const &>
{
  std::iterator<std::random_access_iterator_tag,Guild::MemberInfo,int,Guild::MemberInfo const *,Guild::MemberInfo const &> baseclass_0;
};

/* 5252 */
union $A0D1EB8477DCE8A5E1C214597F6EEC3A
{
  std::_Ranit<Guild::MemberInfo,int,Guild::MemberInfo const *,Guild::MemberInfo const &> baseclass_0;
  Guild::MemberInfo *_Myptr;
};

/* 5253 */
struct std::vector<Guild::MemberInfo,std::allocator<Guild::MemberInfo> >::const_iterator
{
  $A0D1EB8477DCE8A5E1C214597F6EEC3A ___u0;
};

/* 5254 */
struct std::vector<Guild::MemberInfo,std::allocator<Guild::MemberInfo> >::iterator
{
  std::vector<Guild::MemberInfo,std::allocator<Guild::MemberInfo> >::const_iterator baseclass_0;
};

/* 5255 */
struct std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Guild::CGuild *> >::rebind<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Guild::CGuild *> >
{
  char dummy[1];
};

/* 5256 */
struct std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Guild::CGuild *> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Guild::CGuild *,std::less<
{
  char dummy[1];
};

/* 5257 */
struct std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Guild::CGuild *> >::rebind<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
{
  char dummy[1];
};

/* 5258 */
struct std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Guild::CGuild *> >::rebind<char>
{
  char dummy[1];
};

/* 5259 */
struct std::allocator<Guild::MemberInfo>::rebind<Guild::MemberInfo>
{
  char dummy[1];
};

/* 5260 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,unsigned char,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned char> >,0> >::iterator first;
  bool second;
};

/* 5261 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,Guild::CGuild *> > _Alval;
};

/* 5262 */
struct std::_Tree<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 5263 */
struct std::map<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> > baseclass_0;
};

/* 5264 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,Guild::CGuild *>,int,std::pair<unsigned long const ,Guild::CGuild *> const *,std::pair<unsigned long const ,Guild::CGuild *> const &>
{
  char dummy[1];
};

/* 5265 */
struct std::_Bidit<std::pair<unsigned long const ,Guild::CGuild *>,int,std::pair<unsigned long const ,Guild::CGuild *> const *,std::pair<unsigned long const ,Guild::CGuild *> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,Guild::CGuild *>,int,std::pair<unsigned long const ,Guild::CGuild *> const *,std::pair<unsigned long const ,Guild::CGuild *> const &> baseclass_0;
};

/* 5266 */
union $4AC1D0C3481B2AEA652AAA974343C6EE
{
  std::_Bidit<std::pair<unsigned long const ,Guild::CGuild *>,int,std::pair<unsigned long const ,Guild::CGuild *> const *,std::pair<unsigned long const ,Guild::CGuild *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::_Node *_Ptr;
};

/* 5267 */
struct std::_Tree<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::const_iterator
{
  $4AC1D0C3481B2AEA652AAA974343C6EE ___u0;
};

/* 5268 */
struct std::_Tree<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::const_iterator baseclass_0;
};

/* 5269 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::iterator first;
  bool second;
};

/* 5270 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long
{
  std::_Tree<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::iterator first;
  std::_Tree<std::_Tmap_traits<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> >,0> >::iterator second;
};

/* 5271 */
#pragma pack(push, 1)
struct GuildMemberDB
{
  unsigned int m_dwGID;
  unsigned int m_dwCID;
  unsigned int m_dwRank;
  char m_strName[16];
  unsigned int m_dwTitle;
  char m_cLevel;
  unsigned __int16 m_wClass;
  unsigned int m_dwFame;
  unsigned int m_dwGold;
  char m_cGuildWarFlag;
  TIME m_LeaveGuildTime;
  char m_cTactics;
};
#pragma pack(pop)

/* 5272 */
#pragma pack(push, 1)
struct GuildSmallInfoNode
{
  unsigned int m_dwGID;
  char m_cIndex;
  char m_cInclination;
  unsigned __int16 m_wRank;
  unsigned int m_dwFame;
  char m_cLevel;
  char m_cCurrentMemberNum;
  char m_szName[11];
  char m_szMasterName[16];
};
#pragma pack(pop)

/* 5273 */
struct GuildLargeInfoNode
{
  GuildSmallInfoNode baseclass_0;
  char m_szMark[433];
  char m_cRelationByMine;
  char m_cRelationByTarget;
};

/* 5274 */
struct GuildCheckSumNode
{
  unsigned int m_dwGID;
  unsigned int m_dwCheckSum;
};

/* 5275 */
#pragma pack(push, 1)
struct GuildInfoDB
{
  unsigned int m_dwGID;
  char m_strName[20];
  char m_cLevel;
  unsigned int m_dwFame;
  unsigned int m_dwGold;
  TIME m_tmLastLogout;
  TIME m_tmCheckMember;
  TIME m_tmGMLastLogout;
  char m_szMark[433];
  char m_szRight[50];
  char m_cInclination;
  TIME m_tmChangeInclination;
};
#pragma pack(pop)

/* 5276 */
struct Guild::CGuildMgr
{
  std::map<unsigned long,Guild::CGuild *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,Guild::CGuild *> > > m_GuildMap;
  std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Guild::CGuild *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::alloc m_GuildNameMap;
};

/* 5277 */
struct CCampShop
{
  CCamp baseclass_0;
  Item::CCampShopContainer m_Container;
  unsigned int m_dwTempSafe;
  char m_cTax;
};

/* 5278 */
#pragma pack(push, 1)
struct PktStRI
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_dwShopID;
  TakeType m_TakeType;
  unsigned int m_dwPrice;
  char m_cCmd;
};
#pragma pack(pop)

/* 5279 */
struct CSummonMonster
{
  CMonster baseclass_0;
  CCharacter *m_lpMaster;
  bool m_bGuard;
  bool m_bPadding[3];
};

/* 5280 */
struct PktStO
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  char m_StallName[32];
};

/* 5281 */
struct PktStE
{
  PktBase baseclass_0;
  unsigned int m_dwCustomerID;
  unsigned int m_dwOwnerID;
};

/* 5282 */
#pragma pack(push, 1)
struct PktStIInfo
{
  PktBase baseclass_0;
  unsigned int m_dwOwnerID;
  unsigned int m_dwCustomerID[10];
  unsigned int m_dwTempSafe;
  char m_cTax;
  unsigned int m_dwItemSize;
  char m_cItemNum;
};
#pragma pack(pop)

/* 5283 */
struct std::pair<std::vector<CTokenlizedFile::ColumnInfo,std::allocator<CTokenlizedFile::ColumnInfo> >::iterator,std::vector<CTokenlizedFile::ColumnInfo,std::allocator<CTokenlizedFile::ColumnInfo> >::iterator>
{
  std::vector<CTokenlizedFile::ColumnInfo,std::allocator<CTokenlizedFile::ColumnInfo> >::iterator first;
  std::vector<CTokenlizedFile::ColumnInfo,std::allocator<CTokenlizedFile::ColumnInfo> >::iterator second;
};

/* 5284 */
struct Skill::CAddSpell<CPoisonedSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5285 */
struct std::_Allocator_base<std::_List_nod<unsigned long,std::allocator<unsigned long> >::_Node>
{
  char dummy[1];
};

/* 5286 */
struct std::allocator<std::_List_nod<unsigned long,std::allocator<unsigned long> >::_Node>
{
  std::_Allocator_base<std::_List_nod<unsigned long,std::allocator<unsigned long> >::_Node> baseclass_0;
};

/* 5287 */
struct std::_List_nod<unsigned long,std::allocator<unsigned long> >
{
  std::allocator<std::_List_nod<unsigned long,std::allocator<unsigned long> >::_Node> _Alnod;
};

/* 5288 */
struct std::_Allocator_base<std::_List_nod<unsigned long,std::allocator<unsigned long> >::_Node *>
{
  char dummy[1];
};

/* 5289 */
struct std::allocator<std::_List_nod<unsigned long,std::allocator<unsigned long> >::_Node *>
{
  std::_Allocator_base<std::_List_nod<unsigned long,std::allocator<unsigned long> >::_Node *> baseclass_0;
};

/* 5290 */
struct std::_List_ptr<unsigned long,std::allocator<unsigned long> >
{
  std::_List_nod<unsigned long,std::allocator<unsigned long> > baseclass_0;
  std::allocator<std::_List_nod<unsigned long,std::allocator<unsigned long> >::_Node *> _Alptr;
};

/* 5291 */
struct std::_List_val<unsigned long,std::allocator<unsigned long> >
{
  std::_List_ptr<unsigned long,std::allocator<unsigned long> > baseclass_0;
  std::allocator<unsigned long> _Alval;
};

/* 5292 */
struct std::_List_nod<unsigned long,std::allocator<unsigned long> >::_Node
{
  std::_List_nod<unsigned long,std::allocator<unsigned long> >::_Node *_Next;
  std::_List_nod<unsigned long,std::allocator<unsigned long> >::_Node *_Prev;
  unsigned int _Myval;
};

/* 5293 */
struct std::list<unsigned long,std::allocator<unsigned long> >
{
  std::_List_val<unsigned long,std::allocator<unsigned long> > baseclass_0;
  std::_List_nod<unsigned long,std::allocator<unsigned long> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 5294 */
struct CCastleGate
{
  CSiegeObject baseclass_0;
  std::list<unsigned long,std::allocator<unsigned long> > m_ProtectCharList;
};

/* 5295 */
struct std::allocator<unsigned long>::rebind<std::_List_nod<unsigned long,std::allocator<unsigned long> >::_Node>
{
  char dummy[1];
};

/* 5296 */
struct std::allocator<unsigned long>::rebind<std::_List_nod<unsigned long,std::allocator<unsigned long> >::_Node *>
{
  char dummy[1];
};

/* 5297 */
struct Skill::CAddSpell<CExpStatueSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5298 */
struct Skill::CAddSpell<CPowerStatueSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5299 */
struct Skill::CAddSpell<CWealthStatueSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5300 */
struct Skill::CAddSpell<CIntStatueSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5301 */
struct std::allocator<std::pair<unsigned short const ,unsigned short> >::rebind<std::pair<unsigned short const ,unsigned short> >
{
  char dummy[1];
};

/* 5302 */
struct std::allocator<std::pair<unsigned short const ,unsigned short> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>
{
  char dummy[1];
};

/* 5303 */
struct std::allocator<std::pair<unsigned short const ,unsigned short> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>
{
  char dummy[1];
};

/* 5304 */
struct std::allocator<std::pair<unsigned short const ,unsigned short> >::rebind<unsigned short>
{
  char dummy[1];
};

/* 5305 */
struct std::allocator<std::pair<unsigned short const ,unsigned short> >::rebind<char>
{
  char dummy[1];
};

/* 5306 */
union $4E906E5E5780C1909A683126B8EFFE89
{
  std::_Bidit<std::pair<unsigned short const ,unsigned short>,int,std::pair<unsigned short const ,unsigned short> const *,std::pair<unsigned short const ,unsigned short> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *_Ptr;
};

/* 5307 */
struct std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator
{
  $4E906E5E5780C1909A683126B8EFFE89 ___u0;
};

/* 5308 */
struct std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator baseclass_0;
};

/* 5309 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator first;
  bool second;
};

/* 5310 */
struct std::iterator<std::random_access_iterator_tag,CNPC::GoodInfo,int,CNPC::GoodInfo const *,CNPC::GoodInfo const &>
{
  char dummy[1];
};

/* 5311 */
struct std::pair<unsigned short,enum CCreatureManager::eAdminMonster>
{
  unsigned __int16 first;
  CCreatureManager::eAdminMonster second;
};

/* 5312 */
struct std::_Ranit<CNPC::GoodInfo,int,CNPC::GoodInfo const *,CNPC::GoodInfo const &>
{
  std::iterator<std::random_access_iterator_tag,CNPC::GoodInfo,int,CNPC::GoodInfo const *,CNPC::GoodInfo const &> baseclass_0;
};

/* 5313 */
union $FE28950048D60DFE90249924D423934A
{
  std::_Ranit<CNPC::GoodInfo,int,CNPC::GoodInfo const *,CNPC::GoodInfo const &> baseclass_0;
  CNPC::GoodInfo *_Myptr;
};

/* 5314 */
struct std::vector<CNPC::GoodInfo,std::allocator<CNPC::GoodInfo> >::const_iterator
{
  $FE28950048D60DFE90249924D423934A ___u0;
};

/* 5315 */
struct std::vector<CNPC::GoodInfo,std::allocator<CNPC::GoodInfo> >::iterator
{
  std::vector<CNPC::GoodInfo,std::allocator<CNPC::GoodInfo> >::const_iterator baseclass_0;
};

/* 5316 */
struct std::pair<unsigned long,CMonster *>
{
  unsigned int first;
  CMonster *second;
};

/* 5317 */
struct CSendEliteBonus
{
  char dummy[1];
};

/* 5318 */
struct std::unary_function<CSendEliteBonus,bool>
{
  char dummy[1];
};

/* 5319 */
struct std::pair<unsigned long,CCharacter *>
{
  unsigned int first;
  CCharacter *second;
};

/* 5320 */
struct std::pair<std::vector<CNPC::GoodInfo,std::allocator<CNPC::GoodInfo> >::iterator,std::vector<CNPC::GoodInfo,std::allocator<CNPC::GoodInfo> >::iterator>
{
  std::vector<CNPC::GoodInfo,std::allocator<CNPC::GoodInfo> >::iterator first;
  std::vector<CNPC::GoodInfo,std::allocator<CNPC::GoodInfo> >::iterator second;
};

/* 5321 */
union $568DDBBFA61AE50CF12D43E1DEDAFEEA
{
  std::unary_function<CCharacter *,bool> baseclass_0;
  bool (__thiscall *_Pmemfun)(CCharacter *this);
};

/* 5322 */
struct std::mem_fun_t<bool,CCharacter>
{
  $568DDBBFA61AE50CF12D43E1DEDAFEEA ___u0;
};

/* 5323 */
struct std::pair<unsigned long,CNPC *>
{
  unsigned int first;
  CNPC *second;
};

/* 5324 */
struct std::pair<unsigned long,CSiegeObject *>
{
  unsigned int first;
  CSiegeObject *second;
};

/* 5325 */
struct std::allocator<CNPC::GoodInfo>::rebind<CNPC::GoodInfo>
{
  char dummy[1];
};

/* 5326 */
struct std::pair<std::vector<unsigned short,std::allocator<unsigned short> >::iterator,std::vector<unsigned short,std::allocator<unsigned short> >::iterator>
{
  std::vector<unsigned short,std::allocator<unsigned short> >::iterator first;
  std::vector<unsigned short,std::allocator<unsigned short> >::iterator second;
};

/* 5327 */
struct PktStatueCmd
{
  PktBase baseclass_0;
  unsigned __int16 m_wSubCmd;
  unsigned __int16 m_wSize;
  unsigned int m_dwValue;
};

/* 5328 */
#pragma pack(push, 1)
struct StatueDisplayInfo
{
  unsigned int m_dwIndex;
  char m_cNation;
  bool m_bSummoning;
  bool m_bAttacked;
  POS m_Pos;
};
#pragma pack(pop)

/* 5329 */
union $65530CEB54DC809A5D65D14F5262228E
{
  std::unary_function<CSendEliteBonus,bool> baseclass_0;
  CSendEliteBonus *m_fnSecondProcess;
};

/* 5330 */
struct CCreatureManager::CProcessSecond<CSendEliteBonus,std::pair<unsigned long const ,CCharacter *> >
{
  $65530CEB54DC809A5D65D14F5262228E ___u0;
};

/* 5331 */
struct FnLeaveParty
{
  char dummy[1];
};

/* 5332 */
struct FnDeleteSecond
{
  char dummy[1];
};

/* 5333 */
struct boost::fast_pool_allocator<unsigned short,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 5334 */
struct boost::singleton_pool<boost::fast_pool_allocator_tag,20,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type
{
  boost::details::pool::win32_mutex baseclass_0;
  boost::pool<boost::default_user_allocator_new_delete> p;
};

/* 5335 */
struct boost::details::pool::singleton_default<boost::singleton_pool<boost::fast_pool_allocator_tag,20,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>
{
  char dummy[1];
};

/* 5336 */
struct boost::singleton_pool<boost::fast_pool_allocator_tag,20,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 5337 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::pair<unsigned long const ,CNPC *> >
{
  char dummy[1];
};

/* 5338 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNPC *,std::less<unsigned long>,boost::fast_pool_allocat
{
  char dummy[1];
};

/* 5339 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<unsigned long>
{
  char dummy[1];
};

/* 5340 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<char>
{
  char dummy[1];
};

/* 5341 */
struct boost::fast_pool_allocator<std::pair<unsigned short const ,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::pair<unsigned short const ,unsigned short> >
{
  char dummy[1];
};

/* 5342 */
struct boost::fast_pool_allocator<std::pair<unsigned short const ,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,boost
{
  char dummy[1];
};

/* 5343 */
struct boost::fast_pool_allocator<std::pair<unsigned short const ,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<unsigned short>
{
  char dummy[1];
};

/* 5344 */
struct boost::fast_pool_allocator<std::pair<unsigned short const ,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<char>
{
  char dummy[1];
};

/* 5345 */
struct boost::singleton_pool<boost::fast_pool_allocator_tag,24,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type
{
  boost::details::pool::win32_mutex baseclass_0;
  boost::pool<boost::default_user_allocator_new_delete> p;
};

/* 5346 */
struct boost::details::pool::singleton_default<boost::singleton_pool<boost::fast_pool_allocator_tag,24,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>
{
  char dummy[1];
};

/* 5347 */
struct boost::singleton_pool<boost::fast_pool_allocator_tag,24,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 5348 */
struct boost::details::pool::singleton_default<boost::singleton_pool<boost::fast_pool_allocator_tag,20,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>::object_creator
{
  char dummy[1];
};

/* 5349 */
struct boost::details::pool::singleton_default<boost::singleton_pool<boost::fast_pool_allocator_tag,24,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>::object_creator
{
  char dummy[1];
};

/* 5350 */
#pragma pack(push, 1)
struct CastleInfoDB
{
  unsigned int m_dwCastleID;
  unsigned int m_dwGID;
  char m_cZone;
  char m_cChannel;
  char m_cNameID;
  char m_cSiegeCount;
  char m_cInvincibleCount;
  unsigned __int16 m_wTotalSiegeCount;
  unsigned int m_dwTotalTaxMoney;
  char m_szRight[10];
  POS m_InPos;
  POS m_OutPos;
  unsigned __int16 m_wItemID;
  char m_cItemNum;
};
#pragma pack(pop)

/* 5351 */
#pragma pack(push, 1)
struct PktRsWaitQueueAck
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned __int16 m_wWaitNum[3];
};
#pragma pack(pop)

/* 5352 */
struct EnemyCheck::CFunctions
{
  char dummy[1];
};

/* 5353 */
struct CompareAmount
{
  char dummy[1];
};

/* 5354 */
struct CompareLevel
{
  char dummy[1];
};

/* 5355 */
struct CSingleton<AwardTable::CAward>
{
  char dummy[1];
};

/* 5356 */
struct AwardTable::CAward
{
  CSingleton<AwardTable::CAward> baseclass_0;
};

/* 5357 */
struct CompareFame
{
  char dummy[1];
};

/* 5358 */
struct CAddToThreatList
{
  CAggresiveCreature *m_lpAdd;
  int m_nAmount;
};

/* 5359 */
struct CDBRequest
{
  unsigned int m_dwRequestKey;
  CSendStream *m_lpDBAgentSendStream;
};

/* 5360 */
struct PktChatRequest
{
  PktBase baseclass_0;
  unsigned int m_dwUID;
  unsigned int m_dwCID;
  unsigned __int16 m_usXPos;
  unsigned __int16 m_usYPos;
  unsigned __int16 m_usZPos;
  char m_cCmd;
  char m_cNum;
};

/* 5361 */
struct CChatGameServerDispatch
{
  CRylServerDispatch baseclass_0;
  unsigned int m_dwServerID;
};

/* 5362 */
struct PktSL
{
  PktBase baseclass_0;
  unsigned int m_dwServerID;
  in_addr m_Address;
};

/* 5363 */
#pragma pack(push, 1)
struct PktChatData
{
  PktBase baseclass_0;
  unsigned int m_dwUID;
  unsigned int m_dwCID;
  char m_cType;
};
#pragma pack(pop)

/* 5364 */
#pragma pack(push, 1)
struct PktDBUpdate
{
  PktBase baseclass_0;
  unsigned __int64 m_dlItemSerial;
  unsigned int m_dwSessionID;
  unsigned int m_dwUserID;
  unsigned int m_dwCharID;
  unsigned int m_dwRequestKey;
  char m_szAccountName[16];
  in_addr m_Address;
  char m_cAdminLevel;
  char m_cAdminFlag;
  char m_cAccountNation;
  char m_cNameChangeCount;
  char m_cGuildWarFlag;
  char m_cRealmWarFlag;
  char m_cTacticsFlag;
  char m_cRealmPoint;
  unsigned __int16 m_TypeCode;
  unsigned __int16 m_usUpdate[9];
};
#pragma pack(pop)

/* 5365 */
struct Skill::CAddSpell<CInvincibleSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5366 */
#pragma pack(push, 1)
struct PktRsAck
{
  PktBase baseclass_0;
  POS m_Position;
  __int64 m_dlExp;
  unsigned int m_dwGold;
  unsigned int m_dwCharID;
  unsigned __int16 m_wHP;
  unsigned __int16 m_wMP;
};
#pragma pack(pop)

/* 5367 */
union $806FBA86E0158FB829A1D6255AF619CA
{
  std::_Bidit<unsigned long,int,unsigned long const *,unsigned long const &> baseclass_0;
  std::_List_nod<unsigned long,std::allocator<unsigned long> >::_Node *_Ptr;
};

/* 5368 */
struct std::list<unsigned long,std::allocator<unsigned long> >::const_iterator
{
  $806FBA86E0158FB829A1D6255AF619CA ___u0;
};

/* 5369 */
struct std::list<unsigned long,std::allocator<unsigned long> >::iterator
{
  std::list<unsigned long,std::allocator<unsigned long> >::const_iterator baseclass_0;
};

/* 5370 */
#pragma pack(push, 1)
struct PktAtInfo
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  AtType m_AtType;
  char m_cDefenserNum;
};
#pragma pack(pop)

/* 5371 */
struct PktAtAck
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  AtType m_AtType;
  unsigned __int16 m_wHP;
  unsigned __int16 m_wMP;
  unsigned __int16 m_wMPHeal;
  char m_cJudge;
  char m_cDefenserNum;
};

/* 5372 */
struct PktSaveEnemy
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwAttackedCID;
  unsigned int m_dwTick;
};

/* 5373 */
struct Skill::CAddSpell<CRealmMPSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5374 */
struct Skill::CAddSpell<CRealmHPSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5375 */
struct std::pair<Item::CItemOwnerInfo *,unsigned long>
{
  Item::CItemOwnerInfo *first;
  unsigned int second;
};

/* 5376 */
struct std::pair<unsigned __int64 const ,std::pair<Item::CItemOwnerInfo *,unsigned long> >
{
  const unsigned __int64 first;
  std::pair<Item::CItemOwnerInfo *,unsigned long> second;
};

/* 5377 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned __int64 const ,std::pair<Item::CItemOwnerInfo *,unsigned long> >,int,std::pair<unsigned __int64 const ,std::pair<Item::CItemOwnerInfo *,unsigned long> > const *,std::pair<unsigned __int64 con
{
  char dummy[1];
};

/* 5378 */
struct boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long>,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long> >
{
  char dummy[1];
};

/* 5379 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long>,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_alloca
{
  _BYTE gap0[2];
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long>,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long> > _Alptr;
};

/* 5380 */
struct boost::fast_pool_allocator<std::pair<unsigned __int64 const ,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 5381 */
struct std::_Tree_val<std::_Tmap_traits<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long>,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_alloca
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long>,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_alloca baseclass_0;
  boost::fast_pool_allocator<std::pair<unsigned __int64 const ,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 5382 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long>,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_alloca
{
  std::_Tree_nod<std::_Tmap_traits<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long>,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_alloca *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long>,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_alloca *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long>,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_alloca *_Right;
  std::pair<unsigned __int64 const ,std::pair<Item::CItemOwnerInfo *,unsigned long> > _Myval;
  char _Color;
  char _Isnil;
};

/* 5383 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long>,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_
{
  std::_Tree<std::_Tmap_traits<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long>,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_allocator_ first;
  bool second;
};

/* 5384 */
struct std::_Bidit<std::pair<unsigned __int64 const ,std::pair<Item::CItemOwnerInfo *,unsigned long> >,int,std::pair<unsigned __int64 const ,std::pair<Item::CItemOwnerInfo *,unsigned long> > const *,std::pair<unsigned __int64 const ,std::pair<Item::CItemOwnerInfo
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned __int64 const ,std::pair<Item::CItemOwnerInfo *,unsigned long> >,int,std::pair<unsigned __int64 const ,std::pair<Item::CItemOwnerInfo *,unsigned long> > const *,std::pair<unsigned __int64 con baseclass_0;
};

/* 5385 */
struct std::multimap<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long>,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_allocator_new_delete,boos
{
  std::_Tree<std::_Tmap_traits<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long>,std::less<unsigned __int64>,boost::fast_pool_allocator<std::pair<unsigned __int64,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_allocator_ baseclass_0;
  _BYTE gap4[8];
};

/* 5386 */
struct boost::singleton_pool<boost::fast_pool_allocator_tag,40,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type
{
  boost::details::pool::win32_mutex baseclass_0;
  boost::pool<boost::default_user_allocator_new_delete> p;
};

/* 5387 */
struct boost::details::pool::singleton_default<boost::singleton_pool<boost::fast_pool_allocator_tag,40,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>
{
  char dummy[1];
};

/* 5388 */
struct boost::singleton_pool<boost::fast_pool_allocator_tag,40,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 5389 */
struct boost::fast_pool_allocator<std::pair<unsigned __int64 const ,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::pair<unsigned __int64 const ,std::pair<Item::CItemOwn
{
  char dummy[1];
};

/* 5390 */
struct boost::fast_pool_allocator<std::pair<unsigned __int64 const ,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,std::pai
{
  char dummy[1];
};

/* 5391 */
struct boost::fast_pool_allocator<std::pair<unsigned __int64 const ,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<unsigned __int64>
{
  char dummy[1];
};

/* 5392 */
struct boost::fast_pool_allocator<std::pair<unsigned __int64 const ,std::pair<Item::CItemOwnerInfo *,unsigned long> >,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<char>
{
  char dummy[1];
};

/* 5393 */
struct boost::details::pool::singleton_default<boost::singleton_pool<boost::fast_pool_allocator_tag,40,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>::object_creator
{
  char dummy[1];
};

/* 5394 */
#pragma pack(push, 1)
struct PktServerLog
{
  PktBase baseclass_0;
  char m_cLogCmd;
};
#pragma pack(pop)

/* 5395 */
#pragma pack(push, 1)
struct PktItemDuplicated
{
  PktServerLog baseclass_0;
  char m_szName[16];
  unsigned __int64 m_dwItemSerial;
  unsigned int m_dwUID;
  unsigned int m_dwCID;
  unsigned int m_dwQty;
};
#pragma pack(pop)

/* 5396 */
struct Skill::CAddSpell<CMerkadiaWorldBuffSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5397 */
struct Skill::CAddSpell<CKarterantWorldDeBuffSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5398 */
struct Skill::CAddSpell<CMerkadiaWorldDeBuffSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5399 */
struct Skill::CAddSpell<CKarterantWorldBuffSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5400 */
#pragma pack(push, 1)
struct PktLUInfo
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  char m_cLevel;
};
#pragma pack(pop)

/* 5401 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > >,int,std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::
{
  char dummy[1];
};

/* 5402 */
struct std::iterator<std::bidirectional_iterator_tag,CCharRespawnMgr::RespawnCharInfo,int,CCharRespawnMgr::RespawnCharInfo const *,CCharRespawnMgr::RespawnCharInfo const &>
{
  char dummy[1];
};

/* 5403 */
struct std::pair<unsigned long,CCharRespawnMgr::RespawnProtoType>
{
  unsigned int first;
  CCharRespawnMgr::RespawnProtoType second;
};

/* 5404 */
struct std::_Bidit<CCharRespawnMgr::RespawnCharInfo,int,CCharRespawnMgr::RespawnCharInfo const *,CCharRespawnMgr::RespawnCharInfo const &>
{
  std::iterator<std::bidirectional_iterator_tag,CCharRespawnMgr::RespawnCharInfo,int,CCharRespawnMgr::RespawnCharInfo const *,CCharRespawnMgr::RespawnCharInfo const &> baseclass_0;
};

/* 5405 */
struct std::pair<unsigned long,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > >
{
  unsigned int first;
  std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > second;
};

/* 5406 */
struct std::_Bidit<std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > >,int,std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::Respawn
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> > >,int,std::pair<unsigned long const ,std::list<CCharRespawnMgr::RespawnCharInfo,std:: baseclass_0;
};

/* 5407 */
struct std::iterator<std::bidirectional_iterator_tag,CCharRespawnMgr::RespawnCharInfo,int,CCharRespawnMgr::RespawnCharInfo *,CCharRespawnMgr::RespawnCharInfo &>
{
  char dummy[1];
};

/* 5408 */
union $C73A90CBF7ADEEEA9D798C5978AF75E0
{
  std::_Bidit<CCharRespawnMgr::RespawnCharInfo,int,CCharRespawnMgr::RespawnCharInfo const *,CCharRespawnMgr::RespawnCharInfo const &> baseclass_0;
  std::_List_nod<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::_Node *_Ptr;
};

/* 5409 */
struct std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::const_iterator
{
  $C73A90CBF7ADEEEA9D798C5978AF75E0 ___u0;
};

/* 5410 */
struct std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::iterator
{
  std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::const_iterator baseclass_0;
};

/* 5411 */
union $A2703A7ADDCC910C9DEC945361EB1935
{
  std::iterator<std::bidirectional_iterator_tag,CCharRespawnMgr::RespawnCharInfo,int,CCharRespawnMgr::RespawnCharInfo *,CCharRespawnMgr::RespawnCharInfo &> baseclass_0;
  std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::iterator current;
};

/* 5412 */
struct std::reverse_iterator<std::list<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::iterator>
{
  $A2703A7ADDCC910C9DEC945361EB1935 ___u0;
};

/* 5413 */
struct std::allocator<CCharRespawnMgr::RespawnCharInfo>::rebind<std::_List_nod<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::_Node>
{
  char dummy[1];
};

/* 5414 */
struct std::allocator<CCharRespawnMgr::RespawnCharInfo>::rebind<std::_List_nod<CCharRespawnMgr::RespawnCharInfo,std::allocator<CCharRespawnMgr::RespawnCharInfo> >::_Node *>
{
  char dummy[1];
};

/* 5415 */
struct std::allocator<CCharRespawnMgr::RespawnCharInfo>::rebind<CCharRespawnMgr::RespawnCharInfo>
{
  char dummy[1];
};

/* 5416 */
#pragma pack(push, 1)
struct PktRsInfoAck
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  char m_cRsAreaNum;
  unsigned __int16 m_wSize;
};
#pragma pack(pop)

/* 5417 */
struct RespawnArea
{
  unsigned int m_dwTownID;
  POS m_RespawnPos;
};

/* 5418 */
#pragma pack(push, 1)
struct PktRsAreaInfoAck
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_dwTownID;
  unsigned __int16 m_nWaitOrder;
  char m_cRemainHour;
  char m_cRemainMin;
  char m_cRemainSec;
  bool m_bCount;
};
#pragma pack(pop)

/* 5419 */
struct std::pair<unsigned long,CTempCharacter *>
{
  unsigned int first;
  CTempCharacter *second;
};

/* 5420 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::pair<unsigned long const ,CTempCharacter *> >
{
  char dummy[1];
};

/* 5421 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTempCharacter *,std::less<unsigned long>,boos
{
  char dummy[1];
};

/* 5422 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<unsigned long>
{
  char dummy[1];
};

/* 5423 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CTempCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<char>
{
  char dummy[1];
};

/* 5424 */
struct PktDisappearItem
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  Item::ItemPos m_itemPos;
  char m_cNum;
  char m_cCmd;
};

/* 5425 */
#pragma pack(push, 1)
struct PktCCLo
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  char m_cCmd;
};
#pragma pack(pop)

/* 5426 */
#pragma pack(push, 1)
struct PktPUAck
{
  PktBase baseclass_0;
  unsigned __int64 m_nObjectID;
  unsigned int m_dwCharID;
  unsigned int m_dwSize;
  Item::ItemPos m_itemPos;
  char m_cType;
  char m_cNum;
};
#pragma pack(pop)

/* 5427 */
struct PktSummon
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_dwTargetID;
  CNetworkPos m_NetworkPos;
};

/* 5428 */
#pragma pack(push, 1)
struct PktFriendEtc
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwData;
  char m_cCmd;
};
#pragma pack(pop)

/* 5429 */
#pragma pack(push, 1)
struct PktSpItAck
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  TakeType m_TakeType;
  char m_cSize;
};
#pragma pack(pop)

/* 5430 */
struct PktSpInfo
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned __int16 m_nEnchantLevel;
  char m_cSpellType;
  bool m_bOnOff;
};

/* 5431 */
struct std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>
{
  std::less<unsigned long> comp;
};

/* 5432 */
struct boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_m
{
  char dummy[1];
};

/* 5433 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_m _Alnod;
};

/* 5434 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Right;
  std::pair<unsigned long const ,unsigned long> _Myval;
  char _Color;
  char _Isnil;
};

/* 5435 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_m _Alptr;
};

/* 5436 */
struct std::pair<unsigned long const ,ChatData::CCharInfo *>
{
  const unsigned int first;
  ChatData::CCharInfo *second;
};

/* 5437 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 5438 */
struct std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>
{
  std::less<unsigned long> comp;
};

/* 5439 */
struct std::pair<unsigned long,CCharSphereNode *>
{
  unsigned int first;
  CCharSphereNode *second;
};

/* 5440 */
struct std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1>
{
  std::less<unsigned long> comp;
};

/* 5441 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> *_Right;
  std::pair<unsigned long const ,ChatData::CCharInfo *> _Myval;
  char _Color;
  char _Isnil;
};

/* 5442 */
struct boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::detail
{
  char dummy[1];
};

/* 5443 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 5444 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>
{
  std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::detail _Alnod;
};

/* 5445 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::detail _Alptr;
};

/* 5446 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> baseclass_0;
  boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 5447 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1>
{
  _BYTE gap0[3];
  boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 5448 */
struct std::_Tree<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> *_Myhead;
  unsigned int _Mysize;
};

/* 5449 */
struct std::multimap<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_Tree<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> > baseclass_0;
};

/* 5450 */
struct std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 5451 */
struct std::map<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
};

/* 5452 */
union $67A0FA0F7358E13AE386B5363FAD3771
{
  std::_Bidit<std::pair<unsigned long const ,unsigned long>,int,std::pair<unsigned long const ,unsigned long> const *,std::pair<unsigned long const ,unsigned long> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Ptr;
};

/* 5453 */
struct std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator
{
  $67A0FA0F7358E13AE386B5363FAD3771 ___u0;
};

/* 5454 */
struct std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator baseclass_0;
};

/* 5455 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,
{
  std::_Tree<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,1> >:: first;
  bool second;
};

/* 5456 */
struct std::_Tree<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> *_Myhead;
  unsigned int _Mysize;
};

/* 5457 */
struct std::map<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_Tree<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
};

/* 5458 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterat
{
  std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator first;
  bool second;
};

/* 5459 */
struct ConnectInfo
{
  sockaddr_in m_siAgentHost;
  sockaddr_in m_siPrivateHost;
  sockaddr_in m_siPublicHost;
};

/* 5460 */
struct PktCOInfo
{
  PktBase baseclass_0;
  CastObject m_sCastObject;
  unsigned int m_dwSenderID;
  unsigned int m_dwReceiverID;
};

/* 5461 */
struct PktDeposit
{
  PktDD baseclass_0;
  char m_cCmd;
  char m_szData[8];
};

/* 5462 */
#pragma pack(push, 1)
struct PktUI
{
  PktBase baseclass_0;
  unsigned int m_dwSender;
  unsigned int m_dwRecver;
  Item::ItemPos m_itemPos;
  char m_cRemainItemNum;
};
#pragma pack(pop)

/* 5463 */
struct PktRsAreaInfo
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_dwTownID;
};

/* 5464 */
struct PktUgI
{
  PktBase baseclass_0;
  unsigned int m_dwNPCID;
};

/* 5465 */
struct PktRpAI
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_dwGold;
};

/* 5466 */
struct PktExI
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_dwSize;
  Item::ItemPos m_itemPos;
  char m_cType;
  char m_cNum;
};

/* 5467 */
struct DBBan
{
  unsigned int m_dwCID;
  char m_szName[16];
};

/* 5468 */
#pragma pack(push, 1)
struct PktItemChemical
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  Item::ItemPos m_pickkingPos;
  Item::ItemPos m_targetPos;
  char m_cPickkingNum;
};
#pragma pack(pop)

/* 5469 */
#pragma pack(push, 1)
struct PktRs
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  char m_cCmd;
  unsigned int m_dwTownID;
  POS m_Position;
};
#pragma pack(pop)

/* 5470 */
struct PartyFindMember
{
  char m_strLeaderName[16];
  char m_cAverageLevel;
  char m_cMemberNum;
};

/* 5471 */
#pragma pack(push, 1)
struct PktPDAck
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  FieldObject m_FieldObject;
  Item::ItemPos m_itemPos;
};
#pragma pack(pop)

/* 5472 */
#pragma pack(push, 1)
struct PktTI
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  TakeType m_TakeType;
};
#pragma pack(pop)

/* 5473 */
#pragma pack(push, 1)
struct PktEquipDurability
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  char m_cIndex;
  char m_cValue;
};
#pragma pack(pop)

/* 5474 */
struct PktAw
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_dwExp;
};

/* 5475 */
#pragma pack(push, 1)
struct PktSwI
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  TakeType m_SwapSrc;
  TakeType m_SwapDst;
};
#pragma pack(pop)

/* 5476 */
#pragma pack(push, 1)
struct PktUgIAck
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_dwCurrentGold;
  char m_cCurrentMineralNum;
  char m_cSize;
};
#pragma pack(pop)

/* 5477 */
#pragma pack(push, 1)
struct PktDuC
{
  PktBase baseclass_0;
  unsigned int m_dwSenderID;
  unsigned int m_dwRecverID;
  char m_cCmd;
};
#pragma pack(pop)

/* 5478 */
#pragma pack(push, 1)
struct PktIRSAck
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  Item::ItemPos m_equipPos;
  Item::ItemPos m_runePos;
  char m_cSize;
  char m_cType;
};
#pragma pack(pop)

/* 5479 */
#pragma pack(push, 1)
struct PktEquipShopInfo
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_dwNPCID;
  unsigned int m_dwTime;
  char m_cRace;
  char m_cTabPage;
  char m_cNum;
};
#pragma pack(pop)

/* 5480 */
struct MemberFindParty
{
  char m_strName[16];
  char m_cLevel;
  char m_cClass;
};

/* 5481 */
#pragma pack(push, 1)
struct PktTBInfo
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  char m_strChallengerName[16];
  char m_cCmd;
  char m_cMemberNum;
};
#pragma pack(pop)

/* 5482 */
#pragma pack(push, 1)
struct PktBGRsAck
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned __int16 m_wTurn;
  unsigned __int16 m_wWaitNum;
  unsigned __int16 m_wLeftTime;
  unsigned __int16 m_wHumanNum;
  unsigned __int16 m_wAkhanNum;
};
#pragma pack(pop)

/* 5483 */
#pragma pack(push, 1)
struct PktTr
{
  PktBase baseclass_0;
  unsigned int m_dwCustomerID;
  unsigned int m_dwOwnerID;
  char m_cCmd;
  unsigned __int16 m_wBuyItemID;
  TakeType m_TakeType;
  Item::ItemPos m_CouponPos;
  unsigned __int16 m_wSize;
};
#pragma pack(pop)

/* 5484 */
struct PktItemChemicalAck
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  Item::ItemPos m_pickkingPos;
  Item::ItemPos m_targetPos;
  unsigned __int16 m_wPickkingID;
  char m_cPickkingNum;
  char m_cResultSize;
};

/* 5485 */
#pragma pack(push, 1)
struct PktLotteryResult
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_dwSize;
  Item::ItemPos m_itemPos;
};
#pragma pack(pop)

/* 5486 */
#pragma pack(push, 1)
struct PktRpI
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_dwGold;
  Item::ItemPos m_itemPos;
};
#pragma pack(pop)

/* 5487 */
struct PktCameraScript
{
  PktBase baseclass_0;
  unsigned int m_dwDeleteObject;
  unsigned int m_dwNewObject;
  POS m_NewPos;
};

/* 5488 */
#pragma pack(push, 1)
struct PktCCLi
{
  PktBase baseclass_0;
  char m_cCmd;
};
#pragma pack(pop)

/* 5489 */
#pragma pack(push, 1)
struct PktMM
{
  PktBase baseclass_0;
  unsigned int m_dwMonID;
  CNetworkPos m_NetworkPos;
  char m_cAct;
  char m_cAniNum;
};
#pragma pack(pop)

/* 5490 */
struct PktRsInfo
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
};

/* 5491 */
#pragma pack(push, 1)
struct PktSummonCmd
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_dwTargetID;
  char m_cCmd;
};
#pragma pack(pop)

/* 5492 */
#pragma pack(push, 1)
struct PktTG
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_dwGold;
  char _bf20;
};
#pragma pack(pop)

/* 5493 */
struct boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 5494 */
struct boost::fast_pool_allocator<std::pair<unsigned long,CMonster *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::pair<unsigned long const ,CMonster *> >
{
  char dummy[1];
};

/* 5495 */
struct boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 5496 */
struct boost::fast_pool_allocator<std::pair<unsigned long,CCharacter *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::pair<unsigned long const ,CCharacter *> >
{
  char dummy[1];
};

/* 5497 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::pair<unsigned long const ,unsigned long> >
{
  char dummy[1];
};

/* 5498 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,boost::fas
{
  char dummy[1];
};

/* 5499 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<unsigned long>
{
  char dummy[1];
};

/* 5500 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<char>
{
  char dummy[1];
};

/* 5501 */
struct boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 5502 */
struct boost::fast_pool_allocator<std::pair<unsigned long,CNPC *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::pair<unsigned long const ,CNPC *> >
{
  char dummy[1];
};

/* 5503 */
struct boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 5504 */
struct boost::fast_pool_allocator<std::pair<unsigned long,CSiegeObject *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::pair<unsigned long const ,CSiegeObject *> >
{
  char dummy[1];
};

/* 5505 */
struct boost::type_traits::ice_eq<0,0>
{
  char dummy[1];
};

/* 5506 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::pair<unsigned long const ,ChatData::CCharInfo *> >
{
  char dummy[1];
};

/* 5507 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,ChatData::CCharInfo *,std::less<unsigned
{
  char dummy[1];
};

/* 5508 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<unsigned long>
{
  char dummy[1];
};

/* 5509 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<char>
{
  char dummy[1];
};

/* 5510 */
struct std::pair<unsigned short,unsigned short>
{
  unsigned __int16 first;
  unsigned __int16 second;
};

/* 5511 */
struct boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 5512 */
struct boost::fast_pool_allocator<std::pair<unsigned short,unsigned short>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::pair<unsigned short const ,unsigned short> >
{
  char dummy[1];
};

/* 5513 */
struct boost::pool_allocator_tag
{
  char dummy[1];
};

/* 5514 */
struct boost::details::pool::ct_lcm<4,4>
{
  char dummy[1];
};

/* 5515 */
struct boost::details::pool::ct_gcd<4,4>
{
  char dummy[1];
};

/* 5516 */
struct boost::details::pool::details::ct_gcd_helper<4,4,0>
{
  char dummy[1];
};

/* 5517 */
struct boost::details::pool::details::ct_gcd_helper<4,0,1>
{
  char dummy[1];
};

/* 5518 */
#pragma pack(push, 1)
struct PktMVEx
{
  PktBase baseclass_0;
  CNetworkPos m_NetworkPos;
  char m_cUAct;
  char m_cLAct;
};
#pragma pack(pop)

/* 5519 */
#pragma pack(push, 1)
struct PktQSM
{
  PktBase baseclass_0;
  TakeType m_TakeType;
  unsigned __int16 m_usSkillID;
};
#pragma pack(pop)

/* 5520 */
#pragma pack(push, 1)
struct PktStatueInfo
{
  PktBase baseclass_0;
  unsigned int m_dwMileage;
  unsigned __int16 m_wHumanNum;
  unsigned __int16 m_wAkhanNum;
  unsigned __int16 m_wNowHP;
  unsigned __int16 m_wKID;
  char m_cState;
  char m_cIndex;
};
#pragma pack(pop)

/* 5521 */
#pragma pack(push, 1)
struct DBBanInfo
{
  unsigned int m_dwGID;
  unsigned __int16 m_wClass;
  char m_cLevel;
};
#pragma pack(pop)

/* 5522 */
#pragma pack(push, 1)
struct PktAted
{
  PktBase baseclass_0;
  POS m_Postion;
  float m_fDir;
  unsigned int m_dwCharID;
  unsigned int m_dwMyID;
  AtType m_AtType;
  unsigned __int16 m_wMyHP;
  unsigned __int16 m_wMyMP;
  unsigned __int16 m_wMyMPHeal;
  char m_cJudge;
};
#pragma pack(pop)

/* 5523 */
#pragma pack(push, 1)
struct PktItemOptionGraft
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  char m_cAttributeType;
};
#pragma pack(pop)

/* 5524 */
#pragma pack(push, 1)
struct PktSwH
{
  PktBase baseclass_0;
  char m_cSelect;
};
#pragma pack(pop)

/* 5525 */
#pragma pack(push, 1)
struct PktPD
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  Item::ItemPos m_itemPos;
  char m_cNum;
};
#pragma pack(pop)

/* 5526 */
struct PktCO
{
  PktBase baseclass_0;
  CastObject m_sCastObject;
  unsigned int m_dwSenderID;
  unsigned int m_dwReceiverID;
};

/* 5527 */
#pragma pack(push, 1)
struct PktPU
{
  PktBase baseclass_0;
  unsigned __int64 m_nObjectID;
  unsigned int m_dwCharID;
  Item::ItemPos m_itemPos;
};
#pragma pack(pop)

/* 5528 */
#pragma pack(push, 1)
struct PktPeace
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  char m_cLeftTime;
  bool m_bPeace;
};
#pragma pack(pop)

/* 5529 */
#pragma pack(push, 1)
struct PktAutoRouting
{
  PktBase baseclass_0;
  unsigned __int64 m_nObjectID;
  unsigned int m_dwCharID;
  unsigned __int16 m_wItemID;
  char m_cNum;
  Item::ItemPos m_itemPos;
  char m_cCmd;
};
#pragma pack(pop)

/* 5530 */
struct Broadcast2nd::StallNode
{
  unsigned int m_dwCID;
  char m_szStallName[32];
};

/* 5531 */
#pragma pack(push, 1)
struct PktCB
{
  PktBase baseclass_0;
  char m_cCharacterPhase;
  unsigned __int16 m_usBufferSize;
};
#pragma pack(pop)

/* 5532 */
struct PktRsWaitQueue
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
};

/* 5533 */
#pragma pack(push, 1)
struct PktPUInfo
{
  PktBase baseclass_0;
  unsigned __int64 m_nObjectID;
  unsigned int m_dwCharID;
};
#pragma pack(pop)

/* 5534 */
#pragma pack(push, 1)
struct DBFriendInfo
{
  unsigned int m_dwGID;
  unsigned __int16 m_wClass;
  char m_cLevel;
};
#pragma pack(pop)

/* 5535 */
#pragma pack(push, 1)
struct PktSplt
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  TakeType m_TakeType;
};
#pragma pack(pop)

/* 5536 */
#pragma pack(push, 1)
struct PktDeadInfo
{
  PktDD baseclass_0;
  char m_cTypeCode;
  unsigned __int16 m_usDeadMemCurrHP;
  unsigned __int16 m_usDeadMemCurrMP;
  unsigned int m_dwDeadCID;
  unsigned int m_dwDeadPID;
  unsigned int m_dwReferenceID;
  char m_cDeadNation;
  char m_cDeadClass;
  char m_cRefNation;
  char m_cRefClass;
  char m_szDeadName[16];
  char m_szRefName[16];
  char m_szRefGuildName[11];
};
#pragma pack(pop)

/* 5537 */
#pragma pack(push, 1)
struct PktIRS
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  Item::ItemPos m_equipPos;
  Item::ItemPos m_runePos;
  char m_cType;
};
#pragma pack(pop)

/* 5538 */
#pragma pack(push, 1)
struct PktItemOptionGraftAck
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_dwGold;
  char m_cSize;
};
#pragma pack(pop)

/* 5539 */
#pragma pack(push, 1)
struct PktISAck
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  Item::ItemPos m_equipPos;
  Item::ItemPos m_gemPos;
  char m_cSize;
};
#pragma pack(pop)

/* 5540 */
#pragma pack(push, 1)
struct PktPDInfo
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  FieldObject m_FieldObject;
};
#pragma pack(pop)

/* 5541 */
#pragma pack(push, 1)
struct PktFriendAddReq
{
  PktBase baseclass_0;
  char m_szName[16];
  unsigned int m_dwCID;
  char m_cCmd;
};
#pragma pack(pop)

/* 5542 */
struct PktItemCompensation
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
};

/* 5543 */
#pragma pack(push, 1)
struct PktExC
{
  PktBase baseclass_0;
  unsigned int m_dwSenderID;
  unsigned int m_dwRecverID;
  char m_cCmd;
};
#pragma pack(pop)

/* 5544 */
struct PktIS
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  Item::ItemPos m_equipPos;
  Item::ItemPos m_gemPos;
};

/* 5545 */
#pragma pack(push, 1)
struct PktTrAck
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_dwNPCID;
  unsigned int m_dwGold;
  unsigned int m_dwMileage;
  Item::ItemPos m_CouponPos;
  unsigned __int16 m_wSize;
  Item::ItemPos m_itemPos;
  char m_cNum;
};
#pragma pack(pop)

/* 5546 */
#pragma pack(push, 1)
struct PktTIs
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  char m_TakeNum;
};
#pragma pack(pop)

/* 5547 */
struct ChatData::CCharInfoMap
{
  std::map<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_cidMap;
  std::multimap<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_pidMap;
  std::multimap<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_gidMap;
  std::multimap<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_nameMap;
  std::multimap<unsigned long,ChatData::CCharInfo *,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,ChatData::CCharInfo *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_accountMap;
  std::map<unsigned long,unsigned long,std::less<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned long const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > m_banMap;
};

/* 5548 */
#pragma pack(push, 1)
struct PktFriendRemoveReq
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  char m_cCmd;
};
#pragma pack(pop)

/* 5549 */
struct DBFriend
{
  unsigned int m_dwCID;
  unsigned int m_dwStatusFlag;
  char m_szName[16];
};

/* 5550 */
struct std::pair<float const ,CAggresiveCreature *>
{
  const float first;
  CAggresiveCreature *second;
};

/* 5551 */
struct std::binary_function<float,float,bool>
{
  char dummy[1];
};

/* 5552 */
struct std::less<float>
{
  std::binary_function<float,float,bool> baseclass_0;
};

/* 5553 */
struct std::_Allocator_base<std::pair<float const ,CAggresiveCreature *> >
{
  char dummy[1];
};

/* 5554 */
struct std::allocator<std::pair<float const ,CAggresiveCreature *> >
{
  std::_Allocator_base<std::pair<float const ,CAggresiveCreature *> > baseclass_0;
};

/* 5555 */
struct std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0>
{
  std::less<float> comp;
};

/* 5556 */
struct std::pair<float,CAggresiveCreature *>
{
  float first;
  CAggresiveCreature *second;
};

/* 5557 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::_Node>
{
  char dummy[1];
};

/* 5558 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::_Node> baseclass_0;
};

/* 5559 */
struct std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >
{
  std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::_Node> _Alnod;
};

/* 5560 */
struct std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::_Node *_Right;
  std::pair<float const ,CAggresiveCreature *> _Myval;
  char _Color;
  char _Isnil;
};

/* 5561 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 5562 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::_Node *> baseclass_0;
};

/* 5563 */
struct std::_Tree_ptr<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::_Node *> _Alptr;
};

/* 5564 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<float const ,CAggresiveCreature *>,int,std::pair<float const ,CAggresiveCreature *> const *,std::pair<float const ,CAggresiveCreature *> const &>
{
  char dummy[1];
};

/* 5565 */
struct std::_Tree_val<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> > baseclass_0;
  std::allocator<std::pair<float const ,CAggresiveCreature *> > _Alval;
};

/* 5566 */
struct std::_Allocator_base<float>
{
  char dummy[1];
};

/* 5567 */
struct std::_Bidit<std::pair<float const ,CAggresiveCreature *>,int,std::pair<float const ,CAggresiveCreature *> const *,std::pair<float const ,CAggresiveCreature *> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<float const ,CAggresiveCreature *>,int,std::pair<float const ,CAggresiveCreature *> const *,std::pair<float const ,CAggresiveCreature *> const &> baseclass_0;
};

/* 5568 */
struct std::_Tree<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 5569 */
struct std::map<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> > >
{
  std::_Tree<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> > baseclass_0;
};

/* 5570 */
union $78709403053256C54E731B3FE4B90EED
{
  std::_Bidit<std::pair<float const ,CAggresiveCreature *>,int,std::pair<float const ,CAggresiveCreature *> const *,std::pair<float const ,CAggresiveCreature *> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::_Node *_Ptr;
};

/* 5571 */
struct std::_Tree<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::const_iterator
{
  $78709403053256C54E731B3FE4B90EED ___u0;
};

/* 5572 */
struct std::_Tree<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::const_iterator baseclass_0;
};

/* 5573 */
struct CStatueInfo
{
  CStatue *m_lpStatue;
  bool m_bBonusTurn;
};

/* 5574 */
struct std::unary_function<CStatueInfo,bool>
{
  char dummy[1];
};

/* 5575 */
struct std::allocator<float>
{
  std::_Allocator_base<float> baseclass_0;
};

/* 5576 */
struct std::allocator<std::pair<float const ,CAggresiveCreature *> >::rebind<std::pair<float const ,CAggresiveCreature *> >
{
  char dummy[1];
};

/* 5577 */
struct std::allocator<std::pair<float const ,CAggresiveCreature *> >::rebind<std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::_Node>
{
  char dummy[1];
};

/* 5578 */
struct std::allocator<std::pair<float const ,CAggresiveCreature *> >::rebind<std::_Tree_nod<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::_Node *>
{
  char dummy[1];
};

/* 5579 */
struct std::allocator<std::pair<float const ,CAggresiveCreature *> >::rebind<float>
{
  char dummy[1];
};

/* 5580 */
struct std::allocator<std::pair<float const ,CAggresiveCreature *> >::rebind<char>
{
  char dummy[1];
};

/* 5581 */
struct std::pair<std::_Tree<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<float,CAggresiveCreature *,std::less<float>,std::allocator<std::pair<float const ,CAggresiveCreature *> >,0> >::iterator first;
  bool second;
};

/* 5582 */
struct CAcolyteMonster
{
  CSkillMonster baseclass_0;
};

/* 5583 */
union $43806469E9B842BEC020C6973DB4FF25
{
  std::unary_function<CStatueInfo,bool> baseclass_0;
  CStatueInfo *m_fnSecondProcess;
};

/* 5584 */
struct CCreatureManager::CProcessSecond<CStatueInfo,std::pair<unsigned long const ,CCharacter *> >
{
  $43806469E9B842BEC020C6973DB4FF25 ___u0;
};

/* 5585 */
struct CMageMonster
{
  CSkillMonster baseclass_0;
};

/* 5586 */
struct CObjectMonster
{
  CMonster baseclass_0;
};

/* 5587 */
struct std::iterator<std::random_access_iterator_tag,CMonsterMgr::MonsterProtoType,int,CMonsterMgr::MonsterProtoType const *,CMonsterMgr::MonsterProtoType const &>
{
  char dummy[1];
};

/* 5588 */
struct std::_Ranit<CMonsterMgr::MonsterProtoType,int,CMonsterMgr::MonsterProtoType const *,CMonsterMgr::MonsterProtoType const &>
{
  std::iterator<std::random_access_iterator_tag,CMonsterMgr::MonsterProtoType,int,CMonsterMgr::MonsterProtoType const *,CMonsterMgr::MonsterProtoType const &> baseclass_0;
};

/* 5589 */
union $14F4FBD37EA3C1CA57EB5D162EBA8A8D
{
  std::_Ranit<CMonsterMgr::MonsterProtoType,int,CMonsterMgr::MonsterProtoType const *,CMonsterMgr::MonsterProtoType const &> baseclass_0;
  CMonsterMgr::MonsterProtoType *_Myptr;
};

/* 5590 */
struct std::vector<CMonsterMgr::MonsterProtoType,std::allocator<CMonsterMgr::MonsterProtoType> >::const_iterator
{
  $14F4FBD37EA3C1CA57EB5D162EBA8A8D ___u0;
};

/* 5591 */
struct std::vector<CMonsterMgr::MonsterProtoType,std::allocator<CMonsterMgr::MonsterProtoType> >::iterator
{
  std::vector<CMonsterMgr::MonsterProtoType,std::allocator<CMonsterMgr::MonsterProtoType> >::const_iterator baseclass_0;
};

/* 5592 */
struct std::pair<std::vector<CMonsterMgr::MonsterProtoType,std::allocator<CMonsterMgr::MonsterProtoType> >::iterator,std::vector<CMonsterMgr::MonsterProtoType,std::allocator<CMonsterMgr::MonsterProtoType> >::iterator>
{
  std::vector<CMonsterMgr::MonsterProtoType,std::allocator<CMonsterMgr::MonsterProtoType> >::iterator first;
  std::vector<CMonsterMgr::MonsterProtoType,std::allocator<CMonsterMgr::MonsterProtoType> >::iterator second;
};

/* 5593 */
struct std::unary_function<CMonsterMgr::MonsterProtoType,bool>
{
  char dummy[1];
};

/* 5594 */
struct std::_Allocator_base<CMonsterMgr::MonsterProtoType>
{
  char dummy[1];
};

/* 5595 */
struct std::allocator<CMonsterMgr::MonsterProtoType>
{
  std::_Allocator_base<CMonsterMgr::MonsterProtoType> baseclass_0;
};

/* 5596 */
struct std::allocator<CMonsterMgr::MonsterProtoType>::rebind<CMonsterMgr::MonsterProtoType>
{
  char dummy[1];
};

/* 5597 */
struct std::_Vector_val<CMonsterMgr::MonsterProtoType,std::allocator<CMonsterMgr::MonsterProtoType> >
{
  std::allocator<CMonsterMgr::MonsterProtoType> _Alval;
};

/* 5598 */
struct std::vector<CMonsterMgr::MonsterProtoType,std::allocator<CMonsterMgr::MonsterProtoType> >
{
  std::_Vector_val<CMonsterMgr::MonsterProtoType,std::allocator<CMonsterMgr::MonsterProtoType> > baseclass_0;
  CMonsterMgr::MonsterProtoType *_Myfirst;
  CMonsterMgr::MonsterProtoType *_Mylast;
  CMonsterMgr::MonsterProtoType *_Myend;
};

/* 5599 */
union $8EED84E2F95A02AC5B2AEDAF90902976
{
  std::unary_function<CMonsterMgr::MonsterProtoType,bool> baseclass_0;
  const unsigned int m_dwKID;
};

/* 5600 */
struct CFindProtoTypeFromKID
{
  $8EED84E2F95A02AC5B2AEDAF90902976 ___u0;
};

/* 5601 */
struct std::pair<int,CMonsterShout::ShoutInfo>
{
  int first;
  CMonsterShout::ShoutInfo second;
};

/* 5602 */
struct std::allocator<int>::rebind<int>
{
  char dummy[1];
};

/* 5603 */
struct std::_Vector_val<int,std::allocator<int> >
{
  std::allocator<int> _Alval;
};

/* 5604 */
struct std::vector<int,std::allocator<int> >
{
  std::_Vector_val<int,std::allocator<int> > baseclass_0;
  int *_Myfirst;
  int *_Mylast;
  int *_Myend;
};

/* 5605 */
struct std::iterator<std::random_access_iterator_tag,int,int,int const *,int const &>
{
  char dummy[1];
};

/* 5606 */
struct std::_Ranit<int,int,int const *,int const &>
{
  std::iterator<std::random_access_iterator_tag,int,int,int const *,int const &> baseclass_0;
};

/* 5607 */
union $B590EB9C31D23546D4774D5018C57709
{
  std::_Ranit<int,int,int const *,int const &> baseclass_0;
  int *_Myptr;
};

/* 5608 */
struct std::vector<int,std::allocator<int> >::const_iterator
{
  $B590EB9C31D23546D4774D5018C57709 ___u0;
};

/* 5609 */
struct std::vector<int,std::allocator<int> >::iterator
{
  std::vector<int,std::allocator<int> >::const_iterator baseclass_0;
};

/* 5610 */
struct MonsterInfo::GetMonsterPattern::__l2::TypeAndName
{
  const char *m_szName;
  MonsterInfo::MonsterPattern m_MonsterPattern;
};

/* 5611 */
struct MonsterInfo::GetStatueEffectType::__l2::TypeAndName
{
  const char *m_szName;
  MonsterInfo::StatueEffectType m_StatueEffectType;
};

/* 5612 */
struct CNamedMonster
{
  CSkillMonster baseclass_0;
  Position m_RespawnPosition;
};

/* 5613 */
struct std::_Vector_val<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >
{
  std::allocator<CAggresiveCreature *> _Alval;
};

/* 5614 */
struct std::vector<CAggresiveCreature *,std::allocator<CAggresiveCreature *> >
{
  std::_Vector_val<CAggresiveCreature *,std::allocator<CAggresiveCreature *> > baseclass_0;
  CAggresiveCreature **_Myfirst;
  CAggresiveCreature **_Mylast;
  CAggresiveCreature **_Myend;
};

/* 5615 */
struct std::iterator<std::random_access_iterator_tag,CMonster *,int,CMonster * const *,CMonster * const &>
{
  char dummy[1];
};

/* 5616 */
struct std::_Ranit<CMonster *,int,CMonster * const *,CMonster * const &>
{
  std::iterator<std::random_access_iterator_tag,CMonster *,int,CMonster * const *,CMonster * const &> baseclass_0;
};

/* 5617 */
union $F1996A96B972BF0A0BD031CB53D7938F
{
  std::_Ranit<CMonster *,int,CMonster * const *,CMonster * const &> baseclass_0;
  CMonster **_Myptr;
};

/* 5618 */
struct std::vector<CMonster *,std::allocator<CMonster *> >::const_iterator
{
  $F1996A96B972BF0A0BD031CB53D7938F ___u0;
};

/* 5619 */
struct std::vector<CMonster *,std::allocator<CMonster *> >::iterator
{
  std::vector<CMonster *,std::allocator<CMonster *> >::const_iterator baseclass_0;
};

/* 5620 */
struct std::pair<std::vector<CMonster *,std::allocator<CMonster *> >::iterator,std::vector<CMonster *,std::allocator<CMonster *> >::iterator>
{
  std::vector<CMonster *,std::allocator<CMonster *> >::iterator first;
  std::vector<CMonster *,std::allocator<CMonster *> >::iterator second;
};

/* 5621 */
struct std::_Allocator_base<CMonster *>
{
  char dummy[1];
};

/* 5622 */
struct std::allocator<CMonster *>
{
  std::_Allocator_base<CMonster *> baseclass_0;
};

/* 5623 */
struct std::allocator<CMonster *>::rebind<CMonster *>
{
  char dummy[1];
};

/* 5624 */
struct std::_Vector_val<CMonster *,std::allocator<CMonster *> >
{
  std::allocator<CMonster *> _Alval;
};

/* 5625 */
struct std::vector<CMonster *,std::allocator<CMonster *> >
{
  std::_Vector_val<CMonster *,std::allocator<CMonster *> > baseclass_0;
  CMonster **_Myfirst;
  CMonster **_Mylast;
  CMonster **_Myend;
};

/* 5626 */
struct CDefenderMonster
{
  CSkillMonster baseclass_0;
};

/* 5627 */
struct CBossMonster
{
  CSkillMonster baseclass_0;
};

/* 5628 */
struct CGuardMonster
{
  CSkillMonster baseclass_0;
};

/* 5629 */
struct CWarriorMonster
{
  CSkillMonster baseclass_0;
};

/* 5630 */
struct CChiefMonster
{
  CSkillMonster baseclass_0;
};

/* 5631 */
struct CompareHP
{
  char dummy[1];
};

/* 5632 */
#pragma pack(push, 1)
struct StatueInfo
{
  unsigned int m_dwIndex;
  unsigned __int16 m_wKID;
  unsigned int m_dwLostHP;
};
#pragma pack(pop)

/* 5633 */
struct std::pair<unsigned short,enum CVirtualMonsterMgr::eAdminMonster>
{
  unsigned __int16 first;
  CVirtualMonsterMgr::eAdminMonster second;
};

/* 5634 */
struct std::unary_function<CNPC *,void>
{
  char dummy[1];
};

/* 5635 */
union $F2D3B01F1CCB07E74F8D2669B4CA148F
{
  std::unary_function<CNPC *,void> baseclass_0;
  void (__thiscall *_Pmemfun)(CNPC *this);
};

/* 5636 */
struct std::mem_fun_t<void,CNPC>
{
  $F2D3B01F1CCB07E74F8D2669B4CA148F ___u0;
};

/* 5637 */
struct std::unary_function<std::mem_fun_t<void,CNPC>,bool>
{
  char dummy[1];
};

/* 5638 */
struct std::unary_function<CNPC::GoodInfo,bool>
{
  char dummy[1];
};

/* 5639 */
union $60115CEB3EA15037ED54C5DEFADFA1F3
{
  std::unary_function<CNPC::GoodInfo,bool> baseclass_0;
  const unsigned __int16 m_wItemID;
};

/* 5640 */
struct CFindGood
{
  $60115CEB3EA15037ED54C5DEFADFA1F3 ___u0;
};

/* 5641 */
union $FC2911C16583E2E39AE2C5FBCB50281A
{
  std::unary_function<std::mem_fun_t<void,CNPC>,bool> baseclass_0;
  std::mem_fun_t<void,CNPC> *m_fnSecondProcess;
};

/* 5642 */
struct CCreatureManager::CProcessSecond<std::mem_fun_t<void,CNPC>,std::pair<unsigned long const ,CNPC *> >
{
  $FC2911C16583E2E39AE2C5FBCB50281A ___u0;
};

/* 5643 */
#pragma pack(push, 1)
struct PktCampCmd
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwCampID;
  char m_cState;
  unsigned int m_dwValue1;
  unsigned int m_dwValue2;
  char m_cSubCmd;
};
#pragma pack(pop)

/* 5644 */
#pragma pack(push, 1)
struct PktCampRight
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwCampID;
  CampRight m_CampRight;
};
#pragma pack(pop)

/* 5645 */
#pragma pack(push, 1)
struct CampShopInfo
{
  unsigned int m_dwTempSafe;
  char m_cTax;
  unsigned int m_dwBufferSize;
  char m_cItemNum;
};
#pragma pack(pop)

/* 5646 */
#pragma pack(push, 1)
struct PktCampShopInfo
{
  PktBase baseclass_0;
  unsigned int m_dwCampID;
  CampShopInfo m_CampShopInfo;
};
#pragma pack(pop)

/* 5647 */
struct Castle::CCastleBlessMgr::sCastleBlessInfo
{
  unsigned __int16 m_wGainTaxCount;
  char m_cUpgradeStep;
  char m_cBonusPercent;
  float m_fArea;
  char m_cTitle;
};

/* 5648 */
struct Castle::CCastleBlessMgr
{
  char dummy[1];
};

/* 5649 */
#pragma pack(push, 1)
struct PktMiningCampMineralInfo
{
  PktBase baseclass_0;
  unsigned int m_dwCampID;
  unsigned int m_dwRemainTime;
  char m_cState;
  char m_cMineralType;
  char m_cNum;
  unsigned __int16 m_wSize;
};
#pragma pack(pop)

/* 5650 */
struct CampMineralInfo
{
  unsigned __int16 m_wMineralID;
  unsigned __int16 m_wAmount;
};

/* 5651 */
struct CMiningCamp
{
  CCamp baseclass_0;
  std::map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > > m_AccumulatedMineralMap;
  std::map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > > m_TemporaryMineralMap;
};

/* 5652 */
struct PktGuildMemberGoldUpdate
{
  PktBase baseclass_0;
  unsigned int m_dwGID;
  unsigned int m_dwCID;
  unsigned int m_dwGold;
};

/* 5653 */
struct ZoneChannelInfo
{
  char m_cZone;
  char m_cChannel;
};

/* 5654 */
#pragma pack(push, 1)
struct PktCampInfo
{
  PktBase baseclass_0;
  bool m_bStartFlag;
  unsigned int m_dwCID;
  unsigned __int16 m_wSize;
};
#pragma pack(pop)

/* 5655 */
#pragma pack(push, 1)
struct PktGuildPosition
{
  PktBase baseclass_0;
  unsigned int m_dwGID;
  unsigned int m_dwCID;
  char m_cPosition;
  char m_cType;
};
#pragma pack(pop)

/* 5656 */
#pragma pack(push, 1)
struct PktCreateCastle
{
  PktBase baseclass_0;
  unsigned int m_dwCastleID;
  unsigned int m_dwGID;
  char m_cZone;
  char m_cNameID;
  char m_cUpgradeStep;
  char m_cInvincibleCount;
  unsigned __int16 m_wTotalSiegeCount;
  unsigned int m_dwTotalTaxMoney;
  float m_fPosX;
  float m_fPosY;
  float m_fPosZ;
  unsigned __int16 m_wItemID;
  char m_cItemNum[9];
  CastleRight m_CastleRight;
  CastleTaxInfo m_CastleTax[5];
};
#pragma pack(pop)

/* 5657 */
#pragma pack(push, 1)
struct PktCreateSiegeArms
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwOwnerID;
  unsigned __int16 m_wObjectType;
  unsigned int m_dwGID;
  unsigned int m_dwHP;
  char m_cZone;
  char m_cChannel;
  char m_cState;
  char m_cUpgradeStep;
  POS m_Pos;
};
#pragma pack(pop)

/* 5658 */
#pragma pack(push, 1)
struct PktCreateCamp
{
  PktBase baseclass_0;
  unsigned int m_dwActorCID;
  unsigned int m_dwCID;
  unsigned int m_dwCampID;
  unsigned int m_dwGID;
  unsigned int m_dwHP;
  unsigned __int16 m_wObjectType;
  char m_cZone;
  char m_cChannel;
  char m_cState;
  char m_cSubState;
  char m_cUpgradeStep;
  char m_cNation;
  CampRight m_CampRight;
  POS m_Pos;
  char m_cMaterial;
};
#pragma pack(pop)

/* 5659 */
#pragma pack(push, 1)
struct PktSiegeArmsCmd
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwArmsID;
  char m_cState;
  unsigned int m_dwValue;
  char m_cSubCmd;
};
#pragma pack(pop)

/* 5660 */
#pragma pack(push, 1)
struct GuildRelationDB
{
  unsigned int m_dwGID;
  unsigned int m_dwTargetGID;
  char m_cRelation;
};
#pragma pack(pop)

/* 5661 */
struct PktUA
{
  PktBase baseclass_0;
  sockaddr_in m_PrivateAddress;
  unsigned int m_dwCharID;
};

/* 5662 */
#pragma pack(push, 1)
struct PktNewSiegeBroadCast
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  char m_cType;
};
#pragma pack(pop)

/* 5663 */
struct PktAI
{
  PktBase baseclass_0;
  AddressInfo m_AddressInfo;
};

/* 5664 */
#pragma pack(push, 1)
struct PktGuildInclination
{
  PktBase baseclass_0;
  unsigned int m_dwUID;
  char m_cInclination;
};
#pragma pack(pop)

/* 5665 */
#pragma pack(push, 1)
struct PktPMD
{
  PktDD baseclass_0;
  unsigned int m_dwPartyID;
  unsigned int m_dwSenderID;
  unsigned int m_dwGID;
  unsigned int m_dwServerID;
  unsigned __int16 m_wClass;
  char m_cLevel;
  char m_strSenderName[16];
};
#pragma pack(pop)

/* 5666 */
#pragma pack(push, 1)
struct PktSiegeBroadCast
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwOwnerID;
  unsigned int m_dwGID;
  unsigned int m_dwNowHP;
  unsigned int m_dwMaxHP;
  unsigned int m_dwRiderID[10];
  unsigned __int16 m_wObjectType;
  char m_cState;
  char m_cSubState;
  char m_cUpgradeStep;
  char m_cUpgradeType;
  float m_fDefaultDir;
  CNetworkPos m_NetworkPos;
};
#pragma pack(pop)

/* 5667 */
#pragma pack(push, 1)
struct CastleObjectInfoDB
{
  unsigned int m_dwCID;
  unsigned int m_dwCastleID;
  unsigned int m_dwHP;
  unsigned __int16 m_wObjectType;
  float m_fDefaultDir;
  char m_cState;
  char m_cSubState;
  char m_cUpgradeStep;
  char m_cUpgradeType;
  TIME m_RemainUpTime;
  POS m_Pos;
};
#pragma pack(pop)

/* 5668 */
#pragma pack(push, 1)
struct PktTakeCastleJewel
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwCastleID;
  char m_cSubCmd;
  unsigned __int16 m_wItemID;
  char m_cIndex;
  char m_cNum;
  Item::ItemPos m_Pos;
};
#pragma pack(pop)

/* 5669 */
#pragma pack(push, 1)
struct PktPC
{
  PktBase baseclass_0;
  unsigned int m_dwPartyID;
  unsigned int m_dwSenderID;
  unsigned int m_dwReferenceID;
  unsigned __int16 m_wCmd;
};
#pragma pack(pop)

/* 5670 */
struct PktSiegeBroadCast2nd
{
  PktBase baseclass_0;
};

/* 5671 */
struct PktCreateGuild
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwGID;
  char m_cInclination;
  char m_szGuildName[11];
};

/* 5672 */
#pragma pack(push, 1)
struct PktGuildLevel
{
  PktBase baseclass_0;
  unsigned int m_dwUID;
  char m_cLevel;
  unsigned int m_dwGold;
};
#pragma pack(pop)

/* 5673 */
struct PktFertilityInfo
{
  PktBase baseclass_0;
  unsigned __int16 m_wNum;
  unsigned __int16 m_wSize;
};

/* 5674 */
#pragma pack(push, 1)
struct PktPID
{
  PktDD baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_dwPartyID;
  unsigned int m_dwServerID;
  unsigned int m_dwGID;
  unsigned __int16 m_wClass;
  char m_cLevel;
};
#pragma pack(pop)

/* 5675 */
#pragma pack(push, 1)
struct CastleMineralInfoDB
{
  unsigned int m_dwCastleID;
  unsigned __int16 m_wMineralID;
  unsigned __int16 m_wAmount;
  char m_cFlag;
};
#pragma pack(pop)

/* 5676 */
#pragma pack(push, 1)
struct PktPIDAck
{
  PktDD baseclass_0;
  PARTY m_Party;
  unsigned int m_dwCharID;
  unsigned int m_dwServerID;
  unsigned int m_dwGID;
  unsigned __int16 m_wClass;
  char m_cLevel;
};
#pragma pack(pop)

/* 5677 */
#pragma pack(push, 1)
struct PktGuildMemberFameUpdate
{
  PktBase baseclass_0;
  unsigned int m_dwGID;
  unsigned int m_dwCID;
  char m_cType;
  int m_nAddFame;
};
#pragma pack(pop)

/* 5678 */
struct PktProcessMining
{
  PktBase baseclass_0;
  unsigned int m_dwProcessType;
};

/* 5679 */
#pragma pack(push, 1)
struct PktPCInfo
{
  PktBase baseclass_0;
  unsigned int m_dwPartyID;
  unsigned int m_dwMemberID;
  char m_cCmd;
};
#pragma pack(pop)

/* 5680 */
struct PktCastleMineralInfo
{
  PktBase baseclass_0;
  unsigned int m_dwCastleID;
  char m_cMineralType;
  char m_cNum;
  unsigned __int16 m_wSize;
};

/* 5681 */
#pragma pack(push, 1)
struct PktCPDAck
{
  PktDD baseclass_0;
  PARTY m_Party;
  unsigned int m_dwLeaderID;
  unsigned int m_dwMemberID;
  unsigned int m_dwLeaderGID;
  unsigned __int16 m_wLeaderClass;
  char m_cLeaderLevel;
  unsigned int m_dwMemberGID;
  unsigned __int16 m_wMemberClass;
  char m_cMemberLevel;
  char m_cZone;
};
#pragma pack(pop)

/* 5682 */
#pragma pack(push, 1)
struct FertilityInfoDB
{
  unsigned int m_dwVeinColor;
  unsigned int m_dwFertility;
  char m_cZone;
  char m_cChannel;
};
#pragma pack(pop)

/* 5683 */
struct PktCampMessage::sRight
{
  char m_cCampControl;
};

/* 5684 */
#pragma pack(push, 1)
struct PktCampMessage
{
  PktBase baseclass_0;
  char m_szMasterName[16];
  char m_szPCName[16];
  char m_szGuildName[11];
  unsigned int m_dwCampID;
  unsigned int m_dwGID;
  char m_cZone;
  char m_cMsgCmd;
  char m_cRemainTime;
  char m_cNation;
  PktCampMessage::sRight m_Right;
  bool m_bNotify;
  int m_nValue1;
  int m_nValue2;
  char m_cTimeChk;
};
#pragma pack(pop)

/* 5685 */
#pragma pack(push, 1)
struct PktCastleRight
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwCastleID;
  CastleRight m_CastleRight;
};
#pragma pack(pop)

/* 5686 */
struct CWorldWeapon
{
  CCamp baseclass_0;
  int m_iFireX;
  int m_iFireZ;
  int m_iWorldWeaponCount;
};

/* 5687 */
struct PktCastleSiegeCount
{
  PktBase baseclass_0;
  unsigned int m_dwCastleID;
  char m_cSiegeCount;
  char m_cInvincibleCount;
  unsigned __int16 m_wTotalSiegeCount;
};

/* 5688 */
#pragma pack(push, 1)
struct PktWarOnOff
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  char m_cType;
  char m_cFlag;
};
#pragma pack(pop)

/* 5689 */
#pragma pack(push, 1)
struct PktPI
{
  PktBase baseclass_0;
  PARTY_EX m_Party;
};
#pragma pack(pop)

/* 5690 */
#pragma pack(push, 1)
struct PktRealmPoint
{
  PktBase baseclass_0;
  char m_cRealmPoint;
  unsigned int m_dwCID;
  char m_cType;
};
#pragma pack(pop)

/* 5691 */
struct TimeInfo
{
  char m_cMonth;
  char m_cDay;
  char m_cHour;
  char m_cMinute;
  unsigned int m_dwTime;
};

/* 5692 */
#pragma pack(push, 1)
struct GuildTimeInfo
{
  bool m_bUpdated;
  char m_cNowGuildTime;
  TimeInfo m_TimeInfo;
};
#pragma pack(pop)

/* 5693 */
#pragma pack(push, 1)
struct PktDPD
{
  PktDD baseclass_0;
  unsigned int m_dwPartyID;
};
#pragma pack(pop)

/* 5694 */
#pragma pack(push, 1)
struct CampInfoDB
{
  unsigned int m_dwCampID;
  unsigned int m_dwGID;
  unsigned int m_dwHP;
  char m_cZone;
  char m_cChannel;
  unsigned __int16 m_wObjectType;
  char m_cState;
  char m_cSubState;
  char m_cUpgradeStep;
  TIME m_TimeValue;
  TIME m_LastUseTime;
  char m_szRight[10];
  POS m_Pos;
  char m_cMaterial;
  char m_cSiegeCount;
};
#pragma pack(pop)

/* 5695 */
#pragma pack(push, 1)
struct PktChat
{
  PktBase baseclass_0;
  unsigned int m_dwSenderCID;
  char m_cCmd;
  char m_cNum;
};
#pragma pack(pop)

/* 5696 */
struct PktFI
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
};

/* 5697 */
#pragma pack(push, 1)
struct PktCastleUpdate
{
  PktBase baseclass_0;
  unsigned int m_dwCastleID;
  unsigned int m_dwGID;
  unsigned __int16 m_wTax;
  unsigned int m_dwTaxMoney;
  char m_cInvincibleDay;
  char m_cTaxMoneyRemainDay;
  CastleRight m_CastleRight;
};
#pragma pack(pop)

/* 5698 */
struct PktCastleTaxMove
{
  PktBase baseclass_0;
  unsigned int m_dwCastleID;
  unsigned int m_dwMoveTempMoney[5];
  unsigned int m_dwResultTaxMoney[5];
};

/* 5699 */
#pragma pack(push, 1)
struct PktGuildRight
{
  PktBase baseclass_0;
  unsigned int m_dwUID;
  GuildRight m_GuildRight;
};
#pragma pack(pop)

/* 5700 */
#pragma pack(push, 1)
struct RealmTimeInfo
{
  bool m_bUpdated;
  char m_cNowRealmTime;
  TimeInfo m_TimeInfo;
};
#pragma pack(pop)

/* 5701 */
#pragma pack(push, 1)
struct SiegeTimeInfo
{
  bool m_bUpdated;
  char m_cNowSiegeTime;
  TimeInfo m_TimeInfo;
};
#pragma pack(pop)

/* 5702 */
#pragma pack(push, 1)
struct PktGameTimeInfo
{
  PktBase baseclass_0;
  char m_cType;
  char m_cCastleNum;
  unsigned __int16 m_wSize;
  GuildTimeInfo m_GuildTimeInfo;
  RealmTimeInfo m_RealmTimeInfo;
  SiegeTimeInfo m_SiegeTimeInfo;
};
#pragma pack(pop)

/* 5703 */
#pragma pack(push, 1)
struct PktGuildRelationInfo
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwGID;
  unsigned __int16 m_wNodeNum;
};
#pragma pack(pop)

/* 5704 */
struct PktTakeMaterial
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwCampID;
  char m_cSubCmd;
  char m_cNum;
  Item::ItemPos m_Pos;
};

/* 5705 */
#pragma pack(push, 1)
struct GuildMemberInfoNode
{
  unsigned int m_dwCID;
  char m_szName[16];
  char m_cTactics;
  unsigned int m_dwFame;
  unsigned int m_dwGold;
  unsigned int m_dwServerID;
  char m_cRank;
  char m_cTitle;
  char m_cLevel;
  char m_cClass;
  char m_cGuildWarFlag;
};
#pragma pack(pop)

/* 5706 */
#pragma pack(push, 1)
struct PktGuildCmd
{
  PktBase baseclass_0;
  unsigned int m_dwGID;
  unsigned int m_dwSenderID;
  unsigned int m_dwReferenceID;
  char m_szGuildName[11];
  char m_szSenderName[16];
  unsigned __int16 m_wCmd;
};
#pragma pack(pop)

/* 5707 */
#pragma pack(push, 1)
struct PktCastleCmd
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwCastleID;
  unsigned int m_dwCastleObjectID;
  unsigned int m_dwValue1;
  unsigned int m_dwValue2;
  char m_cState;
  char m_cSubCmd;
};
#pragma pack(pop)

/* 5708 */
struct MiningCampInfo
{
  char m_cAccumulatedNum;
  char m_cTemporaryNum;
  unsigned __int16 m_wSize;
};

/* 5709 */
#pragma pack(push, 1)
struct PktWorldWeaponInfo
{
  PktBase baseclass_0;
  char m_cKarRemainSiegeTime;
  char m_cMerRemainSiegeTime;
};
#pragma pack(pop)

/* 5710 */
#pragma pack(push, 1)
struct PktGuildMemberInfoUpdate
{
  PktBase baseclass_0;
  unsigned int m_dwGID;
  unsigned int m_dwCID;
  Guild::MemberListInfo m_MemberListInfo;
  Guild::MemberDetailInfo m_MemberDetailInfo;
};
#pragma pack(pop)

/* 5711 */
struct PktWh
{
  PktBase baseclass_0;
  char m_SenderName[16];
  char m_RecverName[16];
};

/* 5712 */
#pragma pack(push, 1)
struct PktGuildHostilityList
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  char m_cCurrentPage;
  char m_cPageState;
  char m_cNodeNum;
  unsigned __int16 m_wTotalItemNum;
  char m_szHostility[11];
  char m_szAlert[11];
};
#pragma pack(pop)

/* 5713 */
struct GuildHostilityInfoNode
{
  char m_szName[11];
  char m_cRelationType;
};

/* 5714 */
#pragma pack(push, 1)
struct PktGuildMemberList
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  char m_cMemberType;
  char m_cSortCmd;
  char m_cPage;
  char m_cTotalMemberNum;
  char m_cNodeNum;
};
#pragma pack(pop)

/* 5715 */
struct PktCastleInfo
{
  PktBase baseclass_0;
  bool m_bStartFlag;
  char m_cCastleObjectNum;
  unsigned __int16 m_wSize;
};

/* 5716 */
struct CastleMineral
{
  unsigned __int16 m_wMineralID;
  unsigned __int16 m_wAmount;
};

/* 5717 */
#pragma pack(push, 1)
struct PktGuildDB
{
  PktBase baseclass_0;
  bool m_bStartFlag;
  unsigned int m_dwGID;
  char m_cTotalMemberNum;
  char m_cRelationByMineNum;
  char m_cRelationByTargetNum;
  unsigned __int16 m_wSize;
};
#pragma pack(pop)

/* 5718 */
#pragma pack(push, 1)
struct CampShopInfoDB
{
  unsigned int m_dwCampID;
  unsigned int m_dwTotalSize;
  char m_cItemNum;
  char m_aryItemContainer[7995];
  unsigned int m_dwTempSafe;
  char m_cTax;
};
#pragma pack(pop)

/* 5719 */
#pragma pack(push, 1)
struct PktStealthInfo
{
  PktBase baseclass_0;
  bool m_bUseStealth;
};
#pragma pack(pop)

/* 5720 */
#pragma pack(push, 1)
struct PktGuildRelation
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwGID;
  unsigned int m_dwTargetGID;
  unsigned int m_dwValue;
  char m_cSubCmd;
  char m_szGuildName[11];
  char m_szTempGuildName[11];
};
#pragma pack(pop)

/* 5721 */
struct GameTimeDB
{
  char m_cGuildTime;
  char m_cRealmTime;
  char m_cSiegeTime;
  char m_cMiningTime;
};

/* 5722 */
#pragma pack(push, 1)
struct StatueInfoDB
{
  unsigned int m_dwIndex;
  char m_cChannel;
  unsigned __int16 m_wKID;
  unsigned int m_dwLostHP;
};
#pragma pack(pop)

/* 5723 */
#pragma pack(push, 1)
struct PktCPD
{
  PktDD baseclass_0;
  unsigned int m_dwLeaderID;
  unsigned int m_dwMemberID;
  unsigned int m_dwLeaderGID;
  unsigned __int16 m_wLeaderClass;
  char m_cLeaderLevel;
  unsigned int m_dwMemberGID;
  unsigned __int16 m_wMemberClass;
  char m_cMemberLevel;
};
#pragma pack(pop)

/* 5724 */
struct CastleMineralInfo
{
  char m_cAccumulatedNum;
  char m_cTemporaryNum;
  unsigned __int16 m_wSize;
};

/* 5725 */
#pragma pack(push, 1)
struct GuildRelationInfoNode
{
  unsigned int m_dwGID;
  char m_cRelationByMine;
  char m_cRelationByTarget;
};
#pragma pack(pop)

/* 5726 */
#pragma pack(push, 1)
struct PktPFAck
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  char m_cMemberFindPartyNum;
  char m_cPartyFindMemberNum;
};
#pragma pack(pop)

/* 5727 */
struct PktGuildList
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  char m_cSortCmd;
  char m_cPage;
  char m_cSmallNodeNum;
  char m_cLargeNodeNum;
};

/* 5728 */
struct WorldWeaponInfoDB
{
  char m_cZone;
  char m_cChannel;
  char m_cKarRemainSiegeTime;
  char m_cMerRemainSiegeTime;
};

/* 5729 */
#pragma pack(push, 1)
struct PktGuildSafe
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwGold;
  char m_cCmd;
};
#pragma pack(pop)

/* 5730 */
#pragma pack(push, 1)
struct PktGuildMark
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwGID;
  char m_szMark[433];
  unsigned int m_dwGold;
};
#pragma pack(pop)

/* 5731 */
#pragma pack(push, 1)
struct CastleTaxInfoDB
{
  unsigned int m_dwCastleID;
  char m_cTaxType;
  char m_cTax;
  unsigned int m_dwTempTaxMoney;
  unsigned int m_dwTaxMoney;
  char m_cTaxChangable;
};
#pragma pack(pop)

/* 5732 */
#pragma pack(push, 1)
struct PktFIAck
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_cOtherNation;
  char m_cOtherClass;
  unsigned int m_dwFame;
  unsigned int m_dwMileage;
  char m_cRankingByRace;
  char m_cRankingByClass;
  char m_cCmd;
  char m_szWinCharName[16];
  char m_szLoseCharName[16];
};
#pragma pack(pop)

/* 5733 */
struct PktPF
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
};

/* 5734 */
#pragma pack(push, 1)
struct PktPCAck
{
  PktBase baseclass_0;
  AddressInfo m_SenderAddressInfo;
  char m_strSenderName[16];
  unsigned int m_dwPartyID;
  unsigned int m_dwSenderID;
  unsigned int m_dwReferenceID;
  unsigned int m_dwReferenceGID;
  char m_cCmd;
};
#pragma pack(pop)

/* 5735 */
#pragma pack(push, 1)
struct PktAP
{
  PktBase baseclass_0;
  unsigned int m_dwAffectedID;
  unsigned int m_dwCasterID;
  char m_cCmd;
};
#pragma pack(pop)

/* 5736 */
#pragma pack(push, 1)
struct PktGuildSafeAck
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwGID;
  unsigned int m_dwSafeGold;
  unsigned int m_dwCharGold;
  char m_cCmd;
  char m_szCharName[16];
};
#pragma pack(pop)

/* 5737 */
#pragma pack(push, 1)
struct PktAPAck
{
  PktBase baseclass_0;
  unsigned int m_dwCasterID;
  char m_szCasterName[16];
  char m_cCmd;
};
#pragma pack(pop)

/* 5738 */
#pragma pack(push, 1)
struct PktMyGuildInfo
{
  PktBase baseclass_0;
  unsigned int m_dwGold;
  GuildRight m_GuildRight;
  char m_cTitle;
};
#pragma pack(pop)

/* 5739 */
#pragma pack(push, 1)
struct CampMineralInfoDB
{
  unsigned int m_dwCampID;
  unsigned __int16 m_wMineralID;
  unsigned __int16 m_wAmount;
  char m_cFlag;
};
#pragma pack(pop)

/* 5740 */
struct CCastleEmblem
{
  CSiegeObject baseclass_0;
  unsigned int m_dwEnemyGID;
};

/* 5741 */
struct CCastleArms
{
  CSiegeObject baseclass_0;
};

/* 5742 */
struct CCastleGuard
{
  CCastleArms baseclass_0;
};

/* 5743 */
struct CSiegeArms
{
  CSiegeObject baseclass_0;
};

/* 5744 */
struct CAirship
{
  CSiegeArms baseclass_0;
  unsigned int m_dwPassengerCID[9];
};

/* 5745 */
struct std::pair<unsigned long,CCamp *>
{
  unsigned int first;
  CCamp *second;
};

/* 5746 */
#pragma pack(push, 1)
struct GAMELOG::sMonsterDeadLog
{
  GAMELOG::sLogBase baseclass_0;
  unsigned int m_dwMonsterCID;
  char m_cMonsterLevel;
  char m_cDropItemNum;
};
#pragma pack(pop)

/* 5747 */
#pragma pack(push, 1)
struct GAMELOG::sMoveZoneLog
{
  GAMELOG::sLogBase baseclass_0;
  char m_cDstZone;
  char m_cDstChannel;
};
#pragma pack(pop)

/* 5748 */
struct GAMELOG::sGuildLog
{
  GAMELOG::sLogBase baseclass_0;
  unsigned int m_dwGID;
  unsigned int m_dwSrcCID;
  unsigned int m_dwDstCID;
  char m_cType;
  char m_cData;
  unsigned __int16 m_usExtraDataSize;
};

/* 5749 */
struct GAMELOG::sItemAttachOption
{
  GAMELOG::sLogBase baseclass_0;
  unsigned int m_dwOldInvenGold;
  unsigned int m_dwNewInvenGold;
  char m_cSelectedOptionIndex;
  char m_cOldItemLen;
  char m_cUseItemLen;
  char m_cNewItemLen;
};

/* 5750 */
#pragma pack(push, 1)
struct GAMELOG::sTakeGoldLogV2
{
  GAMELOG::sLogBase baseclass_0;
  unsigned int m_SrcGold;
  unsigned int m_DstGold;
  unsigned int m_MoveGold;
  char m_cSrcPos;
  char m_cDstPos;
  char m_cPurpose;
};
#pragma pack(pop)

/* 5751 */
#pragma pack(push, 1)
struct GAMELOG::sItemCompensation
{
  GAMELOG::sLogBase baseclass_0;
  unsigned int m_dwOldInvenGold;
  unsigned int m_dwNewInvenGold;
  char m_cOldItemLen;
  char m_cNewItemLen;
};
#pragma pack(pop)

/* 5752 */
struct std::unary_function<CCreature,bool>
{
  char dummy[1];
};

/* 5753 */
union $66D5B9C2E22CBD1D8F5F73F48AD9FA18
{
  std::unary_function<CCreature,bool> baseclass_0;
  const unsigned int m_dwCID;
};

/* 5754 */
struct CFindCreatureFromCID
{
  $66D5B9C2E22CBD1D8F5F73F48AD9FA18 ___u0;
};

/* 5755 */
struct CCellObjectUIDMgr
{
  unsigned int m_dwCellObjectUID;
};

/* 5756 */
struct boost::singleton_pool<boost::fast_pool_allocator_tag,48,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type
{
  boost::details::pool::win32_mutex baseclass_0;
  boost::pool<boost::default_user_allocator_new_delete> p;
};

/* 5757 */
struct boost::details::pool::singleton_default<boost::singleton_pool<boost::fast_pool_allocator_tag,48,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>
{
  char dummy[1];
};

/* 5758 */
struct boost::singleton_pool<boost::fast_pool_allocator_tag,48,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 5759 */
struct boost::details::pool::singleton_default<boost::singleton_pool<boost::fast_pool_allocator_tag,48,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>::object_creator
{
  char dummy[1];
};

/* 5760 */
#pragma pack(push, 1)
struct Broadcast2nd::PktBroadcast
{
  PktBase baseclass_0;
  unsigned int m_dwCurrentPulse;
  char m_cBroadcastType;
  char m_cDataType;
};
#pragma pack(pop)

/* 5761 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::_Node *_Right;
  std::pair<unsigned long const ,CheckInfo> _Myval;
  char _Color;
  char _Isnil;
};

/* 5762 */
struct CheckInfo
{
  unsigned int m_dwCellID;
};

/* 5763 */
struct std::pair<unsigned long const ,CheckInfo>
{
  const unsigned int first;
  CheckInfo second;
};

/* 5764 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::_Node *>
{
  char dummy[1];
};

/* 5765 */
struct std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1>
{
  std::less<unsigned long> comp;
};

/* 5766 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::_Node>
{
  char dummy[1];
};

/* 5767 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::_Node> baseclass_0;
};

/* 5768 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >
{
  std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::_Node> _Alnod;
};

/* 5769 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::_Node *> baseclass_0;
};

/* 5770 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::_Node *> _Alptr;
};

/* 5771 */
struct std::_Allocator_base<std::pair<unsigned long const ,CheckInfo> >
{
  char dummy[1];
};

/* 5772 */
struct std::allocator<std::pair<unsigned long const ,CheckInfo> >
{
  std::_Allocator_base<std::pair<unsigned long const ,CheckInfo> > baseclass_0;
};

/* 5773 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,CheckInfo> > _Alval;
};

/* 5774 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CheckInfo> _Myval;
  char _Color;
  char _Isnil;
};

/* 5775 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::_Node *>
{
  char dummy[1];
};

/* 5776 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CheckInfo>,int,std::pair<unsigned long const ,CheckInfo> const *,std::pair<unsigned long const ,CheckInfo> const &>
{
  char dummy[1];
};

/* 5777 */
struct std::allocator<std::pair<unsigned long const ,CheckInfo> >::rebind<std::pair<unsigned long const ,CheckInfo> >
{
  char dummy[1];
};

/* 5778 */
struct std::allocator<std::pair<unsigned long const ,CheckInfo> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::_Node>
{
  char dummy[1];
};

/* 5779 */
struct std::allocator<std::pair<unsigned long const ,CheckInfo> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::_Node *>
{
  char dummy[1];
};

/* 5780 */
struct std::allocator<std::pair<unsigned long const ,CheckInfo> >::rebind<unsigned long>
{
  char dummy[1];
};

/* 5781 */
struct std::allocator<std::pair<unsigned long const ,CheckInfo> >::rebind<char>
{
  char dummy[1];
};

/* 5782 */
struct std::allocator<std::pair<unsigned long const ,CheckInfo> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::_Node>
{
  char dummy[1];
};

/* 5783 */
struct std::allocator<std::pair<unsigned long const ,CheckInfo> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::_Node *>
{
  char dummy[1];
};

/* 5784 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::_Node *> baseclass_0;
};

/* 5785 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::_Node>
{
  char dummy[1];
};

/* 5786 */
struct std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::_Node> baseclass_0;
};

/* 5787 */
struct std::_Bidit<std::pair<unsigned long const ,CheckInfo>,int,std::pair<unsigned long const ,CheckInfo> const *,std::pair<unsigned long const ,CheckInfo> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CheckInfo>,int,std::pair<unsigned long const ,CheckInfo> const *,std::pair<unsigned long const ,CheckInfo> const &> baseclass_0;
};

/* 5788 */
union $1265398AD4A855B3654BC61608A2EC7F
{
  std::_Bidit<std::pair<unsigned long const ,CheckInfo>,int,std::pair<unsigned long const ,CheckInfo> const *,std::pair<unsigned long const ,CheckInfo> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::_Node *_Ptr;
};

/* 5789 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::const_iterator
{
  $1265398AD4A855B3654BC61608A2EC7F ___u0;
};

/* 5790 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::const_iterator baseclass_0;
};

/* 5791 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::iterator first;
  bool second;
};

/* 5792 */
struct std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0>
{
  std::less<unsigned long> comp;
};

/* 5793 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >
{
  std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::_Node> _Alnod;
};

/* 5794 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::_Node *> _Alptr;
};

/* 5795 */
struct std::_Tree_val<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> > baseclass_0;
  std::allocator<std::pair<unsigned long const ,CheckInfo> > _Alval;
};

/* 5796 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 5797 */
struct std::map<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> > baseclass_0;
};

/* 5798 */
union $01993965AEE41D5C6B1054ED8F702457
{
  std::_Bidit<std::pair<unsigned long const ,CheckInfo>,int,std::pair<unsigned long const ,CheckInfo> const *,std::pair<unsigned long const ,CheckInfo> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::_Node *_Ptr;
};

/* 5799 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::const_iterator
{
  $01993965AEE41D5C6B1054ED8F702457 ___u0;
};

/* 5800 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::const_iterator baseclass_0;
};

/* 5801 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::iterator first;
  bool second;
};

/* 5802 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<s
{
  std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::iterator first;
  std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,0> >::iterator second;
};

/* 5803 */
struct std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 5804 */
struct std::multimap<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> > >
{
  std::_Tree<std::_Tmap_traits<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> >,1> > baseclass_0;
};

/* 5805 */
struct CheckMap
{
  std::map<unsigned long,CheckInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CheckInfo> > > *m_Map;
};

/* 5806 */
struct std::unary_function<CheckMap,bool>
{
  char dummy[1];
};

/* 5807 */
union $5B7A60CB63BC8BDF91E4675DD02414E3
{
  std::unary_function<CheckMap,bool> baseclass_0;
  CheckMap *m_fnSecondProcess;
};

/* 5808 */
struct CCreatureManager::CProcessSecond<CheckMap,std::pair<unsigned long const ,CMonster *> >
{
  $5B7A60CB63BC8BDF91E4675DD02414E3 ___u0;
};

/* 5809 */
struct CCreatureManager::CProcessSecond<CheckMap,std::pair<unsigned long const ,CCharacter *> >
{
  $5B7A60CB63BC8BDF91E4675DD02414E3 ___u0;
};

/* 5810 */
struct std::pair<unsigned long,int>
{
  unsigned int first;
  int second;
};

/* 5811 */
struct std::pair<unsigned long,MineralVeinInfo *>
{
  unsigned int first;
  MineralVeinInfo *second;
};

/* 5812 */
#pragma pack(push, 1)
struct sTargaHeader
{
  char IDLength;
  char ColorMapType;
  char ImageType;
  unsigned __int16 ColorMapOrigin;
  unsigned __int16 ColorMapSize;
  char ColorMapEntrySize;
  unsigned __int16 XOrigin;
  unsigned __int16 YOrigin;
  unsigned __int16 Width;
  unsigned __int16 Height;
  char PixelSize;
  char ImageDescriptor;
};
#pragma pack(pop)

/* 5813 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned char>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned char> cons
{
  char dummy[1];
};

/* 5814 */
struct std::allocator<VirtualArea::CBGServerMap *>::rebind<VirtualArea::CBGServerMap *>
{
  char dummy[1];
};

/* 5815 */
struct std::_Allocator_base<VirtualArea::ProtoType>
{
  char dummy[1];
};

/* 5816 */
struct std::allocator<VirtualArea::ProtoType>
{
  std::_Allocator_base<VirtualArea::ProtoType> baseclass_0;
};

/* 5817 */
struct std::allocator<VirtualArea::ProtoType>::rebind<VirtualArea::ProtoType>
{
  char dummy[1];
};

/* 5818 */
struct std::_Vector_val<VirtualArea::ProtoType,std::allocator<VirtualArea::ProtoType> >
{
  std::allocator<VirtualArea::ProtoType> _Alval;
};

/* 5819 */
struct std::vector<VirtualArea::ProtoType,std::allocator<VirtualArea::ProtoType> >
{
  std::_Vector_val<VirtualArea::ProtoType,std::allocator<VirtualArea::ProtoType> > baseclass_0;
  VirtualArea::ProtoType *_Myfirst;
  VirtualArea::ProtoType *_Mylast;
  VirtualArea::ProtoType *_Myend;
};

/* 5820 */
struct std::iterator<std::random_access_iterator_tag,VirtualArea::ProtoType,int,VirtualArea::ProtoType const *,VirtualArea::ProtoType const &>
{
  char dummy[1];
};

/* 5821 */
struct std::_Ranit<VirtualArea::ProtoType,int,VirtualArea::ProtoType const *,VirtualArea::ProtoType const &>
{
  std::iterator<std::random_access_iterator_tag,VirtualArea::ProtoType,int,VirtualArea::ProtoType const *,VirtualArea::ProtoType const &> baseclass_0;
};

/* 5822 */
union $75A6AAA3D63F18F55EAA03B40A2256AD
{
  std::_Ranit<VirtualArea::ProtoType,int,VirtualArea::ProtoType const *,VirtualArea::ProtoType const &> baseclass_0;
  VirtualArea::ProtoType *_Myptr;
};

/* 5823 */
struct std::vector<VirtualArea::ProtoType,std::allocator<VirtualArea::ProtoType> >::const_iterator
{
  $75A6AAA3D63F18F55EAA03B40A2256AD ___u0;
};

/* 5824 */
struct std::vector<VirtualArea::ProtoType,std::allocator<VirtualArea::ProtoType> >::iterator
{
  std::vector<VirtualArea::ProtoType,std::allocator<VirtualArea::ProtoType> >::const_iterator baseclass_0;
};

/* 5825 */
struct std::unary_function<VirtualArea::ProtoType,bool>
{
  char dummy[1];
};

/* 5826 */
struct std::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned char>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned char> const *,std::pair<std::basic_string<ch
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned char>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned char> cons baseclass_0;
};

/* 5827 */
struct std::iterator<std::random_access_iterator_tag,VirtualArea::CBGServerMap *,int,VirtualArea::CBGServerMap * const *,VirtualArea::CBGServerMap * const &>
{
  char dummy[1];
};

/* 5828 */
struct std::_Ranit<VirtualArea::CBGServerMap *,int,VirtualArea::CBGServerMap * const *,VirtualArea::CBGServerMap * const &>
{
  std::iterator<std::random_access_iterator_tag,VirtualArea::CBGServerMap *,int,VirtualArea::CBGServerMap * const *,VirtualArea::CBGServerMap * const &> baseclass_0;
};

/* 5829 */
union $9FECEA98923FE08CC0556740FE56000E
{
  std::_Ranit<VirtualArea::CBGServerMap *,int,VirtualArea::CBGServerMap * const *,VirtualArea::CBGServerMap * const &> baseclass_0;
  VirtualArea::CBGServerMap **_Myptr;
};

/* 5830 */
struct std::vector<VirtualArea::CBGServerMap *,std::allocator<VirtualArea::CBGServerMap *> >::const_iterator
{
  $9FECEA98923FE08CC0556740FE56000E ___u0;
};

/* 5831 */
struct std::vector<VirtualArea::CBGServerMap *,std::allocator<VirtualArea::CBGServerMap *> >::iterator
{
  std::vector<VirtualArea::CBGServerMap *,std::allocator<VirtualArea::CBGServerMap *> >::const_iterator baseclass_0;
};

/* 5832 */
struct std::pair<std::vector<VirtualArea::ProtoType,std::allocator<VirtualArea::ProtoType> >::iterator,std::vector<VirtualArea::ProtoType,std::allocator<VirtualArea::ProtoType> >::iterator>
{
  std::vector<VirtualArea::ProtoType,std::allocator<VirtualArea::ProtoType> >::iterator first;
  std::vector<VirtualArea::ProtoType,std::allocator<VirtualArea::ProtoType> >::iterator second;
};

/* 5833 */
union $FA6BFDF06A098D2209D61A9E46B2CD0D
{
  std::unary_function<VirtualArea::ProtoType,bool> baseclass_0;
  const unsigned int m_dwVID;
};

/* 5834 */
struct CFindProtoTypeFromVID
{
  $FA6BFDF06A098D2209D61A9E46B2CD0D ___u0;
};

/* 5835 */
struct std::pair<char const *,enum VirtualArea::MapType>
{
  const char *first;
  VirtualArea::MapType second;
};

/* 5836 */
struct std::pair<unsigned long,VirtualArea::MapInfo::PersonalInfo>
{
  unsigned int first;
  VirtualArea::MapInfo::PersonalInfo second;
};

/* 5837 */
#pragma pack(push, 1)
struct PktBGServerMapList
{
  PktBase baseclass_0;
  bool m_bAll;
  char m_cMapInfoNodeNum;
};
#pragma pack(pop)

/* 5838 */
struct BGServerResultInfoNode
{
  char m_cWinRace;
  char m_cPlayMin;
  char m_cKill;
  char m_cKilled;
  unsigned __int16 m_wAward;
  unsigned __int16 m_wScore[2];
};

/* 5839 */
#pragma pack(push, 1)
struct PktBGServerResultList
{
  PktBase baseclass_0;
  bool m_bAll;
  char m_cResultInfoNodeNum;
};
#pragma pack(pop)

/* 5840 */
struct BGServerMapInfoNode
{
  bool m_bPlaying;
  char m_cMapType;
  char m_cMaxCharNumOfNation;
  char m_cRemainMin;
  unsigned __int16 m_wTargetScore;
  char m_cCurrentCharNum[2];
  unsigned __int16 m_wScore[2];
};

/* 5841 */
struct std::unary_function<VirtualArea::CBGServerMap *,bool>
{
  char dummy[1];
};

/* 5842 */
union $2AFF21EA63918AD49B84FE333758C6B8
{
  std::unary_function<VirtualArea::CBGServerMap *,bool> baseclass_0;
  bool (__thiscall *_Pmemfun)(VirtualArea::CBGServerMap *this);
};

/* 5843 */
struct std::mem_fun_t<bool,VirtualArea::CBGServerMap>
{
  $2AFF21EA63918AD49B84FE333758C6B8 ___u0;
};

/* 5844 */
struct std::pair<unsigned long,CCell *>
{
  unsigned int first;
  CCell *second;
};

/* 5845 */
struct std::iterator<std::random_access_iterator_tag,CSkillMgr::ProtoTypeArray,int,CSkillMgr::ProtoTypeArray const *,CSkillMgr::ProtoTypeArray const &>
{
  char dummy[1];
};

/* 5846 */
struct std::_Ranit<CSkillMgr::ProtoTypeArray,int,CSkillMgr::ProtoTypeArray const *,CSkillMgr::ProtoTypeArray const &>
{
  std::iterator<std::random_access_iterator_tag,CSkillMgr::ProtoTypeArray,int,CSkillMgr::ProtoTypeArray const *,CSkillMgr::ProtoTypeArray const &> baseclass_0;
};

/* 5847 */
union $92A876617025C5129AA987B58B96FBB8
{
  std::_Ranit<CSkillMgr::ProtoTypeArray,int,CSkillMgr::ProtoTypeArray const *,CSkillMgr::ProtoTypeArray const &> baseclass_0;
  CSkillMgr::ProtoTypeArray *_Myptr;
};

/* 5848 */
struct std::vector<CSkillMgr::ProtoTypeArray,std::allocator<CSkillMgr::ProtoTypeArray> >::const_iterator
{
  $92A876617025C5129AA987B58B96FBB8 ___u0;
};

/* 5849 */
struct std::vector<CSkillMgr::ProtoTypeArray,std::allocator<CSkillMgr::ProtoTypeArray> >::iterator
{
  std::vector<CSkillMgr::ProtoTypeArray,std::allocator<CSkillMgr::ProtoTypeArray> >::const_iterator baseclass_0;
};

/* 5850 */
struct std::pair<std::vector<CSkillMgr::ProtoTypeArray,std::allocator<CSkillMgr::ProtoTypeArray> >::iterator,std::vector<CSkillMgr::ProtoTypeArray,std::allocator<CSkillMgr::ProtoTypeArray> >::iterator>
{
  std::vector<CSkillMgr::ProtoTypeArray,std::allocator<CSkillMgr::ProtoTypeArray> >::iterator first;
  std::vector<CSkillMgr::ProtoTypeArray,std::allocator<CSkillMgr::ProtoTypeArray> >::iterator second;
};

/* 5851 */
struct std::_Allocator_base<CSkillMgr::ProtoTypeArray>
{
  char dummy[1];
};

/* 5852 */
struct std::allocator<CSkillMgr::ProtoTypeArray>
{
  std::_Allocator_base<CSkillMgr::ProtoTypeArray> baseclass_0;
};

/* 5853 */
struct std::_Vector_val<CSkillMgr::ProtoTypeArray,std::allocator<CSkillMgr::ProtoTypeArray> >
{
  std::allocator<CSkillMgr::ProtoTypeArray> _Alval;
};

/* 5854 */
struct std::vector<CSkillMgr::ProtoTypeArray,std::allocator<CSkillMgr::ProtoTypeArray> >
{
  std::_Vector_val<CSkillMgr::ProtoTypeArray,std::allocator<CSkillMgr::ProtoTypeArray> > baseclass_0;
  CSkillMgr::ProtoTypeArray *_Myfirst;
  CSkillMgr::ProtoTypeArray *_Mylast;
  CSkillMgr::ProtoTypeArray *_Myend;
};

/* 5855 */
struct std::allocator<CSkillMgr::ProtoTypeArray>::rebind<CSkillMgr::ProtoTypeArray>
{
  char dummy[1];
};

/* 5856 */
struct CCrc32Static
{
  CCrc32StaticVtbl *vfptr;
};

/* 5857 */
struct CCrc32StaticVtbl
{
  void *(__thiscall *__vecDelDtor)(CCrc32Static *this, unsigned int);
};

/* 5858 */
struct Skill::CAddSpell<CBlazeSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5859 */
struct Skill::CAddSpell<CManaShellSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5860 */
struct Skill::CAddSpell<CRegenerationSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5861 */
struct Skill::CAddSpell<CCounterAttackSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5862 */
struct Skill::CAddSpell<CStealthSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5863 */
struct Skill::CAddSpell<CLightningPotionSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5864 */
struct Skill::CAddSpell<CWifeCrackerSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5865 */
struct Skill::CAddSpell<CChargingSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5866 */
struct Skill::CAddSpell<CArmorBrokenSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5867 */
struct Skill::CAddSpell<CChocolateSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5868 */
struct Skill::CAddSpell<CTasteWineSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5869 */
struct Skill::CAddSpell<CGuardSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5870 */
struct Skill::CAddSpell<CHoldSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5871 */
struct Skill::CAddSpell<CDefencePotionSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5872 */
struct Skill::CAddSpell<CMagicPotionSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5873 */
struct Skill::CAddSpell<CFrozenSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5874 */
struct Skill::CAddSpell<CEnchantWeaponSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5875 */
struct Skill::CAddSpell<CBrightArmorSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5876 */
struct Skill::CAddSpell<CLuckyOrbSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5877 */
struct Skill::CAddSpell<CLowerStrengthSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5878 */
struct Skill::CAddSpell<CStunSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5879 */
struct Skill::CAddSpell<CFlexibilitySpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5880 */
struct Skill::CAddSpell<CSpellPotionSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5881 */
struct Skill::CAddSpell<CExpOrbSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5882 */
struct Skill::CAddSpell<CEncourageSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5883 */
struct Skill::CAddSpell<CStrengthSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5884 */
struct Skill::CAddSpell<CEnvenomSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5885 */
struct Skill::CAddSpell<CStoneFormSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5886 */
struct Skill::CAddSpell<CHardenSkinSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5887 */
struct Skill::CAddSpell<CBombSetSpell>
{
  CSpell::Spell_Info m_Spell_Info;
};

/* 5888 */
struct std::iterator<std::random_access_iterator_tag,Skill::CProcessTable::ProcessInfo,int,Skill::CProcessTable::ProcessInfo const *,Skill::CProcessTable::ProcessInfo const &>
{
  char dummy[1];
};

/* 5889 */
struct std::_Ranit<Skill::CProcessTable::ProcessInfo,int,Skill::CProcessTable::ProcessInfo const *,Skill::CProcessTable::ProcessInfo const &>
{
  std::iterator<std::random_access_iterator_tag,Skill::CProcessTable::ProcessInfo,int,Skill::CProcessTable::ProcessInfo const *,Skill::CProcessTable::ProcessInfo const &> baseclass_0;
};

/* 5890 */
union $CD53D6118D5A1750DD669F288FE78100
{
  std::_Ranit<Skill::CProcessTable::ProcessInfo,int,Skill::CProcessTable::ProcessInfo const *,Skill::CProcessTable::ProcessInfo const &> baseclass_0;
  Skill::CProcessTable::ProcessInfo *_Myptr;
};

/* 5891 */
struct std::vector<Skill::CProcessTable::ProcessInfo,std::allocator<Skill::CProcessTable::ProcessInfo> >::const_iterator
{
  $CD53D6118D5A1750DD669F288FE78100 ___u0;
};

/* 5892 */
struct std::vector<Skill::CProcessTable::ProcessInfo,std::allocator<Skill::CProcessTable::ProcessInfo> >::iterator
{
  std::vector<Skill::CProcessTable::ProcessInfo,std::allocator<Skill::CProcessTable::ProcessInfo> >::const_iterator baseclass_0;
};

/* 5893 */
struct std::pair<std::vector<Skill::CProcessTable::ProcessInfo,std::allocator<Skill::CProcessTable::ProcessInfo> >::iterator,std::vector<Skill::CProcessTable::ProcessInfo,std::allocator<Skill::CProcessTable::ProcessInfo> >::iterator>
{
  std::vector<Skill::CProcessTable::ProcessInfo,std::allocator<Skill::CProcessTable::ProcessInfo> >::iterator first;
  std::vector<Skill::CProcessTable::ProcessInfo,std::allocator<Skill::CProcessTable::ProcessInfo> >::iterator second;
};

/* 5894 */
struct std::allocator<Skill::CProcessTable::ProcessInfo>::rebind<Skill::CProcessTable::ProcessInfo>
{
  char dummy[1];
};

/* 5895 */
struct std::pair<unsigned char const ,unsigned long>
{
  const char first;
  unsigned int second;
};

/* 5896 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned char const ,unsigned long>,int,std::pair<unsigned char const ,unsigned long> const *,std::pair<unsigned char const ,unsigned long> const &>
{
  char dummy[1];
};

/* 5897 */
struct std::greater<unsigned long>
{
  std::binary_function<unsigned long,unsigned long,bool> baseclass_0;
};

/* 5898 */
struct std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0>
{
  std::greater<unsigned long> comp;
};

/* 5899 */
struct boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex
{
  char dummy[1];
};

/* 5900 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex _Alnod;
};

/* 5901 */
struct std::_Tree_ptr<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex _Alptr;
};

/* 5902 */
struct boost::fast_pool_allocator<std::pair<unsigned char const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 5903 */
struct std::_Tree_val<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_ptr<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  boost::fast_pool_allocator<std::pair<unsigned char const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 5904 */
struct std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Right;
  std::pair<unsigned char const ,unsigned long> _Myval;
  char _Color;
  char _Isnil;
};

/* 5905 */
struct std::_Tree<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >
{
  std::_Tree_val<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 5906 */
struct std::_Bidit<std::pair<unsigned char const ,unsigned long>,int,std::pair<unsigned char const ,unsigned long> const *,std::pair<unsigned char const ,unsigned long> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned char const ,unsigned long>,int,std::pair<unsigned char const ,unsigned long> const *,std::pair<unsigned char const ,unsigned long> const &> baseclass_0;
};

/* 5907 */
union $084751CD6BDD25E00A5D0A96E2D9A206
{
  std::_Bidit<std::pair<unsigned char const ,unsigned long>,int,std::pair<unsigned char const ,unsigned long> const *,std::pair<unsigned char const ,unsigned long> const &> baseclass_0;
  std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::_Node *_Ptr;
};

/* 5908 */
struct std::_Tree<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator
{
  $084751CD6BDD25E00A5D0A96E2D9A206 ___u0;
};

/* 5909 */
struct std::_Tree<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator
{
  std::_Tree<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::const_iterator baseclass_0;
};

/* 5910 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator,b
{
  std::_Tree<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> >::iterator first;
  bool second;
};

/* 5911 */
struct std::pair<unsigned char,unsigned long>
{
  char first;
  unsigned int second;
};

/* 5912 */
struct std::map<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  std::_Tree<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::fast_pool_allocator<std::pair<unsigned char,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>,0> > baseclass_0;
};

/* 5913 */
struct std::pair<unsigned char *,unsigned char *>
{
  char *first;
  char *second;
};

/* 5914 */
struct boost::fast_pool_allocator<unsigned char,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
  char dummy[1];
};

/* 5915 */
struct boost::fast_pool_allocator<std::pair<unsigned char const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::pair<unsigned char const ,unsigned long> >
{
  char dummy[1];
};

/* 5916 */
struct boost::fast_pool_allocator<std::pair<unsigned char const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned long,std::greater<unsigned long>,boost::
{
  char dummy[1];
};

/* 5917 */
struct boost::fast_pool_allocator<std::pair<unsigned char const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<unsigned char>
{
  char dummy[1];
};

/* 5918 */
struct boost::fast_pool_allocator<std::pair<unsigned char const ,unsigned long>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<char>
{
  char dummy[1];
};

/* 5919 */
struct std::binary_function<CMonster *,CAggresiveCreature *,bool>
{
  char dummy[1];
};

/* 5920 */
union $C712F467EE96EC4125FCEDD795DB1262
{
  std::binary_function<CMonster *,CAggresiveCreature *,bool> baseclass_0;
  bool (__thiscall *_Pmemfun)(CMonster *this, CAggresiveCreature *);
};

/* 5921 */
struct std::mem_fun1_t<bool,CMonster,CAggresiveCreature *>
{
  $C712F467EE96EC4125FCEDD795DB1262 ___u0;
};

/* 5922 */
struct Respawn
{
  char dummy[1];
};

/* 5923 */
struct std::unary_function<Respawn,bool>
{
  char dummy[1];
};

/* 5924 */
union $B6160041E8337DDBFD7F6FD041267C16
{
  std::unary_function<CMonster *,bool> baseclass_0;
  std::mem_fun1_t<bool,CMonster,CAggresiveCreature *> op;
};

/* 5925 */
struct std::binder2nd<std::mem_fun1_t<bool,CMonster,CAggresiveCreature *> >
{
  $B6160041E8337DDBFD7F6FD041267C16 ___u0;
  CAggresiveCreature *value;
};

/* 5926 */
struct std::unary_function<std::binder2nd<std::mem_fun1_t<bool,CMonster,CAggresiveCreature *> >,bool>
{
  char dummy[1];
};

/* 5927 */
struct PktAdminCommandLog
{
  PktBase baseclass_0;
  unsigned int m_dwAdminCID;
  unsigned int m_dwCID;
  char m_szCommand[128];
};

/* 5928 */
union $8CF9140CD51F0E7F140EAB09125DF6CD
{
  std::unary_function<Respawn,bool> baseclass_0;
  Respawn *m_fnSecondProcess;
};

/* 5929 */
struct CCreatureManager::CProcessSecond<Respawn,std::pair<unsigned long const ,CCharacter *> >
{
  $8CF9140CD51F0E7F140EAB09125DF6CD ___u0;
};

/* 5930 */
union $84CA57B13C830AA812A8118161E117D3
{
  std::unary_function<std::binder2nd<std::mem_fun1_t<bool,CMonster,CAggresiveCreature *> >,bool> baseclass_0;
  std::binder2nd<std::mem_fun1_t<bool,CMonster,CAggresiveCreature *> > *m_fnSecondProcess;
};

/* 5931 */
struct CCreatureManager::CProcessSecond<std::binder2nd<std::mem_fun1_t<bool,CMonster,CAggresiveCreature *> >,std::pair<unsigned long const ,CMonster *> >
{
  $84CA57B13C830AA812A8118161E117D3 ___u0;
};

/* 5932 */
struct PktAdmin::__unnamed::ZoneInfo
{
  char m_cZone;
  char m_cChannel;
};

/* 5933 */
struct PktAdmin::__unnamed::EliteBonusInfo
{
  char m_cNation;
  char m_cLevel;
};

/* 5934 */
union $93A5218E6BC0505549DCBA9CF3856923
{
  PktAdmin::__unnamed::ZoneInfo m_ZoneInfo;
  PktAdmin::__unnamed::EliteBonusInfo m_EliteBonusInfo;
  unsigned __int16 m_usProtoTypeID;
};

/* 5935 */
struct PktAdmin
{
  PktBase baseclass_0;
  unsigned __int16 m_usCmd;
  char m_stName[16];
  $93A5218E6BC0505549DCBA9CF3856923 ___u3;
  POS m_Position;
  unsigned int m_dwAmount;
  unsigned int m_dwAdminCID;
};

/* 5936 */
#pragma pack(push, 1)
struct PktCharNameChange
{
  PktBase baseclass_0;
  char m_szCharName[16];
  unsigned int m_dwUID;
  unsigned int m_dwCID;
  char m_cNameChangeCount;
};
#pragma pack(pop)

/* 5937 */
struct PktBGServerMoveZone
{
  PktBase baseclass_0;
  unsigned __int16 m_wMapNumber;
  char m_cMoveType;
  char m_cZone;
};

/* 5938 */
#pragma pack(push, 1)
struct PktBGServerCharSlot
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  unsigned int m_dwUID;
  char m_cGroup;
};
#pragma pack(pop)

/* 5939 */
#pragma pack(push, 1)
struct PktBGServerMileageChange
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  char m_cGroup;
  char m_cCmd;
  unsigned int m_dwGold;
  unsigned int m_dwMileage;
};
#pragma pack(pop)

/* 5940 */
#pragma pack(push, 1)
struct PktCOp
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  RejectOption m_RejectOption;
};
#pragma pack(pop)

/* 5941 */
struct PktSC
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
};

/* 5942 */
struct PktRankingInfo
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  char m_cClass;
  char m_cPage;
  unsigned __int16 m_wNum;
};

/* 5943 */
#pragma pack(push, 1)
struct PktBP
{
  PktBase baseclass_0;
  POS m_Pos;
  char m_cZone;
  unsigned int m_dwNPCID;
  char m_cCmd;
};
#pragma pack(pop)

/* 5944 */
#pragma pack(push, 1)
struct RankingNode
{
  char m_szCharName[16];
  unsigned int m_dwPoint;
  char m_cLevel;
  char m_cClass;
};
#pragma pack(pop)

/* 5945 */
struct CRankingMgr
{
  RankingNode m_aryRanking[25][100];
};

/* 5946 */
struct RankingNode::ComparePoint
{
  char dummy[1];
};

/* 5947 */
#pragma pack(push, 1)
struct PktIP
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  char m_cStateType;
};
#pragma pack(pop)

/* 5948 */
#pragma pack(push, 1)
struct PktSRT
{
  PktBase baseclass_0;
  ChState m_State;
  Item::ItemPos m_ItemPos;
};
#pragma pack(pop)

/* 5949 */
struct PktSR
{
  PktBase baseclass_0;
  ChState m_State;
};

/* 5950 */
#pragma pack(push, 1)
struct PktCU
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  char m_cClass;
};
#pragma pack(pop)

/* 5951 */
struct PktCLo
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
};

/* 5952 */
#pragma pack(push, 1)
struct PktSZMv
{
  PktBase baseclass_0;
  POS m_NewPos;
  char m_cZone;
  char m_cChannel;
};
#pragma pack(pop)

/* 5953 */
struct PktCSAuth
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_AuthCodeType;
  unsigned int m_dwAuthCode;
  _GG_AUTH_DATA m_AuthCode2;
};

/* 5954 */
#pragma pack(push, 1)
struct PktSZ
{
  PktBase baseclass_0;
  unsigned __int16 m_cChannel;
  char m_cZone;
};
#pragma pack(pop)

/* 5955 */
struct PktCLi
{
  PktBase baseclass_0;
  unsigned int m_dwUserID;
  unsigned int m_dwCharID;
  unsigned int m_dwSessionID;
};

/* 5956 */
#pragma pack(push, 1)
struct PktOperateTrigger
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned __int16 m_wQuestID;
  char m_cPhase;
  char m_cTriggerKind;
  char m_cTrigger;
  char m_cCount;
};
#pragma pack(pop)

/* 5957 */
#pragma pack(push, 1)
struct PktCancelQuest
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned __int16 m_wQuestID;
};
#pragma pack(pop)

/* 5958 */
#pragma pack(push, 1)
struct PktStartQuest
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned int m_dwNPCID;
  unsigned __int16 m_wQuestID;
};
#pragma pack(pop)

/* 5959 */
#pragma pack(push, 1)
struct PktSk
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned __int16 m_wSkill;
  char m_cIndex;
};
#pragma pack(pop)

/* 5960 */
struct std::unary_function<Skill::CAddSpell<CInvincibleSpell>,bool>
{
  char dummy[1];
};

/* 5961 */
union $4C61D26B151B158338939D6C54DAB2E1
{
  std::unary_function<Skill::CAddSpell<CInvincibleSpell>,bool> baseclass_0;
  Skill::CAddSpell<CInvincibleSpell> *m_fnSecondProcess;
};

/* 5962 */
struct CCreatureManager::CProcessSecond<Skill::CAddSpell<CInvincibleSpell>,std::pair<unsigned long const ,CCharacter *> >
{
  $4C61D26B151B158338939D6C54DAB2E1 ___u0;
};

/* 5963 */
#pragma pack(push, 1)
struct $_TypeDescriptor$_extraBytes_23
{
  const void *pVFTable;
  void *spare;
  char name[23];
};
#pragma pack(pop)

/* 5964 */
struct PktHP
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned __int16 m_sHP;
  unsigned __int16 m_sMP;
};

/* 5965 */
#pragma pack(push, 1)
struct PktEB
{
  PktBase baseclass_0;
  char m_cEliteBonus;
};
#pragma pack(pop)

/* 5966 */
#pragma pack(push, 1)
struct PktConfigInfo
{
  PktDD baseclass_0;
  unsigned int m_dwUserID;
  unsigned int m_dwCharID;
  unsigned __int16 m_wSize;
};
#pragma pack(pop)

/* 5967 */
#pragma pack(push, 1)
struct PktLU
{
  PktBase baseclass_0;
  ChState m_State;
  unsigned int m_dwCharID;
  char m_cLevel;
};
#pragma pack(pop)

/* 5968 */
#pragma pack(push, 1)
struct PktSRTAck
{
  PktBase baseclass_0;
  ChState m_State;
  SKILL m_Skill;
  Item::ItemPos m_ItemPos;
  unsigned int m_dwGold;
};
#pragma pack(pop)

/* 5969 */
struct PktSRAck
{
  PktBase baseclass_0;
  ChState m_State;
  SKILL m_Skill;
};

/* 5970 */
struct PktIPAck
{
  PktBase baseclass_0;
  ChState m_State;
  unsigned int m_dwCharID;
};

/* 5971 */
#pragma pack(push, 1)
struct PktCUAck
{
  PktBase baseclass_0;
  ChState m_State;
  unsigned int m_dwCharID;
  unsigned int m_dwFame;
  char m_cLevel;
  char m_cClass;
};
#pragma pack(pop)

/* 5972 */
#pragma pack(push, 1)
struct PktCLiAck
{
  PktBase baseclass_0;
  sockaddr_in m_GameServerUDPAddr;
  sockaddr_in m_ChatServerTCPAddr;
  unsigned int m_dwUID;
  unsigned int m_dwServerID;
  unsigned int m_dwServerTime;
  bool m_bPeaceMode;
  bool m_bCheckRelation;
  char m_cNameChangeCount;
  char m_cAdminFlag;
  char m_cGuildWarFlag;
  char m_cRealmWarFlag;
  char m_cRealmPoint;
  char m_cTacticsFlag;
  unsigned __int16 m_usUpdate[9];
};
#pragma pack(pop)

/* 5973 */
#pragma pack(push, 1)
struct PktSZMvAck
{
  PktBase baseclass_0;
  unsigned __int16 m_wChannelNum[5];
  char m_cZone;
};
#pragma pack(pop)

/* 5974 */
#pragma pack(push, 1)
struct PktSA
{
  PktDD baseclass_0;
  unsigned int m_dwUserID;
  char m_cZone;
  char m_cChannel;
};
#pragma pack(pop)

/* 5975 */
#pragma pack(push, 1)
struct PktSZMvD
{
  PktDD baseclass_0;
  unsigned int m_dwUserID;
  char m_cZone;
  char m_cChannel;
  POS m_NewPos;
};
#pragma pack(pop)

/* 5976 */
struct PktSZAck
{
  PktBase baseclass_0;
  unsigned int m_dwServerID;
  sockaddr_in m_GameServerTCPAddr;
};

/* 5977 */
#pragma pack(push, 1)
struct PktQuestDB::ExecutingQuest
{
  unsigned __int16 m_wQuestID;
  char m_cPhase;
  char m_cTriggerCount[10];
};
#pragma pack(pop)

/* 5978 */
#pragma pack(push, 1)
struct PktQuestDB
{
  PktDD baseclass_0;
  unsigned int m_dwUID;
  unsigned int m_dwCID;
  unsigned __int16 m_wExecuteQuestSize;
  unsigned __int16 m_wHistoryQuestSize;
};
#pragma pack(pop)

/* 5979 */
#pragma pack(push, 1)
struct PktEndQuest
{
  PktBase baseclass_0;
  unsigned int m_dwCharID;
  unsigned __int16 m_wQuestID;
  bool m_bSave;
};
#pragma pack(pop)

/* 5980 */
struct std::unary_function<void (__cdecl*)(CCharacter *),bool>
{
  char dummy[1];
};

/* 5981 */
union $9FC56211705B629813DD9C19A24FB37E
{
  std::unary_function<void (__cdecl*)(CCharacter *),bool> baseclass_0;
  void (__cdecl **m_fnSecondProcess)(CCharacter *);
};

/* 5982 */
struct CCreatureManager::CProcessSecond<void (__cdecl*)(CCharacter *),std::pair<unsigned long const ,CCharacter *> >
{
  $9FC56211705B629813DD9C19A24FB37E ___u0;
};

/* 5983 */
#pragma pack(push, 1)
struct PktEventDropItem
{
  PktBase baseclass_0;
  unsigned __int16 m_usItemID;
};
#pragma pack(pop)

/* 5984 */
#pragma pack(push, 1)
struct PktGiveItemToTempInven
{
  PktBase baseclass_0;
  GiveItemInfo m_GiveItemInfo[10];
  char m_cGiveItemNum;
};
#pragma pack(pop)

/* 5985 */
struct PktUK
{
  PktBase baseclass_0;
  unsigned int m_dwUserID;
  unsigned int m_dwCharID;
  unsigned int m_dwServerID;
};

/* 5986 */
#pragma pack(push, 1)
struct PktBTN
{
  PktBase baseclass_0;
  unsigned int m_dwUserID;
  unsigned int m_dwCharID;
  unsigned int m_dwServerID;
  char m_cRemainMinute;
  char m_cBillingType;
};
#pragma pack(pop)

/* 5987 */
#pragma pack(push, 1)
struct PktSLAck
{
  PktBase baseclass_0;
  unsigned __int64 m_dlItemUID;
  unsigned int m_dwServerID;
  unsigned int m_dwClientVer;
  unsigned int m_dwCheckSum;
  char m_PatchAddress[100];
};
#pragma pack(pop)

/* 5988 */
#pragma pack(push, 1)
struct PktSCInfo
{
  PktBase baseclass_0;
  unsigned int m_dwServerID;
  char m_cChannelNum;
  unsigned __int16 m_usChannelClientNum[5];
};
#pragma pack(pop)

/* 5989 */
#pragma pack(push, 1)
struct PktSAAck
{
  PktDD baseclass_0;
  unsigned int m_dwServerID;
  in_addr m_GameAddress;
};
#pragma pack(pop)

/* 5990 */
#pragma pack(push, 1)
struct PktSZMvDAck
{
  PktDD baseclass_0;
  char m_cZone;
  unsigned __int16 m_wChannelNum[5];
};
#pragma pack(pop)

/* 5991 */
struct PktSVU
{
  PktBase baseclass_0;
  unsigned int m_dwServerID;
  in_addr m_ServerAddr;
  unsigned int m_dwClientVer;
  unsigned int m_dwCheckSum;
  char m_PatchAddress[100];
};

/* 5992 */
#pragma pack(push, 1)
struct PktAdminToolSetData
{
  PktBase baseclass_0;
  unsigned __int64 m_dwSerial;
  unsigned int m_dwRequestKey;
  unsigned int m_dwUID;
  unsigned int m_dwCID;
  char m_cType;
  char m_cOldServerGroupID;
};
#pragma pack(pop)

/* 5993 */
#pragma pack(push, 1)
struct PktAdminToolGetData
{
  PktBase baseclass_0;
  char m_szName[16];
  unsigned int m_dwRequestKey;
  unsigned int m_dwUID;
  unsigned int m_dwCID;
  char m_cType;
  char m_cOldServerGroupID;
};
#pragma pack(pop)

/* 5994 */
#pragma pack(push, 1)
struct PktAdminToolGetDataAck
{
  PktBase baseclass_0;
  unsigned int m_dwRequestKey;
  unsigned int m_dwUID;
  unsigned int m_dwCID;
  char m_cType;
  char m_cOldServerGroupID;
};
#pragma pack(pop)

/* 5995 */
#pragma pack(push, 1)
struct PktBGServerCharSlotAck
{
  PktBase baseclass_0;
  unsigned int m_dwCID;
  char m_cGroup;
  unsigned int m_dwSlotCID[5];
  char m_szSlotName[5][16];
};
#pragma pack(pop)

/* 5996 */
struct GAMELOG::PACKET::DefaultInfo
{
  PktBase baseclass_0;
  int m_dwTime;
  unsigned int m_dwFirstUID;
  unsigned int m_dwFirstCID;
  unsigned int m_dwGold;
  unsigned int m_dwSecondUID;
  unsigned int m_dwSecondCID;
  unsigned __int16 m_usPosX;
  unsigned __int16 m_usPosY;
  unsigned __int16 m_usPosZ;
  char m_cCommand;
  char m_cFlags;
};

/* 5997 */
#pragma pack(push, 1)
struct GAMELOG::PACKET::ItemInfo
{
  GAMELOG::PACKET::DefaultInfo baseclass_0;
  unsigned __int64 m_dwItemUID;
  unsigned __int16 m_usItemProtoTypeID;
  char m_cTakeType;
  char m_cItemAmount;
  char m_cItemPosX;
  char m_cItemPosY;
  char m_cItemPosZ;
  char m_cItemExtra;
};
#pragma pack(pop)

/* 5998 */
#pragma pack(push, 1)
struct GAMELOG::PACKET::EquipInfo
{
  GAMELOG::PACKET::ItemInfo baseclass_0;
  unsigned __int16 m_usRuneSocket;
  char m_cUpgradeStep;
  char m_cMaxSocket;
  char m_cMaxDurability;
  char m_cSocket[8];
  __int16 m_usAttribute[35];
};
#pragma pack(pop)

/* 5999 */
struct CSendChatPacket
{
  CChatPacket *m_chatPacket;
  const char *m_szMessage;
  PktChat::PktChatCmd m_cChatCmd;
  BattleInclination::CharData *m_senderData;
};

/* 6000 */
struct std::unary_function<CSendChatPacket,bool>
{
  char dummy[1];
};

/* 6001 */
union $EAB61CD4609974D7A573DE5D750FF325
{
  std::unary_function<CSendChatPacket,bool> baseclass_0;
  CSendChatPacket *m_fnSecondProcess;
};

/* 6002 */
struct CCreatureManager::CProcessSecond<CSendChatPacket,std::pair<unsigned long const ,CCharacter *> >
{
  $EAB61CD4609974D7A573DE5D750FF325 ___u0;
};

/* 6003 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,ChatData::CCharInfo *>,int,std::pair<unsigned long const ,ChatData::CCharInfo *> const *,std::pair<unsigned long const ,ChatData::CCharInfo *> const &>
{
  char dummy[1];
};

/* 6004 */
struct std::_Bidit<std::pair<unsigned long const ,ChatData::CCharInfo *>,int,std::pair<unsigned long const ,ChatData::CCharInfo *> const *,std::pair<unsigned long const ,ChatData::CCharInfo *> const &>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,ChatData::CCharInfo *>,int,std::pair<unsigned long const ,ChatData::CCharInfo *> const *,std::pair<unsigned long const ,ChatData::CCharInfo *> const &> baseclass_0;
};

/* 6005 */
struct std::pair<std::vector<Quest::QuestNode *,std::allocator<Quest::QuestNode *> >::iterator,std::vector<Quest::QuestNode *,std::allocator<Quest::QuestNode *> >::iterator>
{
  std::vector<Quest::QuestNode *,std::allocator<Quest::QuestNode *> >::iterator first;
  std::vector<Quest::QuestNode *,std::allocator<Quest::QuestNode *> >::iterator second;
};

/* 6006 */
struct CompareQuestIDForSort
{
  char dummy[1];
};

/* 6007 */
struct CompareQuestIDForSearch
{
  char dummy[1];
};

/* 6008 */
struct std::pair<RankingNode *,RankingNode *>
{
  RankingNode *first;
  RankingNode *second;
};

/* 6009 */
struct std::pair<unsigned long,Castle::CCastle *>
{
  unsigned int first;
  Castle::CCastle *second;
};

/* 6010 */
struct std::_Tset_traits<int,std::less<int>,std::allocator<int>,0>
{
  std::less<int> comp;
};

/* 6011 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Node>
{
  char dummy[1];
};

/* 6012 */
struct std::allocator<std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Node>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Node> baseclass_0;
};

/* 6013 */
struct std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
{
  std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Node> _Alnod;
};

/* 6014 */
struct std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Node *>
{
  char dummy[1];
};

/* 6015 */
struct std::allocator<std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Node *>
{
  std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Node *> baseclass_0;
};

/* 6016 */
struct std::_Tree_ptr<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
{
  std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> > baseclass_0;
  std::allocator<std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Node *> _Alptr;
};

/* 6017 */
struct std::_Tree_val<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
{
  std::_Tree_ptr<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> > baseclass_0;
  std::allocator<int> _Alval;
};

/* 6018 */
struct std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Node
{
  std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Node *_Right;
  int _Myval;
  char _Color;
  char _Isnil;
};

/* 6019 */
struct std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
{
  std::_Tree_val<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> > baseclass_0;
  std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 6020 */
struct std::iterator<std::bidirectional_iterator_tag,int,int,int const *,int const &>
{
  char dummy[1];
};

/* 6021 */
struct std::_Bidit<int,int,int const *,int const &>
{
  std::iterator<std::bidirectional_iterator_tag,int,int,int const *,int const &> baseclass_0;
};

/* 6022 */
union $0C84D96273F5E32B09C68B7D636AEB6B
{
  std::_Bidit<int,int,int const *,int const &> baseclass_0;
  std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Node *_Ptr;
};

/* 6023 */
struct std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::const_iterator
{
  $0C84D96273F5E32B09C68B7D636AEB6B ___u0;
};

/* 6024 */
struct std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::iterator
{
  std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::const_iterator baseclass_0;
};

/* 6025 */
struct std::pair<std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::iterator,bool>
{
  std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::iterator first;
  bool second;
};

/* 6026 */
struct std::allocator<int>::rebind<std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Node>
{
  char dummy[1];
};

/* 6027 */
struct std::allocator<int>::rebind<std::_Tree_nod<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Node *>
{
  char dummy[1];
};

/* 6028 */
struct std::allocator<int>::rebind<char>
{
  char dummy[1];
};

/* 6029 */
struct std::set<int,std::less<int>,std::allocator<int> >
{
  std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> > baseclass_0;
};

/* 6030 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::pair<unsigned long const ,CParty *> >
{
  char dummy[1];
};

/* 6031 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CParty *,std::less<unsigned long>,boost::fast_pool_all
{
  char dummy[1];
};

/* 6032 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<unsigned long>
{
  char dummy[1];
};

/* 6033 */
struct boost::fast_pool_allocator<std::pair<unsigned long const ,CParty *>,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<char>
{
  char dummy[1];
};

/* 6034 */
struct std::iterator<std::random_access_iterator_tag,GuildHostilityInfoNode,int,GuildHostilityInfoNode const *,GuildHostilityInfoNode const &>
{
  char dummy[1];
};

/* 6035 */
struct std::pair<unsigned long,unsigned char>
{
  unsigned int first;
  char second;
};

/* 6036 */
struct std::_Allocator_base<GuildHostilityInfoNode>
{
  char dummy[1];
};

/* 6037 */
struct std::_Ranit<GuildHostilityInfoNode,int,GuildHostilityInfoNode const *,GuildHostilityInfoNode const &>
{
  std::iterator<std::random_access_iterator_tag,GuildHostilityInfoNode,int,GuildHostilityInfoNode const *,GuildHostilityInfoNode const &> baseclass_0;
};

/* 6038 */
union $F178C90752C130BB14B755A02DF64230
{
  std::_Ranit<GuildHostilityInfoNode,int,GuildHostilityInfoNode const *,GuildHostilityInfoNode const &> baseclass_0;
  GuildHostilityInfoNode *_Myptr;
};

/* 6039 */
struct std::vector<GuildHostilityInfoNode,std::allocator<GuildHostilityInfoNode> >::const_iterator
{
  $F178C90752C130BB14B755A02DF64230 ___u0;
};

/* 6040 */
struct std::vector<GuildHostilityInfoNode,std::allocator<GuildHostilityInfoNode> >::iterator
{
  std::vector<GuildHostilityInfoNode,std::allocator<GuildHostilityInfoNode> >::const_iterator baseclass_0;
};

/* 6041 */
struct std::pair<std::vector<GuildHostilityInfoNode,std::allocator<GuildHostilityInfoNode> >::iterator,std::vector<GuildHostilityInfoNode,std::allocator<GuildHostilityInfoNode> >::iterator>
{
  std::vector<GuildHostilityInfoNode,std::allocator<GuildHostilityInfoNode> >::iterator first;
  std::vector<GuildHostilityInfoNode,std::allocator<GuildHostilityInfoNode> >::iterator second;
};

/* 6042 */
struct std::pair<std::vector<Guild::MemberInfo,std::allocator<Guild::MemberInfo> >::iterator,std::vector<Guild::MemberInfo,std::allocator<Guild::MemberInfo> >::iterator>
{
  std::vector<Guild::MemberInfo,std::allocator<Guild::MemberInfo> >::iterator first;
  std::vector<Guild::MemberInfo,std::allocator<Guild::MemberInfo> >::iterator second;
};

/* 6043 */
struct std::allocator<GuildHostilityInfoNode>
{
  std::_Allocator_base<GuildHostilityInfoNode> baseclass_0;
};

/* 6044 */
struct std::allocator<GuildHostilityInfoNode>::rebind<GuildHostilityInfoNode>
{
  char dummy[1];
};

/* 6045 */
struct std::_Vector_val<GuildHostilityInfoNode,std::allocator<GuildHostilityInfoNode> >
{
  std::allocator<GuildHostilityInfoNode> _Alval;
};

/* 6046 */
struct std::vector<GuildHostilityInfoNode,std::allocator<GuildHostilityInfoNode> >
{
  std::_Vector_val<GuildHostilityInfoNode,std::allocator<GuildHostilityInfoNode> > baseclass_0;
  GuildHostilityInfoNode *_Myfirst;
  GuildHostilityInfoNode *_Mylast;
  GuildHostilityInfoNode *_Myend;
};

/* 6047 */
struct SERVER_GROUP
{
  char m_Group;
  char m_Name[15];
  int m_ClientNum[2];
  in_addr m_Address;
};

/* 6048 */
#pragma pack(push, 1)
struct SERVER_LIST
{
  unsigned __int16 m_ServerNum;
  SERVER_GROUP m_ServerGroup[10];
};
#pragma pack(pop)

/* 6049 */
struct Guild::CompareMemberGold
{
  char dummy[1];
};

/* 6050 */
struct Guild::CompareRelation
{
  char dummy[1];
};

/* 6051 */
struct Guild::CompareMemberFame
{
  char dummy[1];
};

/* 6052 */
struct Guild::IsTacticsMember
{
  char dummy[1];
};

/* 6053 */
struct Guild::CompareGuildFame
{
  char dummy[1];
};

/* 6054 */
struct Guild::CompareMemberLevel
{
  char dummy[1];
};

/* 6055 */
struct Guild::SumMemberFame
{
  char dummy[1];
};

/* 6056 */
struct Guild::CompareMemberName
{
  char dummy[1];
};

/* 6057 */
struct Guild::CompareMemberClass
{
  char dummy[1];
};

/* 6058 */
struct Guild::IsCurrentMember
{
  char dummy[1];
};

/* 6059 */
struct Guild::CompareMemberTitle
{
  char dummy[1];
};

/* 6060 */
struct Guild::FnDeleteSecond
{
  char dummy[1];
};

/* 6061 */
struct Guild::CompareMemberPosition
{
  char dummy[1];
};

/* 6062 */
struct Guild::IsNotTacticsMember
{
  char dummy[1];
};

/* 6063 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Guild::CGuild *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Guild::CGuild *>
{
  char dummy[1];
};

/* 6064 */
struct std::pair<unsigned long,Guild::CGuild *>
{
  unsigned int first;
  Guild::CGuild *second;
};

/* 6065 */
struct std::iterator<std::random_access_iterator_tag,std::pair<unsigned long,Guild::CGuild *>,int,std::pair<unsigned long,Guild::CGuild *> const *,std::pair<unsigned long,Guild::CGuild *> const &>
{
  char dummy[1];
};

/* 6066 */
struct std::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Guild::CGuild *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Guild::CGuild *> const *,std::pair<std::basic_strin
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Guild::CGuild *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Guild::CGuild *> baseclass_0;
};

/* 6067 */
struct std::_Ranit<std::pair<unsigned long,Guild::CGuild *>,int,std::pair<unsigned long,Guild::CGuild *> const *,std::pair<unsigned long,Guild::CGuild *> const &>
{
  std::iterator<std::random_access_iterator_tag,std::pair<unsigned long,Guild::CGuild *>,int,std::pair<unsigned long,Guild::CGuild *> const *,std::pair<unsigned long,Guild::CGuild *> const &> baseclass_0;
};

/* 6068 */
struct std::_Allocator_base<std::pair<unsigned long,Guild::CGuild *> >
{
  char dummy[1];
};

/* 6069 */
struct std::allocator<std::pair<unsigned long,Guild::CGuild *> >
{
  std::_Allocator_base<std::pair<unsigned long,Guild::CGuild *> > baseclass_0;
};

/* 6070 */
struct std::allocator<std::pair<unsigned long,Guild::CGuild *> >::rebind<std::pair<unsigned long,Guild::CGuild *> >
{
  char dummy[1];
};

/* 6071 */
struct std::_Vector_val<std::pair<unsigned long,Guild::CGuild *>,std::allocator<std::pair<unsigned long,Guild::CGuild *> > >
{
  std::allocator<std::pair<unsigned long,Guild::CGuild *> > _Alval;
};

/* 6072 */
struct std::vector<std::pair<unsigned long,Guild::CGuild *>,std::allocator<std::pair<unsigned long,Guild::CGuild *> > >
{
  std::_Vector_val<std::pair<unsigned long,Guild::CGuild *>,std::allocator<std::pair<unsigned long,Guild::CGuild *> > > baseclass_0;
  std::pair<unsigned long,Guild::CGuild *> *_Myfirst;
  std::pair<unsigned long,Guild::CGuild *> *_Mylast;
  std::pair<unsigned long,Guild::CGuild *> *_Myend;
};

/* 6073 */
union $CBEE9D11D4F6B585E77931C9750758B8
{
  std::_Ranit<std::pair<unsigned long,Guild::CGuild *>,int,std::pair<unsigned long,Guild::CGuild *> const *,std::pair<unsigned long,Guild::CGuild *> const &> baseclass_0;
  std::pair<unsigned long,Guild::CGuild *> *_Myptr;
};

/* 6074 */
struct std::vector<std::pair<unsigned long,Guild::CGuild *>,std::allocator<std::pair<unsigned long,Guild::CGuild *> > >::const_iterator
{
  $CBEE9D11D4F6B585E77931C9750758B8 ___u0;
};

/* 6075 */
struct std::vector<std::pair<unsigned long,Guild::CGuild *>,std::allocator<std::pair<unsigned long,Guild::CGuild *> > >::iterator
{
  std::vector<std::pair<unsigned long,Guild::CGuild *>,std::allocator<std::pair<unsigned long,Guild::CGuild *> > >::const_iterator baseclass_0;
};

/* 6076 */
struct CFindFriendCID
{
  unsigned int m_dwFriendCID;
};

/* 6077 */
struct PCCheckAgreement
{
  char m_szAccount[16];
  unsigned int m_dwRet;
};

/* 6078 */
struct _REG_HAN
{
  char Name[16];
  char Reg[3];
};

/* 6079 */
struct CAuthorizeParam
{
  OleDB::_PARAM_INFO m_HanAuthParam;
  OleDB::_PARAM_INFO m_HanUpdateParam;
  OleDB::_PARAM_INFO m_HanRegParam;
  OleDB::_PARAM_INFO m_HanAuthCheckParam;
  OleDB::_PARAM_INFO m_GamaAuthParam;
  OleDB::_PARAM_INFO m_GamaGetAccountByUID;
  OleDB::_PARAM_INFO m_GamaGetUIDByAccount;
};

/* 6080 */
struct GamaGetUIDByAccount
{
  char m_szAccount[12];
  unsigned int m_dwUID;
};

/* 6081 */
struct HanLoginData
{
  char m_szAccount[16];
  char m_szPassword[32];
  _HAN_UID m_nUID;
};

/* 6082 */
struct GamaLoginData
{
  char m_szAccount[16];
  char m_szPassword[32];
  unsigned int m_dwUID;
};

/* 6083 */
struct GamaGetAccountByUID
{
  unsigned int m_dwUID;
  char m_szAccount[20];
};

/* 6084 */
union $3FED14670831426F78C1F126725788C0
{
  unsigned __int16 freq;
  unsigned __int16 code;
};

/* 6085 */
union $2467CA9704E0472D4CCF1296A763D23A
{
  unsigned __int16 dad;
  unsigned __int16 len;
};

/* 6086 */
struct ct_data_s
{
  $3FED14670831426F78C1F126725788C0 fc;
  $2467CA9704E0472D4CCF1296A763D23A dl;
};

/* 6087 */
struct static_tree_desc_s
{
  ct_data_s *static_tree;
  const int *extra_bits;
  int extra_base;
  int elems;
  int max_length;
};

/* 6088 */
struct tree_desc_s
{
  ct_data_s *dyn_tree;
  int max_code;
  static_tree_desc_s *stat_desc;
};

/* 6089 */
struct z_stream_s
{
  char *next_in;
  unsigned int avail_in;
  unsigned int total_in;
  char *next_out;
  unsigned int avail_out;
  unsigned int total_out;
  char *msg;
  internal_state *state;
  void *(__cdecl *zalloc)(void *, unsigned int, unsigned int);
  void (__cdecl *zfree)(void *, void *);
  void *opaque;
  int data_type;
  unsigned int adler;
  unsigned int reserved;
};

/* 6090 */
struct internal_state
{
  z_stream_s *strm;
  int status;
  char *pending_buf;
  unsigned int pending_buf_size;
  char *pending_out;
  int pending;
  int noheader;
  char data_type;
  char method;
  int last_flush;
  unsigned int w_size;
  unsigned int w_bits;
  unsigned int w_mask;
  char *window;
  unsigned int window_size;
  unsigned __int16 *prev;
  unsigned __int16 *head;
  unsigned int ins_h;
  unsigned int hash_size;
  unsigned int hash_bits;
  unsigned int hash_mask;
  unsigned int hash_shift;
  int block_start;
  unsigned int match_length;
  unsigned int prev_match;
  int match_available;
  unsigned int strstart;
  unsigned int match_start;
  unsigned int lookahead;
  unsigned int prev_length;
  unsigned int max_chain_length;
  unsigned int max_lazy_match;
  int level;
  int strategy;
  unsigned int good_match;
  int nice_match;
  ct_data_s dyn_ltree[573];
  ct_data_s dyn_dtree[61];
  ct_data_s bl_tree[39];
  tree_desc_s l_desc;
  tree_desc_s d_desc;
  tree_desc_s bl_desc;
  unsigned __int16 bl_count[16];
  int heap[573];
  int heap_len;
  int heap_max;
  char depth[573];
  char *l_buf;
  unsigned int lit_bufsize;
  unsigned int last_lit;
  unsigned __int16 *d_buf;
  unsigned int opt_len;
  unsigned int static_len;
  unsigned int matches;
  int last_eob_len;
  unsigned __int16 bi_buf;
  int bi_valid;
};

/* 6091 */
struct $C95D6283330011CC4EEF9CC74F2A7D10
{
  char Exop;
  char Bits;
};

/* 6092 */
union $BDFDE8BD2C31305833AB5ABFD786ED90
{
  $C95D6283330011CC4EEF9CC74F2A7D10 what;
  unsigned int pad;
};

/* 6093 */
struct inflate_huft_s
{
  $BDFDE8BD2C31305833AB5ABFD786ED90 word;
  unsigned int base;
};

/* 6094 */
struct $8276CD95D0E8B4D7C8FFE6BDF530B286
{
  unsigned int table;
  unsigned int index;
  unsigned int *blens;
  unsigned int bb;
  inflate_huft_s *tb;
};

/* 6095 */
struct inflate_codes_state
{
  int dummy;
};

/* 6096 */
struct $69CB040EA9FBCE6817A1FFFF5F88BAEE
{
  inflate_codes_state *codes;
};

/* 6097 */
union $9E3808841B7C8A8A3F3DB71F8ABE887E
{
  unsigned int left;
  $8276CD95D0E8B4D7C8FFE6BDF530B286 trees;
  $69CB040EA9FBCE6817A1FFFF5F88BAEE decode;
};

/* 6098 */
struct inflate_blocks_state
{
  inflate_block_mode mode;
  $9E3808841B7C8A8A3F3DB71F8ABE887E sub;
  unsigned int last;
  unsigned int bitk;
  unsigned int bitb;
  inflate_huft_s *hufts;
  char *window;
  char *end;
  char *read;
  char *write;
  unsigned int (__cdecl *checkfn)(unsigned int, const char *, unsigned int);
  unsigned int check;
};

/* 6099 */
struct $A1AD60A7CB977A1DBF6E2660B1E40DE7
{
  unsigned int was;
  unsigned int need;
};

/* 6100 */
union $1305242F88E2284A51774A98429A1171
{
  unsigned int method;
  $A1AD60A7CB977A1DBF6E2660B1E40DE7 check;
  unsigned int marker;
};

/* 6101 */
struct $CBC363B8B6DD383944709ED4B954A6A9
{
  inflate_huft_s *tree;
  unsigned int need;
};

/* 6102 */
struct $A30D36EE59FB41C132336408835C9B9C
{
  unsigned int get;
  unsigned int dist;
};

/* 6103 */
union $C5722576D1A2A351879A09D28606EB92
{
  $CBC363B8B6DD383944709ED4B954A6A9 code;
  unsigned int lit;
  $A30D36EE59FB41C132336408835C9B9C copy;
};

/* 6104 */
struct gz_stream
{
  z_stream_s stream;
  int z_err;
  int z_eof;
  _iobuf *file;
  char *inbuf;
  char *outbuf;
  unsigned int crc;
  char *msg;
  char *path;
  int transparent;
  char mode;
  int startpos;
};

/* 6105 */
struct config_s
{
  unsigned __int16 good_length;
  unsigned __int16 max_lazy;
  unsigned __int16 nice_length;
  unsigned __int16 max_chain;
  block_state (__cdecl *func)(internal_state *, int);
};

/* 6106 */
struct std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >
{
  std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >Vtbl *vfptr;
  std::_Mutex _Mylock;
  wchar_t *_Gfirst;
  wchar_t *_Pfirst;
  wchar_t **_IGfirst;
  wchar_t **_IPfirst;
  wchar_t *_Gnext;
  wchar_t *_Pnext;
  wchar_t **_IGnext;
  wchar_t **_IPnext;
  int _Gcount;
  int _Pcount;
  int *_IGcount;
  int *_IPcount;
  std::locale *_Plocale;
};

/* 6107 */
struct std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >Vtbl
{
  void *(__thiscall *__vecDelDtor)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, unsigned int);
  unsigned __int16 (__thiscall *overflow)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, unsigned __int16);
  unsigned __int16 (__thiscall *pbackfail)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, unsigned __int16);
  int (__thiscall *showmanyc)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this);
  unsigned __int16 (__thiscall *underflow)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this);
  unsigned __int16 (__thiscall *uflow)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this);
  int (__thiscall *xsgetn)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, wchar_t *, int);
  int (__thiscall *xsputn)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, const wchar_t *, int);
  std::fpos<int> *(__thiscall *seekoff)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, std::fpos<int> *result, int, int, int);
  std::fpos<int> *(__thiscall *seekpos)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, std::fpos<int> *result, std::fpos<int>, int);
  std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *(__thiscall *setbuf)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, wchar_t *, int);
  int (__thiscall *sync)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this);
  void (__thiscall *imbue)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, std::locale *);
};

/* 6108 */
struct std::char_traits<wchar_t>
{
  char dummy[1];
};

/* 6109 */
struct std::ctype<wchar_t>
{
  std::ctype_base baseclass_0;
  _Ctypevec _Ctype;
  _Cvtvec _Cvt;
};

/* 6110 */
struct std::basic_ostream<wchar_t,std::char_traits<wchar_t> >
{
  char dummy[56];
};

/* 6111 */
struct std::basic_ios<wchar_t,std::char_traits<wchar_t> >
{
  std::ios_base baseclass_0;
  std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *_Mystrbuf;
  std::basic_ostream<wchar_t,std::char_traits<wchar_t> > *_Tiestr;
  wchar_t _Fillch;
};

/* 6112 */
struct std::basic_istream<wchar_t,std::char_traits<wchar_t> >
{
  _BYTE gap0[4];
  int _Chcount;
  _BYTE gap8[52];
};

/* 6113 */
struct std::basic_istream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base
{
  std::basic_istream<wchar_t,std::char_traits<wchar_t> > *_Myistr;
};

/* 6114 */
struct std::basic_istream<wchar_t,std::char_traits<wchar_t> >::sentry
{
  std::basic_istream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base baseclass_0;
  bool _Ok;
};

/* 6115 */
struct std::codecvt<wchar_t,char,int>
{
  std::codecvt_base baseclass_0;
  _Cvtvec _Cvt;
};

/* 6116 */
struct std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base
{
  std::basic_ostream<wchar_t,std::char_traits<wchar_t> > *_Myostr;
};

/* 6117 */
struct std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry
{
  std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base baseclass_0;
  bool _Ok;
};

/* 6118 */
struct std::_Fac_node
{
  std::_Fac_node *_Next;
  std::locale::facet *_Facptr;
};

/* 6119 */
struct std::money_base::pattern
{
  char field[4];
};

/* 6120 */
struct std::money_base
{
  std::locale::facet baseclass_0;
};

/* 6121 */
struct std::messages_base
{
  std::locale::facet baseclass_0;
};

/* 6122 */
struct std::time_base
{
  std::locale::facet baseclass_0;
};

/* 6123 */
struct _Init_atexit
{
  char dummy[1];
};

/* 6124 */
struct std::_Init_cout
{
  char dummy[1];
};

/* 6125 */
union _dbl
{
  int lng[2];
  long double dbl;
};

/* 6126 */
struct _U32ARRAY
{
  unsigned int W[4];
};

/* 6127 */
struct _U64
{
  unsigned int W[2];
};

/* 6128 */
struct _FP128
{
  unsigned int W[4];
};

/* 6129 */
struct _FPIEEE_EXCEPTION_FLAGS
{
  int _bf0;
};

/* 6130 */
struct _FP80
{
  unsigned __int16 W[5];
};

/* 6131 */
struct _I64
{
  unsigned int W[2];
};

/* 6132 */
struct _BCD80
{
  unsigned __int16 W[5];
};

/* 6133 */
struct _FPQ64
{
  __int64 W[2];
};

/* 6134 */
union $FFED0949BFF95E95BAA1340ED8DEE152
{
  float Fp32Value;
  long double Fp64Value;
  _FP80 Fp80Value;
  _FP128 Fp128Value;
  __int16 I16Value;
  int I32Value;
  _I64 I64Value;
  unsigned __int16 U16Value;
  unsigned int U32Value;
  _U64 U64Value;
  _BCD80 Bcd80Value;
  char *StringValue;
  int CompareValue;
  _U32ARRAY U32ArrayValue;
  __int64 Q64Value;
  _FPQ64 Fpq64Value;
};

/* 6135 */
struct __declspec(align(16)) _FPIEEE_VALUE
{
  $FFED0949BFF95E95BAA1340ED8DEE152 Value;
  int _bf16;
};

/* 6136 */
struct _FPIEEE_RECORD
{
  int _bf0;
  _FPIEEE_EXCEPTION_FLAGS Cause;
  _FPIEEE_EXCEPTION_FLAGS Enable;
  _FPIEEE_EXCEPTION_FLAGS Status;
  _FPIEEE_VALUE Operand1;
  _FPIEEE_VALUE Operand2;
  _FPIEEE_VALUE Result;
};

/* 6137 */
struct $992A88C5856F6BE6869BBDDAC7BE31AD
{
  int dw0;
  int dw1;
  int dw2;
};

/* 6138 */
union $F820F6F5FE83982FD587529AAD143F77
{
  char cBuf[13];
  $992A88C5856F6BE6869BBDDAC7BE31AD _s1;
};

/* 6139 */
#pragma pack(push, 1)
struct DispLocals
{
  unsigned __int16 wUser1;
  unsigned __int16 wUser2;
  unsigned __int16 savCntrl;
  unsigned __int16 setCntrl;
  unsigned __int16 StatusWord;
  _TBYTE Fac;
  unsigned int Function;
  char ErrorType;
  char __cpower;
  unsigned int typ;
  unsigned int nam;
  __int64 arg1;
  __int64 arg2;
  __int64 retval;
  char savebuf;
  _BYTE gap3b[107];
};
#pragma pack(pop)

/* 6140 */
struct __declspec(align(2)) funtab
{
  char fnamlen;
  char fnam;
  _BYTE gap2[5];
  char fuseval;
  _BYTE gap8[5];
  char fnumarg;
  char fnumber;
};

/* 6141 */
struct _FloatOutStruct
{
  __int16 exp;
  char sign;
  char ManLen;
  char man[22];
};

/* 6142 */
struct _LDOUBLE
{
  char ld[10];
};

/* 6143 */
struct _LDBL12
{
  char ld12[12];
};

/* 6144 */
struct FpFormatDescriptor
{
  int max_exp;
  int min_exp;
  int precision;
  int exp_width;
  int format_width;
  int bias;
};

/* 6145 */
struct DOUBLE
{
  long double x;
};

/* 6146 */
struct FLOAT
{
  float f;
};

/* 6147 */
struct _strflt
{
  int sign;
  int decpt;
  int flag;
  char *mantissa;
};

/* 6148 */
struct _flt
{
  int flags;
  int nbytes;
  int lval;
  long double dval;
};

/* 6149 */
union FT
{
  unsigned __int64 ft_scalar;
  _FILETIME ft_struct;
};

/* 6150 */
struct threadmbcinfostruct
{
  int refcount;
  int mbcodepage;
  int ismbcodepage;
  int mblcid;
  unsigned __int16 mbulinfo[6];
  char mbctype[257];
  char mbcasemap[256];
};

/* 6151 */
struct __lc_time_data
{
  char *wday_abbr[7];
  char *wday[7];
  char *month_abbr[12];
  char *month[12];
  char *ampm[2];
  char *ww_sdatefmt;
  char *ww_ldatefmt;
  char *ww_timefmt;
  unsigned int ww_lcid;
  int ww_caltype;
  int refcount;
};

/* 6152 */
struct threadlocaleinfostruct
{
  int refcount;
  unsigned int lc_codepage;
  unsigned int lc_collate_cp;
  unsigned int lc_handle[6];
  int lc_clike;
  int mb_cur_max;
  int *lconv_intl_refcount;
  int *lconv_num_refcount;
  int *lconv_mon_refcount;
  lconv *lconv;
  lconv *lconv_intl;
  int *ctype1_refcount;
  unsigned __int16 *ctype1;
  const unsigned __int16 *pctype;
  __lc_time_data *lc_time_curr;
  __lc_time_data *lc_time_intl;
};

/* 6153 */
struct _tiddata
{
  unsigned int _tid;
  unsigned int _thandle;
  int _terrno;
  unsigned int _tdoserrno;
  unsigned int _fpds;
  unsigned int _holdrand;
  char *_token;
  unsigned __int16 *_wtoken;
  char *_mtoken;
  char *_errmsg;
  unsigned __int16 *_werrmsg;
  char *_namebuf0;
  unsigned __int16 *_wnamebuf0;
  char *_namebuf1;
  unsigned __int16 *_wnamebuf1;
  char *_asctimebuf;
  unsigned __int16 *_wasctimebuf;
  void *_gmtimebuf;
  char *_cvtbuf;
  void *_initaddr;
  void *_initarg;
  void *_pxcptacttab;
  void *_tpxcptinfoptrs;
  int _tfpecode;
  threadmbcinfostruct *ptmbcinfo;
  threadlocaleinfostruct *ptlocinfo;
  unsigned int _NLG_dwCode;
  void *_terminate;
  void *_unexpected;
  void *_translator;
  void *_purecall;
  void *_curexception;
  void *_curcontext;
  int _ProcessingThrow;
  void *_pFrameInfoChain;
};

/* 6154 */
struct transitiondate
{
  int yr;
  int yd;
  int ms;
};

/* 6155 */
struct ioinfo
{
  int osfhnd;
  char osfile;
  char pipech;
  int lockinitflag;
  _RTL_CRITICAL_SECTION lock;
};

/* 6156 */
union $C8014B43F160BFD769FAE3F15553333C
{
  char sz[512];
};

/* 6157 */
union $519E2A0ABDBAFFC353FD5D86715BA24D
{
  char *sz;
  unsigned __int16 *wz;
};

/* 6158 */
struct _count_string
{
  __int16 Length;
  __int16 MaximumLength;
  char *Buffer;
};

/* 6159 */
struct _XCPT_ACTION
{
  unsigned int XcptNum;
  int SigNum;
  void (__cdecl *XcptAction)(int);
};

/* 6160 */
struct $DB77212368275D3B4434BB37CB9DB500
{
  _RTL_CRITICAL_SECTION *lock;
  $1DD7A03358E0D01DD359262876E6A0F0 kind;
};

/* 6161 */
struct rterrmsgs
{
  int rterrno;
  char *rterrtxt;
};

/* 6162 */
struct tagLC_ID
{
  unsigned __int16 wLanguage;
  unsigned __int16 wCountry;
  unsigned __int16 wCodePage;
};

/* 6163 */
struct tagLC_STRINGS
{
  char szLanguage[64];
  char szCountry[64];
  char szCodePage[16];
};

/* 6164 */
struct _is_ctype_compatible
{
  unsigned int id;
  int is_clike;
};

/* 6165 */
struct $CCE4C80AD10999675C882A48A2A518E7
{
  const char *catname;
  char *locale;
  int (__cdecl *init)();
};

/* 6166 */
struct tagRGLOCINFO
{
  unsigned int lcid;
  char chILanguage[8];
  char *pchSEngLanguage;
  char chSAbbrevLangName[4];
  char *pchSEngCountry;
  char chSAbbrevCtryName[4];
  char chIDefaultCodepage[8];
  char chIDefaultAnsiCodepage[8];
};

/* 6167 */
struct tagLOCALETAB
{
  char *szName;
  char chAbbrev[4];
};

/* 6168 */
struct __declspec(align(32)) _JMP_BUF
{
  unsigned int saved_ebp;
  unsigned int saved_ebx;
  unsigned int saved_edi;
  unsigned int saved_esi;
  unsigned int saved_esp;
  unsigned int saved_return;
  unsigned int saved_xregistration;
  unsigned int saved_trylevel;
  unsigned int version_cookie;
  unsigned int unwind_func;
  unsigned int unwind_data;
};

/* 6169 */
struct _SCOPETABLE_ENTRY
{
  unsigned int enclosing_level;
  unsigned int filter;
  unsigned int specific_handler;
};

/* 6170 */
struct _EXCEPTION_REGISTRATION
{
  unsigned int prev;
  unsigned int handler;
};

/* 6171 */
struct _NLG_INFO
{
  unsigned int dwSig;
  unsigned int uoffDestination;
  unsigned int dwCode;
  unsigned int uoffFramePointer;
};

/* 6172 */
struct _C9_EXCEPTION_REGISTRATION
{
  unsigned int er_prev;
  unsigned int er_handler;
  unsigned int scopetable;
  unsigned int trylevel;
};

/* 6173 */
struct _EXCEPTION_REGISTRATION_COMMON
{
  _BYTE gap0[8];
  unsigned int scopetable;
  unsigned int trylevel;
};

/* 6174 */
struct _EH3_EXCEPTION_REGISTRATION
{
  _EH3_EXCEPTION_REGISTRATION *Next;
  void *ExceptionHandler;
  _SCOPETABLE_ENTRY *ScopeTable;
  unsigned int TryLevel;
};

/* 6175 */
struct code_page_info
{
  int code_page;
  unsigned __int16 mbulinfo[6];
  char rgrange[4][8];
};

/* 6176 */
struct $9EDDA679613D7E4E5E37CB563F432A3F
{
  unsigned int lowerhalf;
  int upperhalf;
};

/* 6177 */
union doubleint
{
  __int64 bigint;
  $9EDDA679613D7E4E5E37CB563F432A3F twoints;
};

/* 6178 */
struct tagEntry
{
  int sizeFront;
  tagEntry *pEntryNext;
  tagEntry *pEntryPrev;
};

/* 6179 */
struct tagListHead
{
  tagEntry *pEntryNext;
  tagEntry *pEntryPrev;
};

/* 6180 */
struct tagGroup
{
  int cntEntries;
  tagListHead listHead[64];
};

/* 6181 */
struct tagRegion
{
  int indGroupUse;
  char cntRegionSize[64];
  unsigned int bitvGroupHi[32];
  unsigned int bitvGroupLo[32];
  tagGroup grpHeadList[32];
};

/* 6182 */
struct tagHeader
{
  unsigned int bitvEntryHi;
  unsigned int bitvEntryLo;
  unsigned int bitvCommit;
  void *pHeapData;
  tagRegion *pRegion;
};

/* 6183 */
struct tagEntryEnd
{
  int sizeBack;
};

/* 6184 */
struct TypeDescriptor
{
  unsigned int hash;
  void *spare;
  char name[];
};

/* 6185 */
struct PMD
{
  int mdisp;
  int pdisp;
  int vdisp;
};

/* 6186 */
struct _s_CatchableType
{
  unsigned int properties;
  TypeDescriptor *pType;
  PMD thisDisplacement;
  int sizeOrOffset;
  void (__cdecl *copyFunction)();
};

/* 6187 */
struct _s_CatchableTypeArray
{
  int nCatchableTypes;
  _s_CatchableType *arrayOfCatchableTypes[];
};

/* 6188 */
struct _s_HandlerType
{
  unsigned int adjectives;
  TypeDescriptor *pType;
  int dispCatchObj;
  void *addressOfHandler;
};

/* 6189 */
struct _s_ESTypeList
{
  int nCount;
  _s_HandlerType *pTypeArray;
};

/* 6190 */
struct _s_ThrowInfo
{
  unsigned int attributes;
  void (__cdecl *pmfnUnwind)();
  int (__cdecl *pForwardCompat)();
  _s_CatchableTypeArray *pCatchableTypeArray;
};

/* 6191 */
struct _s_UnwindMapEntry
{
  int toState;
  void (__cdecl *action)();
};

/* 6192 */
struct _s_TryBlockMapEntry
{
  int tryLow;
  int tryHigh;
  int catchHigh;
  int nCatches;
  _s_HandlerType *pHandlerArray;
};

/* 6193 */
struct _s_FuncInfo
{
  int _bf0;
  int maxState;
  _s_UnwindMapEntry *pUnwindMap;
  unsigned int nTryBlocks;
  _s_TryBlockMapEntry *pTryBlockMap;
  unsigned int nIPMapEntries;
  void *pIPtoStateMap;
  _s_ESTypeList *pESTypeList;
};

/* 6194 */
struct EHExceptionRecord::EHParameters
{
  unsigned int magicNumber;
  void *pExceptionObject;
  _s_ThrowInfo *pThrowInfo;
};

/* 6195 */
struct EHExceptionRecord
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  void *ExceptionAddress;
  unsigned int NumberParameters;
  EHExceptionRecord::EHParameters params;
};

/* 6196 */
struct EHRegistrationNode
{
  EHRegistrationNode *pNext;
  void *frameHandler;
  int state;
};

/* 6197 */
struct CatchGuardRN
{
  EHRegistrationNode *pNext;
  void *pFrameHandler;
  unsigned int RandomCookie;
  _s_FuncInfo *pFuncInfo;
  EHRegistrationNode *pRN;
  int CatchDepth;
};

/* 6198 */
struct TranslatorGuardRN
{
  EHRegistrationNode *pNext;
  void *pFrameHandler;
  unsigned int RandomCookie;
  _s_FuncInfo *pFuncInfo;
  EHRegistrationNode *pRN;
  int CatchDepth;
  EHRegistrationNode *pMarkerRN;
  void *ESP;
  void *EBP;
  int DidUnwind;
};

/* 6199 */
struct FrameInfo
{
  void *pExceptionObject;
  FrameInfo *pNext;
};

/* 6200 */
struct __JUMP_BUFFER
{
  unsigned int Ebp;
  unsigned int Ebx;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Esp;
  unsigned int Eip;
  unsigned int Registration;
  unsigned int TryLevel;
  unsigned int Cookie;
  unsigned int UnwindFunc;
  unsigned int UnwindData[6];
};

/* 6201 */
struct errentry
{
  unsigned int oscode;
  int errnocode;
};

/* 6202 */
struct ATL::_ATL_WNDCLASSINFOA
{
  tagWNDCLASSEXA m_wc;
  const char *m_lpszOrigName;
  int (__stdcall *pWndProc)(HWND__ *, unsigned int, unsigned int, int);
  const char *m_lpszCursorID;
  int m_bSystemCursor;
  unsigned __int16 m_atom;
  char m_szAutoName[37];
};

/* 6203 */
struct ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComMultiThreadModel>
{
  struct ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> > baseclass_0;
  _BYTE gap0[24];
  struct ATL::CComObjectRootEx<ATL::CComMultiThreadModel> baseclass_18;
  _BYTE gap18[28];
};

/* 6204 */ typedef PktUA *LPPktUA;

/* 6205 */ typedef tagMSGBOXPARAMSW *PMSGBOXPARAMSW;

/* 6206 */ typedef __int16 OLE_ENABLEDEFAULTBOOL;

/* 6207 */ typedef _MESSAGE_RESOURCE_ENTRY *PMESSAGE_RESOURCE_ENTRY;

/* 6208 */ typedef void (__stdcall *WAITORTIMERCALLBACKFUNC)(void *, char);

/* 6209 */ typedef HDC__ *HDC;

/* 6210 */ typedef tagAUXCAPS2A *NPAUXCAPS2A;

/* 6211 */ typedef tagMIXERCAPSA *PMIXERCAPS;

/* 6212 */ typedef tagEMRSELECTCLIPPATH *PEMRSELECTCLIPPATH;

/* 6213 */ typedef tagAUXCAPS2A *LPAUXCAPS2A;

/* 6214 */ typedef _PORT_INFO_1W *LPPORT_INFO_1W;

/* 6215 */ typedef _IMAGE_DEBUG_DIRECTORY *PIMAGE_DEBUG_DIRECTORY;

/* 6216 */ typedef _PORT_INFO_3W *LPPORT_INFO_3W;

/* 6217 */ typedef _PRINTER_INFO_1A *LPPRINTER_INFO_1A;

/* 6218 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_FIND_CERT)(void *, _CERT_STORE_PROV_FIND_INFO *, _CERT_CONTEXT *, unsigned int, void **, _CERT_CONTEXT **);

/* 6219 */ typedef _PORT_INFO_2W *LPPORT_INFO_2W;

/* 6220 */ typedef int (__stdcall *PSYM_ENUMSYMBOLS_CALLBACK64)(char *, unsigned __int64, unsigned int, void *);

/* 6221 */ typedef _CTL_ENTRY *PCTL_ENTRY;

/* 6222 */ typedef _ACTRL_ACCESS_INFOA *PACTRL_ACCESS_INFOA;

/* 6223 */ typedef tagAUXCAPS2W *LPAUXCAPS2W;

/* 6224 */ typedef _DOC_INFO_3A *PDOC_INFO_3A;

/* 6225 */ typedef tagEVENTMSG *PEVENTMSGMSG;

/* 6226 */ typedef _LOADED_IMAGE *PLOADED_IMAGE;

/* 6227 */ typedef unsigned __int16 wchar_t;

/* 6228 */ typedef tagAUXCAPS2W *NPAUXCAPS2W;

/* 6229 */ typedef char *LPBYTE;

/* 6230 */ typedef IUnknown *LPUNKNOWN;

/* 6231 */ typedef PktMiningCampMineralInfo *LPPktMiningCampMineralInfo;

/* 6232 */ typedef _NON_PAGED_DEBUG_INFO *PNON_PAGED_DEBUG_INFO;

/* 6233 */ typedef tagMIXERCAPS2A *PMIXERCAPS2;

/* 6234 */ typedef unsigned int DBCONVERTFLAGS;

/* 6235 */ typedef void __stdcall RPCNOTIFICATION_ROUTINE(_RPC_ASYNC_STATE *, void *, _RPC_ASYNC_EVENT);

/* 6236 */ typedef unsigned int HCRYPTHASH;

/* 6237 */ typedef unsigned int (__stdcall *LPOFNHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 6238 */ typedef _ACTRL_ACCESS_INFOW *PACTRL_ACCESS_INFOW;

/* 6239 */ typedef CVirtualMachine *SCRIPT;

/* 6240 */ typedef SCARD_READERSTATEA *LPSCARD_READERSTATEA;

/* 6241 */ typedef _IMAGE_RESOURCE_DIRECTORY_ENTRY *PIMAGE_RESOURCE_DIRECTORY_ENTRY;

/* 6242 */ typedef _PARTY_USER_INFO *LPPARTY_USER_INFO;

/* 6243 */ typedef _PRINTER_INFO_1W *LPPRINTER_INFO_1W;

/* 6244 */ typedef tagIMEMENUITEMINFOA *PIMEMENUITEMINFO;

/* 6245 */ typedef sockaddr *PSOCKADDR;

/* 6246 */ typedef tagEMRLINETO *PEMRLINETO;

/* 6247 */ typedef tagEVENTMSG *PEVENTMSG;

/* 6248 */ typedef IAddrExclusionControl *LPADDREXCLUSIONCONTROL;

/* 6249 */ typedef HKEY__ **PHKEY;

/* 6250 */ typedef tagMCI_LOAD_PARMSW *LPMCI_LOAD_PARMSW;

/* 6251 */ typedef _DISK_GEOMETRY *PDISK_GEOMETRY;

/* 6252 */ typedef tagHIGHCONTRASTA *LPHIGHCONTRASTA;

/* 6253 */ typedef unsigned __int16 PROPVAR_PAD2;

/* 6254 */ typedef _RIP_INFO *LPRIP_INFO;

/* 6255 */ typedef unsigned __int16 *(__stdcall *ATLCHARLOWERW)(unsigned __int16 *);

/* 6256 */ typedef tagKERNINGPAIR *LPKERNINGPAIR;

/* 6257 */ typedef unsigned int DBASYNCHPHASE;

/* 6258 */ typedef _OSVERSIONINFOW *POSVERSIONINFOW;

/* 6259 */ typedef tagMCI_OVLY_LOAD_PARMSA *LPMCI_OVLY_LOAD_PARMS;

/* 6260 */ typedef tagVARDESC *LPVARDESC;

/* 6261 */ typedef ISpecifyPropertyPages *LPSPECIFYPROPERTYPAGES;

/* 6262 */ typedef tagMCI_WAVE_DELETE_PARMS *PMCI_WAVE_DELETE_PARMS;

/* 6263 */ typedef int *LPFXPT16DOT16;

/* 6264 */ typedef _PRINTER_ENUM_VALUESW *LPPRINTER_ENUM_VALUESW;

/* 6265 */ typedef _DOC_INFO_2A *PDOC_INFO_2A;

/* 6266 */ typedef _PROVIDOR_INFO_2W *LPPROVIDOR_INFO_2W;

/* 6267 */ typedef _PORT_INFO_3A *PPORT_INFO_3;

/* 6268 */ typedef _PROVIDOR_INFO_1W *LPPROVIDOR_INFO_1W;

/* 6269 */ typedef tagHIGHCONTRASTW *LPHIGHCONTRASTW;

/* 6270 */ typedef tagMCI_LOAD_PARMSA *LPMCI_LOAD_PARMSA;

/* 6271 */ typedef tagEMRPOLYLINE *PEMRPOLYBEZIER;

/* 6272 */ typedef PktSiegeBroadCast2nd *LPPktSiegeBroadCast2nd;

/* 6273 */ typedef _MINIDUMP_HEADER *PMINIDUMP_HEADER;

/* 6274 */ typedef void (__stdcall *PIMAGE_TLS_CALLBACK)(void *, unsigned int, void *);

/* 6275 */ typedef HWINSTA__ *HWINSTA;

/* 6276 */ typedef PktSummonCmd *LPPktSummonCmd;

/* 6277 */ typedef _CRYPT_HASH_MESSAGE_PARA *PCRYPT_HASH_MESSAGE_PARA;

/* 6278 */ typedef _OSVERSIONINFOA *POSVERSIONINFOA;

/* 6279 */ typedef unsigned __int64 *PDWORDLONG;

/* 6280 */ typedef _IMAGE_FUNCTION_ENTRY *PIMAGE_FUNCTION_ENTRY;

/* 6281 */ typedef tagMINMAXINFO *LPMINMAXINFO;

/* 6282 */ typedef _currencyfmtA *LPCURRENCYFMTA;

/* 6283 */ typedef _ADDJOB_INFO_1A *LPADDJOB_INFO_1;

/* 6284 */ typedef _RPC_PROTSEQ_ENDPOINT *PRPC_PROTSEQ_ENDPOINT;

/* 6285 */ typedef ITypeLib2 *LPTYPELIB2;

/* 6286 */ typedef tagMIXERCAPSA *PMIXERCAPSA;

/* 6287 */ typedef tagMIXERLINEA *LPMIXERLINEA;

/* 6288 */ typedef tagAUXCAPS2A *NPAUXCAPS2;

/* 6289 */ typedef tagEMREXTFLOODFILL *PEMREXTFLOODFILL;

/* 6290 */ typedef int ISOLEVEL;

/* 6291 */ typedef tagAUXCAPS2A *LPAUXCAPS2;

/* 6292 */ typedef _BIDI_RESPONSE_CONTAINER *PBIDI_RESPONSE_CONTAINER;

/* 6293 */ typedef _TRIVERTEX *PTRIVERTEX;

/* 6294 */ typedef _BIN_RANGE *PBIN_RANGE;

/* 6295 */ typedef tagIMEMENUITEMINFOW *PIMEMENUITEMINFOW;

/* 6296 */ typedef _FSCTL_QUERY_FAT_BPB_BUFFER *PFSCTL_QUERY_FAT_BPB_BUFFER;

/* 6297 */ typedef void *LOCALHANDLE;

/* 6298 */ typedef _PRINTER_INFO_1A *LPPRINTER_INFO_1;

/* 6299 */ typedef int (__stdcall *FARPROC)();

/* 6300 */ typedef _ACTRL_ACCESS_INFOA *PACTRL_ACCESS_INFO;

/* 6301 */ typedef _IMAGE_EXPORT_DIRECTORY *PIMAGE_EXPORT_DIRECTORY;

/* 6302 */ typedef IConnectionPoint *LPCONNECTIONPOINT;

/* 6303 */ typedef tagMIXERCAPSW *PMIXERCAPSW;

/* 6304 */ typedef _DOC_INFO_1A *PDOC_INFO_1A;

/* 6305 */ typedef ConnectInfo *LPConnectInfo;

/* 6306 */ typedef _BINARY_CONTAINER *PBINARY_CONTAINER;

/* 6307 */ typedef _SYSTEM_INFO *LPSYSTEM_INFO;

/* 6308 */ typedef DLGTEMPLATE *LPDLGTEMPLATEA;

/* 6309 */ typedef _EXCEPTION_RECORD *LPEXCEPTION_RECORD;

/* 6310 */ typedef _BIDI_RESPONSE_CONTAINER *LPBIDI_RESPONSE_CONTAINER;

/* 6311 */ typedef tagIMEMENUITEMINFOA *PIMEMENUITEMINFOA;

/* 6312 */ typedef tagOLERENDER *LPOLERENDER;

/* 6313 */ typedef tagMCI_OVLY_WINDOW_PARMSA *LPMCI_OVLY_WINDOW_PARMSA;

/* 6314 */ typedef POWER_ACTION *PPOWER_ACTION;

/* 6315 */ typedef _ACTRL_ALISTW *PACTRL_ACCESSW;

/* 6316 */ typedef tagGUITHREADINFO *LPGUITHREADINFO;

/* 6317 */ typedef tagHIGHCONTRASTA *LPHIGHCONTRAST;

/* 6318 */ typedef _PORT_INFO_3W *PPORT_INFO_3W;

/* 6319 */ typedef void *voidpf;

/* 6320 */ typedef _PRINTER_INFO_8A *PPRINTER_INFO_8;

/* 6321 */ typedef _PRINTER_INFO_9A *PPRINTER_INFO_9;

/* 6322 */ typedef _PRINTER_INFO_6 *PPRINTER_INFO_6;

/* 6323 */ typedef void *HCERTSTOREPROV;

/* 6324 */ typedef _PRINTER_INFO_7A *PPRINTER_INFO_7;

/* 6325 */ typedef _PRINTER_INFO_4A *PPRINTER_INFO_4;

/* 6326 */ typedef _PRINTER_INFO_5A *PPRINTER_INFO_5;

/* 6327 */ typedef _PRINTER_INFO_2A *PPRINTER_INFO_2;

/* 6328 */ typedef _PRINTER_INFO_3 *PPRINTER_INFO_3;

/* 6329 */ typedef tagGCP_RESULTSW *LPGCP_RESULTSW;

/* 6330 */ typedef tagHELPINFO *LPHELPINFO;

/* 6331 */ typedef _PRINTER_INFO_1A *PPRINTER_INFO_1;

/* 6332 */ typedef char *PTCH;

/* 6333 */ typedef tagCANDIDATELIST *PCANDIDATELIST;

/* 6334 */ typedef _NCB *PNCB;

/* 6335 */ typedef _STARTUPINFOA *LPSTARTUPINFOA;

/* 6336 */ typedef _PORT_INFO_3A *PPORT_INFO_3A;

/* 6337 */ typedef tagMCI_LOAD_PARMSA *LPMCI_LOAD_PARMS;

/* 6338 */ typedef unsigned __int64 *PUINT64;

/* 6339 */ typedef int (__stdcall *ATLCOMPARESTRINGW)(unsigned int, unsigned int, const unsigned __int16 *, int, const unsigned __int16 *, int);

/* 6340 */ typedef tagBITMAP *NPBITMAP;

/* 6341 */ typedef tagBITMAP *LPBITMAP;

/* 6342 */ typedef tagMCI_SYSINFO_PARMSW *LPMCI_SYSINFO_PARMSW;

/* 6343 */ typedef _OSVERSIONINFOA *POSVERSIONINFO;

/* 6344 */ typedef tagDDEML_MSG_HOOK_DATA *PDDEML_MSG_HOOK_DATA;

/* 6345 */ typedef int (__stdcall *DRIVERPROC)(unsigned int, HDRVR__ *, unsigned int, int, int);

/* 6346 */ typedef void *HGDIOBJ;

/* 6347 */ typedef tagINPUT *PINPUT;

/* 6348 */ typedef _userHMETAFILE *wireHMETAFILE;

/* 6349 */ typedef unsigned int DBACCESSORFLAGS;

/* 6350 */ typedef unsigned int DBPROMPTOPTIONS;

/* 6351 */ typedef _CMSG_CTRL_DECRYPT_PARA *PCMSG_CTRL_DECRYPT_PARA;

/* 6352 */ typedef _CMSG_CONTENT_ENCRYPT_INFO *PCMSG_CONTENT_ENCRYPT_INFO;

/* 6353 */ typedef unsigned int DBBINDSTATUS;

/* 6354 */ typedef _GET_CHANGER_PARAMETERS *PGET_CHANGER_PARAMETERS;

/* 6355 */ typedef IConnectionPointContainer *LPCONNECTIONPOINTCONTAINER;

/* 6356 */ typedef tagEMRSTRETCHDIBITS *PEMRSTRETCHDIBITS;

/* 6357 */ typedef _WSAServiceClassInfoA *LPWSASERVICECLASSINFOA;

/* 6358 */ typedef _JOBOBJECT_BASIC_LIMIT_INFORMATION *PJOBOBJECT_BASIC_LIMIT_INFORMATION;

/* 6359 */ typedef tagAXISINFOA *PAXISINFOA;

/* 6360 */ typedef tagMIXERCAPS2A *LPMIXERCAPS2;

/* 6361 */ typedef _OSVERSIONINFOEXA *POSVERSIONINFOEX;

/* 6362 */ typedef _CERT_CHAIN_ENGINE_CONFIG *PCERT_CHAIN_ENGINE_CONFIG;

/* 6363 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_FREE_FIND_CTL)(void *, _CTL_CONTEXT *, void *, unsigned int);

/* 6364 */ typedef _WSACOMPLETIONTYPE *PWSACOMPLETIONTYPE;

/* 6365 */ typedef tagSCROLLBARINFO *PSCROLLBARINFO;

/* 6366 */ typedef IInternetProtocol *LPIINTERNETPROTOCOL;

/* 6367 */ typedef _HTTPSPolicyCallbackData *PHTTPSPolicyCallbackData;

/* 6368 */ typedef fd_set *PFD_SET;

/* 6369 */ typedef _CERT_X942_DH_VALIDATION_PARAMS *PCERT_X942_DH_VALIDATION_PARAMS;

/* 6370 */ typedef unsigned int uIntf;

/* 6371 */ typedef _ACTRL_ACCESS_ENTRYW *PACTRL_ACCESS_ENTRYW;

/* 6372 */ typedef unsigned int DBMATCHTYPE;

/* 6373 */ typedef tagENUMTEXTMETRICA *LPENUMTEXTMETRIC;

/* 6374 */ typedef tagMDICREATESTRUCTA *LPMDICREATESTRUCTA;

/* 6375 */ typedef _CERT_ALT_NAME_INFO *PCERT_ALT_NAME_INFO;

/* 6376 */ typedef _MONITOR_INFO_2W *LPMONITOR_INFO_2W;

/* 6377 */ typedef unsigned int __stdcall PM_QUERY_PROC(unsigned int *, void **, unsigned int *, unsigned int *);

/* 6378 */ typedef HMIXEROBJ__ **LPHMIXEROBJ;

/* 6379 */ typedef _REASSIGN_BLOCKS *PREASSIGN_BLOCKS;

/* 6380 */ typedef unsigned int *PULONG32;

/* 6381 */ typedef void (__stdcall *LPSERVICE_MAIN_FUNCTIONW)(unsigned int, unsigned __int16 **);

/* 6382 */ typedef tagHeader *PHEADER;

/* 6383 */ typedef IAddrTrackingControl *LPADDRTRACKINGCONTROL;

/* 6384 */ typedef _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY *PCRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;

/* 6385 */ typedef tagPARAMDESC *LPPARAMDESC;

/* 6386 */ typedef IErrorLog *LPERRORLOG;

/* 6387 */ typedef HCONV__ *HCONV;

/* 6388 */ typedef tagLOGCOLORSPACEW *LPLOGCOLORSPACEW;

/* 6389 */ typedef tagSAFEARRAYBOUND *LPSAFEARRAYBOUND;

/* 6390 */ typedef tagEMRTEXT *PEMRTEXT;

/* 6391 */ typedef unsigned int DBCOLUMNFLAGS;

/* 6392 */ typedef int *PBOOL;

/* 6393 */ typedef _MONITOR_INFO_2A *LPMONITOR_INFO_2A;

/* 6394 */ typedef ARRAY_INFO *PARRAY_INFO;

/* 6395 */ typedef _UNIVERSAL_NAME_INFOA *LPUNIVERSAL_NAME_INFO;

/* 6396 */ typedef HICON__ *HCURSOR;

/* 6397 */ typedef tagPOINT *PPOINT;

/* 6398 */ typedef _IMAGE_AUX_SYMBOL *PIMAGE_AUX_SYMBOL;

/* 6399 */ typedef protoent *LPPROTOENT;

/* 6400 */ typedef void **PHUSKEY;

/* 6401 */ typedef bool _Bool;

/* 6402 */ typedef _PERF_BIN *PPERF_BIN;

/* 6403 */ typedef _OUTLINETEXTMETRICW *NPOUTLINETEXTMETRICW;

/* 6404 */ typedef _RTL_VERIFIER_DLL_DESCRIPTOR *PRTL_VERIFIER_DLL_DESCRIPTOR;

/* 6405 */ typedef tagVARIANT *LPVARIANT;

/* 6406 */ typedef _OUTLINETEXTMETRICW *LPOUTLINETEXTMETRICW;

/* 6407 */ typedef char UINT8;

/* 6408 */ typedef IClassFactory2 *LPCLASSFACTORY2;

/* 6409 */ typedef char *PINT8;

/* 6410 */ typedef tagMIXERCAPS2W *LPMIXERCAPS2W;

/* 6411 */ typedef _OSVERSIONINFOEXW *POSVERSIONINFOEXW;

/* 6412 */ typedef void (__stdcall *PFN_RPCNOTIFICATION_ROUTINE)(_RPC_ASYNC_STATE *, void *, _RPC_ASYNC_EVENT);

/* 6413 */ typedef unsigned int (__stdcall *USER_MARSHAL_SIZING_ROUTINE)(unsigned int *, unsigned int, void *);

/* 6414 */ typedef unsigned int DBBINDFLAG;

/* 6415 */ typedef _CRL_ENTRY *PCRL_ENTRY;

/* 6416 */ typedef unsigned __int16 DBTYPE;

/* 6417 */ typedef DLGITEMTEMPLATE *LPDLGITEMTEMPLATEW;

/* 6418 */ typedef IClassFactory *LPCLASSFACTORY;

/* 6419 */ typedef _OSVERSIONINFOEXW *LPOSVERSIONINFOEXW;

/* 6420 */ typedef tagEMRSETARCDIRECTION *PEMRSETARCDIRECTION;

/* 6421 */ typedef tagMIXERCAPS2A *LPMIXERCAPS2A;

/* 6422 */ typedef _OSVERSIONINFOEXA *POSVERSIONINFOEXA;

/* 6423 */ typedef tagEMRGRADIENTFILL *PEMRGRADIENTFILL;

/* 6424 */ typedef _TOKEN_DEFAULT_DACL *PTOKEN_DEFAULT_DACL;

/* 6425 */ typedef int (__stdcall *PREAD_PROCESS_MEMORY_ROUTINE64)(void *, unsigned __int64, void *, unsigned int, unsigned int *);

/* 6426 */ typedef float *PFLOAT;

/* 6427 */ typedef unsigned int UINT;

/* 6428 */ typedef void (__stdcall *LPDRVCALLBACK)(HDRVR__ *, unsigned int, unsigned int, unsigned int, unsigned int);

/* 6429 */ typedef unsigned int *PULONG;

/* 6430 */ typedef tagLOCALESIGNATURE *PLOCALESIGNATURE;

/* 6431 */ typedef unsigned __int16 BAD_TRACK_NUMBER;

/* 6432 */ typedef _ACCESS_DENIED_CALLBACK_ACE *PACCESS_DENIED_CALLBACK_ACE;

/* 6433 */ typedef int *PINT;

/* 6434 */ typedef tagMINIMIZEDMETRICS *PMINIMIZEDMETRICS;

/* 6435 */ typedef _CMSG_SIGNER_ENCODE_INFO *PCMSG_SIGNER_ENCODE_INFO;

/* 6436 */ typedef char __C_ASSERT__[1];

/* 6437 */ typedef tagEMRPOLYLINE *PEMRPOLYLINE;

/* 6438 */ typedef tagENUMTEXTMETRICA *LPENUMTEXTMETRICA;

/* 6439 */ typedef tagMCI_WAVE_SET_PARMS *LPMCI_WAVE_SET_PARMS;

/* 6440 */ typedef tagLC_STRINGS *LPLC_STRINGS;

/* 6441 */ typedef hostent *LPHOSTENT;

/* 6442 */ typedef _EFS_HASH_BLOB *PEFS_HASH_BLOB;

/* 6443 */ typedef _GLYPHMETRICS *LPGLYPHMETRICS;

/* 6444 */ typedef _QOS_SD_MODE *LPQOS_SD_MODE;

/* 6445 */ typedef unsigned int (__stdcall *PFNRECONCILEPROFILEA)(const char *, const char *, unsigned int);

/* 6446 */ typedef _CMSG_KEY_AGREE_RECIPIENT_INFO *PCMSG_KEY_AGREE_RECIPIENT_INFO;

/* 6447 */ typedef tagPOINTS *PPOINTS;

/* 6448 */ typedef HRGN__ *HRGN;

/* 6449 */ typedef unsigned int EXECUTION_STATE;

/* 6450 */ typedef unsigned int RPC_LENGTH;

/* 6451 */ typedef _SHITEMID *LPCSHITEMID;

/* 6452 */ typedef _MONITOR_INFO_2A *LPMONITOR_INFO_2;

/* 6453 */ typedef _POINTL *PPOINTL;

/* 6454 */ typedef tagWNDCLASSEXW *PWNDCLASSEXW;

/* 6455 */ typedef tagENUMTEXTMETRICW *LPENUMTEXTMETRICW;

/* 6456 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_CONTROL)(void *, unsigned int, unsigned int, const void *);

/* 6457 */ typedef _SERVICE_DESCRIPTIONW *LPSERVICE_DESCRIPTIONW;

/* 6458 */ typedef _PRINTPROCESSOR_CAPS_1 *PPRINTPROCESSOR_CAPS_1;

/* 6459 */ typedef _numberfmtW *LPNUMBERFMTW;

/* 6460 */ typedef tMIXERCONTROLDETAILS_BOOLEAN *PMIXERCONTROLDETAILS_BOOLEAN;

/* 6461 */ typedef _SOCKET_ADDRESS *PSOCKET_ADDRESS;

/* 6462 */ typedef unsigned int FOURCC;

/* 6463 */ typedef _HAN_UID *LPHAN_UID;

/* 6464 */ typedef midihdr_tag *LPMIDIHDR;

/* 6465 */ typedef _FLOAT128 *PFLOAT128;

/* 6466 */ typedef _IMAGE_RESOURCE_DIR_STRING_U *PIMAGE_RESOURCE_DIR_STRING_U;

/* 6467 */ typedef _IMAGE_THUNK_DATA32 *PIMAGE_THUNK_DATA;

/* 6468 */ typedef _CHANGER_DEVICE_PROBLEM_TYPE *PCHANGER_DEVICE_PROBLEM_TYPE;

/* 6469 */ typedef midihdr_tag *NPMIDIHDR;

/* 6470 */ typedef int *LPFXPT2DOT30;

/* 6471 */ typedef HMONITOR__ *HMONITOR;

/* 6472 */ typedef tagHELPWININFOA *PHELPWININFOA;

/* 6473 */ typedef HBRUSH__ *HBRUSH;

/* 6474 */ typedef _RGNDATAHEADER *PRGNDATAHEADER;

/* 6475 */ typedef void (__stdcall *LPFN_GETACCEPTEXSOCKADDRS)(void *, unsigned int, unsigned int, unsigned int, sockaddr **, int *, sockaddr **, int *);

/* 6476 */ typedef tagIMECHARPOSITION *PIMECHARPOSITION;

/* 6477 */ typedef PktDD *LPPktDD;

/* 6478 */ typedef _QUERY_SERVICE_LOCK_STATUSA *LPQUERY_SERVICE_LOCK_STATUS;

/* 6479 */ typedef _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE;

/* 6480 */ typedef _CROSS_CERT_DIST_POINTS_INFO *PCROSS_CERT_DIST_POINTS_INFO;

/* 6481 */ typedef IPersistPropertyBag2 *LPPERSISTPROPERTYBAG2;

/* 6482 */ typedef IGlobalInterfaceTable *LPGLOBALINTERFACETABLE;

/* 6483 */ typedef _SE_IMPERSONATION_STATE *PSE_IMPERSONATION_STATE;

/* 6484 */ typedef tagMETAHEADER *PMETAHEADER;

/* 6485 */ typedef _DISCDLGSTRUCTA *LPDISCDLGSTRUCTA;

/* 6486 */ typedef int LCSCSTYPE;

/* 6487 */ typedef int (__stdcall *PSYM_ENUMSYMBOLS_CALLBACKW)(unsigned __int16 *, unsigned int, unsigned int, void *);

/* 6488 */ typedef _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO *PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;

/* 6489 */ typedef int (__stdcall *PFN_IMPORT_PRIV_KEY_FUNC)(unsigned int, _CRYPT_PRIVATE_KEY_INFO *, unsigned int, void *);

/* 6490 */ typedef tagHELPWININFOW *PHELPWININFOW;

/* 6491 */ typedef _PROVIDOR_INFO_2A *PPROVIDOR_INFO_2;

/* 6492 */ typedef IPersistPropertyBag *LPPERSISTPROPERTYBAG;

/* 6493 */ typedef int LCSGAMUTMATCH;

/* 6494 */ typedef tagCLIENTCREATESTRUCT *LPCLIENTCREATESTRUCT;

/* 6495 */ typedef int (__stdcall *HOOKPROC)(int, unsigned int, int);

/* 6496 */ typedef _IMAGEHLP_DEFERRED_SYMBOL_LOAD *PIMAGEHLP_DEFERRED_SYMBOL_LOAD;

/* 6497 */ typedef _DISPLAY_DEVICEW *PDISPLAY_DEVICEW;

/* 6498 */ typedef IPersistStreamInit *LPPERSISTSTREAMINIT;

/* 6499 */ typedef tagEMRFILLRGN *PEMRFILLRGN;

/* 6500 */ typedef tagNEWTEXTMETRICA *PNEWTEXTMETRICA;

/* 6501 */ typedef _KEY_EVENT_RECORD *PKEY_EVENT_RECORD;

/* 6502 */ typedef RPC_DISPATCH_TABLE *PRPC_DISPATCH_TABLE;

/* 6503 */ typedef unsigned int _U32;

/* 6504 */ typedef _OBJECTS_AND_SID *POBJECTS_AND_SID;

/* 6505 */ typedef _ADMIN *LPADMIN;

/* 6506 */ typedef _COMMCONFIG *LPCOMMCONFIG;

/* 6507 */ typedef tagMCI_OVLY_LOAD_PARMSA *LPMCI_OVLY_LOAD_PARMSA;

/* 6508 */ typedef unsigned __int16 PROPVAR_PAD3;

/* 6509 */ typedef _PRINTPROCESSOR_INFO_1A *PPRINTPROCESSOR_INFO_1;

/* 6510 */ typedef _CERT_NAME_VALUE *PCERT_NAME_VALUE;

/* 6511 */ typedef _STORAGE_MEDIA_TYPE *PSTORAGE_MEDIA_TYPE;

/* 6512 */ typedef int __stdcall RPC_IF_CALLBACK_FN(void *, void *);

/* 6513 */ typedef _SHNAMEMAPPINGW *LPSHNAMEMAPPINGW;

/* 6514 */ typedef HRESULT (__stdcall *LPFNOBJECTFROMLRESULT)(int, _GUID *, unsigned int, void **);

/* 6515 */ typedef _RGNDATA *LPRGNDATA;

/* 6516 */ typedef _RGNDATA *NPRGNDATA;

/* 6517 */ typedef _PORT_INFO_2A *PPORT_INFO_2;

/* 6518 */ typedef unsigned int *LPSCARDCONTEXT;

/* 6519 */ typedef tagNEWTEXTMETRICW *PNEWTEXTMETRICW;

/* 6520 */ typedef _JOBOBJECT_JOBSET_INFORMATION *PJOBOBJECT_JOBSET_INFORMATION;

/* 6521 */ typedef ICreateErrorInfo *LPCREATEERRORINFO;

/* 6522 */ typedef IParseDisplayName *LPPARSEDISPLAYNAME;

/* 6523 */ typedef tagMONCONVSTRUCT *PMONCONVSTRUCT;

/* 6524 */ typedef tagMCI_SAVE_PARMSW *PMCI_SAVE_PARMSW;

/* 6525 */ typedef unsigned int COLORREF;

/* 6526 */ typedef void *(__stdcall *GENERIC_BINDING_ROUTINE)(void *);

/* 6527 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_WRITE_CTL)(void *, _CTL_CONTEXT *, unsigned int);

/* 6528 */ typedef unsigned __int16 *PWCHAR;

/* 6529 */ typedef _CERT_CONTEXT *PCERT_CONTEXT;

/* 6530 */ typedef ICodeInstall *LPCODEINSTALL;

/* 6531 */ typedef tagMULTIKEYHELPW *PMULTIKEYHELPW;

/* 6532 */ typedef tagHELPWININFOA *PHELPWININFO;

/* 6533 */ typedef _SOCKET_ADDRESS_LIST *LPSOCKET_ADDRESS_LIST;

/* 6534 */ typedef OPENCARDNAMEW *POPENCARDNAMEW;

/* 6535 */ typedef tagEMRPIXELFORMAT *PEMRPIXELFORMAT;

/* 6536 */ typedef _currencyfmtA *LPCURRENCYFMT;

/* 6537 */ typedef _CRYPTOAPI_BLOB *PCRYPT_HASH_BLOB;

/* 6538 */ typedef PktRsWaitQueueAck *LPPktRsWaitQueueAck;

/* 6539 */ typedef _IMAGE_RUNTIME_FUNCTION_ENTRY *PIMAGE_RUNTIME_FUNCTION_ENTRY;

/* 6540 */ typedef _PROVIDOR_INFO_2W *PPROVIDOR_INFO_2W;

/* 6541 */ typedef _WGLSWAP *LPWGLSWAP;

/* 6542 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_READ_CRL)(void *, _CRL_CONTEXT *, unsigned int, _CRL_CONTEXT **);

/* 6543 */ typedef _EVENTSFORLOGFILE *PEVENTSFORLOGFILE;

/* 6544 */ typedef unsigned __int64 _ULonglong;

/* 6545 */ typedef _ASSEMBLY_FILE_DETAILED_INFORMATION *PASSEMBLY_FILE_DETAILED_INFORMATION;

/* 6546 */ typedef char *(__stdcall *USER_MARSHAL_MARSHALLING_ROUTINE)(unsigned int *, char *, void *);

/* 6547 */ typedef _PROVIDOR_INFO_2A *PPROVIDOR_INFO_2A;

/* 6548 */ typedef unsigned __int64 *PULONGLONG;

/* 6549 */ typedef tagSAFEARRAY *LPSAFEARRAY;

/* 6550 */ typedef IPersistFile *LPPERSISTFILE;

/* 6551 */ typedef DLGTEMPLATE *LPDLGTEMPLATE;

/* 6552 */ typedef _CRYPT_KEY_PROV_INFO *PCRYPT_KEY_PROV_INFO;

/* 6553 */ typedef tagNEWTEXTMETRICA *PNEWTEXTMETRIC;

/* 6554 */ typedef _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;

/* 6555 */ typedef _PORT_INFO_2W *PPORT_INFO_2W;

/* 6556 */ typedef _ASSEMBLY_FILE_DETAILED_INFORMATION *PCASSEMBLY_FILE_DETAILED_INFORMATION;

/* 6557 */ typedef _PRINTPROCESSOR_INFO_1A *PPRINTPROCESSOR_INFO_1A;

/* 6558 */ typedef tagMCI_OPEN_PARMSA *PMCI_OPEN_PARMS;

/* 6559 */ typedef _SYMBOL_INFO *PSYMBOL_INFO;

/* 6560 */ typedef tagACTCTXW *PACTCTXW;

/* 6561 */ typedef _QualityOfService *LPQOS;

/* 6562 */ typedef tagEMRCREATEBRUSHINDIRECT *PEMRCREATEBRUSHINDIRECT;

/* 6563 */ typedef _CRYPT_PRIVATE_KEY_INFO *PCRYPT_PRIVATE_KEY_INFO;

/* 6564 */ typedef unsigned __int16 *PUSHORT;

/* 6565 */ typedef PktCameraScript *LPPktCameraScript;

/* 6566 */ typedef _PRINTPROCESSOR_INFO_1W *PPRINTPROCESSOR_INFO_1W;

/* 6567 */ typedef _ACL *PACL;

/* 6568 */ typedef tagMCI_OVLY_OPEN_PARMSW *LPMCI_OVLY_OPEN_PARMSW;

/* 6569 */ typedef _PORT_INFO_2A *PPORT_INFO_2A;

/* 6570 */ typedef void (__stdcall *WAITORTIMERCALLBACK)(void *, char);

/* 6571 */ typedef tagTEXTMETRICA *PTEXTMETRICA;

/* 6572 */ typedef tagEMRGDICOMMENT *PEMRGDICOMMENT;

/* 6573 */ typedef int (__stdcall *ICMENUMPROCA)(char *, int);

/* 6574 */ typedef IOleContainer *LPOLECONTAINER;

/* 6575 */ typedef IWindowForBindingUI *LPWINDOWFORBINDINGUI;

/* 6576 */ typedef _STARTUPINFOA *LPSTARTUPINFO;

/* 6577 */ typedef tagTRACKMOUSEEVENT *LPTRACKMOUSEEVENT;

/* 6578 */ typedef _SCARD_ATRMASK *PSCARD_ATRMASK;

/* 6579 */ typedef __int16 INT16;

/* 6580 */ typedef HMIXEROBJ__ *HMIXEROBJ;

/* 6581 */ typedef PktGameTimeInfo *LPPktGameTimeInfo;

/* 6582 */ typedef tagMENUITEMINFOW *LPCMENUITEMINFOW;

/* 6583 */ typedef unsigned int __stdcall PM_COLLECT_PROC(unsigned __int16 *, void **, unsigned int *, unsigned int *);

/* 6584 */ typedef unsigned int *PSECURITY_INFORMATION;

/* 6585 */ typedef joyinfoex_tag *LPJOYINFOEX;

/* 6586 */ typedef int _off_t;

/* 6587 */ typedef joyinfoex_tag *NPJOYINFOEX;

/* 6588 */ typedef _IMAGEHLP_MODULE64 *PIMAGEHLP_MODULE64;

/* 6589 */ typedef _SHELLDETAILS *LPSHELLDETAILS;

/* 6590 */ typedef tagHANDLETABLE *LPHANDLETABLE;

/* 6591 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_READ_CTL)(void *, _CTL_CONTEXT *, unsigned int, _CTL_CONTEXT **);

/* 6592 */ typedef PktAtInfo *LPPktAtInfo;

/* 6593 */ typedef _CMS_KEY_INFO *PCMS_KEY_INFO;

/* 6594 */ typedef PktCastleRight *LPPktCastleRight;

/* 6595 */ typedef _WSAServiceClassInfoA *LPWSASERVICECLASSINFO;

/* 6596 */ typedef tagAXISINFOA *PAXISINFO;

/* 6597 */ typedef _INPUT_RECORD *PINPUT_RECORD;

/* 6598 */ typedef void (__cdecl *_inconsistency_function)();

/* 6599 */ typedef _WSANSClassInfoA *PWSANSCLASSINFOA;

/* 6600 */ typedef int LRESULT;

/* 6601 */ typedef _TRUSTEE_W *PTRUSTEE_W;

/* 6602 */ typedef _userSTGMEDIUM *wireASYNC_STGMEDIUM;

/* 6603 */ typedef int HRESULT;

/* 6604 */ typedef unsigned int *PKAFFINITY;

/* 6605 */ typedef tagCBTACTIVATESTRUCT *LPCBTACTIVATESTRUCT;

/* 6606 */ typedef SERVER *LPSERVER_LIST;

/* 6607 */ typedef tagMDICREATESTRUCTA *LPMDICREATESTRUCT;

/* 6608 */ typedef int GEOID;

/* 6609 */ typedef unsigned int (__stdcall *PGET_MODULE_BASE_ROUTINE)(void *, unsigned int);

/* 6610 */ typedef _DRAGINFOA *LPDRAGINFOA;

/* 6611 */ typedef tagBIND_OPTS *LPBIND_OPTS;

/* 6612 */ typedef unsigned int HCHAPTER;

/* 6613 */ typedef tagEMRPOLYTEXTOUTA *PEMRPOLYTEXTOUTA;

/* 6614 */ typedef int (__stdcall *CODEPAGE_ENUMPROCW)(unsigned __int16 *);

/* 6615 */ typedef _DRAGINFOW *LPDRAGINFOW;

/* 6616 */ typedef unsigned int *PDWORD;

/* 6617 */ typedef tagEMRSETVIEWPORTORGEX *PEMRSETWINDOWORGEX;

/* 6618 */ typedef LIST_ENTRY32 *PLIST_ENTRY32;

/* 6619 */ typedef _UNIVERSAL_NAME_INFOA *LPUNIVERSAL_NAME_INFOA;

/* 6620 */ typedef tagCADWORD *LPCADWORD;

/* 6621 */ typedef unsigned int LCTYPE;

/* 6622 */ typedef int (__stdcall *PFN_CMSG_IMPORT_MAIL_LIST)(_CRYPT_ALGORITHM_IDENTIFIER *, _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA *, unsigned int, void *, unsigned int *);

/* 6623 */ typedef waveformat_tag *PWAVEFORMAT;

/* 6624 */ typedef unsigned int *PDWORD32;

/* 6625 */ typedef int (__stdcall *PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK)(_CERT_CONTEXT *, void *);

/* 6626 */ typedef tagINTERFACEDATA *LPINTERFACEDATA;

/* 6627 */ typedef unsigned int uintptr_t;

/* 6628 */ typedef PktRsInfoAck *LPPktRsInfoAck;

/* 6629 */ typedef _WSANAMESPACE_INFOW *LPWSANAMESPACE_INFOW;

/* 6630 */ typedef tagRECONVERTSTRING *PRECONVERTSTRING;

/* 6631 */ typedef tagENUMLOGFONTEXW *LPENUMLOGFONTEXW;

/* 6632 */ typedef _NAME_BUFFER *PNAME_BUFFER;

/* 6633 */ typedef __int64 LONG64;

/* 6634 */ typedef _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;

/* 6635 */ typedef _ACTIVATION_CONTEXT_DETAILED_INFORMATION *PCACTIVATION_CONTEXT_DETAILED_INFORMATION;

/* 6636 */ typedef _tagADDRESS *LPADDRESS;

/* 6637 */ typedef tagENUMTEXTMETRICA *PENUMTEXTMETRIC;

/* 6638 */ typedef tagWINDOWPLACEMENT *LPWINDOWPLACEMENT;

/* 6639 */ typedef tagLOGBRUSH *LPPATTERN;

/* 6640 */ typedef _CRL_CONTEXT *PCCRL_CONTEXT;

/* 6641 */ typedef tagLOGBRUSH *NPPATTERN;

/* 6642 */ typedef _PRINTER_NOTIFY_INFO *PPRINTER_NOTIFY_INFO;

/* 6643 */ typedef tagCURSORSHAPE *LPCURSORSHAPE;

/* 6644 */ typedef _RTL_CRITICAL_SECTION_DEBUG *PCRITICAL_SECTION_DEBUG;

/* 6645 */ typedef void (__stdcall *CS_TYPE_TO_NETCS_ROUTINE)(void *, unsigned int, void *, unsigned int, char *, unsigned int *, unsigned int *);

/* 6646 */ typedef _RECTL *PRECTL;

/* 6647 */ typedef unsigned int RPCOLEDATAREP;

/* 6648 */ typedef IPropertyPage2 *LPPROPERTYPAGE2;

/* 6649 */ typedef _DRAGINFOA *LPDRAGINFO;

/* 6650 */ typedef void (__stdcall *WORKERCALLBACKFUNC)(void *);

/* 6651 */ typedef tagMONITORINFOEXW *LPMONITORINFOEXW;

/* 6652 */ typedef int (__stdcall *PSYM_ENUMMODULES_CALLBACK)(char *, unsigned int, void *);

/* 6653 */ typedef tagDEVNAMES *LPDEVNAMES;

/* 6654 */ typedef tagEXTLOGFONTA *PEXTLOGFONT;

/* 6655 */ typedef IDispatch *LPDISPATCH;

/* 6656 */ typedef tagJOYCAPS2W *PJOYCAPS2W;

/* 6657 */ typedef _SCONTEXT_QUEUE *PSCONTEXT_QUEUE;

/* 6658 */ typedef _CERTIFICATE_BLOB *PEFS_CERTIFICATE_BLOB;

/* 6659 */ typedef unsigned int DB_UPARAMS;

/* 6660 */ typedef IOleClientSite *LPOLECLIENTSITE;

/* 6661 */ typedef SCARD_T0_COMMAND *LPSCARD_T0_COMMAND;

/* 6662 */ typedef IPropertyPage *LPPROPERTYPAGE;

/* 6663 */ typedef char *va_list;

/* 6664 */ typedef void (__stdcall *WINEVENTPROC)(HWINEVENTHOOK__ *, unsigned int, HWND__ *, int, int, unsigned int, unsigned int);

/* 6665 */ typedef tagLICINFO *LPLICINFO;

/* 6666 */ typedef _DATATYPES_INFO_1A *PDATATYPES_INFO_1;

/* 6667 */ typedef _EXCEPTION_POINTERS *LPEXCEPTION_POINTERS;

/* 6668 */ typedef _DOCINFOW *LPDOCINFOW;

/* 6669 */ typedef IEnumConnectionPoints *PENUMCONNECTIONPOINTS;

/* 6670 */ typedef _BLOB *LPBLOB;

/* 6671 */ typedef int lzo_bool;

/* 6672 */ typedef __int16 HALF_PTR;

/* 6673 */ typedef tagWINDOWPOS *LPWINDOWPOS;

/* 6674 */ typedef _CRYPT_PASSWORD_CREDENTIALSW *PCRYPT_PASSWORD_CREDENTIALSW;

/* 6675 */ typedef tagBITMAPINFOHEADER *PBITMAPINFOHEADER;

/* 6676 */ typedef tagMCI_ANIM_OPEN_PARMSA *PMCI_ANIM_OPEN_PARMS;

/* 6677 */ typedef tagCBT_CREATEWNDA *LPCBT_CREATEWNDA;

/* 6678 */ typedef _PROVIDOR_INFO_1A *PPROVIDOR_INFO_1;

/* 6679 */ typedef unsigned int RVA;

/* 6680 */ typedef _BIDI_REQUEST_DATA *PBIDI_REQUEST_DATA;

/* 6681 */ typedef _CERT_STORE_PROV_INFO *PCERT_STORE_PROV_INFO;

/* 6682 */ typedef unsigned int DBBYTEOFFSET;

/* 6683 */ typedef tagPOLYTEXTW *PPOLYTEXTW;

/* 6684 */ typedef PktCCLi *LPPktCCLi;

/* 6685 */ typedef int (__cdecl *_CRT_ALLOC_HOOK)(int, void *, unsigned int, int, int, const char *, int);

/* 6686 */ typedef tagSOUNDSENTRYA *LPSOUNDSENTRY;

/* 6687 */ typedef PktCCLo *LPPktCCLo;

/* 6688 */ typedef HACCEL__ *HACCEL;

/* 6689 */ typedef unsigned int DBKIND;

/* 6690 */ typedef _EVENTITEM *LPEVENTITEM;

/* 6691 */ typedef tagICEXYZTRIPLE *LPCIEXYZTRIPLE;

/* 6692 */ typedef IWinInetHttpInfo *LPWININETHTTPINFO;

/* 6693 */ typedef _PROPSHEETHEADERW *LPPROPSHEETHEADERW;

/* 6694 */ typedef tagSIZE *LPSIZE;

/* 6695 */ typedef unsigned int (__stdcall *LPFNPSPCALLBACKW)(HWND__ *, unsigned int, _PROPSHEETPAGEW *);

/* 6696 */ typedef char *PXSTR;

/* 6697 */ typedef void (__stdcall *CS_TYPE_FROM_NETCS_ROUTINE)(void *, unsigned int, char *, unsigned int, unsigned int, void *, unsigned int *, unsigned int *);

/* 6698 */ typedef _PORT_INFO_1A *PPORT_INFO_1;

/* 6699 */ typedef char _TCHAR;

/* 6700 */ typedef tagLOGFONTA *NPLOGFONTA;

/* 6701 */ typedef _RPC_SECURITY_QOS_V2_W *PRPC_SECURITY_QOS_V2_W;

/* 6702 */ typedef tagLOGFONTA *LPLOGFONTA;

/* 6703 */ typedef _LDT_ENTRY *LPLDT_ENTRY;

/* 6704 */ typedef tagMIXERCONTROLA *LPMIXERCONTROL;

/* 6705 */ typedef void *handle_t;

/* 6706 */ typedef unsigned int (__stdcall *ATLGETTHREADACP)();

/* 6707 */ typedef unsigned int DBSEEK;

/* 6708 */ typedef char *PTCHAR;

/* 6709 */ typedef tagABORTPATH *PEMRBEGINPATH;

/* 6710 */ typedef tagABORTPATH *PEMRFLATTENPATH;

/* 6711 */ typedef _LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[1];

/* 6712 */ typedef tagMCI_ANIM_OPEN_PARMSW *PMCI_ANIM_OPEN_PARMSW;

/* 6713 */ typedef _CERT_CRL_CONTEXT_PAIR *PCERT_CRL_CONTEXT_PAIR;

/* 6714 */ typedef tagAUXCAPSA *LPAUXCAPS;

/* 6715 */ typedef ITypeLib *LPTYPELIB;

/* 6716 */ typedef tagAUXCAPSA *NPAUXCAPS;

/* 6717 */ typedef IViewObject2 *LPVIEWOBJECT2;

/* 6718 */ typedef _TRANSMIT_FILE_BUFFERS *PTRANSMIT_FILE_BUFFERS;

/* 6719 */ typedef _IMAGE_TLS_DIRECTORY64 *PIMAGE_TLS_DIRECTORY64;

/* 6720 */ typedef unsigned int DBEVENTPHASE;

/* 6721 */ typedef tagABORTPATH *PEMRWIDENPATH;

/* 6722 */ typedef _PRINTER_INFO_3 *LPPRINTER_INFO_3;

/* 6723 */ typedef _CERT_KEY_CONTEXT *PCERT_KEY_CONTEXT;

/* 6724 */ typedef PktRsWaitQueue *LPPktRsWaitQueue;

/* 6725 */ typedef _PRINTER_INFO_9A *PPRINTER_INFO_9A;

/* 6726 */ typedef _PROVIDOR_INFO_1W *PPROVIDOR_INFO_1W;

/* 6727 */ typedef HRESULT (__stdcall *LPFNCREATESTDACCESSIBLEOBJECT)(HWND__ *, int, _GUID *, void **);

/* 6728 */ typedef _IMAGE_SYMBOL *PIMAGE_SYMBOL;

/* 6729 */ typedef _WIN32_FIND_DATAW *LPWIN32_FIND_DATAW;

/* 6730 */ typedef tagMCI_ANIM_OPEN_PARMSA *PMCI_ANIM_OPEN_PARMSA;

/* 6731 */ typedef _READ_ELEMENT_ADDRESS_INFO *PREAD_ELEMENT_ADDRESS_INFO;

/* 6732 */ typedef _CMC_ADD_ATTRIBUTES_INFO *PCMC_ADD_ATTRIBUTES_INFO;

/* 6733 */ typedef void (__stdcall *PRPC_RUNDOWN)(void *);

/* 6734 */ typedef _PROVIDOR_INFO_1A *PPROVIDOR_INFO_1A;

/* 6735 */ typedef IViewObject *LPVIEWOBJECT;

/* 6736 */ typedef tagMCI_ANIM_PLAY_PARMS *LPMCI_ANIM_PLAY_PARMS;

/* 6737 */ typedef tagDBPROPINFO *PDBPROPINFO;

/* 6738 */ typedef _CERT_POLICY95_QUALIFIER1 *PCERT_POLICY95_QUALIFIER1;

/* 6739 */ typedef _IMAGE_RUNTIME_FUNCTION_ENTRY *_PIMAGE_RUNTIME_FUNCTION_ENTRY;

/* 6740 */ typedef void (__stdcall *RTL_VERIFIER_DLL_UNLOAD_CALLBACK)(unsigned __int16 *, void *, unsigned int, void *);

/* 6741 */ typedef POWER_ACTION_POLICY *PPOWER_ACTION_POLICY;

/* 6742 */ typedef tagWCRANGE *LPWCRANGE;

/* 6743 */ typedef tagMIXERCONTROLW *LPMIXERCONTROLW;

/* 6744 */ typedef tagSIZE *LPSIZEL;

/* 6745 */ typedef PktUAAck *LPPktUAAck;

/* 6746 */ typedef _CERT_CHAIN_POLICY_PARA *PCERT_CHAIN_POLICY_PARA;

/* 6747 */ typedef _PORT_INFO_1W *PPORT_INFO_1W;

/* 6748 */ typedef _PROCESSOR_POWER_POLICY_INFO *PPROCESSOR_POWER_POLICY_INFO;

/* 6749 */ typedef IOleInPlaceObjectWindowless *LPOLEINPLACEOBJECTWINDOWLESS;

/* 6750 */ typedef unsigned int DBDELETEFLAGS;

/* 6751 */ typedef tagEMRINVERTRGN *PEMRINVERTRGN;

/* 6752 */ typedef char yes_type;

/* 6753 */ typedef _PRINTER_INFO_8A *PPRINTER_INFO_8A;

/* 6754 */ typedef void (__stdcall *NDR_NOTIFY2_ROUTINE)(char);

/* 6755 */ typedef _PROGRESS_INVOKE_SETTING *PPROG_INVOKE_SETTING;

/* 6756 */ typedef int (__stdcall *PSYMBOLSERVERCALLBACKPROC)(unsigned int, unsigned __int64, unsigned __int64);

/* 6757 */ typedef IPersist *LPPERSIST;

/* 6758 */ typedef _WSAQuerySetW *LPWSAQUERYSETW;

/* 6759 */ typedef PktRsInfo *LPPktRsInfo;

/* 6760 */ typedef _PORT_INFO_1A *PPORT_INFO_1A;

/* 6761 */ typedef _GUID *LPCGUID;

/* 6762 */ typedef tagMIXERCONTROLA *LPMIXERCONTROLA;

/* 6763 */ typedef _CRYPT_RC2_CBC_PARAMETERS *PCRYPT_RC2_CBC_PARAMETERS;

/* 6764 */ typedef _BIDI_RESPONSE_DATA *PBIDI_RESPONSE_DATA;

/* 6765 */ typedef unsigned int *LPCOLORREF;

/* 6766 */ typedef tagMENUBARINFO *LPMENUBARINFO;

/* 6767 */ typedef _IMAGE_DEBUG_INFORMATION *PIMAGE_DEBUG_INFORMATION;

/* 6768 */ typedef tagENUMLOGFONTEXDVA *LPENUMLOGFONTEXDV;

/* 6769 */ typedef void (__stdcall *MSGBOXCALLBACK)(tagHELPINFO *);

/* 6770 */ typedef IInternetProtocolSinkStackable *LPIINTERNETPROTOCOLSINKStackable;

/* 6771 */ typedef SCARD_READERSTATEA *PSCARD_READERSTATEA;

/* 6772 */ typedef _REPARSE_GUID_DATA_BUFFER *PREPARSE_GUID_DATA_BUFFER;

/* 6773 */ typedef int FXPT16DOT16;

/* 6774 */ typedef tagMIDIINCAPS2A *LPMIDIINCAPS2;

/* 6775 */ typedef tagMIDIINCAPS2A *NPMIDIINCAPS2;

/* 6776 */ typedef void DispatcherContext;

/* 6777 */ typedef tagWINDOWPOS *PWINDOWPOS;

/* 6778 */ typedef SCARD_READERSTATEW *PSCARD_READERSTATEW;

/* 6779 */ typedef char BYTE;

/* 6780 */ typedef void (__stdcall *LPFIBER_START_ROUTINE)(void *);

/* 6781 */ typedef SHELLHOOKINFO *LPSHELLHOOKINFO;

/* 6782 */ typedef unsigned int (__stdcall *LPPAGEPAINTHOOK)(HWND__ *, unsigned int, unsigned int, int);

/* 6783 */ typedef tagMIDIINCAPSA *NPMIDIINCAPS;

/* 6784 */ typedef int (__stdcall *PFNPROPSHEETCALLBACK)(HWND__ *, unsigned int, int);

/* 6785 */ typedef tagMIDIINCAPSA *LPMIDIINCAPS;

/* 6786 */ typedef _CRYPT_KEY_PROV_PARAM *PCRYPT_KEY_PROV_PARAM;

/* 6787 */ typedef _JOBOBJECT_END_OF_JOB_TIME_INFORMATION *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION;

/* 6788 */ typedef tagMOUSEHOOKSTRUCTEX *PMOUSEHOOKSTRUCTEX;

/* 6789 */ typedef tagMCI_VD_ESCAPE_PARMSA *LPMCI_VD_ESCAPE_PARMS;

/* 6790 */ typedef _RTL_CRITICAL_SECTION *PRTL_CRITICAL_SECTION;

/* 6791 */ typedef _CHANGER_INITIALIZE_ELEMENT_STATUS *PCHANGER_INITIALIZE_ELEMENT_STATUS;

/* 6792 */ typedef tagDRAWTEXTPARAMS *LPDRAWTEXTPARAMS;

/* 6793 */ typedef HMIXER__ **LPHMIXER;

/* 6794 */ typedef PktProcessMining *LPPktProcessMining;

/* 6795 */ typedef HPEN__ *HPEN;

/* 6796 */ typedef _IMAGE_BASE_RELOCATION *PIMAGE_BASE_RELOCATION;

/* 6797 */ typedef unsigned int *PACCESS_RIGHTS;

/* 6798 */ typedef int (__stdcall *PSYMBOLSERVERCLOSEPROC)();

/* 6799 */ typedef IMessageFilter *LPMESSAGEFILTER;

/* 6800 */ typedef ISimpleFrameSite *LPSIMPLEFRAMESITE;

/* 6801 */ typedef _ENCRYPTION_CERTIFICATE_HASH *PENCRYPTION_CERTIFICATE_HASH;

/* 6802 */ typedef _ENUM_SERVICE_STATUSW *LPENUM_SERVICE_STATUSW;

/* 6803 */ typedef _CERT_OTHER_NAME *PCERT_OTHER_NAME;

/* 6804 */ typedef void *PVOID;

/* 6805 */ typedef unsigned __int16 OLECHAR;

/* 6806 */ typedef _SERVICE_STATUS_PROCESS *LPSERVICE_STATUS_PROCESS;

/* 6807 */ typedef void (__stdcall *GENERIC_UNBIND_ROUTINE)(void *, char *);

/* 6808 */ typedef _FILE_PREFETCH *PFILE_PREFETCH;

/* 6809 */ typedef _userHGLOBAL *wireHGLOBAL;

/* 6810 */ typedef SCARD_READERSTATEA *PSCARD_READERSTATE;

/* 6811 */ typedef unsigned int UINT32;

/* 6812 */ typedef tagMOUSEINPUT *PMOUSEINPUT;

/* 6813 */ typedef tagMIDIINCAPSW *LPMIDIINCAPSW;

/* 6814 */ typedef BITMAPV4HEADER *PBITMAPV4HEADER;

/* 6815 */ typedef tagMIDIINCAPSW *NPMIDIINCAPSW;

/* 6816 */ typedef BITMAPV5HEADER *PBITMAPV5HEADER;

/* 6817 */ typedef int *PINT32;

/* 6818 */ typedef tagWAVEINCAPS2W *NPWAVEINCAPS2W;

/* 6819 */ typedef _FAT_STATISTICS *PFAT_STATISTICS;

/* 6820 */ typedef tagWAVEINCAPS2W *LPWAVEINCAPS2W;

/* 6821 */ typedef _CERT_EXTENSION *PCERT_EXTENSION;

/* 6822 */ typedef _CERT_CREATE_CONTEXT_PARA *PCERT_CREATE_CONTEXT_PARA;

/* 6823 */ typedef tagBITMAPINFOHEADER *LPBITMAPINFOHEADER;

/* 6824 */ typedef HRESULT __stdcall _ATL_CREATORARGFUNC(void *, _GUID *, void **, unsigned int);

/* 6825 */ typedef _MINIDUMP_MEMORY64_LIST *PMINIDUMP_MEMORY64_LIST;

/* 6826 */ typedef _CERT_STORE_PROV_FIND_INFO *PCERT_STORE_PROV_FIND_INFO;

/* 6827 */ typedef char Bytef;

/* 6828 */ typedef IMonikerProp *LPMONIKERPROP;

/* 6829 */ typedef int (__stdcall *EDITWORDBREAKPROC)(char *, int, int, int);

/* 6830 */ typedef unsigned int BITVEC;

/* 6831 */ typedef int (__stdcall *ENHMFENUMPROC)(HDC__ *, tagHANDLETABLE *, tagENHMETARECORD *, int, int);

/* 6832 */ typedef unsigned int MCIERROR;

/* 6833 */ typedef tagEMRSELECTCLIPPATH *PEMRSETICMMODE;

/* 6834 */ typedef tagMIDIINCAPSA *NPMIDIINCAPSA;

/* 6835 */ typedef _CRYPTOAPI_BLOB *PCRYPT_UINT_BLOB;

/* 6836 */ typedef TIME *LPTIME;

/* 6837 */ typedef _AFPROTOCOLS *PAFPROTOCOLS;

/* 6838 */ typedef tagMIDIINCAPSA *LPMIDIINCAPSA;

/* 6839 */ typedef _CRL_REVOCATION_INFO *PCRL_REVOCATION_INFO;

/* 6840 */ typedef _VIDEOPARAMETERS *LPVIDEOPARAMETERS;

/* 6841 */ typedef _CMC_DATA_INFO *PCMC_DATA_INFO;

/* 6842 */ typedef _WSANETWORKEVENTS *LPWSANETWORKEVENTS;

/* 6843 */ typedef _CRYPT_OID_FUNC_ENTRY *PCRYPT_OID_FUNC_ENTRY;

/* 6844 */ typedef int (__stdcall *MFENUMPROC)(HDC__ *, tagHANDLETABLE *, tagMETARECORD *, int, int);

/* 6845 */ typedef const unsigned __int16 *LPCUWSTR;

/* 6846 */ typedef tagCWPSTRUCT *PCWPSTRUCT;

/* 6847 */ typedef const char *LPCUTSTR;

/* 6848 */ typedef int DBRESULTFLAG;

/* 6849 */ typedef _RTL_CRITICAL_SECTION_DEBUG *PRTL_RESOURCE_DEBUG;

/* 6850 */ typedef ITypeChangeEvents *LPTYPECHANGEEVENTS;

/* 6851 */ typedef IOleControl *LPOLECONTROL;

/* 6852 */ typedef midiproptimediv_tag *LPMIDIPROPTIMEDIV;

/* 6853 */ typedef _PERF_COUNTER_DEFINITION *PPERF_COUNTER_DEFINITION;

/* 6854 */ typedef tagEMRPOLYLINE16 *PEMRPOLYGON16;

/* 6855 */ typedef unsigned int DBREFCOUNT;

/* 6856 */ typedef unsigned int SERVICETYPE;

/* 6857 */ typedef void (__stdcall *LINEDDAPROC)(int, int, int);

/* 6858 */ typedef _TRUSTEE_ACCESSW *PTRUSTEE_ACCESSW;

/* 6859 */ typedef _RPC_SECURITY_QOS *PRPC_SECURITY_QOS;

/* 6860 */ typedef tagMIXERCONTROLDETAILS_LISTTEXTW *PMIXERCONTROLDETAILS_LISTTEXTW;

/* 6861 */ typedef tagCONNECTDATA *PCONNECTDATA;

/* 6862 */ typedef _CONNECTDLGSTRUCTW *LPCONNECTDLGSTRUCTW;

/* 6863 */ typedef tagFONTSIGNATURE *PFONTSIGNATURE;

/* 6864 */ typedef _DATATYPES_INFO_1A *PDATATYPES_INFO_1A;

/* 6865 */ typedef _PRINTER_INFO_2A *LPPRINTER_INFO_2A;

/* 6866 */ typedef tagMCI_GENERIC_PARMS *LPMCI_GENERIC_PARMS;

/* 6867 */ typedef DRVCONFIGINFOEX *PDRVCONFIGINFOEX;

/* 6868 */ typedef int (__stdcall *DATEFMT_ENUMPROCA)(char *);

/* 6869 */ typedef int (__stdcall *PENUMDIRTREE_CALLBACK)(const char *, void *);

/* 6870 */ typedef PktSpInfo *LPPktSpInfo;

/* 6871 */ typedef IBindHost *LPBINDHOST;

/* 6872 */ typedef _TOKEN_TYPE *PTOKEN_TYPE;

/* 6873 */ typedef void (__stdcall *USER_MARSHAL_FREEING_ROUTINE)(unsigned int *, void *);

/* 6874 */ typedef _ACCESS_ALLOWED_ACE *PACCESS_ALLOWED_ACE;

/* 6875 */ typedef _CONNECTDLGSTRUCTA *LPCONNECTDLGSTRUCTA;

/* 6876 */ typedef unsigned int DBASYNCHOP;

/* 6877 */ typedef int (__stdcall *DATEFMT_ENUMPROCW)(unsigned __int16 *);

/* 6878 */ typedef tagCOMPAREITEMSTRUCT *PCOMPAREITEMSTRUCT;

/* 6879 */ typedef unsigned int DBMEMOWNER;

/* 6880 */ typedef tagCALPOLESTR *LPCALPOLESTR;

/* 6881 */ typedef _PRINTER_INFO_2W *LPPRINTER_INFO_2W;

/* 6882 */ typedef OPENCARDNAMEA *LPOPENCARDNAME;

/* 6883 */ typedef _PRINTER_INFO_2A *PPRINTER_INFO_2A;

/* 6884 */ typedef const unsigned __int16 *LPCWCH;

/* 6885 */ typedef unsigned __int16 PROPVAR_PAD1;

/* 6886 */ typedef tagLAYERPLANEDESCRIPTOR *PLAYERPLANEDESCRIPTOR;

/* 6887 */ typedef PktCreateCastle *LPPktCreateCastle;

/* 6888 */ typedef tagEntryEnd *PENTRYEND;

/* 6889 */ typedef tagSOUNDSENTRYA *LPSOUNDSENTRYA;

/* 6890 */ typedef PktSiegeArmsCmd *LPPktSiegeArmsCmd;

/* 6891 */ typedef unsigned int __cdecl QUERYHANDLER(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);

/* 6892 */ typedef unsigned int DBPROPID;

/* 6893 */ typedef int DISPID;

/* 6894 */ typedef _RPC_SECURITY_QOS_V3_W *PRPC_SECURITY_QOS_V3_W;

/* 6895 */ typedef int (__stdcall *RPC_NEW_HTTP_PROXY_CHANNEL)(unsigned __int16 *, unsigned __int16 *, char *, unsigned __int16 **);

/* 6896 */ typedef char *PUCHAR;

/* 6897 */ typedef int lzo_ptrdiff_t;

/* 6898 */ typedef tagLOGFONTA *NPLOGFONT;

/* 6899 */ typedef tagLOGFONTA *LPLOGFONT;

/* 6900 */ typedef _CHANGER_ELEMENT_STATUS_EX *PCHANGER_ELEMENT_STATUS_EX;

/* 6901 */ typedef tagEXTLOGPEN *LPEXTLOGPEN;

/* 6902 */ typedef _SECURITY_ATTRIBUTES *LPSECURITY_ATTRIBUTES;

/* 6903 */ typedef tagEXTLOGPEN *NPEXTLOGPEN;

/* 6904 */ typedef unsigned __int64 DWORDLONG;

/* 6905 */ typedef _PRINTER_INFO_1A *PPRINTER_INFO_1A;

/* 6906 */ typedef int (__stdcall *PFN_CMSG_STREAM_OUTPUT)(const void *, char *, unsigned int, int);

/* 6907 */ typedef OPENCARDNAMEW *LPOPENCARDNAMEW;

/* 6908 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_SET_CRL_PROPERTY)(void *, _CRL_CONTEXT *, unsigned int, unsigned int, const void *);

/* 6909 */ typedef _PRINTER_INFO_2A *LPPRINTER_INFO_2;

/* 6910 */ typedef tagAUXCAPSA *LPAUXCAPSA;

/* 6911 */ typedef _CRL_DIST_POINT_NAME *PCRL_DIST_POINT_NAME;

/* 6912 */ typedef int (__stdcall *LOCALE_ENUMPROCA)(char *);

/* 6913 */ typedef _WSABUF *LPWSABUF;

/* 6914 */ typedef tagAUXCAPSA *NPAUXCAPSA;

/* 6915 */ typedef tagEMRCREATEDIBPATTERNBRUSHPT *PEMRCREATEDIBPATTERNBRUSHPT;

/* 6916 */ typedef _ImageArchitectureEntry *PIMAGE_ARCHITECTURE_ENTRY;

/* 6917 */ typedef _CERT_CONTEXT *PCCERT_CONTEXT;

/* 6918 */ typedef _CONNECTDLGSTRUCTA *LPCONNECTDLGSTRUCT;

/* 6919 */ typedef _ACL_SIZE_INFORMATION *PACL_SIZE_INFORMATION;

/* 6920 */ typedef OPENCARDNAMEA *LPOPENCARDNAMEA;

/* 6921 */ typedef int (__stdcall *PSYM_ENUMSOURCFILES_CALLBACK)(_SOURCEFILE *, void *);

/* 6922 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_GET_CRL_PROPERTY)(void *, _CRL_CONTEXT *, unsigned int, unsigned int, void *, unsigned int *);

/* 6923 */ typedef tagMIXERCAPS2A *PMIXERCAPS2A;

/* 6924 */ typedef _CERT_USAGE_MATCH *PCERT_USAGE_MATCH;

/* 6925 */ typedef _AFPROTOCOLS *LPAFPROTOCOLS;

/* 6926 */ typedef __int16 OLE_CANCELBOOL;

/* 6927 */ typedef _IMAGE_DOS_HEADER *PIMAGE_DOS_HEADER;

/* 6928 */ typedef int LPARAM;

/* 6929 */ typedef _ADDJOB_INFO_1A *LPADDJOB_INFO_1A;

/* 6930 */ typedef const void *LPCVOID;

/* 6931 */ typedef unsigned int (__cdecl *PQUERYHANDLER)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);

/* 6932 */ typedef pvalueA *PPVALUEA;

/* 6933 */ typedef unsigned __int16 *PWCH;

/* 6934 */ typedef tagELEMDESC *LPELEMDESC;

/* 6935 */ typedef int *LPINT;

/* 6936 */ typedef _SYSTEMTIME *LPSYSTEMTIME;

/* 6937 */ typedef IProvideMultipleClassInfo *LPPROVIDEMULTIPLECLASSINFO;

/* 6938 */ typedef tagPAINTSTRUCT *NPPAINTSTRUCT;

/* 6939 */ typedef tMIXERCONTROLDETAILS_UNSIGNED *PMIXERCONTROLDETAILS_UNSIGNED;

/* 6940 */ typedef tagPAINTSTRUCT *LPPAINTSTRUCT;

/* 6941 */ typedef int DB_LORDINAL;

/* 6942 */ typedef _DOC_INFO_3A *PDOC_INFO_3;

/* 6943 */ typedef _DOC_INFO_2A *PDOC_INFO_2;

/* 6944 */ typedef void *(__stdcall *PFN_CMSG_ALLOC)(unsigned int);

/* 6945 */ typedef _DOC_INFO_1A *PDOC_INFO_1;

/* 6946 */ typedef unsigned int WPARAM;

/* 6947 */ typedef __int64 _Q64;

/* 6948 */ typedef tagPOLYTEXTW *LPPOLYTEXTW;

/* 6949 */ typedef _PRINTER_INFO_7A *PPRINTER_INFO_7A;

/* 6950 */ typedef tagPOINTF *LPPOINTF;

/* 6951 */ typedef tagPOLYTEXTW *NPPOLYTEXTW;

/* 6952 */ typedef _OSVERSIONINFOA *LPOSVERSIONINFOA;

/* 6953 */ typedef SYSTEM_POWER_CAPABILITIES *PSYSTEM_POWER_CAPABILITIES;

/* 6954 */ typedef int INT32;

/* 6955 */ typedef tagMIDIINCAPS2A *LPMIDIINCAPS2A;

/* 6956 */ typedef tagMIDIINCAPS2A *NPMIDIINCAPS2A;

/* 6957 */ typedef _KDHELP *PKDHELP;

/* 6958 */ typedef tagENUMLOGFONTEXDVA *LPENUMLOGFONTEXDVA;

/* 6959 */ typedef tagWAVEINCAPSW *PWAVEINCAPSW;

/* 6960 */ typedef tagWAVEOUTCAPS2W *PWAVEOUTCAPS2W;

/* 6961 */ typedef ISurrogate *LPSURROGATE;

/* 6962 */ typedef IOleInPlaceSiteEx *LPOLEINPLACESITEEX;

/* 6963 */ typedef _SHITEMID *LPSHITEMID;

/* 6964 */ typedef _NETCONNECTINFOSTRUCT *LPNETCONNECTINFOSTRUCT;

/* 6965 */ typedef _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO *PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO;

/* 6966 */ typedef tagMCI_OVLY_SAVE_PARMSA *PMCI_OVLY_SAVE_PARMS;

/* 6967 */ typedef unsigned int GEOCLASS;

/* 6968 */ typedef tagPOLYTEXTA *NPPOLYTEXTA;

/* 6969 */ typedef int (__stdcall *LPCONDITIONPROC)(_WSABUF *, _WSABUF *, _QualityOfService *, _QualityOfService *, _WSABUF *, _WSABUF *, unsigned int *, unsigned int);

/* 6970 */ typedef tagPOLYTEXTA *LPPOLYTEXTA;

/* 6971 */ typedef tagMIXERCAPSA *LPMIXERCAPSA;

/* 6972 */ typedef tagEMRSETTEXTCOLOR *PEMRSETBKCOLOR;

/* 6973 */ typedef _SCOPETABLE_ENTRY *PSCOPETABLE_ENTRY;

/* 6974 */ typedef _LOAD_DLL_DEBUG_INFO *LPLOAD_DLL_DEBUG_INFO;

/* 6975 */ typedef tagMIXERLINECONTROLSA *LPMIXERLINECONTROLSA;

/* 6976 */ typedef value_entA *PVALENTA;

/* 6977 */ typedef tagMCI_SYSINFO_PARMSA *PMCI_SYSINFO_PARMSA;

/* 6978 */ typedef tagEMRARC *PEMRPIE;

/* 6979 */ typedef _MONITOR_INFO_1W *LPMONITOR_INFO_1W;

/* 6980 */ typedef tagAXESLISTW *LPAXESLISTW;

/* 6981 */ typedef _SHELLEXECUTEINFOW *LPSHELLEXECUTEINFOW;

/* 6982 */ typedef unsigned int MMVERSION;

/* 6983 */ typedef tagRGBQUAD *LPRGBQUAD;

/* 6984 */ typedef int (__stdcall *LPFNLRESULTFROMOBJECT)(_GUID *, unsigned int, IUnknown *);

/* 6985 */ typedef pcmwaveformat_tag *PPCMWAVEFORMAT;

/* 6986 */ typedef tagMCI_VD_ESCAPE_PARMSA *LPMCI_VD_ESCAPE_PARMSA;

/* 6987 */ typedef _CERT_CHAIN_FIND_BY_ISSUER_PARA *PCERT_CHAIN_FIND_ISSUER_PARA;

/* 6988 */ typedef _MONITOR_INFO_1A *LPMONITOR_INFO_1A;

/* 6989 */ typedef _CRYPT_KEY_VERIFY_MESSAGE_PARA *PCRYPT_KEY_VERIFY_MESSAGE_PARA;

/* 6990 */ typedef tagMCI_SYSINFO_PARMSW *PMCI_SYSINFO_PARMSW;

/* 6991 */ typedef tagIMECHARPOSITION *NPIMECHARPOSITION;

/* 6992 */ typedef tagSCROLLBARINFO *LPSCROLLBARINFO;

/* 6993 */ typedef tagIMECHARPOSITION *LPIMECHARPOSITION;

/* 6994 */ typedef void (__stdcall *CS_TYPE_NET_SIZE_ROUTINE)(void *, unsigned int, unsigned int, _IDL_CS_CONVERT *, unsigned int *, unsigned int *);

/* 6995 */ typedef _SYSTEM_ALARM_CALLBACK_OBJECT_ACE *PSYSTEM_ALARM_CALLBACK_OBJECT_ACE;

/* 6996 */ typedef _MENU_EVENT_RECORD *PMENU_EVENT_RECORD;

/* 6997 */ typedef tagAXESLISTA *LPAXESLISTA;

/* 6998 */ typedef _SHELLEXECUTEINFOA *LPSHELLEXECUTEINFOA;

/* 6999 */ typedef IRecordInfo *LPRECORDINFO;

/* 7000 */ typedef _PRINTER_INFO_5A *PPRINTER_INFO_5A;

/* 7001 */ typedef tagMCI_OVLY_SAVE_PARMSW *PMCI_OVLY_SAVE_PARMSW;

/* 7002 */ typedef _MMCKINFO *NPMMCKINFO;

/* 7003 */ typedef _IMAGEHLP_MODULE64W *PIMAGEHLP_MODULEW64;

/* 7004 */ typedef _MMCKINFO *LPMMCKINFO;

/* 7005 */ typedef int (__stdcall *DESKTOPENUMPROC)(char *, int);

/* 7006 */ typedef void (__stdcall *PAPCFUNC)(unsigned int);

/* 7007 */ typedef _PROPSHEETPAGEW_V3 *LPCPROPSHEETPAGEW_LATEST;

/* 7008 */ typedef _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION;

/* 7009 */ typedef int (__stdcall *NEARPROC)();

/* 7010 */ typedef char *PBOOLEAN;

/* 7011 */ typedef tagRECT *LPCBORDERWIDTHS;

/* 7012 */ typedef _EXCEPTION_RECORD64 *PEXCEPTION_RECORD64;

/* 7013 */ typedef tagPOLYTEXTA *NPPOLYTEXT;

/* 7014 */ typedef unsigned int SCARDCONTEXT;

/* 7015 */ typedef tagDIBSECTION *LPDIBSECTION;

/* 7016 */ typedef tagMCI_OVLY_SAVE_PARMSA *PMCI_OVLY_SAVE_PARMSA;

/* 7017 */ typedef tagPOLYTEXTA *LPPOLYTEXT;

/* 7018 */ typedef _DISK_LOGGING *PDISK_LOGGING;

/* 7019 */ typedef tagPOINTFX *LPPOINTFX;

/* 7020 */ typedef _HMAC_Info *PHMAC_INFO;

/* 7021 */ typedef _PROPSHEETPAGEA_V3 *LPCPROPSHEETPAGEA_LATEST;

/* 7022 */ typedef IEnumConnections *LPENUMCONNECTIONS;

/* 7023 */ typedef int (__stdcall *EDITWORDBREAKPROCA)(char *, int, int, int);

/* 7024 */ typedef tagCWPSTRUCT *NPCWPSTRUCT;

/* 7025 */ typedef void *SC_LOCK;

/* 7026 */ typedef tagCWPSTRUCT *LPCWPSTRUCT;

/* 7027 */ typedef tagICONMETRICSW *LPICONMETRICSW;

/* 7028 */ typedef tagDRVCONFIGINFO *PDRVCONFIGINFO;

/* 7029 */ typedef _PRINTER_INFO_4A *PPRINTER_INFO_4A;

/* 7030 */ typedef _CERT_REVOCATION_INFO *PCERT_REVOCATION_INFO;

/* 7031 */ typedef _CHANGER_ELEMENT *PCHANGER_ELEMENT;

/* 7032 */ typedef tagMCI_SYSINFO_PARMSA *PMCI_SYSINFO_PARMS;

/* 7033 */ typedef IEnumSTATPROPSTG *LPENUMSTATPROPSTG;

/* 7034 */ typedef void (__cdecl *RPCLT_PDU_FILTER_FUNC)(void *, unsigned int, int);

/* 7035 */ typedef tagLOGPEN *PLOGPEN;

/* 7036 */ typedef _MINIDUMP_MODULE_CALLBACK *PMINIDUMP_MODULE_CALLBACK;

/* 7037 */ typedef _IMAGE_THUNK_DATA32 *PIMAGE_THUNK_DATA32;

/* 7038 */ typedef _MESSAGE_RESOURCE_BLOCK *PMESSAGE_RESOURCE_BLOCK;

/* 7039 */ typedef _GRADIENT_RECT *PGRADIENT_RECT;

/* 7040 */ typedef IDataFilter *LPDATAFILTER;

/* 7041 */ typedef IInternetPriority *LPIINTERNETPRIORITY;

/* 7042 */ typedef _MONITOR_INFO_1A *LPMONITOR_INFO_1;

/* 7043 */ typedef tagACCESSTIMEOUT *LPACCESSTIMEOUT;

/* 7044 */ typedef _RemotableHandle *wireHFONT;

/* 7045 */ typedef _CMSG_SIGNER_INFO *PCMSG_SIGNER_INFO;

/* 7046 */ typedef tagEMRPOLYLINE16 *PEMRPOLYBEZIERTO16;

/* 7047 */ typedef _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO *PCMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;

/* 7048 */ typedef _ACTRL_CONTROL_INFOA *PACTRL_CONTROL_INFO;

/* 7049 */ typedef unsigned int *LPUINT;

/* 7050 */ typedef _GUID *REFCATID;

/* 7051 */ typedef _SHELLEXECUTEINFOA *LPSHELLEXECUTEINFO;

/* 7052 */ typedef tagMCI_ANIM_RECT_PARMS *LPMCI_ANIM_RECT_PARMS;

/* 7053 */ typedef tagAXESLISTA *LPAXESLIST;

/* 7054 */ typedef __int64 LONGLONG;

/* 7055 */ typedef _DOCINFOA *LPDOCINFOA;

/* 7056 */ typedef int (__stdcall *DRAWSTATEPROC)(HDC__ *, int, unsigned int, int, int);

/* 7057 */ typedef _MMCKINFO *LPCMMCKINFO;

/* 7058 */ typedef tagEMRPOLYLINE16 *PEMRPOLYBEZIER16;

/* 7059 */ typedef IEnumOleUndoUnits *LPENUMOLEUNDOUNITS;

/* 7060 */ typedef _MINIDUMP_MEMORY_LIST *PMINIDUMP_MEMORY_LIST;

/* 7061 */ typedef _TOKEN_GROUPS_AND_PRIVILEGES *PTOKEN_GROUPS_AND_PRIVILEGES;

/* 7062 */ typedef IAccessibleHandler *LPACCESSIBLEHANDLER;

/* 7063 */ typedef PktAI *LPPktAI;

/* 7064 */ typedef _PRINTER_INFO_5A *LPPRINTER_INFO_5A;

/* 7065 */ typedef _CRYPT_DECODE_PARA *PCRYPT_DECODE_PARA;

/* 7066 */ typedef tagMCI_SEQ_SET_PARMS *PMCI_SEQ_SET_PARMS;

/* 7067 */ typedef _CTL_ANY_SUBJECT_INFO *PCTL_ANY_SUBJECT_INFO;

/* 7068 */ typedef IInternetProtocolRoot *LPIINTERNETPROTOCOLROOT;

/* 7069 */ typedef tagMSGBOXPARAMSA *LPMSGBOXPARAMSA;

/* 7070 */ typedef char *PTBYTE;

/* 7071 */ typedef HMIDI__ **LPHMIDI;

/* 7072 */ typedef _CRYPT_PASSWORD_CREDENTIALSA *PCRYPT_PASSWORD_CREDENTIALSA;

/* 7073 */ typedef sockaddr *LPSOCKADDR;

/* 7074 */ typedef unsigned __int16 *PARAM_OFFSETTABLE;

/* 7075 */ typedef PktAw *LPPktAw;

/* 7076 */ typedef IInternetProtocolSink *LPIINTERNETPROTOCOLSINK;

/* 7077 */ typedef int (__stdcall *PFN_CMSG_EXPORT_KEY_AGREE)(_CMSG_CONTENT_ENCRYPT_INFO *, _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO *, _CMSG_KEY_AGREE_ENCRYPT_INFO *, unsigned int, void *);

/* 7078 */ typedef PktAt *LPPktAt;

/* 7079 */ typedef _TAPE_GET_POSITION *PTAPE_GET_POSITION;

/* 7080 */ typedef unsigned int (__stdcall *LPFNDEVMODE)(HWND__ *, HINSTANCE__ *, _devicemodeA *, char *, char *, _devicemodeA *, char *, unsigned int);

/* 7081 */ typedef tagMSGBOXPARAMSW *LPMSGBOXPARAMSW;

/* 7082 */ typedef _RPC_SYNTAX_IDENTIFIER *PRPC_SYNTAX_IDENTIFIER;

/* 7083 */ typedef tagCBT_CREATEWNDW *LPCBT_CREATEWNDW;

/* 7084 */ typedef int (__stdcall *PFN_EXPORT_PRIV_KEY_FUNC)(unsigned int, unsigned int, char *, unsigned int, void *, _CRYPT_PRIVATE_KEY_INFO *, unsigned int *);

/* 7085 */ typedef tagFUNCDESC *LPFUNCDESC;

/* 7086 */ typedef _PSP *HPROPSHEETPAGE;

/* 7087 */ typedef _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION *PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

/* 7088 */ typedef _PRINTER_INFO_5W *LPPRINTER_INFO_5W;

/* 7089 */ typedef tagPOLYTEXTA *PPOLYTEXTA;

/* 7090 */ typedef tagHANDLETABLE *PHANDLETABLE;

/* 7091 */ typedef tagLOGPEN *NPLOGPEN;

/* 7092 */ typedef tagLOGPEN *LPLOGPEN;

/* 7093 */ typedef _PROPSHEETHEADERA *LPPROPSHEETHEADERA;

/* 7094 */ typedef int (__stdcall *WNDENUMPROC)(HWND__ *, int);

/* 7095 */ typedef _FORM_INFO_1A *PFORM_INFO_1;

/* 7096 */ typedef _IMAGE_SEPARATE_DEBUG_HEADER *PIMAGE_SEPARATE_DEBUG_HEADER;

/* 7097 */ typedef HWAVEIN__ *HWAVEIN;

/* 7098 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_WRITE_CERT)(void *, _CERT_CONTEXT *, unsigned int);

/* 7099 */ typedef unsigned int (__stdcall *LPFNPSPCALLBACKA)(HWND__ *, unsigned int, _PROPSHEETPAGEA *);

/* 7100 */ typedef tagSTICKYKEYS *LPSTICKYKEYS;

/* 7101 */ typedef INETAddressInfo *LPINETAddressInfo;

/* 7102 */ typedef tagLOGFONTW *LPLOGFONTW;

/* 7103 */ typedef _HTTPSPolicyCallbackData *PSSL_EXTRA_CERT_CHAIN_POLICY_PARA;

/* 7104 */ typedef tagLOGFONTA *PLOGFONT;

/* 7105 */ typedef tagLOGFONTW *NPLOGFONTW;

/* 7106 */ typedef _CERT_REQUEST_INFO *PCERT_REQUEST_INFO;

/* 7107 */ typedef _RPC_SECURITY_QOS_V2_A *PRPC_SECURITY_QOS_V2_A;

/* 7108 */ typedef unsigned int ASSOCF;

/* 7109 */ typedef tagEMRSETWORLDTRANSFORM *PEMRSETWORLDTRANSFORM;

/* 7110 */ typedef _CTL_FIND_SUBJECT_PARA *PCTL_FIND_SUBJECT_PARA;

/* 7111 */ typedef unsigned int DBPOSITIONFLAGS;

/* 7112 */ typedef int (__cdecl *RPC_BLOCKING_FN)(void *, void *, void *);

/* 7113 */ typedef _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO *PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;

/* 7114 */ typedef int (__stdcall *PCRYPT_RESOLVE_HCRYPTPROV_FUNC)(_CRYPT_PRIVATE_KEY_INFO *, unsigned int *, void *);

/* 7115 */ typedef _PRINTER_INFO_5A *LPPRINTER_INFO_5;

/* 7116 */ typedef _IMAGE_TLS_DIRECTORY32 *PIMAGE_TLS_DIRECTORY32;

/* 7117 */ typedef _PRINTER_INFO_9W *PPRINTER_INFO_9W;

/* 7118 */ typedef _OSVERSIONINFOEXW *PRTL_OSVERSIONINFOEXW;

/* 7119 */ typedef tagMSGBOXPARAMSA *LPMSGBOXPARAMS;

/* 7120 */ typedef __int64 *PLONGLONG;

/* 7121 */ typedef tagMEASUREITEMSTRUCT *PMEASUREITEMSTRUCT;

/* 7122 */ typedef _WIN32_FIND_DATAA *LPWIN32_FIND_DATAA;

/* 7123 */ typedef PktCastleMineralInfo *LPPktCastleMineralInfo;

/* 7124 */ typedef _CRYPT_OID_INFO *PCRYPT_OID_INFO;

/* 7125 */ typedef tWAVEFORMATEX *NPWAVEFORMATEX;

/* 7126 */ typedef unsigned __int64 ULONGLONG;

/* 7127 */ typedef unsigned int DBCOMPAREOP;

/* 7128 */ typedef tWAVEFORMATEX *LPWAVEFORMATEX;

/* 7129 */ typedef _AppBarData *PAPPBARDATA;

/* 7130 */ typedef void (__cdecl *_purecall_handler)();

/* 7131 */ typedef _FILESYSTEM_STATISTICS *PFILESYSTEM_STATISTICS;

/* 7132 */ typedef _SID_AND_ATTRIBUTES (*PSID_AND_ATTRIBUTES_ARRAY)[1];

/* 7133 */ typedef __int64 _Longlong;

/* 7134 */ typedef int (__stdcall *CALINFO_ENUMPROCA)(char *);

/* 7135 */ typedef tagEVENTMSG *NPEVENTMSG;

/* 7136 */ typedef tagMSG *PMSG;

/* 7137 */ typedef _GUID *LPIID;

/* 7138 */ typedef tagLOGFONTW *PLOGFONTW;

/* 7139 */ typedef tagEVENTMSG *LPEVENTMSG;

/* 7140 */ typedef int streamsize;

/* 7141 */ typedef _RemotableHandle *wireHACCEL;

/* 7142 */ typedef HMIDIIN__ **LPHMIDIIN;

/* 7143 */ typedef _FORM_INFO_1A *PFORM_INFO_1A;

/* 7144 */ typedef IBindStatusCallback *LPBINDSTATUSCALLBACK;

/* 7145 */ typedef HMIDI__ *HMIDI;

/* 7146 */ typedef unsigned int HANDLE_PTR;

/* 7147 */ typedef _CHANGER_SET_ACCESS *PCHANGER_SET_ACCESS;

/* 7148 */ typedef tagMCI_ANIM_STEP_PARMS *LPMCI_ANIM_STEP_PARMS;

/* 7149 */ typedef char *LPCH;

/* 7150 */ typedef _PRINTER_INFO_8W *PPRINTER_INFO_8W;

/* 7151 */ typedef _CMC_TAGGED_ATTRIBUTE *PCMC_TAGGED_ATTRIBUTE;

/* 7152 */ typedef _CRL_DIST_POINTS_INFO *PCRL_DIST_POINTS_INFO;

/* 7153 */ typedef _WINDOW_BUFFER_SIZE_RECORD *PWINDOW_BUFFER_SIZE_RECORD;

/* 7154 */ typedef _WSAQuerySetA *LPWSAQUERYSETA;

/* 7155 */ typedef tagLOGFONTA *PLOGFONTA;

/* 7156 */ typedef _PREVENT_MEDIA_REMOVAL *PPREVENT_MEDIA_REMOVAL;

/* 7157 */ typedef IOleControlSite *LPOLECONTROLSITE;

/* 7158 */ typedef tagEMRSELECTCLIPPATH *PEMRSETSTRETCHBLTMODE;

/* 7159 */ typedef int (__stdcall *CALINFO_ENUMPROCW)(unsigned __int16 *);

/* 7160 */ typedef void **PHDEVNOTIFY;

/* 7161 */ typedef _CMSG_KEY_AGREE_ENCRYPT_INFO *PCMSG_KEY_AGREE_ENCRYPT_INFO;

/* 7162 */ typedef tagSIZE *PSIZE;

/* 7163 */ typedef _IMAGEHLP_SYMBOL_SRC *PIMAGEHLP_SYMBOL_SRC;

/* 7164 */ typedef unsigned int SECURITY_INFORMATION;

/* 7165 */ typedef _FORM_INFO_1W *PFORM_INFO_1W;

/* 7166 */ typedef tagWAVEOUTCAPS2A *PWAVEOUTCAPS2;

/* 7167 */ typedef void *HGLOBAL;

/* 7168 */ typedef IDropSource *LPDROPSOURCE;

/* 7169 */ typedef void **LPHANDLE;

/* 7170 */ typedef unsigned int dev_t;

/* 7171 */ typedef unsigned int DB_URESERVE;

/* 7172 */ typedef tagFONTSIGNATURE *LPFONTSIGNATURE;

/* 7173 */ typedef void *HCRYPTDEFAULTCONTEXT;

/* 7174 */ typedef _IMAGE_IMPORT_DESCRIPTOR *PIMAGE_IMPORT_DESCRIPTOR;

/* 7175 */ typedef unsigned __int16 wint_t;

/* 7176 */ typedef tagEMRARC *PEMRARCTO;

/* 7177 */ typedef tagWAVEOUTCAPSA *PWAVEOUTCAPS;

/* 7178 */ typedef _CMC_TAGGED_CONTENT_INFO *PCMC_TAGGED_CONTENT_INFO;

/* 7179 */ typedef _SHCREATEPROCESSINFOW *PSHCREATEPROCESSINFOW;

/* 7180 */ typedef _FULL_PTR_TO_REFID_ELEMENT *PFULL_PTR_TO_REFID_ELEMENT;

/* 7181 */ typedef tagDRVCONFIGINFO *LPDRVCONFIGINFO;

/* 7182 */ typedef tagEXTLOGFONTA *LPEXTLOGFONT;

/* 7183 */ typedef tagDRVCONFIGINFO *NPDRVCONFIGINFO;

/* 7184 */ typedef _CREATE_PROCESS_DEBUG_INFO *LPCREATE_PROCESS_DEBUG_INFO;

/* 7185 */ typedef void **SPHANDLE;

/* 7186 */ typedef tagEXTLOGFONTA *NPEXTLOGFONT;

/* 7187 */ typedef unsigned int __stdcall PM_CLOSE_PROC();

/* 7188 */ typedef _OSVERSIONINFOW *PRTL_OSVERSIONINFOW;

/* 7189 */ typedef _CRYPTOAPI_BLOB *PCERT_BLOB;

/* 7190 */ typedef _EQUIP *LPEQUIP;

/* 7191 */ typedef IPropertyBag2 *LPPROPERTYBAG2;

/* 7192 */ typedef tagEMRSELECTOBJECT *PEMRDELETEOBJECT;

/* 7193 */ typedef tagGLYPHSET *PGLYPHSET;

/* 7194 */ typedef void (__stdcall *RPC_DISPATCH_FUNCTION)(_RPC_MESSAGE *);

/* 7195 */ typedef _FILE_NOTIFY_INFORMATION *PFILE_NOTIFY_INFORMATION;

/* 7196 */ typedef IWinInetInfo *LPWININETINFO;

/* 7197 */ typedef _SHFILEOPSTRUCTW *LPSHFILEOPSTRUCTW;

/* 7198 */ typedef void *PVOID64;

/* 7199 */ typedef unsigned int DBCOMMANDPERSISTFLAG;

/* 7200 */ typedef _OUTLINETEXTMETRICA *POUTLINETEXTMETRIC;

/* 7201 */ typedef tagEXCEPINFO *LPEXCEPINFO;

/* 7202 */ typedef _ENUM_SERVICE_STATUSA *LPENUM_SERVICE_STATUSA;

/* 7203 */ typedef _CRYPT_PKCS8_IMPORT_PARAMS *PCRYPT_PRIVATE_KEY_BLOB_AND_PARAMS;

/* 7204 */ typedef void (__stdcall *TIMERPROC)(HWND__ *, unsigned int, unsigned int, unsigned int);

/* 7205 */ typedef LIST_ENTRY64 *PLIST_ENTRY64;

/* 7206 */ typedef _SHFILEOPSTRUCTA *LPSHFILEOPSTRUCTA;

/* 7207 */ typedef OPENCARD_SEARCH_CRITERIAA *LPOPENCARD_SEARCH_CRITERIA;

/* 7208 */ typedef tagCONTROLINFO *LPCONTROLINFO;

/* 7209 */ typedef tagEMREXTCREATEPEN *PEMREXTCREATEPEN;

/* 7210 */ typedef tagEMRCREATEPALETTE *PEMRCREATEPALETTE;

/* 7211 */ typedef int (__stdcall *PREAD_PROCESS_MEMORY_ROUTINE)(void *, unsigned int, void *, unsigned int, unsigned int *);

/* 7212 */ typedef tagWAVEOUTCAPSW *PWAVEOUTCAPSW;

/* 7213 */ typedef _STRRET *LPSTRRET;

/* 7214 */ typedef __int64 *PINT64;

/* 7215 */ typedef unsigned __int64 UINT64;

/* 7216 */ typedef tagEXTLOGFONTW *NPEXTLOGFONTW;

/* 7217 */ typedef tagWAVEINCAPS2A *LPWAVEINCAPS2A;

/* 7218 */ typedef IMultiQI *LPMULTIQI;

/* 7219 */ typedef int (__stdcall *PFNPROCESSPOLICIESA)(HWND__ *, const char *, const char *, const char *, unsigned int);

/* 7220 */ typedef tagEXTLOGFONTW *LPEXTLOGFONTW;

/* 7221 */ typedef tagWAVEINCAPS2A *NPWAVEINCAPS2A;

/* 7222 */ typedef _TAPE_GET_MEDIA_PARAMETERS *PTAPE_GET_MEDIA_PARAMETERS;

/* 7223 */ typedef tagWAVEOUTCAPSA *PWAVEOUTCAPSA;

/* 7224 */ typedef tagNMHDR *LPNMHDR;

/* 7225 */ typedef tagWINDOWINFO *LPWINDOWINFO;

/* 7226 */ typedef PktAtAck *LPPktAtAck;

/* 7227 */ typedef _ENCRYPTION_CERTIFICATE_HASH_LIST *PENCRYPTION_CERTIFICATE_HASH_LIST;

/* 7228 */ typedef tagHARDWAREINPUT *LPHARDWAREINPUT;

/* 7229 */ typedef CalculateDamageInfo *LPCalculateDamageInfo;

/* 7230 */ typedef tagEXTLOGFONTA *LPEXTLOGFONTA;

/* 7231 */ typedef tagNEWTEXTMETRICA *LPNEWTEXTMETRIC;

/* 7232 */ typedef tagEXTLOGFONTA *NPEXTLOGFONTA;

/* 7233 */ typedef tagNEWTEXTMETRICA *NPNEWTEXTMETRIC;

/* 7234 */ typedef int (__stdcall *PFNPROCESSPOLICIESW)(HWND__ *, const unsigned __int16 *, const unsigned __int16 *, const unsigned __int16 *, unsigned int);

/* 7235 */ typedef joyinfo_tag *LPJOYINFO;

/* 7236 */ typedef _IMAGEHLP_CBA_READ_MEMORY *PIMAGEHLP_CBA_READ_MEMORY;

/* 7237 */ typedef joyinfo_tag *NPJOYINFO;

/* 7238 */ typedef IErrorInfo *LPERRORINFO;

/* 7239 */ typedef _CONSOLE_SCREEN_BUFFER_INFO *PCONSOLE_SCREEN_BUFFER_INFO;

/* 7240 */ typedef _BIDI_REQUEST_DATA *LPBIDI_REQUEST_DATA;

/* 7241 */ typedef _OUTLINETEXTMETRICW *POUTLINETEXTMETRICW;

/* 7242 */ typedef _SCARD_IO_REQUEST *LPSCARD_IO_REQUEST;

/* 7243 */ typedef tagICONMETRICSA *LPICONMETRICS;

/* 7244 */ typedef _OFSTRUCT *LPOFSTRUCT;

/* 7245 */ typedef _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA *PCMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;

/* 7246 */ typedef PktCastleUpdate *LPPktCastleUpdate;

/* 7247 */ typedef OPENCARD_SEARCH_CRITERIAW *LPOPENCARD_SEARCH_CRITERIAW;

/* 7248 */ typedef unsigned __int16 ATOM;

/* 7249 */ typedef _OUTLINETEXTMETRICA *POUTLINETEXTMETRICA;

/* 7250 */ typedef _CRYPT_PKCS8_IMPORT_PARAMS *PCRYPT_PKCS8_IMPORT_PARAMS;

/* 7251 */ typedef _CSADDR_INFO *PCSADDR_INFO;

/* 7252 */ typedef _SHFILEOPSTRUCTA *LPSHFILEOPSTRUCT;

/* 7253 */ typedef OPENCARD_SEARCH_CRITERIAA *LPOPENCARD_SEARCH_CRITERIAA;

/* 7254 */ typedef tagEMRCREATEMONOBRUSH *PEMRCREATEMONOBRUSH;

/* 7255 */ typedef _CMSG_RECIPIENT_ENCODE_INFO *PCMSG_RECIPIENT_ENCODE_INFO;

/* 7256 */ typedef threadmbcinfostruct *pthreadmbcinfo;

/* 7257 */ typedef tagMIXERCONTROLDETAILS_LISTTEXTA *PMIXERCONTROLDETAILS_LISTTEXTA;

/* 7258 */ typedef _TRUSTEE_ACCESSA *PTRUSTEE_ACCESSA;

/* 7259 */ typedef int (__stdcall *LPMMIOPROC)(char *, unsigned int, int, int);

/* 7260 */ typedef _CRYPT_SMIME_CAPABILITY *PCRYPT_SMIME_CAPABILITY;

/* 7261 */ typedef tagDEBUGHOOKINFO *LPDEBUGHOOKINFO;

/* 7262 */ typedef _CRYPT_ENCODE_PARA *PCRYPT_ENCODE_PARA;

/* 7263 */ typedef tagDEBUGHOOKINFO *NPDEBUGHOOKINFO;

/* 7264 */ typedef tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA *PACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;

/* 7265 */ typedef unsigned int (__stdcall *LPSETUPHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 7266 */ typedef tMIXERCONTROLDETAILS_SIGNED *LPMIXERCONTROLDETAILS_SIGNED;

/* 7267 */ typedef _DOCINFOA *LPDOCINFO;

/* 7268 */ typedef _EFS_RPC_BLOB *PEFS_RPC_BLOB;

/* 7269 */ typedef z_stream_s *z_streamp;

/* 7270 */ typedef _PRINTER_INFO_4A *LPPRINTER_INFO_4A;

/* 7271 */ typedef _MINIDUMP_UNLOADED_MODULE *PMINIDUMP_UNLOADED_MODULE;

/* 7272 */ typedef HDROP__ *HDROP;

/* 7273 */ typedef _NOTIFYICONDATAA *PNOTIFYICONDATA;

/* 7274 */ typedef _DATATYPES_INFO_1W *PDATATYPES_INFO_1W;

/* 7275 */ typedef _CERT_SYSTEM_STORE_RELOCATE_PARA *PCERT_SYSTEM_STORE_RELOCATE_PARA;

/* 7276 */ typedef tagMCI_OPEN_PARMSA *LPMCI_OPEN_PARMS;

/* 7277 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_DELETE_CTL)(void *, _CTL_CONTEXT *, unsigned int);

/* 7278 */ typedef tagPALETTEENTRY *LPPALETTEENTRY;

/* 7279 */ typedef tagPOLYTEXTA *PPOLYTEXT;

/* 7280 */ typedef _CERT_CRL_CONTEXT_PAIR *PCCERT_CRL_CONTEXT_PAIR;

/* 7281 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_DELETE_CRL)(void *, _CRL_CONTEXT *, unsigned int);

/* 7282 */ typedef mmtime_tag *NPMMTIME;

/* 7283 */ typedef unsigned int DBBKMARK;

/* 7284 */ typedef mmtime_tag *LPMMTIME;

/* 7285 */ typedef _TAPE_STATISTICS *PTAPE_STATISTICS;

/* 7286 */ typedef _PRINTER_INFO_4W *LPPRINTER_INFO_4W;

/* 7287 */ typedef _LDT_ENTRY *PLDT_ENTRY;

/* 7288 */ typedef _INHERITED_FROMA *PINHERITED_FROM;

/* 7289 */ typedef tagENHMETAHEADER *PENHMETAHEADER;

/* 7290 */ typedef tagNCCALCSIZE_PARAMS *LPNCCALCSIZE_PARAMS;

/* 7291 */ typedef _GENERIC_BINDING_ROUTINE_PAIR *PGENERIC_BINDING_ROUTINE_PAIR;

/* 7292 */ typedef _POINTFLOAT *PPOINTFLOAT;

/* 7293 */ typedef _PRINTER_INFO_2W *PPRINTER_INFO_2W;

/* 7294 */ typedef BATTERY_REPORTING_SCALE *PBATTERY_REPORTING_SCALE;

/* 7295 */ typedef tagEMRELLIPSE *PEMRELLIPSE;

/* 7296 */ typedef void (__stdcall *PTIMERAPCROUTINE)(void *, unsigned int, unsigned int);

/* 7297 */ typedef tagSOUNDSENTRYW *LPSOUNDSENTRYW;

/* 7298 */ typedef _TRIVERTEX *LPTRIVERTEX;

/* 7299 */ typedef tagACTCTX_SECTION_KEYED_DATA *PACTCTX_SECTION_KEYED_DATA;

/* 7300 */ typedef _CRYPTOAPI_BLOB *PDATA_BLOB;

/* 7301 */ typedef _MMCKINFO *PMMCKINFO;

/* 7302 */ typedef _RPC_SECURITY_QOS_V3_A *PRPC_SECURITY_QOS_V3_A;

/* 7303 */ typedef unsigned int DBBINDURLFLAG;

/* 7304 */ typedef unsigned int *LPSCARDHANDLE;

/* 7305 */ typedef int *PSCODE;

/* 7306 */ typedef void (__stdcall *APC_CALLBACK_FUNCTION)(unsigned int, void *, void *);

/* 7307 */ typedef tagKEYBDINPUT *LPKEYBDINPUT;

/* 7308 */ typedef __int16 *PSHORT;

/* 7309 */ typedef unsigned __int16 WORD;

/* 7310 */ typedef _TAPE_PREPARE *PTAPE_PREPARE;

/* 7311 */ typedef _PRINTER_INFO_1W *PPRINTER_INFO_1W;

/* 7312 */ typedef unsigned __int16 USHORT;

/* 7313 */ typedef tagMCI_OPEN_PARMSW *LPMCI_OPEN_PARMSW;

/* 7314 */ typedef _RE_USPGRoomCurrent_DisConn *LPRE_USPGRoomCurrent_DisConn;

/* 7315 */ typedef _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO *PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO;

/* 7316 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_SET_CTL_PROPERTY)(void *, _CTL_CONTEXT *, unsigned int, unsigned int, const void *);

/* 7317 */ typedef _PRINTER_INFO_4A *LPPRINTER_INFO_4;

/* 7318 */ typedef int (__stdcall *LOCALE_ENUMPROCW)(unsigned __int16 *);

/* 7319 */ typedef tagAUXCAPSW *NPAUXCAPSW;

/* 7320 */ typedef _OUTPUT_DEBUG_STRING_INFO *LPOUTPUT_DEBUG_STRING_INFO;

/* 7321 */ typedef tagAUXCAPSW *LPAUXCAPSW;

/* 7322 */ typedef _RPC_MESSAGE *PRPC_MESSAGE;

/* 7323 */ typedef tagDRAWITEMSTRUCT *PDRAWITEMSTRUCT;

/* 7324 */ typedef tagMCI_OPEN_PARMSA *LPMCI_OPEN_PARMSA;

/* 7325 */ typedef tagMCI_ANIM_UPDATE_PARMS *LPMCI_ANIM_UPDATE_PARMS;

/* 7326 */ typedef tagCAUUID *LPCAUUID;

/* 7327 */ typedef unsigned __int16 FSHORT;

/* 7328 */ typedef tagKBDLLHOOKSTRUCT *PKBDLLHOOKSTRUCT;

/* 7329 */ typedef _WIN32_FIND_DATAA *LPWIN32_FIND_DATA;

/* 7330 */ typedef IEnumCATEGORYINFO *LPENUMCATEGORYINFO;

/* 7331 */ typedef in_addr *PIN_ADDR;

/* 7332 */ typedef tagDELETEITEMSTRUCT *PDELETEITEMSTRUCT;

/* 7333 */ typedef tagMIXERCAPS2W *PMIXERCAPS2W;

/* 7334 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_GET_CTL_PROPERTY)(void *, _CTL_CONTEXT *, unsigned int, unsigned int, void *, unsigned int *);

/* 7335 */ typedef tagWINDOWPLACEMENT *PWINDOWPLACEMENT;

/* 7336 */ typedef unsigned __int16 _U16;

/* 7337 */ typedef int (__stdcall *SERVER_ROUTINE)();

/* 7338 */ typedef _ADDJOB_INFO_1W *LPADDJOB_INFO_1W;

/* 7339 */ typedef tagEMRSETCOLORADJUSTMENT *PEMRSETCOLORADJUSTMENT;

/* 7340 */ typedef pvalueW *PPVALUEW;

/* 7341 */ typedef tagCY *LPCY;

/* 7342 */ typedef _RTL_CRITICAL_SECTION_DEBUG *PRTL_CRITICAL_SECTION_DEBUG;

/* 7343 */ typedef servent *PSERVENT;

/* 7344 */ typedef _CERT_POLICY_CONSTRAINTS_INFO *PCERT_POLICY_CONSTRAINTS_INFO;

/* 7345 */ typedef tagRECONVERTSTRING *NPRECONVERTSTRING;

/* 7346 */ typedef _TOKEN_PRIVILEGES *PTOKEN_PRIVILEGES;

/* 7347 */ typedef tagRECONVERTSTRING *LPRECONVERTSTRING;

/* 7348 */ typedef _TRANSMIT_PACKETS_ELEMENT *LPTRANSMIT_PACKETS_ELEMENT;

/* 7349 */ typedef void *HCRYPTASYNC;

/* 7350 */ typedef _WSAQuerySetA *LPWSAQUERYSET;

/* 7351 */ typedef _GLYPHMETRICSFLOAT *LPGLYPHMETRICSFLOAT;

/* 7352 */ typedef unsigned int *PUINT32;

/* 7353 */ typedef provider_info *PPROVIDER;

/* 7354 */ typedef tagWAVEINCAPSW *LPWAVEINCAPSW;

/* 7355 */ typedef _OSVERSIONINFOW *LPOSVERSIONINFOW;

/* 7356 */ typedef _FIND_NAME_BUFFER *PFIND_NAME_BUFFER;

/* 7357 */ typedef _CHANGER_ELEMENT_LIST *PCHANGER_ELEMENT_LIST;

/* 7358 */ typedef tagWAVEINCAPSW *NPWAVEINCAPSW;

/* 7359 */ typedef _PRINTER_INFO_7W *PPRINTER_INFO_7W;

/* 7360 */ typedef IAdviseSink2 *LPADVISESINK2;

/* 7361 */ typedef tagMIDIINCAPS2W *NPMIDIINCAPS2W;

/* 7362 */ typedef tagEntry *PENTRY;

/* 7363 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_FREE_FIND_CERT)(void *, _CERT_CONTEXT *, void *, unsigned int);

/* 7364 */ typedef tagMIDIINCAPS2W *LPMIDIINCAPS2W;

/* 7365 */ typedef int (__stdcall *PSYM_ENUMSYMBOLS_CALLBACK64W)(unsigned __int16 *, unsigned __int64, unsigned int, void *);

/* 7366 */ typedef _IMAGEHLP_MODULE *PIMAGEHLP_MODULE;

/* 7367 */ typedef _IMAGE_DATA_DIRECTORY *PIMAGE_DATA_DIRECTORY;

/* 7368 */ typedef _SECURITY_IMPERSONATION_LEVEL *PSECURITY_IMPERSONATION_LEVEL;

/* 7369 */ typedef tagCUSTDATAITEM *LPCUSTDATAITEM;

/* 7370 */ typedef tagWAVEOUTCAPS2A *PWAVEOUTCAPS2A;

/* 7371 */ typedef tagENUMLOGFONTEXDVW *LPENUMLOGFONTEXDVW;

/* 7372 */ typedef _CTL_USAGE *PCERT_ENHKEY_USAGE;

/* 7373 */ typedef tagWAVEINCAPSA *PWAVEINCAPSA;

/* 7374 */ typedef tagMCI_VD_ESCAPE_PARMSA *PMCI_VD_ESCAPE_PARMSA;

/* 7375 */ typedef int MEMBERID;

/* 7376 */ typedef char CMDType;

/* 7377 */ typedef int __stdcall RPC_FORWARD_FUNCTION(_GUID *, _RPC_VERSION *, _GUID *, char *, void **);

/* 7378 */ typedef _CRYPTOAPI_BLOB *PCRL_BLOB;

/* 7379 */ typedef IEnumConnections *PENUMCONNECTIONS;

/* 7380 */ typedef tagWAVEINCAPSA *NPWAVEINCAPSA;

/* 7381 */ typedef IAdviseSink *LPADVISESINK;

/* 7382 */ typedef _CHANGER_SET_POSITION *PCHANGER_SET_POSITION;

/* 7383 */ typedef tagWAVEINCAPSA *LPWAVEINCAPSA;

/* 7384 */ typedef void *LPVOID;

/* 7385 */ typedef WSAData *LPWSADATA;

/* 7386 */ typedef _WSAPROTOCOLCHAIN *LPWSAPROTOCOLCHAIN;

/* 7387 */ typedef int SHANDLE_PTR;

/* 7388 */ typedef tagMIXERCAPSW *LPMIXERCAPSW;

/* 7389 */ typedef tagMCI_VD_ESCAPE_PARMSW *PMCI_VD_ESCAPE_PARMSW;

/* 7390 */ typedef tagMCI_LOAD_PARMSA *PMCI_LOAD_PARMS;

/* 7391 */ typedef int off_t;

/* 7392 */ typedef _CRYPT_X942_OTHER_INFO *PCRYPT_X942_OTHER_INFO;

/* 7393 */ typedef HMIDIOUT__ *HMIDIOUT;

/* 7394 */ typedef _cpinfo *LPCPINFO;

/* 7395 */ typedef value_entW *PVALENTW;

/* 7396 */ typedef unsigned __int16 *LPWORD;

/* 7397 */ typedef tagEMREXTTEXTOUTA *PEMREXTTEXTOUTA;

/* 7398 */ typedef _EVENTLOG_FULL_INFORMATION *LPEVENTLOG_FULL_INFORMATION;

/* 7399 */ typedef tagMIXERLINECONTROLSW *LPMIXERLINECONTROLSW;

/* 7400 */ typedef _COORD *PCOORD;

/* 7401 */ typedef tagEMRSELECTOBJECT *PEMRSELECTOBJECT;

/* 7402 */ typedef tagCUSTDATA *LPCUSTDATA;

/* 7403 */ typedef tagMENUITEMINFOA *LPMENUITEMINFOA;

/* 7404 */ typedef _PRINTER_NOTIFY_OPTIONS *PPRINTER_NOTIFY_OPTIONS;

/* 7405 */ typedef _ACTIVATION_CONTEXT_BASIC_INFORMATION *PACTIVATION_CONTEXT_BASIC_INFORMATION;

/* 7406 */ typedef ITypeComp *LPTYPECOMP;

/* 7407 */ typedef _WSACOMPLETION *LPWSACOMPLETION;

/* 7408 */ typedef tagMCI_VD_ESCAPE_PARMSW *LPMCI_VD_ESCAPE_PARMSW;

/* 7409 */ typedef _MINIDUMP_MEMORY_DESCRIPTOR64 *PMINIDUMP_MEMORY_DESCRIPTOR64;

/* 7410 */ typedef tagEMRFILLPATH *PEMRFILLPATH;

/* 7411 */ typedef tagDESIGNVECTOR *PDESIGNVECTOR;

/* 7412 */ typedef tagMENUITEMINFOW *LPMENUITEMINFOW;

/* 7413 */ typedef HFONT__ *HFONT;

/* 7414 */ typedef tagEMREXTTEXTOUTA *PEMREXTTEXTOUTW;

/* 7415 */ typedef tagEMREOF *PEMREOF;

/* 7416 */ typedef unsigned __int64 (__stdcall *PGET_MODULE_BASE_ROUTINE64)(void *, unsigned __int64);

/* 7417 */ typedef _FN_OBJECT_MGR_FUNCTIONS *PFN_OBJECT_MGR_FUNCTS;

/* 7418 */ typedef int (__stdcall *PFN_INIT_CRITSEC_AND_SPIN_COUNT)(_RTL_CRITICAL_SECTION *, unsigned int);

/* 7419 */ typedef ICreateTypeLib2 *LPCREATETYPELIB2;

/* 7420 */ typedef _ENUM_SERVICE_STATUSA *LPENUM_SERVICE_STATUS;

/* 7421 */ typedef tagEMRPOLYPOLYLINE *PEMRPOLYPOLYGON;

/* 7422 */ typedef unsigned int DBSTATUS;

/* 7423 */ typedef _PRINTER_INFO_5W *PPRINTER_INFO_5W;

/* 7424 */ typedef int LONG;

/* 7425 */ typedef tagWAVEINCAPS2A *LPWAVEINCAPS2;

/* 7426 */ typedef int *LPLONG;

/* 7427 */ typedef _EXCEPTION_RECORD *PEXCEPTION_RECORD;

/* 7428 */ typedef tagWAVEINCAPS2A *NPWAVEINCAPS2;

/* 7429 */ typedef tagMENUINFO *LPMENUINFO;

/* 7430 */ typedef unsigned __int16 *PPARAM_OFFSETTABLE;

/* 7431 */ typedef unsigned int CALID;

/* 7432 */ typedef tagMCI_VD_ESCAPE_PARMSA *PMCI_VD_ESCAPE_PARMS;

/* 7433 */ typedef _IMAGEHLP_MODULEW *PIMAGEHLP_MODULEW;

/* 7434 */ typedef int (__cdecl *_PNH)(unsigned int);

/* 7435 */ typedef int (__stdcall *PFN_CERT_DLL_OPEN_STORE_PROV_FUNC)(const char *, unsigned int, unsigned int, unsigned int, const void *, void *, _CERT_STORE_PROV_INFO *);

/* 7436 */ typedef tagWAVEINCAPSA *NPWAVEINCAPS;

/* 7437 */ typedef tagWAVEINCAPSA *LPWAVEINCAPS;

/* 7438 */ typedef tagEMRLINETO *PEMRMOVETOEX;

/* 7439 */ typedef IPictureDisp *LPPICTUREDISP;

/* 7440 */ typedef _CHANGER_READ_ELEMENT_STATUS *PCHANGER_READ_ELEMENT_STATUS;

/* 7441 */ typedef SERVER *LPSERVER_GROUP;

/* 7442 */ typedef int (__stdcall *EDITWORDBREAKPROCW)(unsigned __int16 *, int, int, int);

/* 7443 */ typedef float OLE_YPOS_CONTAINER;

/* 7444 */ typedef IExternalConnection *LPEXTERNALCONNECTION;

/* 7445 */ typedef float OLE_XPOS_CONTAINER;

/* 7446 */ typedef _MINIDUMP_MISC_INFO *PMINIDUMP_MISC_INFO;

/* 7447 */ typedef tagICONMETRICSA *LPICONMETRICSA;

/* 7448 */ typedef _PRINTER_INFO_4W *PPRINTER_INFO_4W;

/* 7449 */ typedef _CONSOLE_FONT_INFO *PCONSOLE_FONT_INFO;

/* 7450 */ typedef tagEMRSETVIEWPORTEXTEX *PEMRSETVIEWPORTEXTEX;

/* 7451 */ typedef _CMC_ADD_EXTENSIONS_INFO *PCMC_ADD_EXTENSIONS_INFO;

/* 7452 */ typedef unsigned int DBDEFERRABILITY;

/* 7453 */ typedef int (__stdcall *PSYMBOL_REGISTERED_CALLBACK64)(void *, unsigned int, unsigned __int64, unsigned __int64);

/* 7454 */ typedef tagMENUITEMINFOA *LPMENUITEMINFO;

/* 7455 */ typedef _ACCESS_ALLOWED_OBJECT_ACE *PACCESS_ALLOWED_OBJECT_ACE;

/* 7456 */ typedef tagEMRPOLYLINE *PEMRPOLYBEZIERTO;

/* 7457 */ typedef tagOleMenuGroupWidths *LPOLEMENUGROUPWIDTHS;

/* 7458 */ typedef int time_t;

/* 7459 */ typedef tagCURSORINFO *PCURSORINFO;

/* 7460 */ typedef _CERT_ISSUER_SERIAL_NUMBER *PCERT_ISSUER_SERIAL_NUMBER;

/* 7461 */ typedef _TOKEN_GROUPS *PTOKEN_GROUPS;

/* 7462 */ typedef void (__stdcall *LPTIMECALLBACK)(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);

/* 7463 */ typedef threadlocaleinfostruct *pthreadlocinfo;

/* 7464 */ typedef unsigned int (__stdcall *ATLGETENVIRONMENTVARIABLEW)(const unsigned __int16 *, unsigned __int16 *, unsigned int);

/* 7465 */ typedef IMarshal2 *LPMARSHAL2;

/* 7466 */ typedef tagMIXERCONTROLDETAILS_LISTTEXTA *PMIXERCONTROLDETAILS_LISTTEXT;

/* 7467 */ typedef unsigned __int16 SECURITY_DESCRIPTOR_CONTROL;

/* 7468 */ typedef PktCB *LPPktCB;

/* 7469 */ typedef tagCOMPOSITIONFORM *NPCOMPOSITIONFORM;

/* 7470 */ typedef tagMSGBOXPARAMSA *PMSGBOXPARAMSA;

/* 7471 */ typedef tagCOMPOSITIONFORM *LPCOMPOSITIONFORM;

/* 7472 */ typedef _PORT_INFO_3A *LPPORT_INFO_3A;

/* 7473 */ typedef _PORT_INFO_2A *LPPORT_INFO_2A;

/* 7474 */ typedef _PORT_INFO_1A *LPPORT_INFO_1A;

/* 7475 */ typedef _PRINTER_INFO_7A *LPPRINTER_INFO_7A;

/* 7476 */ typedef _CRYPT_KEY_SIGN_MESSAGE_PARA *PCRYPT_KEY_SIGN_MESSAGE_PARA;

/* 7477 */ typedef _FRIEND *LPFRIEND;

/* 7478 */ typedef unsigned __int64 *PULONG64;

/* 7479 */ typedef IDataAdviseHolder *LPDATAADVISEHOLDER;

/* 7480 */ typedef IEnumString *LPENUMSTRING;

/* 7481 */ typedef _DOC_INFO_3W *PDOC_INFO_3W;

/* 7482 */ typedef _WSACOMPLETION *PWSACOMPLETION;

/* 7483 */ typedef _FILETIME *LPFILETIME;

/* 7484 */ typedef IInternetProtocolInfo *LPIINTERNETPROTOCOLINFO;

/* 7485 */ typedef SCARD_READERSTATEW *LPSCARD_READERSTATEW;

/* 7486 */ typedef IFontDisp *LPFONTDISP;

/* 7487 */ typedef IEnumGUID *LPENUMGUID;

/* 7488 */ typedef int (__stdcall *PSYM_ENUMSYMBOLS_CALLBACK)(char *, unsigned int, unsigned int, void *);

/* 7489 */ typedef _STORE_INFO *LPSTORE_INFO;

/* 7490 */ typedef tagGroup *PGROUP;

/* 7491 */ typedef _PRINTER_INFO_7W *LPPRINTER_INFO_7W;

/* 7492 */ typedef timeval *PTIMEVAL;

/* 7493 */ typedef _ACCESS_DENIED_CALLBACK_OBJECT_ACE *PACCESS_DENIED_CALLBACK_OBJECT_ACE;

/* 7494 */ typedef char CHAR;

/* 7495 */ typedef _SCARD_IO_REQUEST *PSCARD_IO_REQUEST;

/* 7496 */ typedef tagMENUGETOBJECTINFO *PMENUGETOBJECTINFO;

/* 7497 */ typedef tagINPUT *LPINPUT;

/* 7498 */ typedef const char *__stdcall _ATL_DESCRIPTIONFUNC();

/* 7499 */ typedef _IMAGE_FUNCTION_ENTRY64 *PIMAGE_FUNCTION_ENTRY64;

/* 7500 */ typedef unsigned int OLE_HANDLE;

/* 7501 */ typedef int (__stdcall *WINSTAENUMPROC)(char *, int);

/* 7502 */ typedef CreatureStatus *LPCreatureStatus;

/* 7503 */ typedef IBinding *LPBINDING;

/* 7504 */ typedef unsigned int (__cdecl *check_func)(unsigned int, const char *, unsigned int);

/* 7505 */ typedef IPerPropertyBrowsing *LPPERPROPERTYBROWSING;

/* 7506 */ typedef _RTL_CRITICAL_SECTION *PCRITICAL_SECTION;

/* 7507 */ typedef _MINIDUMP_EXCEPTION *PMINIDUMP_EXCEPTION;

/* 7508 */ typedef _PROVIDOR_INFO_1A *LPPROVIDOR_INFO_1A;

/* 7509 */ typedef _PRINTER_ENUM_VALUESA *LPPRINTER_ENUM_VALUESA;

/* 7510 */ typedef _DOC_INFO_2W *PDOC_INFO_2W;

/* 7511 */ typedef _PROVIDOR_INFO_2A *LPPROVIDOR_INFO_2A;

/* 7512 */ typedef _MODEMDEVCAPS *LPMODEMDEVCAPS;

/* 7513 */ typedef void (__cdecl *_se_translator_function)(unsigned int, _EXCEPTION_POINTERS *);

/* 7514 */ typedef _INVEN *LPINVEN;

/* 7515 */ typedef _COMMPROP *LPCOMMPROP;

/* 7516 */ typedef tagSTYLESTRUCT *LPSTYLESTRUCT;

/* 7517 */ typedef tagMULTIKEYHELPA *PMULTIKEYHELP;

/* 7518 */ typedef _CERT_NAME_CONSTRAINTS_INFO *PCERT_NAME_CONSTRAINTS_INFO;

/* 7519 */ typedef void **PHANDLE;

/* 7520 */ typedef _QUOTA_LIMITS *PQUOTA_LIMITS;

/* 7521 */ typedef _SECURITY_ATTRIBUTES *PSECURITY_ATTRIBUTES;

/* 7522 */ typedef tagPAINTSTRUCT *PPAINTSTRUCT;

/* 7523 */ typedef _userFLAG_STGMEDIUM *wireFLAG_STGMEDIUM;

/* 7524 */ typedef _currencyfmtW *LPCURRENCYFMTW;

/* 7525 */ typedef PktTBInfo *LPPktTBInfo;

/* 7526 */ typedef tagMIXERLINEW *LPMIXERLINEW;

/* 7527 */ typedef _RemotableHandle *wireHDC;

/* 7528 */ typedef IRootStorage *LPROOTSTORAGE;

/* 7529 */ typedef tagUSEROBJECTFLAGS *PUSEROBJECTFLAGS;

/* 7530 */ typedef _CRYPT_URL_INFO *PCRYPT_URL_INFO;

/* 7531 */ typedef _DRIVE_LAYOUT_INFORMATION *PDRIVE_LAYOUT_INFORMATION;

/* 7532 */ typedef HKL__ **LPHKL;

/* 7533 */ typedef _PRINTER_INFO_7A *LPPRINTER_INFO_7;

/* 7534 */ typedef OPENCARDNAMEA *POPENCARDNAME;

/* 7535 */ typedef _CREATE_THREAD_DEBUG_INFO *LPCREATE_THREAD_DEBUG_INFO;

/* 7536 */ typedef _NLA_BLOB *PNLA_BLOB;

/* 7537 */ typedef tagFILTERKEYS *LPFILTERKEYS;

/* 7538 */ typedef _DOC_INFO_1W *PDOC_INFO_1W;

/* 7539 */ typedef DLGTEMPLATE *LPDLGTEMPLATEW;

/* 7540 */ typedef tagEMREXTESCAPE *PEMREXTESCAPE;

/* 7541 */ typedef tagBITMAPFILEHEADER *PBITMAPFILEHEADER;

/* 7542 */ typedef int (__stdcall *MINIDUMP_CALLBACK_ROUTINE)(void *, _MINIDUMP_CALLBACK_INPUT *const , _MINIDUMP_CALLBACK_OUTPUT *);

/* 7543 */ typedef tagHSZPAIR *PHSZPAIR;

/* 7544 */ typedef _TAPE_SET_MEDIA_PARAMETERS *PTAPE_SET_MEDIA_PARAMETERS;

/* 7545 */ typedef void __stdcall RPC_SECURITY_CALLBACK_FN(void *);

/* 7546 */ typedef _IMAGE_TLS_DIRECTORY32 *PIMAGE_TLS_DIRECTORY;

/* 7547 */ typedef tagMCI_OVLY_WINDOW_PARMSW *LPMCI_OVLY_WINDOW_PARMSW;

/* 7548 */ typedef _ACTRL_ALISTA *PACTRL_ACCESSA;

/* 7549 */ typedef unsigned int DBMOVEFLAGS;

/* 7550 */ typedef unsigned int (__stdcall *LPHANDLER_FUNCTION_EX)(unsigned int, unsigned int, void *, void *);

/* 7551 */ typedef tagEMRGLSRECORD *PEMRGLSRECORD;

/* 7552 */ typedef unsigned int DBINDEX_COL_ORDER;

/* 7553 */ typedef _ENCRYPTION_CERTIFICATE *PENCRYPTION_CERTIFICATE;

/* 7554 */ typedef tagABORTPATH *PEMRCLOSEFIGURE;

/* 7555 */ typedef char charf;

/* 7556 */ typedef tagCONVINFO *PCONVINFO;

/* 7557 */ typedef unsigned int DBBINDURLSTATUS;

/* 7558 */ typedef int (__stdcall *WINSTAENUMPROCA)(char *, int);

/* 7559 */ typedef PktCastleTaxMove *LPPktCastleTaxMove;

/* 7560 */ typedef tagGCP_RESULTSA *LPGCP_RESULTSA;

/* 7561 */ typedef HRESULT (__stdcall *LPFNACCESSIBLEOBJECTFROMWINDOW)(HWND__ *, unsigned int, _GUID *, void **);

/* 7562 */ typedef tagEMRTRANSPARENTBLT *PEMRTRANSPARENTBLT;

/* 7563 */ typedef unsigned int *PUINT;

/* 7564 */ typedef void *voidp;

/* 7565 */ typedef int (__stdcall *LANGUAGEGROUP_ENUMPROCA)(unsigned int, char *, char *, unsigned int, int);

/* 7566 */ typedef _STARTUPINFOW *LPSTARTUPINFOW;

/* 7567 */ typedef tMIXERCONTROLDETAILS_BOOLEAN *LPMIXERCONTROLDETAILS_BOOLEAN;

/* 7568 */ typedef _IMAGE_VXD_HEADER *PIMAGE_VXD_HEADER;

/* 7569 */ typedef _FOCUS_EVENT_RECORD *PFOCUS_EVENT_RECORD;

/* 7570 */ typedef unsigned int OLE_COLOR;

/* 7571 */ typedef _HAN_AUTH *LPHAN_AUTH;

/* 7572 */ typedef _CTL_VERIFY_USAGE_PARA *PCTL_VERIFY_USAGE_PARA;

/* 7573 */ typedef tagMCI_OVLY_OPEN_PARMSA *LPMCI_OVLY_OPEN_PARMS;

/* 7574 */ typedef HMIDIOUT__ **LPHMIDIOUT;

/* 7575 */ typedef tagMCI_SYSINFO_PARMSA *LPMCI_SYSINFO_PARMSA;

/* 7576 */ typedef int (__stdcall *LANGUAGEGROUP_ENUMPROCW)(unsigned int, unsigned __int16 *, unsigned __int16 *, unsigned int, int);

/* 7577 */ typedef _MINIDUMP_CALLBACK_INFORMATION *PMINIDUMP_CALLBACK_INFORMATION;

/* 7578 */ typedef int (__stdcall *WINSTAENUMPROCW)(unsigned __int16 *, int);

/* 7579 */ typedef _ACCESS_DENIED_ACE *PACCESS_DENIED_ACE;

/* 7580 */ typedef tagMCI_ANIM_WINDOW_PARMSA *PMCI_ANIM_WINDOW_PARMSA;

/* 7581 */ typedef tagPOINTS *LPPOINTS;

/* 7582 */ typedef tagWAVEINCAPS2A *PWAVEINCAPS2;

/* 7583 */ typedef __int64 INT64;

/* 7584 */ typedef _TAPE_SET_POSITION *PTAPE_SET_POSITION;

/* 7585 */ typedef tagBITMAPCOREINFO *PBITMAPCOREINFO;

/* 7586 */ typedef _NETINFOSTRUCT *LPNETINFOSTRUCT;

/* 7587 */ typedef tagMCI_STATUS_PARMS *PMCI_STATUS_PARMS;

/* 7588 */ typedef tagCHOOSEFONTW *LPCHOOSEFONTW;

/* 7589 */ typedef HCONVLIST__ *HCONVLIST;

/* 7590 */ typedef tagXFORM *PXFORM;

/* 7591 */ typedef tagMCI_SEEK_PARMS *LPMCI_SEEK_PARMS;

/* 7592 */ typedef tagAXISINFOW *PAXISINFOW;

/* 7593 */ typedef unsigned __int16 FILEOP_FLAGS;

/* 7594 */ typedef unsigned __int16 *LPCLIPFORMAT;

/* 7595 */ typedef unsigned int HWATCHREGION;

/* 7596 */ typedef CM_Power_Data_s *PCM_POWER_DATA;

/* 7597 */ typedef _WSAServiceClassInfoW *LPWSASERVICECLASSINFOW;

/* 7598 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_FREE_FIND_CRL)(void *, _CRL_CONTEXT *, void *, unsigned int);

/* 7599 */ typedef tagMCI_ANIM_WINDOW_PARMSW *PMCI_ANIM_WINDOW_PARMSW;

/* 7600 */ typedef _NT_TIB *PNT_TIB;

/* 7601 */ typedef tagCHOOSEFONTA *LPCHOOSEFONTA;

/* 7602 */ typedef int intf;

/* 7603 */ typedef tagEMRFORMAT *PEMRFORMAT;

/* 7604 */ typedef _TRUSTEE_W *PTRUSTEEW;

/* 7605 */ typedef tagMDICREATESTRUCTW *LPMDICREATESTRUCTW;

/* 7606 */ typedef int (__stdcall *LPTOP_LEVEL_EXCEPTION_FILTER)(_EXCEPTION_POINTERS *);

/* 7607 */ typedef _ACTRL_ACCESS_ENTRYA *PACTRL_ACCESS_ENTRYA;

/* 7608 */ typedef tagMCI_OVLY_RECT_PARMS *PMCI_OVLY_RECT_PARMS;

/* 7609 */ typedef _ACTRL_ALISTA *PACTRL_AUDIT;

/* 7610 */ typedef int (__stdcall *PFLS_SETVALUE_FUNCTION)(unsigned int, void *);

/* 7611 */ typedef tagSTATDATA *LPSTATDATA;

/* 7612 */ typedef IPropertyBag *LPPROPERTYBAG;

/* 7613 */ typedef int (__stdcall *GEO_ENUMPROC)(int);

/* 7614 */ typedef _TRUSTEE_A *PTRUSTEE_;

/* 7615 */ typedef _PACKEDEVENTINFO *PPACKEDEVENTINFO;

/* 7616 */ typedef tagOCPFIPARAMS *LPOCPFIPARAMS;

/* 7617 */ typedef int (__stdcall *PROPENUMPROCEXW)(HWND__ *, unsigned __int16 *, void *, unsigned int);

/* 7618 */ typedef void (__stdcall *LPSERVICE_MAIN_FUNCTIONA)(unsigned int, char **);

/* 7619 */ typedef tagJOYCAPSA *PJOYCAPSA;

/* 7620 */ typedef _ITEMIDLIST *LPCITEMIDLIST;

/* 7621 */ typedef _CERT_REVOCATION_CRL_INFO *PCERT_REVOCATION_CRL_INFO;

/* 7622 */ typedef IEnumOLEVERB *LPENUMOLEVERB;

/* 7623 */ typedef tagLOGCOLORSPACEA *LPLOGCOLORSPACEA;

/* 7624 */ typedef _ENCRYPTION_CERTIFICATE_LIST *PENCRYPTION_CERTIFICATE_LIST;

/* 7625 */ typedef unsigned __int16 *PUHALF_PTR;

/* 7626 */ typedef midihdr_tag *PMIDIHDR;

/* 7627 */ typedef _EXTRA *LPEXTRA;

/* 7628 */ typedef _TRUSTEE_A *PTRUSTEEA;

/* 7629 */ typedef tagRegion *PREGION;

/* 7630 */ typedef _SYMBOL_INFO_PACKAGE *PSYMBOL_INFO_PACKAGE;

/* 7631 */ typedef tagJOYCAPSW *PJOYCAPSW;

/* 7632 */ typedef _CMC_RESPONSE_INFO *PCMC_RESPONSE_INFO;

/* 7633 */ typedef char *(__stdcall *USER_MARSHAL_UNMARSHALLING_ROUTINE)(unsigned int *, char *, void *);

/* 7634 */ typedef int (__stdcall *PROPENUMPROCEXA)(HWND__ *, char *, void *, unsigned int);

/* 7635 */ typedef _OUTLINETEXTMETRICA *LPOUTLINETEXTMETRICA;

/* 7636 */ typedef _PROCESS_INFORMATION *LPPROCESS_INFORMATION;

/* 7637 */ typedef PktCreateSiegeArms *LPPktCreateSiegeArms;

/* 7638 */ typedef _OUTLINETEXTMETRICA *NPOUTLINETEXTMETRICA;

/* 7639 */ typedef tagWAVEINCAPS2A *PWAVEINCAPS2A;

/* 7640 */ typedef tagMCI_ANIM_WINDOW_PARMSA *PMCI_ANIM_WINDOW_PARMS;

/* 7641 */ typedef HMETAFILE__ *HMETAFILE;

/* 7642 */ typedef tagPRINTPAGERANGE *LPPRINTPAGERANGE;

/* 7643 */ typedef _SET_PARTITION_INFORMATION *PSET_PARTITION_INFORMATION;

/* 7644 */ typedef BITMAPV4HEADER *LPBITMAPV4HEADER;

/* 7645 */ typedef int (__stdcall *PFN_CERT_ENUM_PHYSICAL_STORE)(const void *, unsigned int, const unsigned __int16 *, _CERT_PHYSICAL_STORE_INFO *, void *, void *);

/* 7646 */ typedef unsigned __int16 UINT16;

/* 7647 */ typedef _OLESTREAMVTBL *LPOLESTREAMVTBL;

/* 7648 */ typedef void *RPC_AUTH_IDENTITY_HANDLE;

/* 7649 */ typedef _PRINTER_NOTIFY_OPTIONS_TYPE *PPRINTER_NOTIFY_OPTIONS_TYPE;

/* 7650 */ typedef DLGITEMTEMPLATE *LPDLGITEMTEMPLATEA;

/* 7651 */ typedef _MINIDUMP_SYSTEM_INFO *PMINIDUMP_SYSTEM_INFO;

/* 7652 */ typedef __int16 *PINT16;

/* 7653 */ typedef _CERT_POLICY_ID *PCERT_POLICY_ID;

/* 7654 */ typedef void *PMIDL_XMIT_TYPE;

/* 7655 */ typedef tagIDLDESC *LPIDLDESC;

/* 7656 */ typedef unsigned int __stdcall PM_OPEN_PROC(unsigned __int16 *);

/* 7657 */ typedef IServiceProvider *LPSERVICEPROVIDER;

/* 7658 */ typedef unsigned int KSPIN_LOCK;

/* 7659 */ typedef tagMCI_RECORD_PARMS *LPMCI_RECORD_PARMS;

/* 7660 */ typedef _OSVERSIONINFOEXA *LPOSVERSIONINFOEXA;

/* 7661 */ typedef int (__stdcall *PFN_CMSG_IMPORT_KEY_TRANS)(_CRYPT_ALGORITHM_IDENTIFIER *, _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA *, unsigned int, void *, unsigned int *);

/* 7662 */ typedef int (__stdcall *LPFN_WSARECVMSG)(unsigned int, _WSAMSG *, unsigned int *, _OVERLAPPED *, void (__stdcall *)(unsigned int, unsigned int, _OVERLAPPED *, unsigned int));

/* 7663 */ typedef _WSACMSGHDR *LPWSACMSGHDR;

/* 7664 */ typedef _EXCEPTION_RECORD32 *PEXCEPTION_RECORD32;

/* 7665 */ typedef tagWAVEINCAPS2W *PWAVEINCAPS2W;

/* 7666 */ typedef _IMAGEHLP_STACK_FRAME *PIMAGEHLP_STACK_FRAME;

/* 7667 */ typedef tagCHOOSEFONTA *LPCHOOSEFONT;

/* 7668 */ typedef _CERT_KEY_USAGE_RESTRICTION_INFO *PCERT_KEY_USAGE_RESTRICTION_INFO;

/* 7669 */ typedef _BIDI_REQUEST_CONTAINER *LPBIDI_REQUEST_CONTAINER;

/* 7670 */ typedef _CMSG_SIGNED_ENCODE_INFO *PCMSG_SIGNED_ENCODE_INFO;

/* 7671 */ typedef tagEMRMASKBLT *PEMRMASKBLT;

/* 7672 */ typedef void (__stdcall *RPC_AUTH_KEY_RETRIEVAL_FN)(void *, unsigned __int16 *, unsigned int, void **, int *);

/* 7673 */ typedef _ACTRL_ALISTA *PACTRL_AUDITA;

/* 7674 */ typedef _CHANGER_PRODUCT_DATA *PCHANGER_PRODUCT_DATA;

/* 7675 */ typedef _AUDIT_EVENT_TYPE *PAUDIT_EVENT_TYPE;

/* 7676 */ typedef _IMAGE_THUNK_DATA64 *PIMAGE_THUNK_DATA64;

/* 7677 */ typedef int (__stdcall *ATLLSTRCMPIW)(const unsigned __int16 *, const unsigned __int16 *);

/* 7678 */ typedef sockaddr_in *LPSOCKADDR_IN;

/* 7679 */ typedef unsigned int (__stdcall *PFNRECONCILEPROFILEW)(const unsigned __int16 *, const unsigned __int16 *, unsigned int);

/* 7680 */ typedef tagJOYCAPSA *PJOYCAPS;

/* 7681 */ typedef _SESSION_HEADER *PSESSION_HEADER;

/* 7682 */ typedef _CERT_PRIVATE_KEY_VALIDITY *PCERT_PRIVATE_KEY_VALIDITY;

/* 7683 */ typedef MINIDUMP_EXCEPTION_STREAM *PMINIDUMP_EXCEPTION_STREAM;

/* 7684 */ typedef tagEMRPOLYLINE16 *PEMRPOLYLINE16;

/* 7685 */ typedef _TOKEN_PRIMARY_GROUP *PTOKEN_PRIMARY_GROUP;

/* 7686 */ typedef _EFS_KEY_INFO *PEFS_KEY_INFO;

/* 7687 */ typedef _ACTRL_ALISTW *PACTRL_AUDITW;

/* 7688 */ typedef tagFORMATETC *LPFORMATETC;

/* 7689 */ typedef _TRUSTEE_A *PTRUSTEE;

/* 7690 */ typedef tagWNDCLASSEXA *PWNDCLASSEXA;

/* 7691 */ typedef _SCARD_IO_REQUEST *LPCSCARD_IO_REQUEST;

/* 7692 */ typedef int lzo_int;

/* 7693 */ typedef tagPIXELFORMATDESCRIPTOR *PPIXELFORMATDESCRIPTOR;

/* 7694 */ typedef _MODEMSETTINGS *PMODEMSETTINGS;

/* 7695 */ typedef _SERVICE_DESCRIPTIONA *LPSERVICE_DESCRIPTIONA;

/* 7696 */ typedef _numberfmtA *LPNUMBERFMTA;

/* 7697 */ typedef _PARTY_INFO *LPPARTY_INFO;

/* 7698 */ typedef int (__stdcall *PROPENUMPROCEX)(HWND__ *, char *, void *, unsigned int);

/* 7699 */ typedef tagMCI_ANIM_WINDOW_PARMSA *LPMCI_ANIM_WINDOW_PARMS;

/* 7700 */ typedef tagJOYCAPS2A *PJOYCAPS2;

/* 7701 */ typedef char *PSZ;

/* 7702 */ typedef _PORT_INFO_3A *LPPORT_INFO_3;

/* 7703 */ typedef _ACTIVATION_CONTEXT_BASIC_INFORMATION *PCACTIVATION_CONTEXT_BASIC_INFORMATION;

/* 7704 */ typedef _PORT_INFO_2A *LPPORT_INFO_2;

/* 7705 */ typedef _CRYPT_SEQUENCE_OF_ANY *PCRYPT_SEQUENCE_OF_ANY;

/* 7706 */ typedef _PORT_INFO_1A *LPPORT_INFO_1;

/* 7707 */ typedef _CERT_SYSTEM_STORE_INFO *PCERT_SYSTEM_STORE_INFO;

/* 7708 */ typedef tagMSGBOXPARAMSA *PMSGBOXPARAMS;

/* 7709 */ typedef _TOKEN_USER *PTOKEN_USER;

/* 7710 */ typedef _DISCDLGSTRUCTW *LPDISCDLGSTRUCTW;

/* 7711 */ typedef char *PCH;

/* 7712 */ typedef __int64 USN;

/* 7713 */ typedef tagTEXTMETRICW *LPTEXTMETRICOLE;

/* 7714 */ typedef PktRs *LPPktRs;

/* 7715 */ typedef _MINIDUMP_EXCEPTION_INFORMATION *PMINIDUMP_EXCEPTION_INFORMATION;

/* 7716 */ typedef char uch;

/* 7717 */ typedef IStorage *LPSTORAGE;

/* 7718 */ typedef unsigned __int16 ush;

/* 7719 */ typedef HSZ__ *HSZ;

/* 7720 */ typedef unsigned int HELPPOLY;

/* 7721 */ typedef int (__stdcall *LPFN_CONNECTEX)(unsigned int, sockaddr *, int, void *, unsigned int, unsigned int *, _OVERLAPPED *);

/* 7722 */ typedef _CTL_INFO *PCTL_INFO;

/* 7723 */ typedef int (__stdcall *LPOCNCHKPROC)(unsigned int, unsigned int, void *);

/* 7724 */ typedef HDDEDATA__ *HDDEDATA;

/* 7725 */ typedef _DISPLAY_DEVICEA *PDISPLAY_DEVICEA;

/* 7726 */ typedef tagTTPOLYGONHEADER *LPTTPOLYGONHEADER;

/* 7727 */ typedef unsigned int SIZE_T;

/* 7728 */ typedef AddressInfo *LPAddressInfo;

/* 7729 */ typedef PktTakeCastleJewel *LPPktTakeCastleJewel;

/* 7730 */ typedef tagTOGGLEKEYS *LPTOGGLEKEYS;

/* 7731 */ typedef _QUERY_SERVICE_CONFIGA *LPQUERY_SERVICE_CONFIGA;

/* 7732 */ typedef _SOCKET_ADDRESS *LPSOCKET_ADDRESS;

/* 7733 */ typedef _CMSG_ENCRYPTED_ENCODE_INFO *PCMSG_ENCRYPTED_ENCODE_INFO;

/* 7734 */ typedef tMIXERCONTROLDETAILS *PMIXERCONTROLDETAILS;

/* 7735 */ typedef _PRINTER_NOTIFY_OPTIONS_TYPE *LPPRINTER_NOTIFY_OPTIONS_TYPE;

/* 7736 */ typedef RPC_IMPORT_CONTEXT_P *PRPC_IMPORT_CONTEXT_P;

/* 7737 */ typedef tagMCI_OVLY_LOAD_PARMSW *LPMCI_OVLY_LOAD_PARMSW;

/* 7738 */ typedef _LUID_AND_ATTRIBUTES *PLUID_AND_ATTRIBUTES;

/* 7739 */ typedef _LUID_AND_ATTRIBUTES (*PLUID_AND_ATTRIBUTES_ARRAY)[1];

/* 7740 */ typedef unsigned int DBSORT;

/* 7741 */ typedef _CRYPT_ATTRIBUTES *PCRYPT_ATTRIBUTES;

/* 7742 */ typedef _SHNAMEMAPPINGA *LPSHNAMEMAPPINGA;

/* 7743 */ typedef PktRsAck *LPPktRsAck;

/* 7744 */ typedef unsigned __int16 *LPPATCHARRAY;

/* 7745 */ typedef joyinfo_tag *PJOYINFO;

/* 7746 */ typedef _CLASS_MEDIA_CHANGE_CONTEXT *PCLASS_MEDIA_CHANGE_CONTEXT;

/* 7747 */ typedef tagABORTPATH *PEMRSAVEDC;

/* 7748 */ typedef _QUERY_SERVICE_CONFIGW *LPQUERY_SERVICE_CONFIGW;

/* 7749 */ typedef _PROVIDOR_INFO_1A *LPPROVIDOR_INFO_1;

/* 7750 */ typedef _PROCESS_HEAP_ENTRY *PPROCESS_HEAP_ENTRY;

/* 7751 */ typedef _PRINTER_ENUM_VALUESA *LPPRINTER_ENUM_VALUES;

/* 7752 */ typedef tagLAYERPLANEDESCRIPTOR *LPLAYERPLANEDESCRIPTOR;

/* 7753 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_WRITE_CRL)(void *, _CRL_CONTEXT *, unsigned int);

/* 7754 */ typedef tagMCI_SAVE_PARMSA *PMCI_SAVE_PARMSA;

/* 7755 */ typedef _PROVIDOR_INFO_2A *LPPROVIDOR_INFO_2;

/* 7756 */ typedef __int16 VARIANT_BOOL;

/* 7757 */ typedef tagMULTIKEYHELPA *PMULTIKEYHELPA;

/* 7758 */ typedef tagCOMPAREITEMSTRUCT *LPCOMPAREITEMSTRUCT;

/* 7759 */ typedef void (__cdecl *unexpected_function)();

/* 7760 */ typedef OPENCARDNAMEA *POPENCARDNAMEA;

/* 7761 */ typedef _RemotableHandle *wireHBRUSH;

/* 7762 */ typedef _COMMTIMEOUTS *LPCOMMTIMEOUTS;

/* 7763 */ typedef _PRINTER_INFO_6 *LPPRINTER_INFO_6;

/* 7764 */ typedef tagEMRSETTEXTCOLOR *PEMRSETTEXTCOLOR;

/* 7765 */ typedef IOleInPlaceObject *LPOLEINPLACEOBJECT;

/* 7766 */ typedef _FORMAT_EX_PARAMETERS *PFORMAT_EX_PARAMETERS;

/* 7767 */ typedef _CERT_CHAIN_PARA *PCERT_CHAIN_PARA;

/* 7768 */ typedef _IMAGE_ARCHIVE_MEMBER_HEADER *PIMAGE_ARCHIVE_MEMBER_HEADER;

/* 7769 */ typedef _ACTIVATION_CONTEXT_QUERY_INDEX *PACTIVATION_CONTEXT_QUERY_INDEX;

/* 7770 */ typedef _FILETIME *PFILETIME;

/* 7771 */ typedef _CMS_DH_KEY_INFO *PCMS_DH_KEY_INFO;

/* 7772 */ typedef void __stdcall TIMECALLBACK(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);

/* 7773 */ typedef _CRYPTOAPI_BLOB *PCRYPT_OBJID_BLOB;

/* 7774 */ typedef unsigned int _TINT;

/* 7775 */ typedef _QUERY_SERVICE_CONFIGA *LPQUERY_SERVICE_CONFIG;

/* 7776 */ typedef unsigned __int16 Posf;

/* 7777 */ typedef tagGCP_RESULTSA *LPGCP_RESULTS;

/* 7778 */ typedef int HFILE;

/* 7779 */ typedef _CMSG_SP3_COMPATIBLE_AUX_INFO *PCMSG_SP3_COMPATIBLE_AUX_INFO;

/* 7780 */ typedef tagACTCTXA *PACTCTXA;

/* 7781 */ typedef unsigned __int64 *PDWORD64;

/* 7782 */ typedef void (__stdcall *XMIT_HELPER_ROUTINE)(_MIDL_STUB_MESSAGE *);

/* 7783 */ typedef _MINIDUMP_THREAD_CALLBACK *PMINIDUMP_THREAD_CALLBACK;

/* 7784 */ typedef _ACTRL_ALISTA *PACTRL_ACCESS;

/* 7785 */ typedef PktStatueCmd *LPPktStatueCmd;

/* 7786 */ typedef _JOBOBJECT_SECURITY_LIMIT_INFORMATION *PJOBOBJECT_SECURITY_LIMIT_INFORMATION;

/* 7787 */ typedef unsigned int *PUINT_PTR;

/* 7788 */ typedef tagEMRSELECTCLIPPATH *PEMRSETROP2;

/* 7789 */ typedef tagMCI_OVLY_OPEN_PARMSA *LPMCI_OVLY_OPEN_PARMSA;

/* 7790 */ typedef FLASHWINFO *PFLASHWINFO;

/* 7791 */ typedef const char *PCCH;

/* 7792 */ typedef fd_set *LPFD_SET;

/* 7793 */ typedef tagTEXTMETRICW *PTEXTMETRICW;

/* 7794 */ typedef int (__stdcall *PFN_CMSG_IMPORT_ENCRYPT_KEY)(unsigned int, unsigned int, _CRYPT_ALGORITHM_IDENTIFIER *, _CRYPT_ALGORITHM_IDENTIFIER *, char *, unsigned int, unsigned int *);

/* 7795 */ typedef int (__stdcall *ICMENUMPROCW)(unsigned __int16 *, int);

/* 7796 */ typedef _CSADDR_INFO *LPCSADDR_INFO;

/* 7797 */ typedef void __stdcall RPC_OBJECT_INQ_FN(_GUID *, _GUID *, int *);

/* 7798 */ typedef unsigned __int16 *PUINT16;

/* 7799 */ typedef _CRYPT_ATTRIBUTE *PCRYPT_ATTRIBUTE;

/* 7800 */ typedef int (__stdcall *PFN_CMSG_GEN_ENCRYPT_KEY)(unsigned int *, _CRYPT_ALGORITHM_IDENTIFIER *, void *, _CERT_PUBLIC_KEY_INFO *, void *(__stdcall *)(unsigned int), unsigned int *, char **, unsigned int *);

/* 7801 */ typedef int (__stdcall *LPFN_ACCEPTEX)(unsigned int, unsigned int, void *, unsigned int, unsigned int, unsigned int, unsigned int *, _OVERLAPPED *);

/* 7802 */ typedef _IMAGE_DEBUG_MISC *PIMAGE_DEBUG_MISC;

/* 7803 */ typedef PktMVEx *LPPktMVEx;

/* 7804 */ typedef tagMENUITEMINFOA *LPCMENUITEMINFOA;

/* 7805 */ typedef int (__stdcall *FONTENUMPROC)(tagLOGFONTA *, tagTEXTMETRICA *, unsigned int, int);

/* 7806 */ typedef int DBROWOFFSET;

/* 7807 */ typedef char SECURITY_CONTEXT_TRACKING_MODE;

/* 7808 */ typedef tagLOGBRUSH *NPLOGBRUSH;

/* 7809 */ typedef _CRYPT_RETRIEVE_AUX_INFO *PCRYPT_RETRIEVE_AUX_INFO;

/* 7810 */ typedef IFont *LPFONT;

/* 7811 */ typedef _JOBOBJECT_BASIC_UI_RESTRICTIONS *PJOBOBJECT_BASIC_UI_RESTRICTIONS;

/* 7812 */ typedef tagLOGBRUSH *LPLOGBRUSH;

/* 7813 */ typedef tagLC_ID *LPLC_ID;

/* 7814 */ typedef _CONTEXT *LPCONTEXT;

/* 7815 */ typedef IMoniker *LPMONIKER;

/* 7816 */ typedef tagMCI_GETDEVCAPS_PARMS *LPMCI_GETDEVCAPS_PARMS;

/* 7817 */ typedef unsigned int DBROWOPTIONS;

/* 7818 */ typedef tagEMRSELECTCLIPPATH *PEMRSETBKMODE;

/* 7819 */ typedef IPropertyPageSite *LPPROPERTYPAGESITE;

/* 7820 */ typedef _wireSAFEARRAY *wireSAFEARRAY;

/* 7821 */ typedef _REMOTE_NAME_INFOA *LPREMOTE_NAME_INFO;

/* 7822 */ typedef _WSANSClassInfoW *PWSANSCLASSINFOW;

/* 7823 */ typedef tagCOLORMATCHTOTARGET *PEMRCOLORMATCHTOTARGET;

/* 7824 */ typedef tagEMRFILLPATH *PEMRSTROKEANDFILLPATH;

/* 7825 */ typedef _TRUSTEE_A *PTRUSTEE_A;

/* 7826 */ typedef HIMC__ *HIMC;

/* 7827 */ typedef __int16 SHORT;

/* 7828 */ typedef tagPARAMDATA *LPPARAMDATA;

/* 7829 */ typedef _DATATYPES_INFO_1W *LPDATATYPES_INFO_1W;

/* 7830 */ typedef void (__stdcall *PFIBER_START_ROUTINE)(void *);

/* 7831 */ typedef tagEXTLOGPEN *PEXTLOGPEN;

/* 7832 */ typedef unsigned int DBPENDINGSTATUS;

/* 7833 */ typedef ISupportErrorInfo *LPSUPPORTERRORINFO;

/* 7834 */ typedef _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO *PCRYPT_ENCRYPTED_PRIVATE_KEY_INFO;

/* 7835 */ typedef tagEMRPOLYTEXTOUTA *PEMRPOLYTEXTOUTW;

/* 7836 */ typedef _WSAPROTOCOL_INFOA *LPWSAPROTOCOL_INFO;

/* 7837 */ typedef tagMCI_SEQ_SET_PARMS *LPMCI_SEQ_SET_PARMS;

/* 7838 */ typedef wavehdr_tag *LPWAVEHDR;

/* 7839 */ typedef tagMETARECORD *LPMETARECORD;

/* 7840 */ typedef int (__stdcall *CODEPAGE_ENUMPROCA)(char *);

/* 7841 */ typedef wavehdr_tag *NPWAVEHDR;

/* 7842 */ typedef int (__stdcall *PHANDLER_ROUTINE)(unsigned int);

/* 7843 */ typedef _DATATYPES_INFO_1A *LPDATATYPES_INFO_1A;

/* 7844 */ typedef _UNIVERSAL_NAME_INFOW *LPUNIVERSAL_NAME_INFOW;

/* 7845 */ typedef _BIDI_DATA *LPBIDI_DATA;

/* 7846 */ typedef unsigned int REGSAM;

/* 7847 */ typedef tagENHMETAHEADER *LPENHMETAHEADER;

/* 7848 */ typedef _CERT_PUBLIC_KEY_INFO *PCERT_PUBLIC_KEY_INFO;

/* 7849 */ typedef IOleInPlaceSiteWindowless *LPOLEINPLACESITEWINDOWLESS;

/* 7850 */ typedef DefenserNode *LPDefenserNode;

/* 7851 */ typedef float OLE_XSIZE_CONTAINER;

/* 7852 */ typedef DLGITEMTEMPLATE *LPDLGITEMTEMPLATE;

/* 7853 */ typedef float OLE_YSIZE_CONTAINER;

/* 7854 */ typedef DLGTEMPLATE *PROPSHEETPAGE_RESOURCE;

/* 7855 */ typedef int (__stdcall *FONTENUMPROCA)(tagLOGFONTA *, tagTEXTMETRICA *, unsigned int, int);

/* 7856 */ typedef IProvideClassInfo *LPPROVIDECLASSINFO;

/* 7857 */ typedef tagMETHODDATA *LPMETHODDATA;

/* 7858 */ typedef BITMAPV5HEADER *LPBITMAPV5HEADER;

/* 7859 */ typedef _tagADDRESS64 *LPADDRESS64;

/* 7860 */ typedef _REMOTE_NAME_INFOW *LPREMOTE_NAME_INFOW;

/* 7861 */ typedef _MMIOINFO *LPMMIOINFO;

/* 7862 */ typedef _MMIOINFO *NPMMIOINFO;

/* 7863 */ typedef _IMAGEHLP_DEFERRED_SYMBOL_LOAD64 *PIMAGEHLP_DEFERRED_SYMBOL_LOAD64;

/* 7864 */ typedef int (__stdcall *IMCENUMPROC)(HIMC__ *, int);

/* 7865 */ typedef _WSANAMESPACE_INFOA *LPWSANAMESPACE_INFOA;

/* 7866 */ typedef int (__stdcall *FONTENUMPROCW)(tagLOGFONTW *, tagTEXTMETRICW *, unsigned int, int);

/* 7867 */ typedef int LONG32;

/* 7868 */ typedef _BY_HANDLE_FILE_INFORMATION *LPBY_HANDLE_FILE_INFORMATION;

/* 7869 */ typedef void *RPC_BINDING_HANDLE;

/* 7870 */ typedef tagMCI_SET_PARMS *LPMCI_SET_PARMS;

/* 7871 */ typedef IProvideClassInfo2 *LPPROVIDECLASSINFO2;

/* 7872 */ typedef tagALTTABINFO *LPALTTABINFO;

/* 7873 */ typedef tagENUMLOGFONTEXA *LPENUMLOGFONTEXA;

/* 7874 */ typedef int __stdcall MMIOPROC(char *, unsigned int, int, int);

/* 7875 */ typedef int (__stdcall *I_RpcProxyGetConnectionTimeoutFn)(unsigned int *);

/* 7876 */ typedef IInternetZoneManager *LPURLZONEMANAGER;

/* 7877 */ typedef _REMOTE_NAME_INFOA *LPREMOTE_NAME_INFOA;

/* 7878 */ typedef _OSVERSIONINFOEXA *LPOSVERSIONINFOEX;

/* 7879 */ typedef _CERT_TRUST_STATUS *PCERT_TRUST_STATUS;

/* 7880 */ typedef _CERT_CHAIN_CONTEXT *PCERT_CHAIN_CONTEXT;

/* 7881 */ typedef unsigned int CPFLAGS;

/* 7882 */ typedef _CRL_INFO *PCRL_INFO;

/* 7883 */ typedef IOleItemContainer *LPOLEITEMCONTAINER;

/* 7884 */ typedef _RPC_HTTP_TRANSPORT_CREDENTIALS_A *PRPC_HTTP_TRANSPORT_CREDENTIALS_A;

/* 7885 */ typedef _CTL_CONTEXT *PCCTL_CONTEXT;

/* 7886 */ typedef IHttpNegotiate2 *LPHTTPNEGOTIATE2;

/* 7887 */ typedef _WSAPROTOCOL_INFOW *LPWSAPROTOCOL_INFOW;

/* 7888 */ typedef tagTITLEBARINFO *PTITLEBARINFO;

/* 7889 */ typedef tagMIDIINCAPSA *PMIDIINCAPS;

/* 7890 */ typedef _EVENTLOGRECORD *PEVENTLOGRECORD;

/* 7891 */ typedef int (__stdcall *PSYM_ENUMMODULES_CALLBACK64)(char *, unsigned __int64, void *);

/* 7892 */ typedef HIMCC__ *HIMCC;

/* 7893 */ typedef _TAPE_GET_STATISTICS *PTAPE_GET_STATISTICS;

/* 7894 */ typedef _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY *PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;

/* 7895 */ typedef tagEMRSELECTPALETTE *PEMRSELECTPALETTE;

/* 7896 */ typedef void *I_RPC_MUTEX;

/* 7897 */ typedef _SID_NAME_USE *PSID_NAME_USE;

/* 7898 */ typedef tagMONITORINFOEXA *LPMONITORINFOEXA;

/* 7899 */ typedef _SERVICE_DESCRIPTIONA *LPSERVICE_DESCRIPTION;

/* 7900 */ typedef _WSAPROTOCOL_INFOA *LPWSAPROTOCOL_INFOA;

/* 7901 */ typedef tagJOYCAPS2A *PJOYCAPS2A;

/* 7902 */ typedef _RPC_HTTP_TRANSPORT_CREDENTIALS_W *PRPC_HTTP_TRANSPORT_CREDENTIALS_W;

/* 7903 */ typedef IMarshal *LPMARSHAL;

/* 7904 */ typedef tagCANDIDATELIST *NPCANDIDATELIST;

/* 7905 */ typedef tagCANDIDATELIST *LPCANDIDATELIST;

/* 7906 */ typedef _DATATYPES_INFO_1A *LPDATATYPES_INFO_1;

/* 7907 */ typedef tagLOGBRUSH32 *NPLOGBRUSH32;

/* 7908 */ typedef tagLOGBRUSH32 *LPLOGBRUSH32;

/* 7909 */ typedef unsigned __int16 KEYARRAY[128];

/* 7910 */ typedef void (__stdcall *PFN_FREE_ENCODED_OBJECT_FUNC)(const char *, _CRYPT_BLOB_ARRAY *, void *);

/* 7911 */ typedef tagMCI_OVLY_SAVE_PARMSA *LPMCI_OVLY_SAVE_PARMS;

/* 7912 */ typedef tagEMRPOLYDRAW *PEMRPOLYDRAW;

/* 7913 */ typedef _strflt *STRFLT;

/* 7914 */ typedef _CERT_SIMPLE_CHAIN *PCERT_SIMPLE_CHAIN;

/* 7915 */ typedef int (__stdcall *GOBJENUMPROC)(void *, int);

/* 7916 */ typedef int (__stdcall *UILANGUAGE_ENUMPROCA)(char *, int);

/* 7917 */ typedef IMAGE_LOAD_CONFIG_DIRECTORY64 *PIMAGE_LOAD_CONFIG_DIRECTORY64;

/* 7918 */ typedef _PRINTER_INFO_9A *LPPRINTER_INFO_9A;

/* 7919 */ typedef _DRIVER_INFO_5A *LPDRIVER_INFO_5A;

/* 7920 */ typedef tagEMRANGLEARC *PEMRANGLEARC;

/* 7921 */ typedef PktMM *LPPktMM;

/* 7922 */ typedef tagEMRPLGBLT *PEMRPLGBLT;

/* 7923 */ typedef unsigned int (__stdcall *LPOCNCONNPROCW)(unsigned int, unsigned __int16 *, unsigned __int16 *, void *);

/* 7924 */ typedef _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA *PCMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;

/* 7925 */ typedef _CERT_EXTENSIONS *PCERT_EXTENSIONS;

/* 7926 */ typedef _flt *FLT;

/* 7927 */ typedef unsigned int ulg;

/* 7928 */ typedef PktCPD *LPPktCPD;

/* 7929 */ typedef char uchf;

/* 7930 */ typedef int RPC_STATUS;

/* 7931 */ typedef _PRINTER_INFO_9W *LPPRINTER_INFO_9W;

/* 7932 */ typedef tagTEXTMETRICA *PTEXTMETRIC;

/* 7933 */ typedef _RPC_ASYNC_STATE *PRPC_ASYNC_STATE;

/* 7934 */ typedef unsigned __int16 ushf;

/* 7935 */ typedef _TOKEN_SOURCE *PTOKEN_SOURCE;

/* 7936 */ typedef int (__stdcall *ENUMRESTYPEPROCA)(HINSTANCE__ *, char *, int);

/* 7937 */ typedef _HISTOGRAM_BUCKET *PHISTOGRAM_BUCKET;

/* 7938 */ typedef PktPID *LPPktPID;

/* 7939 */ typedef tagJOYCAPSA *LPJOYCAPSA;

/* 7940 */ typedef int (__stdcall *TIMEFMT_ENUMPROCA)(char *);

/* 7941 */ typedef _QUEST *LPQUEST;

/* 7942 */ typedef tagJOYCAPSA *NPJOYCAPSA;

/* 7943 */ typedef CHAR_INFOST *LPCHAR_INFOST;

/* 7944 */ typedef IInternetSession *LPIINTERNETSESSION;

/* 7945 */ typedef _WSAQuerySetA *PWSAQUERYSETA;

/* 7946 */ typedef DRVCONFIGINFOEX *LPDRVCONFIGINFOEX;

/* 7947 */ typedef tagWNDCLASSA *LPWNDCLASS;

/* 7948 */ typedef value_entA *PVALENT;

/* 7949 */ typedef DRVCONFIGINFOEX *NPDRVCONFIGINFOEX;

/* 7950 */ typedef tagWNDCLASSA *NPWNDCLASS;

/* 7951 */ typedef _GRADIENT_RECT *LPGRADIENT_RECT;

/* 7952 */ typedef tagMIDIOUTCAPS2A *LPMIDIOUTCAPS2;

/* 7953 */ typedef _DRIVER_INFO_4A *LPDRIVER_INFO_4A;

/* 7954 */ typedef tagMIDIOUTCAPS2A *NPMIDIOUTCAPS2;

/* 7955 */ typedef _CERT_POLICIES_INFO *PCERT_POLICIES_INFO;

/* 7956 */ typedef _CERT_CONTEXT *(__stdcall *PFN_CRYPT_GET_SIGNER_CERTIFICATE)(void *, unsigned int, _CERT_INFO *, void *);

/* 7957 */ typedef RPC_CLIENT_INFORMATION1 *PRPC_CLIENT_INFORMATION1;

/* 7958 */ typedef int (__stdcall *TIMEFMT_ENUMPROCW)(unsigned __int16 *);

/* 7959 */ typedef _ADMINISTRATOR_POWER_POLICY *PADMINISTRATOR_POWER_POLICY;

/* 7960 */ typedef QUICK *LPQUICK;

/* 7961 */ typedef unsigned int DBCONSTRAINTTYPE;

/* 7962 */ typedef tagMCI_WAVE_SET_PARMS *PMCI_WAVE_SET_PARMS;

/* 7963 */ typedef _PSFEATURE_CUSTPAPER *PPSFEATURE_CUSTPAPER;

/* 7964 */ typedef _WSAServiceClassInfoA *PWSASERVICECLASSINFO;

/* 7965 */ typedef _devicemodeA *NPDEVMODEA;

/* 7966 */ typedef tagABORTPATH *PEMRENDPATH;

/* 7967 */ typedef _WSAQuerySetW *PWSAQUERYSETW;

/* 7968 */ typedef _devicemodeA *LPDEVMODEA;

/* 7969 */ typedef int (__stdcall *MONITORENUMPROC)(HMONITOR__ *, HDC__ *, tagRECT *, int);

/* 7970 */ typedef _SID_AND_ATTRIBUTES *PSID_AND_ATTRIBUTES;

/* 7971 */ typedef unsigned __int16 *NWPSTR;

/* 7972 */ typedef char ERRType;

/* 7973 */ typedef tagEMRSETPALETTEENTRIES *PEMRSETPALETTEENTRIES;

/* 7974 */ typedef void (__cdecl *_Prhand)(exception *);

/* 7975 */ typedef const unsigned __int16 *LPCOLESTR;

/* 7976 */ typedef int (__stdcall *PFN_CERT_ENUM_SYSTEM_STORE)(const void *, unsigned int, _CERT_SYSTEM_STORE_INFO *, void *, void *);

/* 7977 */ typedef _PRINTER_NOTIFY_OPTIONS *LPPRINTER_NOTIFY_OPTIONS;

/* 7978 */ typedef int (__stdcall *ENUMRESLANGPROCW)(HINSTANCE__ *, const unsigned __int16 *, const unsigned __int16 *, unsigned __int16, int);

/* 7979 */ typedef _PRINTER_INFO_9A *LPPRINTER_INFO_9;

/* 7980 */ typedef sockaddr_in *PSOCKADDR_IN;

/* 7981 */ typedef unsigned int HACCESSOR;

/* 7982 */ typedef tagMOUSEMOVEPOINT *PMOUSEMOVEPOINT;

/* 7983 */ typedef unsigned int UINT_PTR;

/* 7984 */ typedef tagABORTPATH *PEMRSETMETARGN;

/* 7985 */ typedef IPersistStorage *LPPERSISTSTORAGE;

/* 7986 */ typedef int *PINT_PTR;

/* 7987 */ typedef unsigned int *PDWORD_PTR;

/* 7988 */ typedef _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;

/* 7989 */ typedef tagCURSORINFO *LPCURSORINFO;

/* 7990 */ typedef unsigned __int16 *LPKEYARRAY;

/* 7991 */ typedef int (__stdcall *PFN_CMSG_EXPORT_KEY_TRANS)(_CMSG_CONTENT_ENCRYPT_INFO *, _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO *, _CMSG_KEY_TRANS_ENCRYPT_INFO *, unsigned int, void *);

/* 7992 */ typedef tagWNDCLASSA *LPWNDCLASSA;

/* 7993 */ typedef tagDEC *LPDECIMAL;

/* 7994 */ typedef _WSAQuerySetA *PWSAQUERYSET;

/* 7995 */ typedef tagOBJECTDESCRIPTOR *POBJECTDESCRIPTOR;

/* 7996 */ typedef _CERT_CHAIN_FIND_BY_ISSUER_PARA *PCERT_CHAIN_FIND_BY_ISSUER_PARA;

/* 7997 */ typedef tagWNDCLASSA *NPWNDCLASSA;

/* 7998 */ typedef _WSAServiceClassInfoW *PWSASERVICECLASSINFOW;

/* 7999 */ typedef tagENHMETARECORD *PENHMETARECORD;

/* 8000 */ typedef tagMIDIOUTCAPS2A *LPMIDIOUTCAPS2A;

/* 8001 */ typedef _CHAR_INFO *PCHAR_INFO;

/* 8002 */ typedef _DRIVER_INFO_6A *LPDRIVER_INFO_6A;

/* 8003 */ typedef tagMIDIOUTCAPS2A *NPMIDIOUTCAPS2A;

/* 8004 */ typedef _IMAGE_ROM_HEADERS *PIMAGE_ROM_HEADERS;

/* 8005 */ typedef _WSACOMPLETIONTYPE *LPWSACOMPLETIONTYPE;

/* 8006 */ typedef _CTL_USAGE_MATCH *PCTL_USAGE_MATCH;

/* 8007 */ typedef void (__cdecl *terminate_function)();

/* 8008 */ typedef _XMIT_ROUTINE_QUINTUPLE *PXMIT_ROUTINE_QUINTUPLE;

/* 8009 */ typedef tagSIZE *PSIZEL;

/* 8010 */ typedef _tagCODEBASEHOLD *LPCODEBASEHOLD;

/* 8011 */ typedef int OLE_YPOS_PIXELS;

/* 8012 */ typedef _MINIDUMP_USER_RECORD *PMINIDUMP_USER_RECORD;

/* 8013 */ typedef tagEMRINVERTRGN *PEMRPAINTRGN;

/* 8014 */ typedef int OLE_XPOS_PIXELS;

/* 8015 */ typedef tagMIDIOUTCAPS2W *NPMIDIOUTCAPS2W;

/* 8016 */ typedef unsigned int *PACCESS_MASK;

/* 8017 */ typedef tagMIDIOUTCAPS2W *LPMIDIOUTCAPS2W;

/* 8018 */ typedef OPENCARD_SEARCH_CRITERIAA *POPENCARD_SEARCH_CRITERIAA;

/* 8019 */ typedef char _TSCHAR;

/* 8020 */ typedef tagWNDCLASSW *NPWNDCLASSW;

/* 8021 */ typedef _MINIDUMP_DIRECTORY *PMINIDUMP_DIRECTORY;

/* 8022 */ typedef _ACTRL_PROPERTY_ENTRYA *PACTRL_PROPERTY_ENTRY;

/* 8023 */ typedef _WSAServiceClassInfoA *PWSASERVICECLASSINFOA;

/* 8024 */ typedef int (__stdcall *I_RpcProxyGetClientAddressFn)(void *, char *, unsigned int *);

/* 8025 */ typedef tagWNDCLASSW *LPWNDCLASSW;

/* 8026 */ typedef PktEquipDurability *LPPktEquipDurability;

/* 8027 */ typedef _MINIDUMP_USER_STREAM_INFORMATION *PMINIDUMP_USER_STREAM_INFORMATION;

/* 8028 */ typedef _STORE *LPSTORE;

/* 8029 */ typedef _RemotableHandle *wireHWND;

/* 8030 */ typedef int (__stdcall *PQUERYACTCTXW_FUNC)(unsigned int, void *, void *, unsigned int, void *, unsigned int, unsigned int *);

/* 8031 */ typedef unsigned int DBLITERAL;

/* 8032 */ typedef _WIN32_FIND_DATAA *PWIN32_FIND_DATA;

/* 8033 */ typedef tagWNDCLASSEXA *NPWNDCLASSEXA;

/* 8034 */ typedef tagWNDCLASSEXA *LPWNDCLASSEXA;

/* 8035 */ typedef IPersistMemory *LPPERSISTMEMORY;

/* 8036 */ typedef _DRIVER_INFO_1A *LPDRIVER_INFO_1A;

/* 8037 */ typedef unsigned int (__stdcall *PFNGETPROFILEPATHW)(const unsigned __int16 *, unsigned __int16 *, unsigned int);

/* 8038 */ typedef tagEMRSELECTCLIPPATH *PEMRSETPOLYFILLMODE;

/* 8039 */ typedef _tagSOFTDISTINFO *LPSOFTDISTINFO;

/* 8040 */ typedef void (__stdcall *LPHANDLER_FUNCTION)(unsigned int);

/* 8041 */ typedef tagENUMLOGFONTA *LPENUMLOGFONT;

/* 8042 */ typedef int (__stdcall *PFN_CRYPT_ENUM_KEYID_PROP)(_CRYPTOAPI_BLOB *, unsigned int, void *, void *, unsigned int, unsigned int *, void **, unsigned int *);

/* 8043 */ typedef tagWNDCLASSEXW *LPWNDCLASSEXW;

/* 8044 */ typedef _FULL_PTR_XLAT_TABLES *PFULL_PTR_XLAT_TABLES;

/* 8045 */ typedef tagWNDCLASSEXW *NPWNDCLASSEXW;

/* 8046 */ typedef tagKEYBDINPUT *PKEYBDINPUT;

/* 8047 */ typedef _HAN_CONVERT *LPHAN_CONVERT;

/* 8048 */ typedef _DRIVER_INFO_2A *PDRIVER_INFO_2;

/* 8049 */ typedef char INT8;

/* 8050 */ typedef tagREGISTERWORDA *PREGISTERWORDA;

/* 8051 */ typedef unsigned int CALTYPE;

/* 8052 */ typedef _CRYPT_ENCRYPT_MESSAGE_PARA *PCRYPT_ENCRYPT_MESSAGE_PARA;

/* 8053 */ typedef _MONITOR_INFO_1A *PMONITOR_INFO_1;

/* 8054 */ typedef void (__cdecl *_PVFV)();

/* 8055 */ typedef void *_HFILE;

/* 8056 */ typedef _MONITOR_INFO_2A *PMONITOR_INFO_2;

/* 8057 */ typedef tagMCI_GENERIC_PARMS *PMCI_GENERIC_PARMS;

/* 8058 */ typedef tagPROPVARIANT *LPPROPVARIANT;

/* 8059 */ typedef tagENHMETARECORD *LPENHMETARECORD;

/* 8060 */ typedef _PRINTPROCESSOR_INFO_1A *LPPRINTPROCESSOR_INFO_1A;

/* 8061 */ typedef PktPMD *LPPktPMD;

/* 8062 */ typedef protoent *PPROTOENT;

/* 8063 */ typedef IStdMarshalInfo *LPSTDMARSHALINFO;

/* 8064 */ typedef _MIDL_STUBLESS_PROXY_INFO *PMIDL_STUBLESS_PROXY_INFO;

/* 8065 */ typedef IPersistStream *LPPERSISTSTREAM;

/* 8066 */ typedef tagWNDCLASSA *PWNDCLASSA;

/* 8067 */ typedef tagEMREXTESCAPE *PEMRDRAWESCAPE;

/* 8068 */ typedef _SCARD_ATRMASK *LPSCARD_ATRMASK;

/* 8069 */ typedef tagMONITORINFO *LPMONITORINFO;

/* 8070 */ typedef tagMSLLHOOKSTRUCT *LPMSLLHOOKSTRUCT;

/* 8071 */ typedef timecaps_tag *NPTIMECAPS;

/* 8072 */ typedef _VOLUME_DISK_EXTENTS *PVOLUME_DISK_EXTENTS;

/* 8073 */ typedef unsigned int DWORD;

/* 8074 */ typedef timecaps_tag *LPTIMECAPS;

/* 8075 */ typedef tagAUXCAPS2W *PAUXCAPS2W;

/* 8076 */ typedef int (__stdcall *NAMEENUMPROCA)(char *, int);

/* 8077 */ typedef _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS;

/* 8078 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_SET_CERT_PROPERTY)(void *, _CERT_CONTEXT *, unsigned int, unsigned int, const void *);

/* 8079 */ typedef tagEMRARC *PEMRARC;

/* 8080 */ typedef unsigned int KAFFINITY;

/* 8081 */ typedef tagENUMTEXTMETRICA *PENUMTEXTMETRICA;

/* 8082 */ typedef int (__stdcall *NAMEENUMPROCW)(unsigned __int16 *, int);

/* 8083 */ typedef __int64 QWORD;

/* 8084 */ typedef char _TUCHAR;

/* 8085 */ typedef unsigned __int16 *PWORD;

/* 8086 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_GET_CERT_PROPERTY)(void *, _CERT_CONTEXT *, unsigned int, unsigned int, void *, unsigned int *);

/* 8087 */ typedef unsigned __int16 UWORD;

/* 8088 */ typedef PktDuC *LPPktDuC;

/* 8089 */ typedef _SERVICE_FAILURE_ACTIONSW *LPSERVICE_FAILURE_ACTIONSW;

/* 8090 */ typedef void (__cdecl *_secerr_handler_func)(int, void *);

/* 8091 */ typedef tagDEBUGHOOKINFO *PDEBUGHOOKINFO;

/* 8092 */ typedef _DRIVER_INFO_2W *PDRIVER_INFO_2W;

/* 8093 */ typedef _WIN32_FIND_DATAA *PWIN32_FIND_DATAA;

/* 8094 */ typedef HGLRC__ *HGLRC;

/* 8095 */ typedef tagWNDCLASSEXA *NPWNDCLASSEX;

/* 8096 */ typedef _WGLSWAP *PWGLSWAP;

/* 8097 */ typedef _NLA_BLOB *LPNLA_BLOB;

/* 8098 */ typedef tagWNDCLASSEXA *LPWNDCLASSEX;

/* 8099 */ typedef pcmwaveformat_tag *NPPCMWAVEFORMAT;

/* 8100 */ typedef tagMIXERLINECONTROLSA *LPMIXERLINECONTROLS;

/* 8101 */ typedef unsigned int DBHASHVALUE;

/* 8102 */ typedef pcmwaveformat_tag *LPPCMWAVEFORMAT;

/* 8103 */ typedef _DRIVER_INFO_3A *LPDRIVER_INFO_3A;

/* 8104 */ typedef void (__stdcall *PFN_EXIT_PROCESS)(unsigned int);

/* 8105 */ typedef _NT_TIB64 *PNT_TIB64;

/* 8106 */ typedef _GUID *LPFMTID;

/* 8107 */ typedef _FIND_NAME_HEADER *PFIND_NAME_HEADER;

/* 8108 */ typedef _NLA_INTERNET *PNLA_INTERNET;

/* 8109 */ typedef _WIN32_FIND_DATAW *PWIN32_FIND_DATAW;

/* 8110 */ typedef _DRIVER_INFO_2A *PDRIVER_INFO_2A;

/* 8111 */ typedef _CERT_POLICY_QUALIFIER_USER_NOTICE *PCERT_POLICY_QUALIFIER_USER_NOTICE;

/* 8112 */ typedef _flowspec *PFLOWSPEC;

/* 8113 */ typedef _PSHNOTIFY *LPPSHNOTIFY;

/* 8114 */ typedef HUMPD__ *HUMPD;

/* 8115 */ typedef _ACCESS_DENIED_OBJECT_ACE *PACCESS_DENIED_OBJECT_ACE;

/* 8116 */ typedef _PROPSHEETHEADERA *LPCPROPSHEETHEADERA;

/* 8117 */ typedef unsigned int HROW;

/* 8118 */ typedef tagFINDREPLACEA *LPFINDREPLACEA;

/* 8119 */ typedef _CRYPT_BLOB_ARRAY *PCRYPT_BLOB_ARRAY;

/* 8120 */ typedef _PROPSHEETPAGEA *LPCPROPSHEETPAGEA_V2;

/* 8121 */ typedef int DBROWCOUNT;

/* 8122 */ typedef MENUITEMTEMPLATE *PMENUITEMTEMPLATE;

/* 8123 */ typedef int (__stdcall *ABORTPROC)(HDC__ *, int);

/* 8124 */ typedef _DRIVER_INFO_2A *LPDRIVER_INFO_2A;

/* 8125 */ typedef IEnumConnectionPoints *LPENUMCONNECTIONPOINTS;

/* 8126 */ typedef tagEMRROUNDRECT *PEMRROUNDRECT;

/* 8127 */ typedef _TOKEN_STATISTICS *PTOKEN_STATISTICS;

/* 8128 */ typedef tagMIXERCAPSA *LPMIXERCAPS;

/* 8129 */ typedef _PROPSHEETHEADERW *LPCPROPSHEETHEADERW;

/* 8130 */ typedef _CERT_X942_DH_PARAMETERS *PCERT_X942_DH_PARAMETERS;

/* 8131 */ typedef tagMCI_LOAD_PARMSW *PMCI_LOAD_PARMSW;

/* 8132 */ typedef IRunnableObject *LPRUNNABLEOBJECT;

/* 8133 */ typedef void (__cdecl *RPC_SETFILTER_FUNC)(void (__cdecl *)(void *, unsigned int, int));

/* 8134 */ typedef int (__stdcall *LPFN_DISCONNECTEX)(unsigned int, _OVERLAPPED *, unsigned int, unsigned int);

/* 8135 */ typedef _CERT_REVOCATION_STATUS *PCERT_REVOCATION_STATUS;

/* 8136 */ typedef _PROPSHEETPAGEW *LPCPROPSHEETPAGEW_V2;

/* 8137 */ typedef HINSTANCE__ *HMODULE;

/* 8138 */ typedef int DB_LPARAMS;

/* 8139 */ typedef _CRYPT_OBJID_TABLE *PCRYPT_OBJID_TABLE;

/* 8140 */ typedef _IMAGE_RESOURCE_DATA_ENTRY *PIMAGE_RESOURCE_DATA_ENTRY;

/* 8141 */ typedef int (__stdcall *ENUMRESNAMEPROCW)(HINSTANCE__ *, const unsigned __int16 *, unsigned __int16 *, int);

/* 8142 */ typedef tagEMRRESIZEPALETTE *PEMRRESIZEPALETTE;

/* 8143 */ typedef tagMCI_WAVE_DELETE_PARMS *LPMCI_WAVE_DELETE_PARMS;

/* 8144 */ typedef _PRINTER_INFO_8A *LPPRINTER_INFO_8A;

/* 8145 */ typedef tagMCI_OVLY_SAVE_PARMSA *LPMCI_OVLY_SAVE_PARMSA;

/* 8146 */ typedef timeval *LPTIMEVAL;

/* 8147 */ typedef _ADDJOB_INFO_1A *PADDJOB_INFO_1A;

/* 8148 */ typedef _PROPSHEETPAGEA_V1 *LPPROPSHEETPAGEA_V1;

/* 8149 */ typedef IAuthenticate *LPAUTHENTICATION;

/* 8150 */ typedef _PROPSHEETPAGEA_V3 *LPPROPSHEETPAGEA_V3;

/* 8151 */ typedef unsigned int (__stdcall *LPTHREAD_START_ROUTINE)(void *);

/* 8152 */ typedef _PROPSHEETPAGEA *LPPROPSHEETPAGEA_V2;

/* 8153 */ typedef tagEMRARC *PEMRCHORD;

/* 8154 */ typedef tagEMRCREATECOLORSPACEW *PEMRCREATECOLORSPACEW;

/* 8155 */ typedef _SEC_WINNT_AUTH_IDENTITY_A *PSEC_WINNT_AUTH_IDENTITY_A;

/* 8156 */ typedef tagMSLLHOOKSTRUCT *PMSLLHOOKSTRUCT;

/* 8157 */ typedef char _TXCHAR;

/* 8158 */ typedef tagFONTDESC *LPFONTDESC;

/* 8159 */ typedef _ADDJOB_INFO_1W *PADDJOB_INFO_1W;

/* 8160 */ typedef _SYSTEM_POWER_STATE *PSYSTEM_POWER_STATE;

/* 8161 */ typedef _PRINTER_INFO_8W *LPPRINTER_INFO_8W;

/* 8162 */ typedef tagPSDA *LPPAGESETUPDLG;

/* 8163 */ typedef linger *LPLINGER;

/* 8164 */ typedef _IMAGE_COFF_SYMBOLS_HEADER *PIMAGE_COFF_SYMBOLS_HEADER;

/* 8165 */ typedef tagJOYCAPSA *LPJOYCAPS;

/* 8166 */ typedef tagJOYCAPSA *NPJOYCAPS;

/* 8167 */ typedef _MINIDUMP_THREAD *PMINIDUMP_THREAD;

/* 8168 */ typedef unsigned int *PULONG_PTR;

/* 8169 */ typedef _JOB_INFO_2W *PJOB_INFO_2W;

/* 8170 */ typedef tagCOMPOSITIONFORM *PCOMPOSITIONFORM;

/* 8171 */ typedef const char *PCSTR;

/* 8172 */ typedef _FLOATING_SAVE_AREA *PFLOATING_SAVE_AREA;

/* 8173 */ typedef _devicemodeA *NPDEVMODE;

/* 8174 */ typedef void *HUSKEY;

/* 8175 */ typedef unsigned int *PLCID;

/* 8176 */ typedef _devicemodeA *LPDEVMODE;

/* 8177 */ typedef _CERT_KEYGEN_REQUEST_INFO *PCERT_KEYGEN_REQUEST_INFO;

/* 8178 */ typedef _STORAGE_PREDICT_FAILURE *PSTORAGE_PREDICT_FAILURE;

/* 8179 */ typedef void *PIMAGEHLP_CONTEXT;

/* 8180 */ typedef char u_char;

/* 8181 */ typedef HRESULT (__stdcall *LPFNACCESSIBLECHILDREN)(IAccessible *, int, int, tagVARIANT *, int *);

/* 8182 */ typedef unsigned int DBPARAMFLAGS;

/* 8183 */ typedef void *RPC_NS_HANDLE;

/* 8184 */ typedef _CERT_POLICY_INFO *PCERT_POLICY_INFO;

/* 8185 */ typedef tagEMRCREATECOLORSPACE *PEMRCREATECOLORSPACE;

/* 8186 */ typedef _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO *PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;

/* 8187 */ typedef void (__cdecl *free_func)(void *, void *);

/* 8188 */ typedef _PRINTER_INFO_8A *LPPRINTER_INFO_8;

/* 8189 */ typedef unsigned int DBPART;

/* 8190 */ typedef _ADDJOB_INFO_1A *PADDJOB_INFO_1;

/* 8191 */ typedef tagMONHSZSTRUCTW *PMONHSZSTRUCTW;

/* 8192 */ typedef void (__cdecl *_CRT_DUMP_CLIENT)(void *, unsigned int);

/* 8193 */ typedef _JOB_INFO_1W *PJOB_INFO_1W;

/* 8194 */ typedef _SMALL_RECT *PSMALL_RECT;

/* 8195 */ typedef _PROPSHEETPAGEW *LPPROPSHEETPAGEW;

/* 8196 */ typedef _EXCEPTION_DEBUG_INFO *LPEXCEPTION_DEBUG_INFO;

/* 8197 */ typedef void IMAGEHLP_CONTEXT;

/* 8198 */ typedef _WIN32_FILE_ATTRIBUTE_DATA *LPWIN32_FILE_ATTRIBUTE_DATA;

/* 8199 */ typedef unsigned int DBPROPOPTIONS;

/* 8200 */ typedef IInternetThreadSwitch *LPIINTERNETTHREADSWITCH;

/* 8201 */ typedef tagCHARSETINFO *PCHARSETINFO;

/* 8202 */ typedef __int16 OLE_OPTEXCLUSIVE;

/* 8203 */ typedef __int16 _I16;

/* 8204 */ typedef int (__stdcall *LANGGROUPLOCALE_ENUMPROCW)(unsigned int, unsigned int, unsigned __int16 *, int);

/* 8205 */ typedef tagPSDA *LPPAGESETUPDLGA;

/* 8206 */ typedef PktCampMessage *LPPktCampMessage;

/* 8207 */ typedef char TBYTE;

/* 8208 */ typedef _CRYPT_SMIME_CAPABILITIES *PCRYPT_SMIME_CAPABILITIES;

/* 8209 */ typedef IHttpSecurity *LPHTTPSECURITY;

/* 8210 */ typedef PktTakeMaterial *LPPktTakeMaterial;

/* 8211 */ typedef char SBYTE;

/* 8212 */ typedef char *PBYTE;

/* 8213 */ typedef tagEMRELLIPSE *PEMRRECTANGLE;

/* 8214 */ typedef tagEMRPOLYPOLYLINE16 *PEMRPOLYPOLYLINE16;

/* 8215 */ typedef SKILL *LPSKILL;

/* 8216 */ typedef unsigned __int16 UHALF_PTR;

/* 8217 */ typedef IPersistMoniker *LPPERSISTMONIKER;

/* 8218 */ typedef _IMAGE_OS2_HEADER *PIMAGE_OS2_HEADER;

/* 8219 */ typedef tagMCI_WAVE_OPEN_PARMSW *LPMCI_WAVE_OPEN_PARMSW;

/* 8220 */ typedef _MINIDUMP_INCLUDE_MODULE_CALLBACK *PMINIDUMP_INCLUDE_MODULE_CALLBACK;

/* 8221 */ typedef _GUID *LPCLSID;

/* 8222 */ typedef OPENCARD_SEARCH_CRITERIAA *POPENCARD_SEARCH_CRITERIA;

/* 8223 */ typedef __int16 *PHALF_PTR;

/* 8224 */ typedef _SYSTEM_LOGICAL_PROCESSOR_INFORMATION *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION;

/* 8225 */ typedef _ACTRL_PROPERTY_ENTRYA *PACTRL_PROPERTY_ENTRYA;

/* 8226 */ typedef _ACTIVATION_CONTEXT_DETAILED_INFORMATION *PACTIVATION_CONTEXT_DETAILED_INFORMATION;

/* 8227 */ typedef tagLOGBRUSH *PPATTERN;

/* 8228 */ typedef _WSANSClassInfoA *PWSANSCLASSINFO;

/* 8229 */ typedef tagEMRFRAMERGN *PEMRFRAMERGN;

/* 8230 */ typedef _PARTITION_INFORMATION *PPARTITION_INFORMATION;

/* 8231 */ typedef _REMSECURITY_ATTRIBUTES *LPREMSECURITY_ATTRIBUTES;

/* 8232 */ typedef int (__stdcall *LANGGROUPLOCALE_ENUMPROCA)(unsigned int, unsigned int, char *, int);

/* 8233 */ typedef tagPSDW *LPPAGESETUPDLGW;

/* 8234 */ typedef int (__stdcall *PFN_CRYPT_CANCEL_RETRIEVAL)(unsigned int, void *);

/* 8235 */ typedef _MINIDUMP_HANDLE_DESCRIPTOR *PMINIDUMP_HANDLE_DESCRIPTOR;

/* 8236 */ typedef void *(__stdcall *PSYMBOL_FUNCENTRY_CALLBACK)(void *, unsigned int, void *);

/* 8237 */ typedef _CERT_BASIC_CONSTRAINTS2_INFO *PCERT_BASIC_CONSTRAINTS2_INFO;

/* 8238 */ typedef tagMINIMIZEDMETRICS *LPMINIMIZEDMETRICS;

/* 8239 */ typedef tagDROPSTRUCT *LPDROPSTRUCT;

/* 8240 */ typedef _CMSG_CMS_SIGNER_INFO *PCMSG_CMS_SIGNER_INFO;

/* 8241 */ typedef tagENUMLOGFONTA *LPENUMLOGFONTA;

/* 8242 */ typedef API_VERSION *LPAPI_VERSION;

/* 8243 */ typedef int (__cdecl *_CRT_REPORT_HOOK)(int, char *, int *);

/* 8244 */ typedef _CRYPT_ATTRIBUTE_TYPE_VALUE *PCRYPT_ATTRIBUTE_TYPE_VALUE;

/* 8245 */ typedef unsigned int *LPDWORD;

/* 8246 */ typedef int (__stdcall *LPFN_TRANSMITPACKETS)(unsigned int, _TRANSMIT_PACKETS_ELEMENT *, unsigned int, unsigned int, _OVERLAPPED *, unsigned int);

/* 8247 */ typedef _LIST_ENTRY *PLIST_ENTRY;

/* 8248 */ typedef _CRYPT_DECRYPT_MESSAGE_PARA *PCRYPT_DECRYPT_MESSAGE_PARA;

/* 8249 */ typedef tagREGISTERWORDA *PREGISTERWORD;

/* 8250 */ typedef _WSANAMESPACE_INFOA *PWSANAMESPACE_INFO;

/* 8251 */ typedef HCOLORSPACE__ *HCOLORSPACE;

/* 8252 */ typedef _DRIVER_INFO_3A *PDRIVER_INFO_3;

/* 8253 */ typedef PktCastleSiegeCount *LPPktCastleSiegeCount;

/* 8254 */ typedef _PRINTER_NOTIFY_INFO_DATA *PPRINTER_NOTIFY_INFO_DATA;

/* 8255 */ typedef _CRYPTOAPI_BLOB *PCERT_NAME_BLOB;

/* 8256 */ typedef _SECURITY_DESCRIPTOR_RELATIVE *PISECURITY_DESCRIPTOR_RELATIVE;

/* 8257 */ typedef tagICONMETRICSA *PICONMETRICS;

/* 8258 */ typedef OPENCARDNAME_EXA *POPENCARDNAME_EX;

/* 8259 */ typedef _TIME_ZONE_INFORMATION *PTIME_ZONE_INFORMATION;

/* 8260 */ typedef unsigned __int64 ULONG64;

/* 8261 */ typedef unsigned int DWORD_PTR;

/* 8262 */ typedef __int64 *PLONG64;

/* 8263 */ typedef tagWNDCLASSA *PWNDCLASS;

/* 8264 */ typedef tagTPMPARAMS *LPTPMPARAMS;

/* 8265 */ typedef unsigned int *intrnman;

/* 8266 */ typedef SCARD_READERSTATEA *LPSCARD_READERSTATE;

/* 8267 */ typedef _SERVICE_TABLE_ENTRYW *LPSERVICE_TABLE_ENTRYW;

/* 8268 */ typedef tagBITMAPINFO *LPBITMAPINFO;

/* 8269 */ typedef unsigned int uLongf;

/* 8270 */ typedef _EXCEPTION_POINTERS *PEXCEPTION_POINTERS;

/* 8271 */ typedef _BYTE_BLOB *UP_BYTE_BLOB;

/* 8272 */ typedef mmtime_tag *PMMTIME;

/* 8273 */ typedef void **RPC_EP_INQ_HANDLE;

/* 8274 */ typedef _RemotableHandle *wireHMENU;

/* 8275 */ typedef void (__stdcall *CS_TAG_GETTING_ROUTINE)(void *, int, unsigned int *, unsigned int *, unsigned int *, unsigned int *);

/* 8276 */ typedef tagPELARRAY *PPELARRAY;

/* 8277 */ typedef _IMAGEHLP_LINE64 *PIMAGEHLP_LINE64;

/* 8278 */ typedef int (__stdcall *PFN_CMSG_EXPORT_ENCRYPT_KEY)(unsigned int, unsigned int, _CERT_PUBLIC_KEY_INFO *, char *, unsigned int *);

/* 8279 */ typedef _DRIVER_INFO_3W *PDRIVER_INFO_3W;

/* 8280 */ typedef tagEMRSETPIXELV *PEMRSETPIXELV;

/* 8281 */ typedef _WSANAMESPACE_INFOW *PWSANAMESPACE_INFOW;

/* 8282 */ typedef void (__stdcall *PFN_CRYPT_ASYNC_PARAM_FREE_FUNC)(char *, void *);

/* 8283 */ typedef _PARTY_DB_INFO *LPPARTY_DB_INFO;

/* 8284 */ typedef _CERT_SIGNED_CONTENT_INFO *PCERT_SIGNED_CONTENT_INFO;

/* 8285 */ typedef _CRYPT_CONTENT_INFO *PCRYPT_CONTENT_INFO;

/* 8286 */ typedef _FLAGGED_WORD_BLOB *wireBSTR;

/* 8287 */ typedef _TOKEN_AUDIT_POLICY *PTOKEN_AUDIT_POLICY;

/* 8288 */ typedef _WSANAMESPACE_INFOA *PWSANAMESPACE_INFOA;

/* 8289 */ typedef tagBIND_OPTS2 *LPBIND_OPTS2;

/* 8290 */ typedef void *(__stdcall *PFN_CRYPT_ALLOC)(unsigned int);

/* 8291 */ typedef _DRIVER_INFO_3A *PDRIVER_INFO_3A;

/* 8292 */ typedef _QUOTA_LIMITS_EX *PQUOTA_LIMITS_EX;

/* 8293 */ typedef tagEMREXTCREATEFONTINDIRECTW *PEMREXTCREATEFONTINDIRECTW;

/* 8294 */ typedef _wireBRECORD *wireBRECORD;

/* 8295 */ typedef tagFINDREPLACEA *LPFINDREPLACE;

/* 8296 */ typedef tagMCI_PLAY_PARMS *PMCI_PLAY_PARMS;

/* 8297 */ typedef _IMAGEHLP_SYMBOL_PACKAGE *PIMAGEHLP_SYMBOL_PACKAGE;

/* 8298 */ typedef tagBITMAPCOREINFO *LPBITMAPCOREINFO;

/* 8299 */ typedef PktPeace *LPPktPeace;

/* 8300 */ typedef tagICONMETRICSA *PICONMETRICSA;

/* 8301 */ typedef OPENCARDNAME_EXA *POPENCARDNAME_EXA;

/* 8302 */ typedef _PROPSHEETPAGEA_V3 *LPCPROPSHEETPAGEA_V3;

/* 8303 */ typedef _RPC_POLICY *PRPC_POLICY;

/* 8304 */ typedef _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA *PCMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;

/* 8305 */ typedef HMMIO__ *HMMIO;

/* 8306 */ typedef tagMIXERLINEA *LPMIXERLINE;

/* 8307 */ typedef tagEMREXCLUDECLIPRECT *PEMRINTERSECTCLIPRECT;

/* 8308 */ typedef tagEMRSCALEVIEWPORTEXTEX *PEMRSCALEWINDOWEXTEX;

/* 8309 */ typedef unsigned int INHERIT_FLAGS;

/* 8310 */ typedef _SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[1];

/* 8311 */ typedef unsigned int lzo_ptr_t;

/* 8312 */ typedef tagEMRSETVIEWPORTEXTEX *PEMRSETWINDOWEXTEX;

/* 8313 */ typedef _DEVICE_MEDIA_INFO *PDEVICE_MEDIA_INFO;

/* 8314 */ typedef _IMAGE_SECTION_HEADER *PIMAGE_SECTION_HEADER;

/* 8315 */ typedef unsigned int DBCOUNTITEM;

/* 8316 */ typedef __GENERIC_BINDING_INFO *PGENERIC_BINDING_INFO;

/* 8317 */ typedef _SYSTEM_AUDIT_OBJECT_ACE *PSYSTEM_AUDIT_OBJECT_ACE;

/* 8318 */ typedef _MINIDUMP_MEMORY_DESCRIPTOR *PMINIDUMP_MEMORY_DESCRIPTOR;

/* 8319 */ typedef _MEMORY_BASIC_INFORMATION32 *PMEMORY_BASIC_INFORMATION32;

/* 8320 */ typedef _MINIDUMP_CALLBACK_INPUT *PMINIDUMP_CALLBACK_INPUT;

/* 8321 */ typedef _CMC_TAGGED_OTHER_MSG *PCMC_TAGGED_OTHER_MSG;

/* 8322 */ typedef tagICONMETRICSW *PICONMETRICSW;

/* 8323 */ typedef unsigned int (__stdcall *LPPRINTHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 8324 */ typedef OPENCARDNAME_EXW *POPENCARDNAME_EXW;

/* 8325 */ typedef _PROPSHEETPAGEW_V3 *LPCPROPSHEETPAGEW_V3;

/* 8326 */ typedef unsigned int *PSCARDCONTEXT;

/* 8327 */ typedef _SESSION_BUFFER *PSESSION_BUFFER;

/* 8328 */ typedef tagMCI_OPEN_PARMSA *PMCI_OPEN_PARMSA;

/* 8329 */ typedef unsigned int DBSOURCETYPE;

/* 8330 */ typedef tagEMROFFSETCLIPRGN *PEMROFFSETCLIPRGN;

/* 8331 */ typedef _RE_CMS_CheckUserBlock *LPRE_CMS_CheckUserBlock;

/* 8332 */ typedef _WSAESETSERVICEOP *LPWSAESETSERVICEOP;

/* 8333 */ typedef _PRINTER_ENUM_VALUESA *PPRINTER_ENUM_VALUESA;

/* 8334 */ typedef _CMSG_KEY_TRANS_ENCRYPT_INFO *PCMSG_KEY_TRANS_ENCRYPT_INFO;

/* 8335 */ typedef _CERT_TEMPLATE_EXT *PCERT_TEMPLATE_EXT;

/* 8336 */ typedef _CRYPTOAPI_BLOB *PCRYPT_DIGEST_BLOB;

/* 8337 */ typedef _PRINTER_NOTIFY_INFO *LPPRINTER_NOTIFY_INFO;

/* 8338 */ typedef tagNONCLIENTMETRICSW *PNONCLIENTMETRICSW;

/* 8339 */ typedef int INT;

/* 8340 */ typedef IViewObjectEx *LPVIEWOBJECTEX;

/* 8341 */ typedef _RPC_SERVER_INTERFACE *PRPC_SERVER_INTERFACE;

/* 8342 */ typedef _MINIDUMP_CALLBACK_OUTPUT *PMINIDUMP_CALLBACK_OUTPUT;

/* 8343 */ typedef _ENUM_SERVICE_STATUS_PROCESSA *LPENUM_SERVICE_STATUS_PROCESS;

/* 8344 */ typedef unsigned __int16 **SNB;

/* 8345 */ typedef tagMCI_OVLY_OPEN_PARMSA *PMCI_OVLY_OPEN_PARMS;

/* 8346 */ typedef _PRINTER_ENUM_VALUESW *PPRINTER_ENUM_VALUESW;

/* 8347 */ typedef tagEMRPOLYLINE *PEMRPOLYGON;

/* 8348 */ typedef _EXPLICIT_ACCESS_A *PEXPLICIT_ACCESS;

/* 8349 */ typedef _NOTIFYICONDATAW *PNOTIFYICONDATAW;

/* 8350 */ typedef linger *PLINGER;

/* 8351 */ typedef tagMETAFILEPICT *LPMETAFILEPICT;

/* 8352 */ typedef midiproptempo_tag *LPMIDIPROPTEMPO;

/* 8353 */ typedef _MINIDUMP_USER_STREAM *PMINIDUMP_USER_STREAM;

/* 8354 */ typedef unsigned int LCID;

/* 8355 */ typedef HICON__ *HICON;

/* 8356 */ typedef IOleInPlaceFrame *LPOLEINPLACEFRAME;

/* 8357 */ typedef _IMAGEHLP_SYMBOL64 *PIMAGEHLP_SYMBOL64;

/* 8358 */ typedef tagACCEL *LPACCEL;

/* 8359 */ typedef char *HPSTR;

/* 8360 */ typedef tagMIDIOUTCAPSA *NPMIDIOUTCAPS;

/* 8361 */ typedef char *LPSTR;

/* 8362 */ typedef tagBITMAP *PBITMAP;

/* 8363 */ typedef tagMIDIOUTCAPSA *LPMIDIOUTCAPS;

/* 8364 */ typedef char *NPSTR;

/* 8365 */ typedef _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO *PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;

/* 8366 */ typedef HWINEVENTHOOK__ *HWINEVENTHOOK;

/* 8367 */ typedef IPointerInactive *LPPOINTERINACTIVE;

/* 8368 */ typedef struct _NDR_ASYNC_MESSAGE *PNDR_ASYNC_MESSAGE;

/* 8369 */ typedef tagMONLINKSTRUCT *PMONLINKSTRUCT;

/* 8370 */ typedef void *(__stdcall *PFUNCTION_TABLE_ACCESS_ROUTINE64)(void *, unsigned __int64);

/* 8371 */ typedef HBITMAP__ *HBITMAP;

/* 8372 */ typedef void *PSID;

/* 8373 */ typedef unsigned int (__stdcall *PSYMBOLSERVERGETOPTIONSPROC)();

/* 8374 */ typedef _MINIDUMP_FUNCTION_TABLE_STREAM *PMINIDUMP_FUNCTION_TABLE_STREAM;

/* 8375 */ typedef _ELEMENT_TYPE *PELEMENT_TYPE;

/* 8376 */ typedef _BY_HANDLE_FILE_INFORMATION *PBY_HANDLE_FILE_INFORMATION;

/* 8377 */ typedef IMalloc *LPMALLOC;

/* 8378 */ typedef IMallocSpy *LPMALLOCSPY;

/* 8379 */ typedef _JOB_SET_ARRAY *PJOB_SET_ARRAY;

/* 8380 */ typedef IOleInPlaceActiveObject *LPOLEINPLACEACTIVEOBJECT;

/* 8381 */ typedef _TOKEN_AUDIT_POLICY_ELEMENT *PTOKEN_AUDIT_POLICY_ELEMENT;

/* 8382 */ typedef _nlsversioninfo *LPNLSVERSIONINFO;

/* 8383 */ typedef _CRYPT_PKCS8_EXPORT_PARAMS *PCRYPT_PKCS8_EXPORT_PARAMS;

/* 8384 */ typedef _PRINTER_ENUM_VALUESA *PPRINTER_ENUM_VALUES;

/* 8385 */ typedef _CERT_POLICY_MAPPINGS_INFO *PCERT_POLICY_MAPPINGS_INFO;

/* 8386 */ typedef tagEMRSETICMPROFILE *PEMRSETICMPROFILE;

/* 8387 */ typedef _CRYPT_VERIFY_MESSAGE_PARA *PCRYPT_VERIFY_MESSAGE_PARA;

/* 8388 */ typedef IStream *LPSTREAM;

/* 8389 */ typedef _SOURCEFILE *PSOURCEFILE;

/* 8390 */ typedef tagMCI_OVLY_OPEN_PARMSW *PMCI_OVLY_OPEN_PARMSW;

/* 8391 */ typedef unsigned int DBRANGE;

/* 8392 */ typedef int (__stdcall *PFN_CRYPT_ENUM_OID_FUNC)(unsigned int, const char *, const char *, unsigned int, const unsigned int *, const unsigned __int16 *const *, const char *const *, const unsigned int *, void *);

/* 8393 */ typedef tagMCI_OVLY_OPEN_PARMSA *PMCI_OVLY_OPEN_PARMSA;

/* 8394 */ typedef _WSAEcomparator *LPWSAECOMPARATOR;

/* 8395 */ typedef unsigned int (__stdcall *PFE_IMPORT_FUNC)(char *, void *, unsigned int *);

/* 8396 */ typedef _EXPLICIT_ACCESS_A *PEXPLICIT_ACCESSA;

/* 8397 */ typedef _NETRESOURCEW *LPNETRESOURCEW;

/* 8398 */ typedef tagPROPPAGEINFO *LPPROPPAGEINFO;

/* 8399 */ typedef _RTL_CRITICAL_SECTION_DEBUG *LPCRITICAL_SECTION_DEBUG;

/* 8400 */ typedef IPropertyNotifySink *LPPROPERTYNOTIFYSINK;

/* 8401 */ typedef _RGNDATA *PRGNDATA;

/* 8402 */ typedef _RTL_CRITICAL_SECTION *LPCRITICAL_SECTION;

/* 8403 */ typedef void __stdcall MIDICALLBACK(HDRVR__ *, unsigned int, unsigned int, unsigned int, unsigned int);

/* 8404 */ typedef _CMSG_STREAM_INFO *PCMSG_STREAM_INFO;

/* 8405 */ typedef IEnumContextProps *LPENUMCONTEXTPROPS;

/* 8406 */ typedef void (__stdcall *CS_TYPE_LOCAL_SIZE_ROUTINE)(void *, unsigned int, unsigned int, _IDL_CS_CONVERT *, unsigned int *, unsigned int *);

/* 8407 */ typedef HMIXER__ *HMIXER;

/* 8408 */ typedef tagWAVEOUTCAPSW *LPWAVEOUTCAPSW;

/* 8409 */ typedef tagEMRSETCOLORSPACE *PEMRSELECTCOLORSPACE;

/* 8410 */ typedef tagWAVEOUTCAPSW *NPWAVEOUTCAPSW;

/* 8411 */ typedef tagAXESLISTW *PAXESLISTW;

/* 8412 */ typedef _QUERY_SERVICE_LOCK_STATUSA *LPQUERY_SERVICE_LOCK_STATUSA;

/* 8413 */ typedef _PROPSHEETPAGEW_V3 *LPPROPSHEETPAGEW_LATEST;

/* 8414 */ typedef unsigned __int16 *LPOLESTR;

/* 8415 */ typedef _CERT_GENERAL_SUBTREE *PCERT_GENERAL_SUBTREE;

/* 8416 */ typedef _EXPLICIT_ACCESS_W *PEXPLICIT_ACCESSW;

/* 8417 */ typedef unsigned int (__stdcall *LPCCHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 8418 */ typedef tagEXTLOGFONTA *PEXTLOGFONTA;

/* 8419 */ typedef tagHELPWININFOW *LPHELPWININFOW;

/* 8420 */ typedef const char *LPCBYTE;

/* 8421 */ typedef unsigned __int64 u_int64;

/* 8422 */ typedef _QOS_SHAPING_RATE *LPQOS_SHAPING_RATE;

/* 8423 */ typedef _EXPLICIT_ACCESS_A *PEXPLICIT_ACCESS_;

/* 8424 */ typedef _WSAESETSERVICEOP *PWSAESETSERVICEOP;

/* 8425 */ typedef _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY *PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;

/* 8426 */ typedef tagMCI_INFO_PARMSW *LPMCI_INFO_PARMSW;

/* 8427 */ typedef tagIMEMENUITEMINFOA *NPIMEMENUITEMINFOA;

/* 8428 */ typedef tagIMEMENUITEMINFOA *LPIMEMENUITEMINFOA;

/* 8429 */ typedef tagMIXERLINECONTROLSA *PMIXERLINECONTROLSA;

/* 8430 */ typedef _PRINTER_DEFAULTSA *PPRINTER_DEFAULTSA;

/* 8431 */ typedef void *gzFile;

/* 8432 */ typedef IOleLink *LPOLELINK;

/* 8433 */ typedef _DISCDLGSTRUCTA *LPDISCDLGSTRUCT;

/* 8434 */ typedef _CPU_INFORMATION *PCPU_INFORMATION;

/* 8435 */ typedef void (__stdcall *NDR_RUNDOWN)(void *);

/* 8436 */ typedef _ACCESS_ALLOWED_CALLBACK_ACE *PACCESS_ALLOWED_CALLBACK_ACE;

/* 8437 */ typedef tagMIDIINCAPSW *PMIDIINCAPSW;

/* 8438 */ typedef _WORD_BLOB *UP_WORD_BLOB;

/* 8439 */ typedef _BIN_COUNT *PBIN_COUNT;

/* 8440 */ typedef tagMIDIOUTCAPS2W *PMIDIOUTCAPS2W;

/* 8441 */ typedef long double DATE;

/* 8442 */ typedef int (__stdcall *PSYMBOL_REGISTERED_CALLBACK)(void *, unsigned int, void *, void *);

/* 8443 */ typedef void (__stdcall *EXPR_EVAL)(_MIDL_STUB_MESSAGE *);

/* 8444 */ typedef tagMIXERLINECONTROLSW *PMIXERLINECONTROLSW;

/* 8445 */ typedef tagWCRANGE *PWCRANGE;

/* 8446 */ typedef tagMCI_BREAK_PARMS *LPMCI_BREAK_PARMS;

/* 8447 */ typedef _IMAGEHLP_DUPLICATE_SYMBOL64 *PIMAGEHLP_DUPLICATE_SYMBOL64;

/* 8448 */ typedef tagCWPRETSTRUCT *PCWPRETSTRUCT;

/* 8449 */ typedef tagMCI_INFO_PARMSA *LPMCI_INFO_PARMSA;

/* 8450 */ typedef unsigned int (__stdcall *PTHREAD_START_ROUTINE)(void *);

/* 8451 */ typedef _SYSTEMTIME *PSYSTEMTIME;

/* 8452 */ typedef _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER;

/* 8453 */ typedef _CRYPT_CSP_PROVIDER *PCRYPT_CSP_PROVIDER;

/* 8454 */ typedef tagSTYLEBUFA *NPSTYLEBUF;

/* 8455 */ typedef void (__stdcall *PFLS_CALLBACK_FUNCTION)(void *);

/* 8456 */ typedef tagSTYLEBUFA *LPSTYLEBUF;

/* 8457 */ typedef int (__stdcall *DESKTOPENUMPROCA)(char *, int);

/* 8458 */ typedef int (__stdcall *PFN_CMSG_IMPORT_KEY_AGREE)(_CRYPT_ALGORITHM_IDENTIFIER *, _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA *, unsigned int, void *, unsigned int *);

/* 8459 */ typedef void *HCRYPTMSG;

/* 8460 */ typedef _CTL_USAGE *PCTL_USAGE;

/* 8461 */ typedef IPropertySetStorage *LPPROPERTYSETSTORAGE;

/* 8462 */ typedef tagMCI_WAVE_OPEN_PARMSW *PMCI_WAVE_OPEN_PARMSW;

/* 8463 */ typedef AtNode *LPAtNode;

/* 8464 */ typedef tagOFNA *LPOPENFILENAME;

/* 8465 */ typedef HHOOK__ *HHOOK;

/* 8466 */ typedef void (__stdcall *PDRVCALLBACK)(HDRVR__ *, unsigned int, unsigned int, unsigned int, unsigned int);

/* 8467 */ typedef tagEMRSETCOLORSPACE *PEMRSETCOLORSPACE;

/* 8468 */ typedef tagMCI_WAVE_OPEN_PARMSA *PMCI_WAVE_OPEN_PARMSA;

/* 8469 */ typedef _CERT_CHAIN_ELEMENT *PCERT_CHAIN_ELEMENT;

/* 8470 */ typedef unsigned int GROUP;

/* 8471 */ typedef int SCODE;

/* 8472 */ typedef unsigned __int16 *PUWSTR;

/* 8473 */ typedef _STORAGE_BUS_TYPE *PSTORAGE_BUS_TYPE;

/* 8474 */ typedef _userHMETAFILEPICT *wireHMETAFILEPICT;

/* 8475 */ typedef tagMCI_ANIM_OPEN_PARMSA *LPMCI_ANIM_OPEN_PARMSA;

/* 8476 */ typedef __int64 fpos_t;

/* 8477 */ typedef IOleCacheControl *LPOLECACHECONTROL;

/* 8478 */ typedef tagEMR *PEMR;

/* 8479 */ typedef int (__stdcall *PTOP_LEVEL_EXCEPTION_FILTER)(_EXCEPTION_POINTERS *);

/* 8480 */ typedef void (__stdcall *LPMIDICALLBACK)(HDRVR__ *, unsigned int, unsigned int, unsigned int, unsigned int);

/* 8481 */ typedef tagMIXERLINECONTROLSA *PMIXERLINECONTROLS;

/* 8482 */ typedef tagCHOOSECOLORW *LPCHOOSECOLORW;

/* 8483 */ typedef pvalueA *PPVALUE;

/* 8484 */ typedef _CERT_INFO *PCERT_INFO;

/* 8485 */ typedef _WSAEcomparator *PWSAECOMPARATOR;

/* 8486 */ typedef tagSTYLEBUFW *LPSTYLEBUFW;

/* 8487 */ typedef tagSTYLEBUFW *NPSTYLEBUFW;

/* 8488 */ typedef _LANA_ENUM *PLANA_ENUM;

/* 8489 */ typedef tagANIMATIONINFO *LPANIMATIONINFO;

/* 8490 */ typedef tagCWPRETSTRUCT *NPCWPRETSTRUCT;

/* 8491 */ typedef _tagHIT_LOGGING_INFO *LPHIT_LOGGING_INFO;

/* 8492 */ typedef tagMOUSEHOOKSTRUCTEX *LPMOUSEHOOKSTRUCTEX;

/* 8493 */ typedef tagCWPRETSTRUCT *LPCWPRETSTRUCT;

/* 8494 */ typedef _VIDEOPARAMETERS *PVIDEOPARAMETERS;

/* 8495 */ typedef tagMENUINFO *LPCMENUINFO;

/* 8496 */ typedef _RTL_VERIFIER_THUNK_DESCRIPTOR *PRTL_VERIFIER_THUNK_DESCRIPTOR;

/* 8497 */ typedef tagMCI_INFO_PARMSA *LPMCI_INFO_PARMS;

/* 8498 */ typedef _JOBOBJECT_EXTENDED_LIMIT_INFORMATION *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION;

/* 8499 */ typedef char *PUTSTR;

/* 8500 */ typedef int s_long;

/* 8501 */ typedef tagSTYLEBUFA *NPSTYLEBUFA;

/* 8502 */ typedef unsigned int u_long;

/* 8503 */ typedef tagSTYLEBUFA *LPSTYLEBUFA;

/* 8504 */ typedef unsigned int ACCESS_RIGHTS;

/* 8505 */ typedef _GRADIENT_TRIANGLE *PGRADIENT_TRIANGLE;

/* 8506 */ typedef void (__stdcall *NDR_NOTIFY_ROUTINE)();

/* 8507 */ typedef tagCOMBOBOXINFO *LPCOMBOBOXINFO;

/* 8508 */ typedef tagOFNA *LPOPENFILENAMEA;

/* 8509 */ typedef char cs_byte;

/* 8510 */ typedef void *HCONTEXT;

/* 8511 */ typedef _ABCFLOAT *NPABCFLOAT;

/* 8512 */ typedef tagMOUSEHOOKSTRUCT *PMOUSEHOOKSTRUCT;

/* 8513 */ typedef unsigned int *PSCARDHANDLE;

/* 8514 */ typedef _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER32;

/* 8515 */ typedef _ABCFLOAT *LPABCFLOAT;

/* 8516 */ typedef _MEMORY_BASIC_INFORMATION *PMEMORY_BASIC_INFORMATION;

/* 8517 */ typedef unsigned int _dev_t;

/* 8518 */ typedef bool (__cdecl *FnProcess)(BattleInclination::CharData *, BattleInclination::CharData *, BattleInclination::RelationData *, char *);

/* 8519 */ typedef _ABCFLOAT *PABCFLOAT;

/* 8520 */ typedef ITypeInfo *LPTYPEINFO;

/* 8521 */ typedef tagMCI_ANIM_PLAY_PARMS *PMCI_ANIM_PLAY_PARMS;

/* 8522 */ typedef _CONTEXT *PCONTEXT;

/* 8523 */ typedef tagOFNW *LPOPENFILENAMEW;

/* 8524 */ typedef SCARD_T1_REQUEST *LPSCARD_T1_REQUEST;

/* 8525 */ typedef tagMCI_WAVE_OPEN_PARMSA *PMCI_WAVE_OPEN_PARMS;

/* 8526 */ typedef _MIDL_SYNTAX_INFO *PMIDL_SYNTAX_INFO;

/* 8527 */ typedef OPENCARDNAME_EXW *LPOPENCARDNAME_EXW;

/* 8528 */ typedef tagEMRSETMAPPERFLAGS *PEMRSETMAPPERFLAGS;

/* 8529 */ typedef SYSTEM_POWER_LEVEL *PSYSTEM_POWER_LEVEL;

/* 8530 */ typedef ITypeInfo2 *LPTYPEINFO2;

/* 8531 */ typedef void *HDWP;

/* 8532 */ typedef tagMCI_VD_STEP_PARMS *LPMCI_VD_STEP_PARMS;

/* 8533 */ typedef _ACL_REVISION_INFORMATION *PACL_REVISION_INFORMATION;

/* 8534 */ typedef _TRANSMIT_PACKETS_ELEMENT *PTRANSMIT_PACKETS_ELEMENT;

/* 8535 */ typedef tagOFN_NT4A *LPOPENFILENAME_NT4A;

/* 8536 */ typedef tagPELARRAY *LPPELARRAY;

/* 8537 */ typedef int (__cdecl *_onexit_t)();

/* 8538 */ typedef tagPELARRAY *NPPELARRAY;

/* 8539 */ typedef tagMOUSEKEYS *LPMOUSEKEYS;

/* 8540 */ typedef void (__stdcall *PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC)(void *, unsigned int, const char *, char *, void *);

/* 8541 */ typedef HRESULT (__stdcall *LPFNCANUNLOADNOW)();

/* 8542 */ typedef unsigned int DBCOMPARE;

/* 8543 */ typedef IEnumVARIANT *LPENUMVARIANT;

/* 8544 */ typedef int (__stdcall *I_RpcProxyIsValidMachineFn)(char *, char *, unsigned int);

/* 8545 */ typedef tagTEXTMETRICA *NPTEXTMETRIC;

/* 8546 */ typedef tagOFN_NT4W *LPOPENFILENAME_NT4W;

/* 8547 */ typedef int (__stdcall *RPC_MGMT_AUTHORIZATION_FN)(void *, unsigned int, int *);

/* 8548 */ typedef tagTEXTMETRICA *LPTEXTMETRIC;

/* 8549 */ typedef _ACTRL_CONTROL_INFOA *PACTRL_CONTROL_INFOA;

/* 8550 */ typedef tagMCI_STATUS_PARMS *LPMCI_STATUS_PARMS;

/* 8551 */ typedef PktCPDAck *LPPktCPDAck;

/* 8552 */ typedef tagMETAHEADER *LPMETAHEADER;

/* 8553 */ typedef tagXFORM *LPXFORM;

/* 8554 */ typedef _ENUM_SERVICE_STATUS_PROCESSA *LPENUM_SERVICE_STATUS_PROCESSA;

/* 8555 */ typedef _GG_AUTH_DATA *PGG_AUTH_DATA;

/* 8556 */ typedef int SSIZE_T;

/* 8557 */ typedef _OBJECTS_AND_NAME_A *POBJECTS_AND_NAME_A;

/* 8558 */ typedef unsigned int *PSIZE_T;

/* 8559 */ typedef _OFSTRUCT *POFSTRUCT;

/* 8560 */ typedef PktPIDAck *LPPktPIDAck;

/* 8561 */ typedef tagENUMLOGFONTEXDVW *PENUMLOGFONTEXDVW;

/* 8562 */ typedef tagMINMAXINFO *PMINMAXINFO;

/* 8563 */ typedef tagMIDIOUTCAPSA *NPMIDIOUTCAPSA;

/* 8564 */ typedef tagMIDIOUTCAPSA *LPMIDIOUTCAPSA;

/* 8565 */ typedef _WSAVersion *PWSAVERSION;

/* 8566 */ typedef tagSERIALKEYSW *LPSERIALKEYSW;

/* 8567 */ typedef tagPDEXA *LPPRINTDLGEX;

/* 8568 */ typedef tagRECT *LPBORDERWIDTHS;

/* 8569 */ typedef _MINIDUMP_FUNCTION_TABLE_DESCRIPTOR *PMINIDUMP_FUNCTION_TABLE_DESCRIPTOR;

/* 8570 */ typedef tagJOYCAPS2A *NPJOYCAPS2;

/* 8571 */ typedef _LIST_ENTRY *PRLIST_ENTRY;

/* 8572 */ typedef tagJOYCAPS2A *LPJOYCAPS2;

/* 8573 */ typedef _DISK_RECORD *PDISK_RECORD;

/* 8574 */ typedef void *PACCESS_TOKEN;

/* 8575 */ typedef tagENUMLOGFONTEXDVA *PENUMLOGFONTEXDVA;

/* 8576 */ typedef IEncodingFilterFactory *LPENCODINGFILTERFACTORY;

/* 8577 */ typedef _OBJECTS_AND_NAME_W *POBJECTS_AND_NAME_W;

/* 8578 */ typedef tagMCI_OVLY_WINDOW_PARMSA *LPMCI_OVLY_WINDOW_PARMS;

/* 8579 */ typedef _WSANSClassInfoA *LPWSANSCLASSINFO;

/* 8580 */ typedef _MINIDUMP_STRING *PMINIDUMP_STRING;

/* 8581 */ typedef tagCOLORCORRECTPALETTE *PEMRCOLORCORRECTPALETTE;

/* 8582 */ typedef tagSERIALKEYSA *LPSERIALKEYSA;

/* 8583 */ typedef tagMDINEXTMENU *PMDINEXTMENU;

/* 8584 */ typedef int (__stdcall *DATEFMT_ENUMPROCEXA)(char *, unsigned int);

/* 8585 */ typedef tagEMRSETICMPROFILE *PEMRSETICMPROFILEA;

/* 8586 */ typedef _GET_MEDIA_TYPES *PGET_MEDIA_TYPES;

/* 8587 */ typedef _CONSOLE_CURSOR_INFO *PCONSOLE_CURSOR_INFO;

/* 8588 */ typedef tagTEXTMETRICW *LPTEXTMETRICW;

/* 8589 */ typedef _SYSTEM_ALARM_OBJECT_ACE *PSYSTEM_ALARM_OBJECT_ACE;

/* 8590 */ typedef tagTEXTMETRICW *NPTEXTMETRICW;

/* 8591 */ typedef tagMIXERCONTROLW *PMIXERCONTROLW;

/* 8592 */ typedef tagOFN_NT4A *LPOPENFILENAME_NT4;

/* 8593 */ typedef USER_INFO *LPUSER_INFO;

/* 8594 */ typedef void *__stdcall RPC_CLIENT_ALLOC(unsigned int);

/* 8595 */ typedef _CONFIG *LPCONFIG;

/* 8596 */ typedef tagBITMAPCOREHEADER *LPBITMAPCOREHEADER;

/* 8597 */ typedef _CERT_POLICY_QUALIFIER_INFO *PCERT_POLICY_QUALIFIER_INFO;

/* 8598 */ typedef tagTITLEBARINFO *LPTITLEBARINFO;

/* 8599 */ typedef unsigned __int16 VARTYPE;

/* 8600 */ typedef _IMAGE_RUNTIME_FUNCTION_ENTRY *PIMAGE_IA64_RUNTIME_FUNCTION_ENTRY;

/* 8601 */ typedef tagTEXTMETRICA *NPTEXTMETRICA;

/* 8602 */ typedef tagEMRCREATEPEN *PEMRCREATEPEN;

/* 8603 */ typedef tagOLEUPDATE *POLEUPDATE;

/* 8604 */ typedef PktCampRight *LPPktCampRight;

/* 8605 */ typedef tagTEXTMETRICA *LPTEXTMETRICA;

/* 8606 */ typedef _CRYPTOAPI_BLOB *PCRYPT_DER_BLOB;

/* 8607 */ typedef tagHW_PROFILE_INFOW *LPHW_PROFILE_INFOW;

/* 8608 */ typedef int (__stdcall *DATEFMT_ENUMPROCEXW)(unsigned __int16 *, unsigned int);

/* 8609 */ typedef int (__stdcall *PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY)(_CMSG_CONTENT_ENCRYPT_INFO *, unsigned int, void *);

/* 8610 */ typedef _MEDIA_TYPE *PMEDIA_TYPE;

/* 8611 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_DELETE_CERT)(void *, _CERT_CONTEXT *, unsigned int);

/* 8612 */ typedef HRESULT (__cdecl *_ATL_PERFREGFUNC)(HINSTANCE__ *);

/* 8613 */ typedef int (__stdcall *PSYMBOLSERVERPINGPROC)(const char *);

/* 8614 */ typedef tagBSTRBLOB *LPBSTRBLOB;

/* 8615 */ typedef void __stdcall DRVCALLBACK(HDRVR__ *, unsigned int, unsigned int, unsigned int, unsigned int);

/* 8616 */ typedef _CRYPT_BIT_BLOB *PCRYPT_BIT_BLOB;

/* 8617 */ typedef _OBJECTS_AND_NAME_A *POBJECTS_AND_NAME_;

/* 8618 */ typedef _MINIDUMP_HANDLE_DATA_STREAM *PMINIDUMP_HANDLE_DATA_STREAM;

/* 8619 */ typedef _WSAMSG *PWSAMSG;

/* 8620 */ typedef void (__stdcall *LPOCNDSCPROC)(unsigned int, unsigned int, void *);

/* 8621 */ typedef _CRYPTOAPI_BLOB *PCRYPT_DATA_BLOB;

/* 8622 */ typedef _CRL_FIND_ISSUED_FOR_PARA *PCRL_FIND_ISSUED_FOR_PARA;

/* 8623 */ typedef int (__cdecl *_PIFV)();

/* 8624 */ typedef HTASK__ *HTASK;

/* 8625 */ typedef _CRL_DIST_POINT *PCRL_DIST_POINT;

/* 8626 */ typedef tagEMRNAMEDESCAPE *PEMRNAMEDESCAPE;

/* 8627 */ typedef _RTL_VERIFIER_PROVIDER_DESCRIPTOR *PRTL_VERIFIER_PROVIDER_DESCRIPTOR;

/* 8628 */ typedef tagPDEXA *LPPRINTDLGEXA;

/* 8629 */ typedef _OSVERSIONINFOA *LPOSVERSIONINFO;

/* 8630 */ typedef tagJOYCAPS2A *NPJOYCAPS2A;

/* 8631 */ typedef _WSANSClassInfoW *LPWSANSCLASSINFOW;

/* 8632 */ typedef tagEMREXCLUDECLIPRECT *PEMREXCLUDECLIPRECT;

/* 8633 */ typedef tagJOYCAPS2A *LPJOYCAPS2A;

/* 8634 */ typedef _PRIVILEGE_SET *PPRIVILEGE_SET;

/* 8635 */ typedef tagEMRSETCOLORSPACE *PEMRDELETECOLORSPACE;

/* 8636 */ typedef _CRYPT_URL_ARRAY *PCRYPT_URL_ARRAY;

/* 8637 */ typedef _OLESTREAM *LPOLESTREAM;

/* 8638 */ typedef _STORAGE_BUS_RESET_REQUEST *PSTORAGE_BUS_RESET_REQUEST;

/* 8639 */ typedef _userCLIPFORMAT *wireCLIPFORMAT;

/* 8640 */ typedef __int16 s_short;

/* 8641 */ typedef tagENUMLOGFONTEXDVA *PENUMLOGFONTEXDV;

/* 8642 */ typedef unsigned __int16 u_short;

/* 8643 */ typedef void *RPC_AUTHZ_HANDLE;

/* 8644 */ typedef _EXPLICIT_ACCESS_A *PEXPLICIT_ACCESS_A;

/* 8645 */ typedef void *HDEVNOTIFY;

/* 8646 */ typedef tagJOYCAPS2W *LPJOYCAPS2W;

/* 8647 */ typedef tagRemFORMATETC *LPREMFORMATETC;

/* 8648 */ typedef tagJOYCAPS2W *NPJOYCAPS2W;

/* 8649 */ typedef _WSANSClassInfoA *LPWSANSCLASSINFOA;

/* 8650 */ typedef tagPDEXW *LPPRINTDLGEXW;

/* 8651 */ typedef tagSERIALKEYSA *LPSERIALKEYS;

/* 8652 */ typedef SCARD_T1_REQUEST *PSCARD_T1_REQUEST;

/* 8653 */ typedef SCARD_T0_REQUEST *PSCARD_T0_REQUEST;

/* 8654 */ typedef _TITLE *LPTITLE;

/* 8655 */ typedef tagSTYLEBUFW *PSTYLEBUFW;

/* 8656 */ typedef tagPDA *LPPRINTDLGA;

/* 8657 */ typedef tagGUITHREADINFO *PGUITHREADINFO;

/* 8658 */ typedef void (__stdcall *PFN_CERT_STORE_PROV_CLOSE)(void *, unsigned int);

/* 8659 */ typedef unsigned __int16 *PBAD_TRACK_NUMBER;

/* 8660 */ typedef _SERVICE_STATUS *LPSERVICE_STATUS;

/* 8661 */ typedef tagIMEMENUITEMINFOA *NPIMEMENUITEMINFO;

/* 8662 */ typedef unsigned int _fsize_t;

/* 8663 */ typedef tagMCI_ANIM_STEP_PARMS *PMCI_ANIM_STEP_PARMS;

/* 8664 */ typedef tagIMEMENUITEMINFOA *LPIMEMENUITEMINFO;

/* 8665 */ typedef _PRINTPROCESSOR_INFO_1A *LPPRINTPROCESSOR_INFO_1;

/* 8666 */ typedef tagEMRPOLYLINE16 *PEMRPOLYLINETO16;

/* 8667 */ typedef tagMIXERCONTROLDETAILS_LISTTEXTA *LPMIXERCONTROLDETAILS_LISTTEXT;

/* 8668 */ typedef int mbstate_t;

/* 8669 */ typedef tagMULTIKEYHELPA *LPMULTIKEYHELPA;

/* 8670 */ typedef _PRINTER_DEFAULTSA *PPRINTER_DEFAULTS;

/* 8671 */ typedef IObjectWithSite *LPOBJECTWITHSITE;

/* 8672 */ typedef tagEMRSETDIBITSTODEVICE *PEMRSETDIBITSTODEVICE;

/* 8673 */ typedef tagCBT_CREATEWNDA *LPCBT_CREATEWND;

/* 8674 */ typedef tagPDW *LPPRINTDLGW;

/* 8675 */ typedef tagRPCOLEMESSAGE *PRPCOLEMESSAGE;

/* 8676 */ typedef _CERT_NAME_INFO *PCERT_NAME_INFO;

/* 8677 */ typedef tMIXERCONTROLDETAILS *LPMIXERCONTROLDETAILS;

/* 8678 */ typedef _DRIVER_INFO_1A *PDRIVER_INFO_1;

/* 8679 */ typedef tagVersionedStream *LPVERSIONEDSTREAM;

/* 8680 */ typedef int INT_PTR;

/* 8681 */ typedef IConnectionPoint *PCONNECTIONPOINT;

/* 8682 */ typedef tagMCI_ANIM_WINDOW_PARMSW *LPMCI_ANIM_WINDOW_PARMSW;

/* 8683 */ typedef tagMULTIKEYHELPW *LPMULTIKEYHELPW;

/* 8684 */ typedef _DEBUG_EVENT *LPDEBUG_EVENT;

/* 8685 */ typedef unsigned __int64 (__stdcall *PTRANSLATE_ADDRESS_ROUTINE64)(void *, void *, _tagADDRESS64 *);

/* 8686 */ typedef servent *LPSERVENT;

/* 8687 */ typedef _MIDL_STUB_DESC *PMIDL_STUB_DESC;

/* 8688 */ typedef _CERT_DH_PARAMETERS *PCERT_DH_PARAMETERS;

/* 8689 */ typedef _DRIVER_INFO_1A *LPDRIVER_INFO_1;

/* 8690 */ typedef _HISTORY *LPHISTORY;

/* 8691 */ typedef _DRIVER_INFO_2A *LPDRIVER_INFO_2;

/* 8692 */ typedef _COMSTAT *LPCOMSTAT;

/* 8693 */ typedef IEnumUnknown *LPENUMUNKNOWN;

/* 8694 */ typedef _DRIVER_INFO_3A *LPDRIVER_INFO_3;

/* 8695 */ typedef _DRIVER_INFO_4A *LPDRIVER_INFO_4;

/* 8696 */ typedef unsigned int ALG_ID;

/* 8697 */ typedef _DRIVER_INFO_5A *LPDRIVER_INFO_5;

/* 8698 */ typedef _DRIVER_INFO_6A *LPDRIVER_INFO_6;

/* 8699 */ typedef IOleParentUndoUnit *LPOLEPARENTUNDOUNIT;

/* 8700 */ typedef _CERT_PHYSICAL_STORE_INFO *PCERT_PHYSICAL_STORE_INFO;

/* 8701 */ typedef unsigned int DBCOPYFLAGS;

/* 8702 */ typedef _tagSTACKFRAME *LPSTACKFRAME;

/* 8703 */ typedef _DISPLAY_DEVICEW *LPDISPLAY_DEVICEW;

/* 8704 */ typedef $3FA64165D15A4602C29B2D9B0DA4A5E9 *NDR_SCONTEXT;

/* 8705 */ typedef _PRINTER_DEFAULTSW *LPPRINTER_DEFAULTSW;

/* 8706 */ typedef int (__stdcall *PENUMLOADED_MODULES_CALLBACK64)(char *, unsigned __int64, unsigned int, void *);

/* 8707 */ typedef tagNEWTEXTMETRICW *NPNEWTEXTMETRICW;

/* 8708 */ typedef void (__cdecl *terminate_handler)();

/* 8709 */ typedef tagMCI_ANIM_OPEN_PARMSA *LPMCI_ANIM_OPEN_PARMS;

/* 8710 */ typedef tagNEWTEXTMETRICW *LPNEWTEXTMETRICW;

/* 8711 */ typedef _CMSG_HASHED_ENCODE_INFO *PCMSG_HASHED_ENCODE_INFO;

/* 8712 */ typedef _INHERITED_FROMW *PINHERITED_FROMW;

/* 8713 */ typedef _MONITOR_INFO_1A *PMONITOR_INFO_1A;

/* 8714 */ typedef _PRINTER_DEFAULTSA *LPPRINTER_DEFAULTSA;

/* 8715 */ typedef HPALETTE__ *HPALETTE;

/* 8716 */ typedef int FXPT2DOT30;

/* 8717 */ typedef void *NDR_CCONTEXT;

/* 8718 */ typedef _DISPLAY_DEVICEA *LPDISPLAY_DEVICEA;

/* 8719 */ typedef unsigned int PROPID;

/* 8720 */ typedef const char *__exString;

/* 8721 */ typedef void *RPC_SS_THREAD_HANDLE;

/* 8722 */ typedef unsigned int DWORD32;

/* 8723 */ typedef _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS32;

/* 8724 */ typedef _DRIVER_INFO_1W *PDRIVER_INFO_1W;

/* 8725 */ typedef IOleInPlaceSite *LPOLEINPLACESITE;

/* 8726 */ typedef int (__stdcall *OLDFONTENUMPROCW)(tagLOGFONTW *, tagTEXTMETRICW *, unsigned int, int);

/* 8727 */ typedef tagPDA *LPPRINTDLG;

/* 8728 */ typedef _CERT_CHAIN *PCERT_CHAIN;

/* 8729 */ typedef _RE_USPCheckBilling_Login *LPRE_USPCheckBilling_Login;

/* 8730 */ typedef _GLYPHMETRICSFLOAT *PGLYPHMETRICSFLOAT;

/* 8731 */ typedef _CMSG_MAIL_LIST_RECIPIENT_INFO *PCMSG_MAIL_LIST_RECIPIENT_INFO;

/* 8732 */ typedef tagMIXERCONTROLDETAILS_LISTTEXTA *LPMIXERCONTROLDETAILS_LISTTEXTA;

/* 8733 */ typedef tagMULTIKEYHELPA *LPMULTIKEYHELP;

/* 8734 */ typedef unsigned int (__stdcall *LPFRHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 8735 */ typedef _userSTGMEDIUM *wireSTGMEDIUM;

/* 8736 */ typedef _MINIDUMP_MODULE_LIST *PMINIDUMP_MODULE_LIST;

/* 8737 */ typedef _ACTION_HEADER *PACTION_HEADER;

/* 8738 */ typedef HENHMETAFILE__ *HENHMETAFILE;

/* 8739 */ typedef unsigned int error_status_t;

/* 8740 */ typedef _DRIVER_INFO_1A *PDRIVER_INFO_1A;

/* 8741 */ typedef void *HCERTCHAINENGINE;

/* 8742 */ typedef _MONITOR_INFO_2A *PMONITOR_INFO_2A;

/* 8743 */ typedef MemberFindParty *LPMemberFindParty;

/* 8744 */ typedef tagEMRSELECTCLIPPATH *PEMRSETMAPMODE;

/* 8745 */ typedef tagEMRMODIFYWORLDTRANSFORM *PEMRMODIFYWORLDTRANSFORM;

/* 8746 */ typedef PktAted *LPPktAted;

/* 8747 */ typedef _CERT_BASIC_CONSTRAINTS_INFO *PCERT_BASIC_CONSTRAINTS_INFO;

/* 8748 */ typedef tMIXERCONTROLDETAILS_UNSIGNED *LPMIXERCONTROLDETAILS_UNSIGNED;

/* 8749 */ typedef tagMIXERCONTROLDETAILS_LISTTEXTW *LPMIXERCONTROLDETAILS_LISTTEXTW;

/* 8750 */ typedef _FORM_INFO_1W *LPFORM_INFO_1W;

/* 8751 */ typedef _LUID *PLUID;

/* 8752 */ typedef tagEMREXTSELECTCLIPRGN *PEMREXTSELECTCLIPRGN;

/* 8753 */ typedef HDESK__ *HDESK;

/* 8754 */ typedef PktCreateCamp *LPPktCreateCamp;

/* 8755 */ typedef _PROPSHEETPAGEA_V1 *LPCPROPSHEETPAGEA_V1;

/* 8756 */ typedef _RPC_CLIENT_INTERFACE *PRPC_CLIENT_INTERFACE;

/* 8757 */ typedef IPicture *LPPICTURE;

/* 8758 */ typedef SCARD_T0_REQUEST *LPSCARD_T0_REQUEST;

/* 8759 */ typedef _CERT_PAIR *PCERT_PAIR;

/* 8760 */ typedef tagMCI_ANIM_UPDATE_PARMS *PMCI_ANIM_UPDATE_PARMS;

/* 8761 */ typedef void (__stdcall *STUB_THUNK)(_MIDL_STUB_MESSAGE *);

/* 8762 */ typedef IBindProtocol *LPBINDPROTOCOL;

/* 8763 */ typedef SERVICE_STATUS_HANDLE__ *SERVICE_STATUS_HANDLE;

/* 8764 */ typedef _PRINTER_DEFAULTSA *LPPRINTER_DEFAULTS;

/* 8765 */ typedef IEnumSTATSTG *LPENUMSTATSTG;

/* 8766 */ typedef _IMAGE_RESOURCE_DIRECTORY *PIMAGE_RESOURCE_DIRECTORY;

/* 8767 */ typedef tagMONCBSTRUCT *PMONCBSTRUCT;

/* 8768 */ typedef _DISPLAY_DEVICEA *LPDISPLAY_DEVICE;

/* 8769 */ typedef void (__cdecl *_PMFN)();

/* 8770 */ typedef _PROPSHEETPAGEW_V1 *LPCPROPSHEETPAGEW_V1;

/* 8771 */ typedef _RECTL *LPCRECTL;

/* 8772 */ typedef _OVERLAPPED *LPWSAOVERLAPPED;

/* 8773 */ typedef _WSACMSGHDR *PWSACMSGHDR;

/* 8774 */ typedef tagMCI_OPEN_PARMSW *PMCI_OPEN_PARMSW;

/* 8775 */ typedef _DOC_INFO_3W *LPDOC_INFO_3W;

/* 8776 */ typedef _CRYPTOAPI_BLOB *PCRYPT_ATTR_BLOB;

/* 8777 */ typedef tagLOCALESIGNATURE *LPLOCALESIGNATURE;

/* 8778 */ typedef HDRVR__ *HDRVR;

/* 8779 */ typedef tagEMRGLSBOUNDEDRECORD *PEMRGLSBOUNDEDRECORD;

/* 8780 */ typedef _IO_COUNTERS *PIO_COUNTERS;

/* 8781 */ typedef _DOC_INFO_3A *LPDOC_INFO_3A;

/* 8782 */ typedef _SYSTEM_POWER_STATUS *LPSYSTEM_POWER_STATUS;

/* 8783 */ typedef tagNONCLIENTMETRICSA *PNONCLIENTMETRICSA;

/* 8784 */ typedef tagTTPOLYCURVE *LPTTPOLYCURVE;

/* 8785 */ typedef ICatRegister *LPCATREGISTER;

/* 8786 */ typedef MENUITEMTEMPLATEHEADER *PMENUITEMTEMPLATEHEADER;

/* 8787 */ typedef IOleAdviseHolder *LPOLEADVISEHOLDER;

/* 8788 */ typedef waveformat_tag *LPWAVEFORMAT;

/* 8789 */ typedef int OLE_YSIZE_PIXELS;

/* 8790 */ typedef int OLE_XSIZE_PIXELS;

/* 8791 */ typedef waveformat_tag *NPWAVEFORMAT;

/* 8792 */ typedef ChState *LPChState;

/* 8793 */ typedef IMAGE_LOAD_CONFIG_DIRECTORY32 *PIMAGE_LOAD_CONFIG_DIRECTORY;

/* 8794 */ typedef IEnumSTATPROPSETSTG *LPENUMSTATPROPSETSTG;

/* 8795 */ typedef IRunningObjectTable *LPRUNNINGOBJECTTABLE;

/* 8796 */ typedef _NOTIFYICONDATAA *PNOTIFYICONDATAA;

/* 8797 */ typedef IEnumMoniker *LPENUMMONIKER;

/* 8798 */ typedef ICancelMethodCalls *LPCANCELMETHODCALLS;

/* 8799 */ typedef block_state (__cdecl *compress_func)(internal_state *, int);

/* 8800 */ typedef tagMCI_VD_STEP_PARMS *PMCI_VD_STEP_PARMS;

/* 8801 */ typedef HRESULT (__stdcall *LPFNGETCLASSOBJECT)(_GUID *, _GUID *, void **);

/* 8802 */ typedef _LARGE_INTEGER *PLARGE_INTEGER;

/* 8803 */ typedef int (__stdcall *CALINFO_ENUMPROCEXA)(char *, unsigned int);

/* 8804 */ typedef unsigned __int64 RVA64;

/* 8805 */ typedef void __stdcall WAVECALLBACK(HDRVR__ *, unsigned int, unsigned int, unsigned int, unsigned int);

/* 8806 */ typedef HMIDISTRM__ **LPHMIDISTRM;

/* 8807 */ typedef int (__stdcall *CALINFO_ENUMPROCEXW)(unsigned __int16 *, unsigned int);

/* 8808 */ typedef unsigned int lzo_uint;

/* 8809 */ typedef int (__stdcall *GRAYSTRINGPROC)(HDC__ *, int, int);

/* 8810 */ typedef _MINIDUMP_THREAD_EX *PMINIDUMP_THREAD_EX;

/* 8811 */ typedef unsigned int SOCKET;

/* 8812 */ typedef _devicemodeA *PDEVMODE;

/* 8813 */ typedef _IMAGEHLP_DUPLICATE_SYMBOL *PIMAGEHLP_DUPLICATE_SYMBOL;

/* 8814 */ typedef void *RPC_IF_HANDLE;

/* 8815 */ typedef _IMAGE_OPTIONAL_HEADER64 *PIMAGE_OPTIONAL_HEADER64;

/* 8816 */ typedef tagMIXERCONTROLA *PMIXERCONTROL;

/* 8817 */ typedef unsigned int NLS_FUNCTION;

/* 8818 */ typedef _PSFEATURE_OUTPUT *PPSFEATURE_OUTPUT;

/* 8819 */ typedef tagCIEXYZ *LPCIEXYZ;

/* 8820 */ typedef HDDEDATA__ *(__stdcall *PFNCALLBACK)(unsigned int, unsigned int, HCONV__ *, HSZ__ *, HSZ__ *, HDDEDATA__ *, unsigned int, unsigned int);

/* 8821 */ typedef _DOC_INFO_3A *LPDOC_INFO_3;

/* 8822 */ typedef tagOBJECTDESCRIPTOR *PLINKSRCDESCRIPTOR;

/* 8823 */ typedef tagMCI_SAVE_PARMSA *PMCI_SAVE_PARMS;

/* 8824 */ typedef _PERF_OBJECT_TYPE *PPERF_OBJECT_TYPE;

/* 8825 */ typedef int (__stdcall *PFINDFILEINPATHCALLBACK)(char *, void *);

/* 8826 */ typedef HINSTANCE__ *HINSTANCE;

/* 8827 */ typedef _DISK_PERFORMANCE *PDISK_PERFORMANCE;

/* 8828 */ typedef tagRemSNB *wireSNB;

/* 8829 */ typedef tagHW_PROFILE_INFOA *LPHW_PROFILE_INFO;

/* 8830 */ typedef _RemotableHandle *wireHICON;

/* 8831 */ typedef _CERT_REGISTRY_STORE_ROAMING_PARA *PCERT_REGISTRY_STORE_ROAMING_PARA;

/* 8832 */ typedef _TAPE_WRITE_MARKS *PTAPE_WRITE_MARKS;

/* 8833 */ typedef _NETRESOURCEA *LPNETRESOURCEA;

/* 8834 */ typedef const char *LPCTSTR;

/* 8835 */ typedef _CMC_PEND_INFO *PCMC_PEND_INFO;

/* 8836 */ typedef _SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE;

/* 8837 */ typedef _devicemodeW *PDEVMODEW;

/* 8838 */ typedef int (__stdcall *PSYMBOLSERVEROPENPROC)();

/* 8839 */ typedef unsigned int u_int;

/* 8840 */ typedef tagWAVEOUTCAPSA *NPWAVEOUTCAPSA;

/* 8841 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_FIND_CTL)(void *, _CERT_STORE_PROV_FIND_INFO *, _CTL_CONTEXT *, unsigned int, void **, _CTL_CONTEXT **);

/* 8842 */ typedef PktBase *LPPktBase;

/* 8843 */ typedef tagAXESLISTA *PAXESLISTA;

/* 8844 */ typedef tWAVEFORMATEX *LPCWAVEFORMATEX;

/* 8845 */ typedef _QUERY_SERVICE_LOCK_STATUSW *LPQUERY_SERVICE_LOCK_STATUSW;

/* 8846 */ typedef unsigned int DBORDINAL;

/* 8847 */ typedef tagWAVEOUTCAPSA *LPWAVEOUTCAPSA;

/* 8848 */ typedef _userHBITMAP *wireHBITMAP;

/* 8849 */ typedef _PROPSHEETPAGEA_V3 *LPPROPSHEETPAGEA_LATEST;

/* 8850 */ typedef int (__stdcall *PSYMBOLSERVERPROC)(const char *, const char *, void *, unsigned int, unsigned int, char *);

/* 8851 */ typedef PktNewSiegeBroadCast *LPPktNewSiegeBroadCast;

/* 8852 */ typedef _JOB_INFO_2A *PJOB_INFO_2;

/* 8853 */ typedef tagEXTLOGFONTW *PEXTLOGFONTW;

/* 8854 */ typedef tagHELPWININFOA *LPHELPWININFOA;

/* 8855 */ typedef unsigned int HCRYPTKEY;

/* 8856 */ typedef _JOB_INFO_3 *PJOB_INFO_3;

/* 8857 */ typedef _MESSAGE_RESOURCE_DATA *PMESSAGE_RESOURCE_DATA;

/* 8858 */ typedef tagMCI_GETDEVCAPS_PARMS *PMCI_GETDEVCAPS_PARMS;

/* 8859 */ typedef _JOB_INFO_1A *PJOB_INFO_1;

/* 8860 */ typedef sockaddr_storage *PSOCKADDR_STORAGE;

/* 8861 */ typedef tagOBJECTDESCRIPTOR *LPLINKSRCDESCRIPTOR;

/* 8862 */ typedef tagKBDLLHOOKSTRUCT *LPKBDLLHOOKSTRUCT;

/* 8863 */ typedef _devicemodeA *PDEVMODEA;

/* 8864 */ typedef void *LPGGAUTH;

/* 8865 */ typedef tagIMEMENUITEMINFOW *LPIMEMENUITEMINFOW;

/* 8866 */ typedef tagEMRSELECTCLIPPATH *PEMRSETLAYOUT;

/* 8867 */ typedef tagIMEMENUITEMINFOW *NPIMEMENUITEMINFOW;

/* 8868 */ typedef IOleCache *LPOLECACHE;

/* 8869 */ typedef _PRINTER_DEFAULTSW *PPRINTER_DEFAULTSW;

/* 8870 */ typedef unsigned int APARTMENTID;

/* 8871 */ typedef tagACTCTX_SECTION_KEYED_DATA_2600 *PACTCTX_SECTION_KEYED_DATA_2600;

/* 8872 */ typedef int _Mbstatet;

/* 8873 */ typedef _ACTRL_ACCESS_ENTRYA *PACTRL_ACCESS_ENTRY;

/* 8874 */ typedef _IMAGE_IMPORT_BY_NAME *PIMAGE_IMPORT_BY_NAME;

/* 8875 */ typedef _STORAGE_DEVICE_NUMBER *PSTORAGE_DEVICE_NUMBER;

/* 8876 */ typedef tagMIDIOUTCAPS2A *PMIDIOUTCAPS2A;

/* 8877 */ typedef unsigned int ACCESS_MASK;

/* 8878 */ typedef tagMIDIINCAPSA *PMIDIINCAPSA;

/* 8879 */ typedef tagSTYLEBUFA *PSTYLEBUF;

/* 8880 */ typedef tagNONCLIENTMETRICSA *LPNONCLIENTMETRICSA;

/* 8881 */ typedef int __ehstate_t;

/* 8882 */ typedef unsigned __int16 PATCHARRAY[128];

/* 8883 */ typedef IOleCache2 *LPOLECACHE2;

/* 8884 */ typedef _DRIVER_INFO_6A *PDRIVER_INFO_6;

/* 8885 */ typedef _MIDL_STUB_MESSAGE *PMIDL_STUB_MESSAGE;

/* 8886 */ typedef _SHQUERYRBINFO *LPSHQUERYRBINFO;

/* 8887 */ typedef tagNONCLIENTMETRICSW *LPNONCLIENTMETRICSW;

/* 8888 */ typedef HWAVEOUT__ *HWAVEOUT;

/* 8889 */ typedef tagMCI_SAVE_PARMSA *LPMCI_SAVE_PARMS;

/* 8890 */ typedef _CMC_STATUS_INFO *PCMC_STATUS_INFO;

/* 8891 */ typedef _JOB_INFO_2A *LPJOB_INFO_2;

/* 8892 */ typedef int (__stdcall *DESKTOPENUMPROCW)(unsigned __int16 *, int);

/* 8893 */ typedef IMAGE_AUX_SYMBOL_TOKEN_DEF *PIMAGE_AUX_SYMBOL_TOKEN_DEF;

/* 8894 */ typedef _SLIST_HEADER *PSLIST_HEADER;

/* 8895 */ typedef int *PLONG32;

/* 8896 */ typedef _FILE_SEGMENT_ELEMENT *PFILE_SEGMENT_ELEMENT;

/* 8897 */ typedef _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA *PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA;

/* 8898 */ typedef unsigned int (__stdcall *YIELDPROC)(unsigned int, unsigned int);

/* 8899 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_FIND_CRL)(void *, _CERT_STORE_PROV_FIND_INFO *, _CRL_CONTEXT *, unsigned int, void **, _CRL_CONTEXT **);

/* 8900 */ typedef unsigned int ULONG32;

/* 8901 */ typedef tagVARIANT *LPVARIANTARG;

/* 8902 */ typedef unsigned __int16 ino_t;

/* 8903 */ typedef _PERF_DATA_BLOCK *PPERF_DATA_BLOCK;

/* 8904 */ typedef _TOKEN_OWNER *PTOKEN_OWNER;

/* 8905 */ typedef tagMCI_ANIM_OPEN_PARMSW *LPMCI_ANIM_OPEN_PARMSW;

/* 8906 */ typedef IPropertyStorage *LPPROPERTYSTORAGE;

/* 8907 */ typedef _STORAGE_HOTPLUG_INFO *PSTORAGE_HOTPLUG_INFO;

/* 8908 */ typedef const unsigned __int16 *PCWSTR;

/* 8909 */ typedef _CERT_RDN *PCERT_RDN;

/* 8910 */ typedef tagPIXELFORMATDESCRIPTOR *LPPIXELFORMATDESCRIPTOR;

/* 8911 */ typedef IOleUndoUnit *LPOLEUNDOUNIT;

/* 8912 */ typedef _DRIVER_INFO_6W *PDRIVER_INFO_6W;

/* 8913 */ typedef _RASTERIZER_STATUS *LPRASTERIZER_STATUS;

/* 8914 */ typedef tagCHOOSECOLORA *LPCHOOSECOLORA;

/* 8915 */ typedef IConnectionPointContainer *PCONNECTIONPOINTCONTAINER;

/* 8916 */ typedef _CRYPT_ATTRIBUTES *PCMSG_ATTR;

/* 8917 */ typedef unsigned int DBCOLUMNDESCFLAGS;

/* 8918 */ typedef unsigned __int16 COLOR16;

/* 8919 */ typedef _JOB_INFO_2W *LPJOB_INFO_2W;

/* 8920 */ typedef tagMCI_SAVE_PARMSW *LPMCI_SAVE_PARMSW;

/* 8921 */ typedef _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA *PCRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;

/* 8922 */ typedef tagNONCLIENTMETRICSA *LPNONCLIENTMETRICS;

/* 8923 */ typedef _CRL_ISSUING_DIST_POINT *PCRL_ISSUING_DIST_POINT;

/* 8924 */ typedef int (__stdcall *PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC)(_CRYPT_ALGORITHM_IDENTIFIER *, _CRYPTOAPI_BLOB *, char *, unsigned int *, void *);

/* 8925 */ typedef _ACE_HEADER *PACE_HEADER;

/* 8926 */ typedef _FORM_INFO_1A *LPFORM_INFO_1;

/* 8927 */ typedef _DRIVER_INFO_6A *PDRIVER_INFO_6A;

/* 8928 */ typedef const char *PCTSTR;

/* 8929 */ typedef tagABORTPATH *PEMRREALIZEPALETTE;

/* 8930 */ typedef int (__stdcall *PFN_CANCEL_ASYNC_RETRIEVAL_FUNC)(void *);

/* 8931 */ typedef tagMCI_SAVE_PARMSA *LPMCI_SAVE_PARMSA;

/* 8932 */ typedef _CERT_DSS_PARAMETERS *PCERT_DSS_PARAMETERS;

/* 8933 */ typedef _JOB_INFO_2A *LPJOB_INFO_2A;

/* 8934 */ typedef void *(__stdcall *PFUNCTION_TABLE_ACCESS_ROUTINE)(void *, unsigned int);

/* 8935 */ typedef _CRYPT_ALGORITHM_IDENTIFIER *PCRYPT_ALGORITHM_IDENTIFIER;

/* 8936 */ typedef tagCANDIDATEFORM *LPCANDIDATEFORM;

/* 8937 */ typedef unsigned int DBPARAMIO;

/* 8938 */ typedef _CERT_AUTHORITY_INFO_ACCESS *PCERT_AUTHORITY_INFO_ACCESS;

/* 8939 */ typedef val_context *PVALCONTEXT;

/* 8940 */ typedef tagCANDIDATEFORM *NPCANDIDATEFORM;

/* 8941 */ typedef tagOIFI *LPOLEINPLACEFRAMEINFO;

/* 8942 */ typedef _CTL_FIND_USAGE_PARA *PCTL_FIND_USAGE_PARA;

/* 8943 */ typedef tagMDINEXTMENU *LPMDINEXTMENU;

/* 8944 */ typedef char *RPC_BUFPTR;

/* 8945 */ typedef tagEMRSETVIEWPORTORGEX *PEMRSETVIEWPORTORGEX;

/* 8946 */ typedef _BIDI_DATA *PBIDI_DATA;

/* 8947 */ typedef SKILLSLOT *LPSKILLSLOT;

/* 8948 */ typedef _EXIT_PROCESS_DEBUG_INFO *LPEXIT_PROCESS_DEBUG_INFO;

/* 8949 */ typedef void (__cdecl *unexpected_handler)();

/* 8950 */ typedef PktSiegeBroadCast *LPPktSiegeBroadCast;

/* 8951 */ typedef tagTYPEATTR *LPTYPEATTR;

/* 8952 */ typedef IMAGE_COR20_HEADER *PIMAGE_COR20_HEADER;

/* 8953 */ typedef tagHARDWAREHOOKSTRUCT *LPHARDWAREHOOKSTRUCT;

/* 8954 */ typedef _CRYPTPROTECT_PROMPTSTRUCT *PCRYPTPROTECT_PROMPTSTRUCT;

/* 8955 */ typedef OPENCARDNAME_EXA *LPOPENCARDNAME_EXA;

/* 8956 */ typedef unsigned int GEOTYPE;

/* 8957 */ typedef void (__stdcall *LPOVERLAPPED_COMPLETION_ROUTINE)(unsigned int, unsigned int, _OVERLAPPED *);

/* 8958 */ typedef int (__stdcall *PROC)();

/* 8959 */ typedef _ICONINFO *PICONINFO;

/* 8960 */ typedef void *HMETAFILEPICT;

/* 8961 */ typedef _MEMORY_BASIC_INFORMATION64 *PMEMORY_BASIC_INFORMATION64;

/* 8962 */ typedef tagWNDCLASSEXA *PWNDCLASSEX;

/* 8963 */ typedef _CERT_REGISTRY_STORE_CLIENT_GPT_PARA *PCERT_REGISTRY_STORE_CLIENT_GPT_PARA;

/* 8964 */ typedef _BIN_RESULTS *PBIN_RESULTS;

/* 8965 */ typedef tagLOGBRUSH *PLOGBRUSH;

/* 8966 */ typedef _BAN *LPBAN;

/* 8967 */ typedef tagOLEVERB *LPOLEVERB;

/* 8968 */ typedef _DOC_INFO_2W *LPDOC_INFO_2W;

/* 8969 */ typedef unsigned __int16 **LPBSTR;

/* 8970 */ typedef _DOC_INFO_2A *LPDOC_INFO_2A;

/* 8971 */ typedef DLGITEMTEMPLATE *PDLGITEMTEMPLATE;

/* 8972 */ typedef tagMCI_SYSINFO_PARMSA *LPMCI_SYSINFO_PARMS;

/* 8973 */ typedef IEnumSTATDATA *LPENUMSTATDATA;

/* 8974 */ typedef _WIN32_STREAM_ID *LPWIN32_STREAM_ID;

/* 8975 */ typedef void __stdcall RPC_ADDRESS_CHANGE_FN(void *);

/* 8976 */ typedef _PERF_INSTANCE_DEFINITION *PPERF_INSTANCE_DEFINITION;

/* 8977 */ typedef _IMAGE_RESOURCE_DIRECTORY_STRING *PIMAGE_RESOURCE_DIRECTORY_STRING;

/* 8978 */ typedef _ACTRL_CONTROL_INFOW *PACTRL_CONTROL_INFOW;

/* 8979 */ typedef tagMEASUREITEMSTRUCT *LPMEASUREITEMSTRUCT;

/* 8980 */ typedef int (__stdcall *LPFNADDPROPSHEETPAGE)(_PSP *, int);

/* 8981 */ typedef tagNONCLIENTMETRICSA *PNONCLIENTMETRICS;

/* 8982 */ typedef _ENUM_SERVICE_STATUS_PROCESSW *LPENUM_SERVICE_STATUS_PROCESSW;

/* 8983 */ typedef unsigned int LGRPID;

/* 8984 */ typedef _CPS_URLS *PCPS_URLS;

/* 8985 */ typedef tagMIDIOUTCAPSW *LPMIDIOUTCAPSW;

/* 8986 */ typedef _SYSTEM_ALARM_CALLBACK_ACE *PSYSTEM_ALARM_CALLBACK_ACE;

/* 8987 */ typedef int (__stdcall *PFIND_EXE_FILE_CALLBACK)(void *, char *, void *);

/* 8988 */ typedef tagCOMBOBOXINFO *PCOMBOBOXINFO;

/* 8989 */ typedef tagMIDIOUTCAPSW *NPMIDIOUTCAPSW;

/* 8990 */ typedef int _I32;

/* 8991 */ typedef void (__cdecl *new_handler)();

/* 8992 */ typedef DLGTEMPLATE *LPCDLGTEMPLATE;

/* 8993 */ typedef HMIDIIN__ *HMIDIIN;

/* 8994 */ typedef unsigned __int16 *PWSTR;

/* 8995 */ typedef const char *LPCSTR;

/* 8996 */ typedef _TIME_ZONE_INFORMATION *LPTIME_ZONE_INFORMATION;

/* 8997 */ typedef tagLOGPALETTE *LPLOGPALETTE;

/* 8998 */ typedef _SID_IDENTIFIER_AUTHORITY *PSID_IDENTIFIER_AUTHORITY;

/* 8999 */ typedef unsigned __int16 CLIPFORMAT;

/* 9000 */ typedef tagLOGPALETTE *NPLOGPALETTE;

/* 9001 */ typedef int (__stdcall *ATLGETSTRINGTYPEEXW)(unsigned int, unsigned int, const unsigned __int16 *, int, unsigned __int16 *);

/* 9002 */ typedef _CMC_TAGGED_REQUEST *PCMC_TAGGED_REQUEST;

/* 9003 */ typedef _CERT_POLICY_MAPPING *PCERT_POLICY_MAPPING;

/* 9004 */ typedef _TAPE_CREATE_PARTITION *PTAPE_CREATE_PARTITION;

/* 9005 */ typedef int (__stdcall *PFN_CRYPT_ENUM_OID_INFO)(_CRYPT_OID_INFO *, void *);

/* 9006 */ typedef IHttpNegotiate *LPHTTPNEGOTIATE;

/* 9007 */ typedef tagEMRSETICMPROFILE *PEMRSETICMPROFILEW;

/* 9008 */ typedef tagEMRSELECTCLIPPATH *PEMRSETTEXTALIGN;

/* 9009 */ typedef int (__stdcall *LPFNADDPROPSHEETPAGES)(void *, int (__stdcall *)(_PSP *, int), int);

/* 9010 */ typedef tagDIBSECTION *PDIBSECTION;

/* 9011 */ typedef tagMIXERCONTROLA *PMIXERCONTROLA;

/* 9012 */ typedef IEnumFORMATETC *LPENUMFORMATETC;

/* 9013 */ typedef IOleInPlaceUIWindow *LPOLEINPLACEUIWINDOW;

/* 9014 */ typedef DLGITEMTEMPLATE *PDLGITEMTEMPLATEW;

/* 9015 */ typedef int LONG_PTR;

/* 9016 */ typedef QUICKSLOT *LPQUICKSLOT;

/* 9017 */ typedef tagDESIGNVECTOR *LPDESIGNVECTOR;

/* 9018 */ typedef _DISK_EXTENT *PDISK_EXTENT;

/* 9019 */ typedef SYSTEM_BATTERY_STATE *PSYSTEM_BATTERY_STATE;

/* 9020 */ typedef unsigned int (__stdcall *PTRANSLATE_ADDRESS_ROUTINE)(void *, void *, _tagADDRESS *);

/* 9021 */ typedef _DOC_INFO_2A *LPDOC_INFO_2;

/* 9022 */ typedef DLGITEMTEMPLATE *PDLGITEMTEMPLATEA;

/* 9023 */ typedef const char *PCXSTR;

/* 9024 */ typedef _CERT_TRUST_LIST_INFO *PCERT_TRUST_LIST_INFO;

/* 9025 */ typedef int (__stdcall *PVECTORED_EXCEPTION_HANDLER)(_EXCEPTION_POINTERS *);

/* 9026 */ typedef tagHW_PROFILE_INFOA *LPHW_PROFILE_INFOA;

/* 9027 */ typedef _CHANGER_MOVE_MEDIUM *PCHANGER_MOVE_MEDIUM;

/* 9028 */ typedef _EXIT_THREAD_DEBUG_INFO *LPEXIT_THREAD_DEBUG_INFO;

/* 9029 */ typedef tagBITMAPCOREHEADER *PBITMAPCOREHEADER;

/* 9030 */ typedef int (__stdcall *LPFN_TRANSMITFILE)(unsigned int, void *, unsigned int, unsigned int, _OVERLAPPED *, _TRANSMIT_FILE_BUFFERS *, unsigned int);

/* 9031 */ typedef tagACTCTXA *PACTCTX;

/* 9032 */ typedef unsigned int (__stdcall *LPPAGESETUPHOOK)(HWND__ *, unsigned int, unsigned int, int);

/* 9033 */ typedef _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE *PCERT_POLICY_QUALIFIER_NOTICE_REFERENCE;

/* 9034 */ typedef HDDEDATA__ *__stdcall FNCALLBACK(unsigned int, unsigned int, HCONV__ *, HSZ__ *, HSZ__ *, HDDEDATA__ *, unsigned int, unsigned int);

/* 9035 */ typedef const char *PFORMAT_STRING;

/* 9036 */ typedef tagWAVEOUTCAPSA *NPWAVEOUTCAPS;

/* 9037 */ typedef tagAXESLISTA *PAXESLIST;

/* 9038 */ typedef tagWAVEOUTCAPSA *LPWAVEOUTCAPS;

/* 9039 */ typedef tagPALETTEENTRY *PPALETTEENTRY;

/* 9040 */ typedef _CHANGER_EXCHANGE_MEDIUM *PCHANGER_EXCHANGE_MEDIUM;

/* 9041 */ typedef _NETRESOURCEA *LPNETRESOURCE;

/* 9042 */ typedef DLGTEMPLATE *LPCDLGTEMPLATEA;

/* 9043 */ typedef tagEMRPOLYPOLYLINE16 *PEMRPOLYPOLYGON16;

/* 9044 */ typedef tagHARDWAREHOOKSTRUCT *PHARDWAREHOOKSTRUCT;

/* 9045 */ typedef HWAVE__ *HWAVE;

/* 9046 */ typedef _SINGLE_LIST_ENTRY *PSINGLE_LIST_ENTRY;

/* 9047 */ typedef _CRYPTOAPI_BLOB *PCERT_RDN_VALUE_BLOB;

/* 9048 */ typedef tagMCI_BREAK_PARMS *PMCI_BREAK_PARMS;

/* 9049 */ typedef _TAPE_GET_DRIVE_PARAMETERS *PTAPE_GET_DRIVE_PARAMETERS;

/* 9050 */ typedef tagHELPWININFOA *LPHELPWININFO;

/* 9051 */ typedef _numberfmtA *LPNUMBERFMT;

/* 9052 */ typedef unsigned int (__stdcall *LPPROGRESS_ROUTINE)(_LARGE_INTEGER, _LARGE_INTEGER, _LARGE_INTEGER, _LARGE_INTEGER, unsigned int, unsigned int, void *, void *, void *);

/* 9053 */ typedef _MOUSE_EVENT_RECORD *PMOUSE_EVENT_RECORD;

/* 9054 */ typedef _EXPLICIT_ACCESS_W *PEXPLICIT_ACCESS_W;

/* 9055 */ typedef int intptr_t;

/* 9056 */ typedef tagRECT *LPCRECT;

/* 9057 */ typedef _VERIFY_INFORMATION *PVERIFY_INFORMATION;

/* 9058 */ typedef void (__stdcall *PFN_CRYPT_FREE)(void *);

/* 9059 */ typedef IBindCtx *LPBINDCTX;

/* 9060 */ typedef HRESULT (__stdcall *DLLGETVERSIONPROC)(_DLLVERSIONINFO *);

/* 9061 */ typedef DLGTEMPLATE *LPCDLGTEMPLATEW;

/* 9062 */ typedef void *HANDLE;

/* 9063 */ typedef _CERT_RDN_ATTR *PCERT_RDN_ATTR;

/* 9064 */ typedef tagMIDIOUTCAPS2A *PMIDIOUTCAPS2;

/* 9065 */ typedef _CERT_AUTHORITY_KEY_ID_INFO *PCERT_AUTHORITY_KEY_ID_INFO;

/* 9066 */ typedef int DB_LRESERVE;

/* 9067 */ typedef _CMSG_ENVELOPED_ENCODE_INFO *PCMSG_ENVELOPED_ENCODE_INFO;

/* 9068 */ typedef tagSTYLEBUFA *PSTYLEBUFA;

/* 9069 */ typedef int (__stdcall *WNDPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 9070 */ typedef _WSAMSG *LPWSAMSG;

/* 9071 */ typedef void (__stdcall *LPWAVECALLBACK)(HDRVR__ *, unsigned int, unsigned int, unsigned int, unsigned int);

/* 9072 */ typedef _PRINTER_NOTIFY_INFO_DATA *LPPRINTER_NOTIFY_INFO_DATA;

/* 9073 */ typedef _BLENDFUNCTION *PBLENDFUNCTION;

/* 9074 */ typedef _IMAGE_FILE_HEADER *PIMAGE_FILE_HEADER;

/* 9075 */ typedef _MODEMSETTINGS *LPMODEMSETTINGS;

/* 9076 */ typedef _ACTRL_OVERLAPPED *PACTRL_OVERLAPPED;

/* 9077 */ typedef tagACTCTX_SECTION_KEYED_DATA_2600 *PCACTCTX_SECTION_KEYED_DATA_2600;

/* 9078 */ typedef _userHENHMETAFILE *wireHENHMETAFILE;

/* 9079 */ typedef tagMCI_ANIM_WINDOW_PARMSA *LPMCI_ANIM_WINDOW_PARMSA;

/* 9080 */ typedef PktCampCmd *LPPktCampCmd;

/* 9081 */ typedef tagMIDIOUTCAPSA *PMIDIOUTCAPS;

/* 9082 */ typedef unsigned int DB_DWRESERVE;

/* 9083 */ typedef _BIDI_REQUEST_CONTAINER *PBIDI_REQUEST_CONTAINER;

/* 9084 */ typedef _BIDI_RESPONSE_DATA *LPBIDI_RESPONSE_DATA;

/* 9085 */ typedef HRESULT (__stdcall *LPFNACCESSIBLEOBJECTFROMPOINT)(tagPOINT, IAccessible **, tagVARIANT *);

/* 9086 */ typedef tagPARAMDESCEX *LPPARAMDESCEX;

/* 9087 */ typedef _FLAGGED_WORD_BLOB *UP_FLAGGED_WORD_BLOB;

/* 9088 */ typedef _JOB_INFO_3 *LPJOB_INFO_3;

/* 9089 */ typedef _NDR_CORRELATION_INFO *PNDR_CORRELATION_INFO;

/* 9090 */ typedef tagMCI_VD_PLAY_PARMS *PMCI_VD_PLAY_PARMS;

/* 9091 */ typedef unsigned __int16 *PSECURITY_DESCRIPTOR_CONTROL;

/* 9092 */ typedef void (__stdcall *PFN_CMSG_FREE)(void *);

/* 9093 */ typedef tagEMRSTRETCHBLT *PEMRSTRETCHBLT;

/* 9094 */ typedef _GUID *LPGUID;

/* 9095 */ typedef _ULARGE_INTEGER *PULARGE_INTEGER;

/* 9096 */ typedef const char *PCUTSTR;

/* 9097 */ typedef sockaddr_storage *LPSOCKADDR_STORAGE;

/* 9098 */ typedef _CERT_AUTHORITY_KEY_ID2_INFO *PCERT_AUTHORITY_KEY_ID2_INFO;

/* 9099 */ typedef PartyFindMember *LPPartyFindMember;

/* 9100 */ typedef _cpinfoexA *LPCPINFOEXA;

/* 9101 */ typedef unsigned __int16 *LPWCH;

/* 9102 */ typedef tagNEWTEXTMETRICA *LPNEWTEXTMETRICA;

/* 9103 */ typedef _MINIDUMP_MODULE *PMINIDUMP_MODULE;

/* 9104 */ typedef unsigned __int16 *LPUWSTR;

/* 9105 */ typedef tagACTCTXA *PCACTCTX;

/* 9106 */ typedef unsigned __int16 PRINTEROP_FLAGS;

/* 9107 */ typedef void *HCRYPTOIDFUNCSET;

/* 9108 */ typedef tagNEWTEXTMETRICA *NPNEWTEXTMETRICA;

/* 9109 */ typedef _CRYPT_TIME_STAMP_REQUEST_INFO *PCRYPT_TIME_STAMP_REQUEST_INFO;

/* 9110 */ typedef tagDELETEITEMSTRUCT *LPDELETEITEMSTRUCT;

/* 9111 */ typedef _INHERITED_FROMA *PINHERITED_FROMA;

/* 9112 */ typedef _MONITOR_INFO_1W *PMONITOR_INFO_1W;

/* 9113 */ typedef _cpinfoexW *LPCPINFOEXW;

/* 9114 */ typedef unsigned int DBREASON;

/* 9115 */ typedef tagEMRFILLPATH *PEMRSTROKEPATH;

/* 9116 */ typedef _CERT_STORE_PROV_FIND_INFO *PCCERT_STORE_PROV_FIND_INFO;

/* 9117 */ typedef _CERT_CHAIN_POLICY_STATUS *PCERT_CHAIN_POLICY_STATUS;

/* 9118 */ typedef tagPICTDESC *LPPICTDESC;

/* 9119 */ typedef tagMIDIOUTCAPSW *PMIDIOUTCAPSW;

/* 9120 */ typedef int (__stdcall *OLDFONTENUMPROCA)(tagLOGFONTA *, tagTEXTMETRICA *, unsigned int, int);

/* 9121 */ typedef _IMAGE_CE_RUNTIME_FUNCTION_ENTRY *PIMAGE_CE_RUNTIME_FUNCTION_ENTRY;

/* 9122 */ typedef unsigned int DBPROPFLAGS;

/* 9123 */ typedef _TAPE_WMI_OPERATIONS *PTAPE_WMI_OPERATIONS;

/* 9124 */ typedef _IMAGE_RELOCATION *PIMAGE_RELOCATION;

/* 9125 */ typedef _NT_TIB32 *PNT_TIB32;

/* 9126 */ typedef tagCHOOSECOLORA *LPCHOOSECOLOR;

/* 9127 */ typedef _CHANGER_SEND_VOLUME_TAG_INFORMATION *PCHANGER_SEND_VOLUME_TAG_INFORMATION;

/* 9128 */ typedef tagDROPSTRUCT *PDROPSTRUCT;

/* 9129 */ typedef ILockBytes *LPLOCKBYTES;

/* 9130 */ typedef char *LPTCH;

/* 9131 */ typedef _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA *PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA;

/* 9132 */ typedef _MONITOR_INFO_2W *PMONITOR_INFO_2W;

/* 9133 */ typedef tagMIDIOUTCAPSA *PMIDIOUTCAPSA;

/* 9134 */ typedef IAccessible *LPACCESSIBLE;

/* 9135 */ typedef IAdviseSinkEx *LPADVISESINKEX;

/* 9136 */ typedef unsigned int DBPROPSTATUS;

/* 9137 */ typedef tagENUMLOGFONTEXA *LPENUMLOGFONTEX;

/* 9138 */ typedef int (__stdcall *PCRYPT_DECRYPT_PRIVATE_KEY_FUNC)(_CRYPT_ALGORITHM_IDENTIFIER, _CRYPTOAPI_BLOB, char *, unsigned int *, void *);

/* 9139 */ typedef _OVERLAPPED *LPOVERLAPPED;

/* 9140 */ typedef _FORM_INFO_1A *LPFORM_INFO_1A;

/* 9141 */ typedef tagMONMSGSTRUCT *PMONMSGSTRUCT;

/* 9142 */ typedef _CERT_KEY_ATTRIBUTES_INFO *PCERT_KEY_ATTRIBUTES_INFO;

/* 9143 */ typedef tagRECT *PRECT;

/* 9144 */ typedef PktRsAreaInfoAck *LPPktRsAreaInfoAck;

/* 9145 */ typedef tagACTCTXW *PCACTCTXW;

/* 9146 */ typedef _JOBOBJECT_ASSOCIATE_COMPLETION_PORT *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT;

/* 9147 */ typedef int streamoff;

/* 9148 */ typedef tagMCI_PLAY_PARMS *LPMCI_PLAY_PARMS;

/* 9149 */ typedef HWAVEIN__ **LPHWAVEIN;

/* 9150 */ typedef _cpinfoexA *LPCPINFOEX;

/* 9151 */ typedef int (__stdcall *PFN_CERT_STORE_PROV_READ_CERT)(void *, _CERT_CONTEXT *, unsigned int, _CERT_CONTEXT **);

/* 9152 */ typedef _MINIDUMP_INCLUDE_THREAD_CALLBACK *PMINIDUMP_INCLUDE_THREAD_CALLBACK;

/* 9153 */ typedef OPENCARDNAME_EXA *LPOPENCARDNAME_EX;

/* 9154 */ typedef tagACTCTXA *PCACTCTXA;

/* 9155 */ typedef _CERT_ALT_NAME_ENTRY *PCERT_ALT_NAME_ENTRY;

/* 9156 */ typedef _NLA_CONNECTIVITY_TYPE *PNLA_CONNECTIVITY_TYPE;

/* 9157 */ typedef int clock_t;

/* 9158 */ typedef tagMONITORINFOEXA *LPMONITORINFOEX;

/* 9159 */ typedef _CRYPTOAPI_BLOB *PCRYPT_INTEGER_BLOB;

/* 9160 */ typedef _userHPALETTE *wireHPALETTE;

/* 9161 */ typedef _CRYPT_ASYNC_RETRIEVAL_COMPLETION *PCRYPT_ASYNC_RETRIEVAL_COMPLETION;

/* 9162 */ typedef _PATHNAME_BUFFER *PPATHNAME_BUFFER;

/* 9163 */ typedef _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA *PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA;

/* 9164 */ typedef unsigned int (__stdcall *LPFNDEVCAPS)(char *, char *, unsigned int, char *, _devicemodeA *);

/* 9165 */ typedef unsigned int _Vbase;

/* 9166 */ typedef _DOC_INFO_1W *LPDOC_INFO_1W;

/* 9167 */ typedef _DRAWPATRECT *PDRAWPATRECT;

/* 9168 */ typedef tagCONVCONTEXT *PCONVCONTEXT;

/* 9169 */ typedef _GRADIENT_TRIANGLE *LPGRADIENT_TRIANGLE;

/* 9170 */ typedef int (__stdcall *UILANGUAGE_ENUMPROCW)(unsigned __int16 *, int);

/* 9171 */ typedef int (__stdcall *REGISTERWORDENUMPROCA)(const char *, unsigned int, const char *, void *);

/* 9172 */ typedef tagSCROLLINFO *LPCSCROLLINFO;

/* 9173 */ typedef IMAGE_LOAD_CONFIG_DIRECTORY32 *PIMAGE_LOAD_CONFIG_DIRECTORY32;

/* 9174 */ typedef _PROCESS_HEAP_ENTRY *LPPROCESS_HEAP_ENTRY;

/* 9175 */ typedef _DRIVER_INFO_5W *LPDRIVER_INFO_5W;

/* 9176 */ typedef _DOC_INFO_1A *LPDOC_INFO_1A;

/* 9177 */ typedef long double _FP64;

/* 9178 */ typedef tagLOGBRUSH32 *PLOGBRUSH32;

/* 9179 */ typedef tagMETARECORD *PMETARECORD;

/* 9180 */ typedef unsigned int (__stdcall *LPOCNCONNPROCA)(unsigned int, char *, char *, void *);

/* 9181 */ typedef tagEMRPOLYDRAW16 *PEMRPOLYDRAW16;

/* 9182 */ typedef struct _GG_AUTH_PROTOCOL *PGG_AUTH_PROTOCOL;

/* 9183 */ typedef tWAVEFORMATEX *PWAVEFORMATEX;

/* 9184 */ typedef _SYSTEM_POWER_POLICY *PSYSTEM_POWER_POLICY;

/* 9185 */ typedef PeaceModeInfo *LPPeaceModeInfo;

/* 9186 */ typedef IDataObject *LPDATAOBJECT;

/* 9187 */ typedef tagEMRSCALEVIEWPORTEXTEX *PEMRSCALEVIEWPORTEXTEX;

/* 9188 */ typedef unsigned int HCRYPTPROV;

/* 9189 */ typedef int (__stdcall *REGISTERWORDENUMPROCW)(const unsigned __int16 *, unsigned int, const unsigned __int16 *, void *);

/* 9190 */ typedef _wireVARIANT *wireVARIANT;

/* 9191 */ typedef int (__stdcall *ENUMRESTYPEPROCW)(HINSTANCE__ *, unsigned __int16 *, int);

/* 9192 */ typedef unsigned int DBUPDELRULE;

/* 9193 */ typedef void **PHCRYPTASYNC;

/* 9194 */ typedef hostent *PHOSTENT;

/* 9195 */ typedef tagJOYCAPSW *NPJOYCAPSW;

/* 9196 */ typedef tagJOYCAPSW *LPJOYCAPSW;

/* 9197 */ typedef _SID *PISID;

/* 9198 */ typedef _CHAR_INFOEX *LPCHAR_INFOEX;

/* 9199 */ typedef AtType *LPAtType;

/* 9200 */ typedef unsigned int lzo_uint32;

/* 9201 */ typedef tagSCROLLINFO *LPSCROLLINFO;

/* 9202 */ typedef unsigned int *PINHERIT_FLAGS;

/* 9203 */ typedef SC_HANDLE__ *SC_HANDLE;

/* 9204 */ typedef _DRIVER_INFO_4W *LPDRIVER_INFO_4W;

/* 9205 */ typedef char *PTSTR;

/* 9206 */ typedef QOS_OBJECT_HDR *LPQOS_OBJECT_HDR;

/* 9207 */ typedef _IMAGEHLP_SYMBOL *PIMAGEHLP_SYMBOL;

/* 9208 */ typedef tagMCI_OVLY_RECT_PARMS *LPMCI_OVLY_RECT_PARMS;

/* 9209 */ typedef _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE;

/* 9210 */ typedef unsigned __int16 *(__stdcall *ATLCHARUPPERW)(unsigned __int16 *);

/* 9211 */ typedef _OFNOTIFYA *LPOFNOTIFY;

/* 9212 */ typedef _GUID *__rcGUID_t;

/* 9213 */ typedef HRSRC__ *HRSRC;

/* 9214 */ typedef tagCANDIDATEFORM *PCANDIDATEFORM;

/* 9215 */ typedef _devicemodeW *LPDEVMODEW;

/* 9216 */ typedef int (__stdcall *PSYMBOLSERVERSETOPTIONSPROC)(unsigned int, unsigned __int64);

/* 9217 */ typedef _devicemodeW *NPDEVMODEW;

/* 9218 */ typedef PktRsAreaInfo *LPPktRsAreaInfo;

/* 9219 */ typedef char *PSECURITY_CONTEXT_TRACKING_MODE;

/* 9220 */ typedef _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA *PAUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;

/* 9221 */ typedef _CERT_CHAIN_CONTEXT *PCCERT_CHAIN_CONTEXT;

/* 9222 */ typedef void *HOLEMENU;

/* 9223 */ typedef int (__stdcall *ENUMRESLANGPROCA)(HINSTANCE__ *, const char *, const char *, unsigned __int16, int);

/* 9224 */ typedef tagMENUBARINFO *PMENUBARINFO;

/* 9225 */ typedef int OLE_YSIZE_HIMETRIC;

/* 9226 */ typedef int OLE_XSIZE_HIMETRIC;

/* 9227 */ typedef _DOC_INFO_1A *LPDOC_INFO_1;

/* 9228 */ typedef _ABC *PABC;

/* 9229 */ typedef int (__stdcall *PDBGHELP_CREATE_USER_DUMP_CALLBACK)(unsigned int, void **, unsigned int *, void *);

/* 9230 */ typedef tagMONHSZSTRUCTA *PMONHSZSTRUCT;

/* 9231 */ typedef tagCOPYDATASTRUCT *PCOPYDATASTRUCT;

/* 9232 */ typedef tagMONERRSTRUCT *PMONERRSTRUCT;

/* 9233 */ typedef _OFNOTIFYW *LPOFNOTIFYW;

/* 9234 */ typedef _EH3_EXCEPTION_REGISTRATION *PEH3_EXCEPTION_REGISTRATION;

/* 9235 */ typedef tagEMRALPHABLEND *PEMRALPHABLEND;

/* 9236 */ typedef tagMSAAMENUINFO *LPMSAAMENUINFO;

/* 9237 */ typedef _CHANGER_ELEMENT_STATUS *PCHANGER_ELEMENT_STATUS;

/* 9238 */ typedef CharacterDBData *LPCharacterDBData;

/* 9239 */ typedef _TRANSMIT_FILE_BUFFERS *LPTRANSMIT_FILE_BUFFERS;

/* 9240 */ typedef _IMAGE_ROM_OPTIONAL_HEADER *PIMAGE_ROM_OPTIONAL_HEADER;

/* 9241 */ typedef _ABC *LPABC;

/* 9242 */ typedef _DRIVER_INFO_6W *LPDRIVER_INFO_6W;

/* 9243 */ typedef _MIDL_SERVER_INFO_ *PMIDL_SERVER_INFO;

/* 9244 */ typedef char *PUINT8;

/* 9245 */ typedef unsigned __int16 wctype_t;

/* 9246 */ typedef _ABC *NPABC;

/* 9247 */ typedef _SECURITY_DESCRIPTOR *PISECURITY_DESCRIPTOR;

/* 9248 */ typedef _ITEMIDLIST *LPITEMIDLIST;

/* 9249 */ typedef _NLA_BLOB_DATA_TYPE *PNLA_BLOB_DATA_TYPE;

/* 9250 */ typedef void *HCERTSTORE;

/* 9251 */ typedef _OFNOTIFYA *LPOFNOTIFYA;

/* 9252 */ typedef void (__stdcall *RTL_VERIFIER_DLL_LOAD_CALLBACK)(unsigned __int16 *, void *, unsigned int, void *);

/* 9253 */ typedef tagMOUSEMOVEPOINT *LPMOUSEMOVEPOINT;

/* 9254 */ typedef OPENCARD_SEARCH_CRITERIAW *POPENCARD_SEARCH_CRITERIAW;

/* 9255 */ typedef tagMCI_WAVE_OPEN_PARMSA *LPMCI_WAVE_OPEN_PARMS;

/* 9256 */ typedef _DWORD_BLOB *UP_DWORD_BLOB;

/* 9257 */ typedef int OLE_XPOS_HIMETRIC;

/* 9258 */ typedef int OLE_YPOS_HIMETRIC;

/* 9259 */ typedef HRESULT (__cdecl *_ATL_PERFUNREGFUNC)();

/* 9260 */ typedef int *PSSIZE_T;

/* 9261 */ typedef _MMIOINFO *LPCMMIOINFO;

/* 9262 */ typedef _IMAGE_BOUND_FORWARDER_REF *PIMAGE_BOUND_FORWARDER_REF;

/* 9263 */ typedef unsigned int (__stdcall *PFNGETPROFILEPATHA)(const char *, char *, unsigned int);

/* 9264 */ typedef _DRIVER_INFO_1W *LPDRIVER_INFO_1W;

/* 9265 */ typedef tagMCI_OVLY_WINDOW_PARMSA *PMCI_OVLY_WINDOW_PARMSA;

/* 9266 */ typedef int (__stdcall *PFIND_DEBUG_FILE_CALLBACK)(void *, char *, void *);

/* 9267 */ typedef _OFNOTIFYEXW *LPOFNOTIFYEXW;

/* 9268 */ typedef IInternetBindInfo *LPIINTERNETBINDINFO;

/* 9269 */ typedef _DRIVER_INFO_4A *PDRIVER_INFO_4;

/* 9270 */ typedef tagBITMAPFILEHEADER *LPBITMAPFILEHEADER;

/* 9271 */ typedef _KEY_TYPE_SUBTYPE *PKEY_TYPE_SUBTYPE;

/* 9272 */ typedef _OFNOTIFYEXA *LPOFNOTIFYEXA;

/* 9273 */ typedef _CMSG_KEY_TRANS_RECIPIENT_INFO *PCMSG_KEY_TRANS_RECIPIENT_INFO;

/* 9274 */ typedef unsigned int POINTER_64_INT;

/* 9275 */ typedef tagREGISTERWORDW *PREGISTERWORDW;

/* 9276 */ typedef tagMCI_OVLY_WINDOW_PARMSW *PMCI_OVLY_WINDOW_PARMSW;

/* 9277 */ typedef _MINIDUMP_UNLOADED_MODULE_LIST *PMINIDUMP_UNLOADED_MODULE_LIST;

/* 9278 */ typedef _TAPE_ERASE *PTAPE_ERASE;

/* 9279 */ typedef _PRINTPROCESSOR_INFO_1W *LPPRINTPROCESSOR_INFO_1W;

/* 9280 */ typedef tagWNDCLASSW *PWNDCLASSW;

/* 9281 */ typedef IDropTarget *LPDROPTARGET;

/* 9282 */ typedef tagDRAWITEMSTRUCT *LPDRAWITEMSTRUCT;

/* 9283 */ typedef unsigned int HREFTYPE;

/* 9284 */ typedef _FLAGGED_BYTE_BLOB *UP_FLAGGED_BYTE_BLOB;

/* 9285 */ typedef tagMOUSEINPUT *LPMOUSEINPUT;

/* 9286 */ typedef void *PSECURITY_DESCRIPTOR;

/* 9287 */ typedef const unsigned __int16 *PCUWSTR;

/* 9288 */ typedef tagAUXCAPS2A *PAUXCAPS2A;

/* 9289 */ typedef void *HLOCAL;

/* 9290 */ typedef HKEY__ *HKEY;

/* 9291 */ typedef const unsigned __int16 *PCWCH;

/* 9292 */ typedef tagMCI_ANIM_RECT_PARMS *PMCI_ANIM_RECT_PARMS;

/* 9293 */ typedef tagCONNECTDATA *LPCONNECTDATA;

/* 9294 */ typedef tagMCI_SET_PARMS *PMCI_SET_PARMS;

/* 9295 */ typedef _CONSOLE_SELECTION_INFO *PCONSOLE_SELECTION_INFO;

/* 9296 */ typedef char *LPUTSTR;

/* 9297 */ typedef int (__stdcall *PROPENUMPROC)(HWND__ *, const char *, void *);

/* 9298 */ typedef _DISPLAY_DEVICEA *PDISPLAY_DEVICE;

/* 9299 */ typedef tagENUMTEXTMETRICW *PENUMTEXTMETRICW;

/* 9300 */ typedef tagGLYPHSET *LPGLYPHSET;

/* 9301 */ typedef PktSummon *LPPktSummon;

/* 9302 */ typedef _SERVICE_TABLE_ENTRYA *LPSERVICE_TABLE_ENTRY;

/* 9303 */ typedef unsigned __int64 DWORD64;

/* 9304 */ typedef _IMAGE_NT_HEADERS64 *PIMAGE_NT_HEADERS64;

/* 9305 */ typedef tagACTCTX_SECTION_KEYED_DATA *PCACTCTX_SECTION_KEYED_DATA;

/* 9306 */ typedef RylServerInfo *LPRylServerInfo;

/* 9307 */ typedef tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA *PCACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;

/* 9308 */ typedef int *PLONG_PTR;

/* 9309 */ typedef _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION *PCACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

/* 9310 */ typedef _PSINJECTDATA *PPSINJECTDATA;

/* 9311 */ typedef _SERVICE_FAILURE_ACTIONSA *LPSERVICE_FAILURE_ACTIONSA;

/* 9312 */ typedef unsigned int ULONG_PTR;

/* 9313 */ typedef tagALTTABINFO *PALTTABINFO;

/* 9314 */ typedef tagWINDOWINFO *PWINDOWINFO;

/* 9315 */ typedef unsigned int MMRESULT;

/* 9316 */ typedef tagEVENTMSG *NPEVENTMSGMSG;

/* 9317 */ typedef _DRIVER_INFO_4W *PDRIVER_INFO_4W;

/* 9318 */ typedef tagEVENTMSG *LPEVENTMSGMSG;

/* 9319 */ typedef HWND__ *HWND;

/* 9320 */ typedef _SHNAMEMAPPINGA *LPSHNAMEMAPPING;

/* 9321 */ typedef PktStealthInfo *LPPktStealthInfo;

/* 9322 */ typedef _DRIVER_INFO_3W *LPDRIVER_INFO_3W;

/* 9323 */ typedef int _Once_t;

/* 9324 */ typedef tagINTERFACEINFO *LPINTERFACEINFO;

/* 9325 */ typedef tagMCI_OVLY_WINDOW_PARMSA *PMCI_OVLY_WINDOW_PARMS;

/* 9326 */ typedef void *I_RPC_HANDLE;

/* 9327 */ typedef tagSTGMEDIUM *LPSTGMEDIUM;

/* 9328 */ typedef _DISK_HISTOGRAM *PDISK_HISTOGRAM;

/* 9329 */ typedef IOleWindow *LPOLEWINDOW;

/* 9330 */ typedef _SCHANNEL_ALG *PSCHANNEL_ALG;

/* 9331 */ typedef _CHAR_POS *LPCHAR_POS;

/* 9332 */ typedef _DRIVER_INFO_4A *PDRIVER_INFO_4A;

/* 9333 */ typedef SERVER_ID *LPSERVER_ID;

/* 9334 */ typedef _OFNOTIFYEXA *LPOFNOTIFYEX;

/* 9335 */ typedef _TOKEN_CONTROL *PTOKEN_CONTROL;

/* 9336 */ typedef _SYSTEM_ALARM_ACE *PSYSTEM_ALARM_ACE;

/* 9337 */ typedef unsigned int DBROWSTATUS;

/* 9338 */ typedef _MINIDUMP_THREAD_EX_CALLBACK *PMINIDUMP_THREAD_EX_CALLBACK;

/* 9339 */ typedef PktCastleCmd *LPPktCastleCmd;

/* 9340 */ typedef _CMSG_RC4_AUX_INFO *PCMSG_RC4_AUX_INFO;

/* 9341 */ typedef tagWAVEINCAPSA *PWAVEINCAPS;

/* 9342 */ typedef tagMSG *NPMSG;

/* 9343 */ typedef _FORMAT_PARAMETERS *PFORMAT_PARAMETERS;

/* 9344 */ typedef int (__stdcall *PROPENUMPROCW)(HWND__ *, const unsigned __int16 *, void *);

/* 9345 */ typedef unsigned int IPos;

/* 9346 */ typedef tagMSG *LPMSG;

/* 9347 */ typedef _CMSG_RC2_AUX_INFO *PCMSG_RC2_AUX_INFO;

/* 9348 */ typedef _DRIVER_INFO_2W *LPDRIVER_INFO_2W;

/* 9349 */ typedef tagCATEGORYINFO *LPCATEGORYINFO;

/* 9350 */ typedef tagFINDREPLACEW *LPFINDREPLACEW;

/* 9351 */ typedef tagMCI_VD_PLAY_PARMS *LPMCI_VD_PLAY_PARMS;

/* 9352 */ typedef int BOOL;

/* 9353 */ typedef in_addr *LPIN_ADDR;

/* 9354 */ typedef tagTLIBATTR *LPTLIBATTR;

/* 9355 */ typedef IFontEventsDisp *LPFONTEVENTS;

/* 9356 */ typedef int (__stdcall *PROPENUMPROCA)(HWND__ *, const char *, void *);

/* 9357 */ typedef _MAT2 *LPMAT2;

/* 9358 */ typedef tagMCI_LOAD_PARMSA *PMCI_LOAD_PARMSA;

/* 9359 */ typedef void (__stdcall *RPC_HTTP_PROXY_FREE_STRING)(unsigned __int16 *);

/* 9360 */ typedef _flowspec *LPFLOWSPEC;

/* 9361 */ typedef tagOLEUPDATE *LPOLEUPDATE;

/* 9362 */ typedef _ImageArchitectureHeader *PIMAGE_ARCHITECTURE_HEADER;

/* 9363 */ typedef tagAXISINFOA *LPAXISINFOA;

/* 9364 */ typedef unsigned int MCIDEVICEID;

/* 9365 */ typedef _CERT_REVOCATION_PARA *PCERT_REVOCATION_PARA;

/* 9366 */ typedef tagBINDPTR *LPBINDPTR;

/* 9367 */ typedef int (__stdcall *ENUMRESNAMEPROCA)(HINSTANCE__ *, const char *, char *, int);

/* 9368 */ typedef tagPOINT *NPPOINT;

/* 9369 */ typedef tagMCI_OVLY_SAVE_PARMSW *LPMCI_OVLY_SAVE_PARMSW;

/* 9370 */ typedef int *LPBOOL;

/* 9371 */ typedef void (__cdecl *_PHNDLR)(int);

/* 9372 */ typedef tagPOINT *LPPOINT;

/* 9373 */ typedef _PERF_COUNTER_BLOCK *PPERF_COUNTER_BLOCK;

/* 9374 */ typedef HKL__ *HKL;

/* 9375 */ typedef _SC_ACTION *LPSC_ACTION;

/* 9376 */ typedef void *(__cdecl *alloc_func)(void *, unsigned int, unsigned int);

/* 9377 */ typedef _PROPSHEETPAGEW_V3 *LPPROPSHEETPAGEW_V3;

/* 9378 */ typedef _PROPSHEETPAGEW *LPPROPSHEETPAGEW_V2;

/* 9379 */ typedef _PROPSHEETPAGEW_V1 *LPPROPSHEETPAGEW_V1;

/* 9380 */ typedef tMIXERCONTROLDETAILS_SIGNED *PMIXERCONTROLDETAILS_SIGNED;

/* 9381 */ typedef unsigned int DBLENGTH;

/* 9382 */ typedef _CRYPT_ENROLLMENT_NAME_VALUE_PAIR *PCRYPT_ENROLLMENT_NAME_VALUE_PAIR;

/* 9383 */ typedef tagRECT *LPRECT;

/* 9384 */ typedef tagRECT *NPRECT;

/* 9385 */ typedef tagAXISINFOW *LPAXISINFOW;

/* 9386 */ typedef _SEC_WINNT_AUTH_IDENTITY_W *PSEC_WINNT_AUTH_IDENTITY_W;

/* 9387 */ typedef _MODEMDEVCAPS *PMODEMDEVCAPS;

/* 9388 */ typedef _ACTIVATION_CONTEXT_QUERY_INDEX *PCACTIVATION_CONTEXT_QUERY_INDEX;

/* 9389 */ typedef tagLOGCOLORSPACEA *LPLOGCOLORSPACE;

/* 9390 */ typedef PktDPD *LPPktDPD;

/* 9391 */ typedef unsigned int SCARDHANDLE;

/* 9392 */ typedef ICreateTypeInfo2 *LPCREATETYPEINFO2;

/* 9393 */ typedef const char *LPCCH;

/* 9394 */ typedef tagWAVEOUTCAPS2A *LPWAVEOUTCAPS2A;

/* 9395 */ typedef PktStatueInfo *LPPktStatueInfo;

/* 9396 */ typedef tagWAVEOUTCAPS2A *NPWAVEOUTCAPS2A;

/* 9397 */ typedef tagMCI_OVLY_LOAD_PARMSW *PMCI_OVLY_LOAD_PARMSW;

/* 9398 */ typedef tagBITMAPINFO *PBITMAPINFO;

/* 9399 */ typedef tagABORTPATH *PEMRABORTPATH;

/* 9400 */ typedef _JOB_INFO_2A *PJOB_INFO_2A;

/* 9401 */ typedef tagWAVEOUTCAPS2W *NPWAVEOUTCAPS2W;

/* 9402 */ typedef _MMIOINFO *PMMIOINFO;

/* 9403 */ typedef tagWAVEOUTCAPS2W *LPWAVEOUTCAPS2W;

/* 9404 */ typedef ICreateTypeInfo *LPCREATETYPEINFO;

/* 9405 */ typedef tagEMRRESTOREDC *PEMRRESTOREDC;

/* 9406 */ typedef _WSANAMESPACE_INFOA *LPWSANAMESPACE_INFO;

/* 9407 */ typedef tagMCI_OVLY_LOAD_PARMSA *PMCI_OVLY_LOAD_PARMSA;

/* 9408 */ typedef tagAXISINFOA *LPAXISINFO;

/* 9409 */ typedef _MINIDUMP_THREAD_EX_LIST *PMINIDUMP_THREAD_EX_LIST;

/* 9410 */ typedef char *PCHAR;

/* 9411 */ typedef SC_HANDLE__ **LPSC_HANDLE;

/* 9412 */ typedef IBindCtx *LPBC;

/* 9413 */ typedef __int64 __time64_t;

/* 9414 */ typedef char TCHAR;

/* 9415 */ typedef char UCHAR;

/* 9416 */ typedef timecaps_tag *PTIMECAPS;

/* 9417 */ typedef _MINIDUMP_THREAD_LIST *PMINIDUMP_THREAD_LIST;

/* 9418 */ typedef _CERT_LDAP_STORE_OPENED_PARA *PCERT_LDAP_STORE_OPENED_PARA;

/* 9419 */ typedef unsigned int (__stdcall *PFE_EXPORT_FUNC)(char *, void *, unsigned int);

/* 9420 */ typedef tagMONHSZSTRUCTA *PMONHSZSTRUCTA;

/* 9421 */ typedef type_info *__RTtypeidReturnType;

/* 9422 */ typedef _JOB_INFO_1A *PJOB_INFO_1A;

/* 9423 */ typedef _PROPSHEETPAGEA *LPPROPSHEETPAGEA;

/* 9424 */ typedef void *(__stdcall *PSYMBOL_FUNCENTRY_CALLBACK64)(void *, unsigned __int64, unsigned __int64);

/* 9425 */ typedef int (__stdcall *PSYM_ENUMERATESYMBOLS_CALLBACK)(_SYMBOL_INFO *, unsigned int, void *);

/* 9426 */ typedef char BCHAR;

/* 9427 */ typedef char CCHAR;

/* 9428 */ typedef _RECTL *LPRECTL;

/* 9429 */ typedef _CRYPT_CREDENTIALS *PCRYPT_CREDENTIALS;

/* 9430 */ typedef _CMSG_MAIL_LIST_ENCRYPT_INFO *PCMSG_MAIL_LIST_ENCRYPT_INFO;

/* 9431 */ typedef char FCHAR;

/* 9432 */ typedef _UNLOAD_DLL_DEBUG_INFO *LPUNLOAD_DLL_DEBUG_INFO;

/* 9433 */ typedef ICatalogFileInfo *LPCATALOGFILEINFO;

/* 9434 */ typedef tagEMRSETMITERLIMIT *PEMRSETMITERLIMIT;

/* 9435 */ typedef _PROPSHEETPAGEW *LPCPROPSHEETPAGEW;

/* 9436 */ typedef tagPANOSE *LPPANOSE;

/* 9437 */ typedef void *GLOBALHANDLE;

/* 9438 */ typedef const unsigned __int16 *LPCWSTR;

/* 9439 */ typedef tagWAVEOUTCAPS2A *LPWAVEOUTCAPS2;

/* 9440 */ typedef tagCOLORADJUSTMENT *LPCOLORADJUSTMENT;

/* 9441 */ typedef tagWAVEOUTCAPS2A *NPWAVEOUTCAPS2;

/* 9442 */ typedef int lzo_int32;

/* 9443 */ typedef _wireSAFEARRAY **wirePSAFEARRAY;

/* 9444 */ typedef _IMAGEHLP_LINE *PIMAGEHLP_LINE;

/* 9445 */ typedef tagCOLORADJUSTMENT *PCOLORADJUSTMENT;

/* 9446 */ typedef _CRYPT_HASH_INFO *PCRYPT_HASH_INFO;

/* 9447 */ typedef tagMENUITEMINFOA *LPCMENUITEMINFO;

/* 9448 */ typedef tagEMRBITBLT *PEMRBITBLT;

/* 9449 */ typedef tagMCI_WAVE_OPEN_PARMSA *LPMCI_WAVE_OPEN_PARMSA;

/* 9450 */ typedef unsigned int (__stdcall *LPCFHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 9451 */ typedef _PROPSHEETPAGEA *LPCPROPSHEETPAGEA;

/* 9452 */ typedef _ACTRL_PROPERTY_ENTRYW *PACTRL_PROPERTY_ENTRYW;

/* 9453 */ typedef int (__stdcall *PFN_CMSG_EXPORT_MAIL_LIST)(_CMSG_CONTENT_ENCRYPT_INFO *, _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO *, _CMSG_MAIL_LIST_ENCRYPT_INFO *, unsigned int, void *);

/* 9454 */ typedef _GENERIC_MAPPING *PGENERIC_MAPPING;

/* 9455 */ typedef _CRYPT_PASSWORD_CREDENTIALSA *PCRYPT_PASSWORD_CREDENTIALS;

/* 9456 */ typedef tagLOGPALETTE *PLOGPALETTE;

/* 9457 */ typedef _CTL_CONTEXT *PCTL_CONTEXT;

/* 9458 */ typedef IQuickActivate *LPQUICKACTIVATE;

/* 9459 */ typedef _FPO_DATA *PFPO_DATA;

/* 9460 */ typedef joyinfoex_tag *PJOYINFOEX;

/* 9461 */ typedef tagEMRPOLYPOLYLINE *PEMRPOLYPOLYLINE;

/* 9462 */ typedef _MEMORYSTATUSEX *LPMEMORYSTATUSEX;

/* 9463 */ typedef tagMCI_OVLY_LOAD_PARMSA *PMCI_OVLY_LOAD_PARMS;

/* 9464 */ typedef _IMAGEHLP_CBA_EVENT *PIMAGEHLP_CBA_EVENT;

/* 9465 */ typedef tagREGISTERWORDA *LPREGISTERWORD;

/* 9466 */ typedef tagHARDWAREINPUT *PHARDWAREINPUT;

/* 9467 */ typedef tagMOUSEHOOKSTRUCT *LPMOUSEHOOKSTRUCT;

/* 9468 */ typedef tagREGISTERWORDA *NPREGISTERWORD;

/* 9469 */ typedef _PROCESSOR_POWER_POLICY *PPROCESSOR_POWER_POLICY;

/* 9470 */ typedef unsigned __int16 LANGID;

/* 9471 */ typedef char *PSTR;

/* 9472 */ typedef unsigned __int16 _ino_t;

/* 9473 */ typedef tagMIDIINCAPS2A *PMIDIINCAPS2;

/* 9474 */ typedef tagENUMLOGFONTW *LPENUMLOGFONTW;

/* 9475 */ typedef unsigned int (__stdcall *PFLS_ALLOC_FUNCTION)(void (__stdcall *)(void *));

/* 9476 */ typedef tagCHARSETINFO *LPCHARSETINFO;

/* 9477 */ typedef _CERT_ID *PCERT_ID;

/* 9478 */ typedef tagCHARSETINFO *NPCHARSETINFO;

/* 9479 */ typedef _ACTRL_ACCESS_ENTRY_LISTW *PACTRL_ACCESS_ENTRY_LISTW;

/* 9480 */ typedef _CMC_TAGGED_CERT_REQUEST *PCMC_TAGGED_CERT_REQUEST;

/* 9481 */ typedef _DEVICE_POWER_STATE *PDEVICE_POWER_STATE;

/* 9482 */ typedef _MEMORYSTATUS *LPMEMORYSTATUS;

/* 9483 */ typedef void (__stdcall *LPWSAOVERLAPPED_COMPLETION_ROUTINE)(unsigned int, unsigned int, _OVERLAPPED *, unsigned int);

/* 9484 */ typedef _REMSECURITY_ATTRIBUTES *PREMSECURITY_ATTRIBUTES;

/* 9485 */ typedef unsigned __int16 *BSTR;

/* 9486 */ typedef _DRIVER_INFO_5A *PDRIVER_INFO_5;

/* 9487 */ typedef _TRUSTEE_ACCESSA *PTRUSTEE_ACCESS;

/* 9488 */ typedef IWrappedProtocol *LPIWRAPPEDPROTOCOL;

/* 9489 */ typedef _SYSTEM_AUDIT_CALLBACK_ACE *PSYSTEM_AUDIT_CALLBACK_ACE;

/* 9490 */ typedef unsigned int *PKSPIN_LOCK;

/* 9491 */ typedef _CERT_ACCESS_DESCRIPTION *PCERT_ACCESS_DESCRIPTION;

/* 9492 */ typedef tagLASTINPUTINFO *PLASTINPUTINFO;

/* 9493 */ typedef HSTR__ *HSTR;

/* 9494 */ typedef _ACTRL_ACCESS_ENTRY_LISTA *PACTRL_ACCESS_ENTRY_LISTA;

/* 9495 */ typedef _KDHELP64 *PKDHELP64;

/* 9496 */ typedef _JOB_INFO_1A *LPJOB_INFO_1;

/* 9497 */ typedef IInternet *LPIINTERNET;

/* 9498 */ typedef PktBGRsAck *LPPktBGRsAck;

/* 9499 */ typedef _IMAGE_BOUND_IMPORT_DESCRIPTOR *PIMAGE_BOUND_IMPORT_DESCRIPTOR;

/* 9500 */ typedef tagMIXERLINEW *PMIXERLINEW;

/* 9501 */ typedef tagCREATESTRUCTW *LPCREATESTRUCTW;

/* 9502 */ typedef IOleUndoManager *LPOLEUNDOMANAGER;

/* 9503 */ typedef _WSAVersion *LPWSAVERSION;

/* 9504 */ typedef void MENUTEMPLATEA;

/* 9505 */ typedef int (__stdcall *PENUMLOADED_MODULES_CALLBACK)(char *, unsigned int, unsigned int, void *);

/* 9506 */ typedef unsigned __int16 *LPWSTR;

/* 9507 */ typedef tagAUXCAPS2A *PAUXCAPS2;

/* 9508 */ typedef void *LPMENUTEMPLATEA;

/* 9509 */ typedef _ADAPTER_STATUS *PADAPTER_STATUS;

/* 9510 */ typedef _OBJECT_TYPE_LIST *POBJECT_TYPE_LIST;

/* 9511 */ typedef unsigned int FLONG;

/* 9512 */ typedef _MODLOAD_DATA *PMODLOAD_DATA;

/* 9513 */ typedef _SERVICE_TABLE_ENTRYA *LPSERVICE_TABLE_ENTRYA;

/* 9514 */ typedef _SECURITY_QUALITY_OF_SERVICE *PSECURITY_QUALITY_OF_SERVICE;

/* 9515 */ typedef wavehdr_tag *PWAVEHDR;

/* 9516 */ typedef void *LPMENUTEMPLATEW;

/* 9517 */ typedef ATL::_ATL_CATMAP_ENTRY *__cdecl _ATL_CATMAPFUNC();

/* 9518 */ typedef _SERVICE_FAILURE_ACTIONSA *LPSERVICE_FAILURE_ACTIONS;

/* 9519 */ typedef void MENUTEMPLATEW;

/* 9520 */ typedef tagMIXERLINEA *PMIXERLINEA;

/* 9521 */ typedef _IMAGEHLP_SYMBOL64_PACKAGE *PIMAGEHLP_SYMBOL64_PACKAGE;

/* 9522 */ typedef _JOBOBJECT_BASIC_PROCESS_ID_LIST *PJOBOBJECT_BASIC_PROCESS_ID_LIST;

/* 9523 */ typedef tagAUXCAPSA *PAUXCAPS;

/* 9524 */ typedef tagCREATESTRUCTA *LPCREATESTRUCTA;

/* 9525 */ typedef void __stdcall RPC_CLIENT_FREE(void *);

/* 9526 */ typedef int *PLONG;

/* 9527 */ typedef _PROCESS_INFORMATION *PPROCESS_INFORMATION;

/* 9528 */ typedef tagOBJECTDESCRIPTOR *LPOBJECTDESCRIPTOR;

/* 9529 */ typedef _CRYPT_OID_INFO *PCCRYPT_OID_INFO;

/* 9530 */ typedef _CRL_CONTEXT *PCRL_CONTEXT;

/* 9531 */ typedef unsigned int ULONG;

/* 9532 */ typedef IOleObject *LPOLEOBJECT;

/* 9533 */ typedef _tagSTACKFRAME64 *LPSTACKFRAME64;

/* 9534 */ typedef tagEMRPOLYLINE *PEMRPOLYLINETO;

/* 9535 */ typedef void *HCRYPTOIDFUNCADDR;

/* 9536 */ typedef tagREGISTERWORDA *LPREGISTERWORDA;

/* 9537 */ typedef _DRIVER_INFO_5W *PDRIVER_INFO_5W;

/* 9538 */ typedef tagREGISTERWORDA *NPREGISTERWORDA;

/* 9539 */ typedef _EXCHANGE *LPEXCHANGE;

/* 9540 */ typedef tagMIDIINCAPS2A *PMIDIINCAPS2A;

/* 9541 */ typedef char *LPTSTR;

/* 9542 */ typedef _DCB *LPDCB;

/* 9543 */ typedef _JOB_INFO_1W *LPJOB_INFO_1W;

/* 9544 */ typedef void __stdcall _ATL_TERMFUNC(unsigned int);

/* 9545 */ typedef _BYTE_BLOB *wirePIDL;

/* 9546 */ typedef int (__stdcall *PFN_CERT_ENUM_SYSTEM_STORE_LOCATION)(const unsigned __int16 *, unsigned int, void *, void *);

/* 9547 */ typedef tagMIDIINCAPS2W *PMIDIINCAPS2W;

/* 9548 */ typedef _MODULE_TYPE_INFO *PMODULE_TYPE_INFO;

/* 9549 */ typedef _CMSG_CMS_RECIPIENT_INFO *PCMSG_CMS_RECIPIENT_INFO;

/* 9550 */ typedef HRESULT __stdcall _ATL_MODULEFUNC(unsigned int);

/* 9551 */ typedef tagREGISTERWORDW *NPREGISTERWORDW;

/* 9552 */ typedef _OUTLINETEXTMETRICA *LPOUTLINETEXTMETRIC;

/* 9553 */ typedef void (__cdecl *PMFN)();

/* 9554 */ typedef tagREGISTERWORDW *LPREGISTERWORDW;

/* 9555 */ typedef _DRIVER_INFO_5A *PDRIVER_INFO_5A;

/* 9556 */ typedef _OUTLINETEXTMETRICA *NPOUTLINETEXTMETRIC;

/* 9557 */ typedef int ptrdiff_t;

/* 9558 */ typedef tagMCI_SEEK_PARMS *PMCI_SEEK_PARMS;

/* 9559 */ typedef CharacterStatus *LPCharacterStatus;

/* 9560 */ typedef _ACTRL_ACCESS_ENTRY_LISTA *PACTRL_ACCESS_ENTRY_LIST;

/* 9561 */ typedef _JOB_INFO_1A *LPJOB_INFO_1A;

/* 9562 */ typedef tagAUXCAPSW *PAUXCAPSW;

/* 9563 */ typedef void MENUTEMPLATE;

/* 9564 */ typedef HRESULT __stdcall _ATL_CREATORFUNC(void *, _GUID *, void **);

/* 9565 */ typedef void *LPMENUTEMPLATE;

/* 9566 */ typedef tagEMRSETVIEWPORTORGEX *PEMRSETBRUSHORGEX;

/* 9567 */ typedef RejectOption *LPRejectOption;

/* 9568 */ typedef ICatInformation *LPCATINFORMATION;

/* 9569 */ typedef _IMAGE_LINENUMBER *PIMAGE_LINENUMBER;

/* 9570 */ typedef char BOOLEAN;

/* 9571 */ typedef _tiddata *_ptiddata;

/* 9572 */ typedef HMIDISTRM__ *HMIDISTRM;

/* 9573 */ typedef _TOKEN_INFORMATION_CLASS *PTOKEN_INFORMATION_CLASS;

/* 9574 */ typedef _CRYPT_SIGN_MESSAGE_PARA *PCRYPT_SIGN_MESSAGE_PARA;

/* 9575 */ typedef tagAUXCAPSA *PAUXCAPSA;

/* 9576 */ typedef tagCREATESTRUCTA *LPCREATESTRUCT;

/* 9577 */ typedef tagMIXERLINEA *PMIXERLINE;

/* 9578 */ typedef void (__stdcall *SENDASYNCPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 9579 */ typedef _ZONEATTRIBUTES *LPZONEATTRIBUTES;

/* 9580 */ typedef HMENU__ *HMENU;

/* 9581 */ typedef int (__stdcall *DLGPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 9582 */ typedef _CTL_VERIFY_USAGE_STATUS *PCTL_VERIFY_USAGE_STATUS;

/* 9583 */ typedef _TAPE_SET_DRIVE_PARAMETERS *PTAPE_SET_DRIVE_PARAMETERS;

/* 9584 */ typedef HWAVEOUT__ **LPHWAVEOUT;

/* 9585 */ typedef ICreateTypeLib *LPCREATETYPELIB;


/* End of file */
